Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDriveST/System_ETH/get_serial_number", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/System_ETH/get_serial_number", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/RTC_AI/RTC_trigger_AI_N_samples", "examples/Console/Asynchronous/EthanA/RTC_AI/RTC_trigger_AI_continuous", "examples/Console/Asynchronous/EthanA/RTC_AI/RTC_trigger_AI_on_demand", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA2/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA2/AI/AI_continuous", "examples/Console/Asynchronous/EthanA2/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/EthanA2/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA2/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA2/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA2/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanA2/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA2/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanA2/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA2/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA2/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA2/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA2/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA2/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanIA/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeByChannel", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanP/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/System_ETH/get_serial_number", "examples/Console/Asynchronous/STEM/System_ETH/hello_world", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/Encoder/Encoder_read", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3AH/SD/SD_read", "examples/Console/Asynchronous/WifiDAQE3AH/SD/SD_write", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/WifiDAQE3AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/WifiDAQE3AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/WifiDAQE3AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/WifiDAQE3AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/WifiDAQE3AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/WifiDAQE3AOD/SD/SD_read", "examples/Console/Asynchronous/WifiDAQE3AOD/SD/SD_write", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Synchronous/EDriveST/System_ETH/get_serial_number", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/System_ETH/get_serial_number", "examples/Console/Synchronous/EMotion/System_ETH/hello_world", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/RTC_AI/RTC_trigger_AI_N_samples", "examples/Console/Synchronous/EthanA/RTC_AI/RTC_trigger_AI_continuous", "examples/Console/Synchronous/EthanA/RTC_AI/RTC_trigger_AI_on_demand", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanA/System_ETH/hello_world", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA2/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA2/AI/AI_continuous", "examples/Console/Synchronous/EthanA2/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/EthanA2/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA2/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA2/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA2/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanA2/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA2/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanA2/System_ETH/hello_world", "examples/Console/Synchronous/EthanA2/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/PWM/PWM_generate", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanD/System_ETH/hello_world", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanEXD/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanI/System_ETH/hello_world", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanIA/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanL/System_ETH/hello_world", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanO/System_ETH/hello_world", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeByChannel", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info", "examples/Console/Synchronous/EthanP/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanP/System_ETH/hello_world", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanT/System_ETH/hello_world", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/STEM/System_ETH/get_serial_number", "examples/Console/Synchronous/STEM/System_ETH/hello_world", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/Encoder/Encoder_read", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3AH/SD/SD_read", "examples/Console/Synchronous/WifiDAQE3AH/SD/SD_write", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/WifiDAQE3AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/WifiDAQE3AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/WifiDAQE3AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/WifiDAQE3AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/WifiDAQE3AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/WifiDAQE3AOD/SD/SD_read", "examples/Console/Synchronous/WifiDAQE3AOD/SD/SD_write", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDriveST", "products/EMotion", "products/EthanA", "products/EthanA2", "products/EthanD", "products/EthanEXD", "products/EthanI", "products/EthanIA", "products/EthanL", "products/EthanO", "products/EthanP", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQE3AH", "products/WifiDAQE3AOD", "products/WifiDAQF4A", "products_summary", "ref_AIO", "ref_channel", "ref_error", "ref_param", "ref_port"], "filenames": ["README.rst", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration.rst", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EMotion/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanA/RTC_AI/RTC_trigger_AI_N_samples.rst", "examples/Console/Asynchronous/EthanA/RTC_AI/RTC_trigger_AI_continuous.rst", "examples/Console/Asynchronous/EthanA/RTC_AI/RTC_trigger_AI_on_demand.rst", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanA/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanA2/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/EthanA2/AI/AI_continuous.rst", "examples/Console/Asynchronous/EthanA2/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/EthanA2/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/EthanA2/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/EthanA2/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanA2/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanA2/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanA2/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanA2/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanA2/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanA2/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanA2/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanA2/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanA2/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanD/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanI/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters.rst", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel.rst", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanL/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanO/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeByChannel.rst", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanP/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanT/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DO_write_port.rst", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/STEM/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/STEM/System_ETH/hello_world.rst", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1D/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/Encoder/Encoder_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3AH/SD/SD_read.rst", "examples/Console/Asynchronous/WifiDAQE3AH/SD/SD_write.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/SD/SD_read.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/SD/SD_write.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3AOD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread.rst", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move.rst", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EDriveST/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world.rst", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration.rst", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EMotion/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EMotion/System_ETH/hello_world.rst", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanA/RTC_AI/RTC_trigger_AI_N_samples.rst", "examples/Console/Synchronous/EthanA/RTC_AI/RTC_trigger_AI_continuous.rst", "examples/Console/Synchronous/EthanA/RTC_AI/RTC_trigger_AI_on_demand.rst", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanA/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanA/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanA2/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/EthanA2/AI/AI_continuous.rst", "examples/Console/Synchronous/EthanA2/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/EthanA2/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/EthanA2/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/EthanA2/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanA2/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanA2/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanA2/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanA2/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanA2/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DO_write_port.rst", "examples/Console/Synchronous/EthanD/PWM/PWM_generate.rst", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanD/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanD/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanI/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanI/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanIA/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters.rst", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel.rst", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanL/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanL/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanO/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanO/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeByChannel.rst", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanP/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanP/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanT/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanT/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/STEM/DIO/DO_write_pins.rst", "examples/Console/Synchronous/STEM/DIO/DO_write_port.rst", "examples/Console/Synchronous/STEM/System_ETH/get_network_info.rst", "examples/Console/Synchronous/STEM/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/STEM/System_ETH/hello_world.rst", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1AD/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read.rst", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write.rst", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1CD/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1D/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1RD/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status.rst", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1TD/Encoder/Encoder_read.rst", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3AH/SD/SD_read.rst", "examples/Console/Synchronous/WifiDAQE3AH/SD/SD_write.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/WifiDAQE3AOD/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/WifiDAQE3AOD/SD/SD_read.rst", "examples/Console/Synchronous/WifiDAQE3AOD/SD/SD_write.rst", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3AOD/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC.rst", "examples/GUI/Synchronous/AI/AI_integrated_gui.rst", "examples/GUI/Synchronous/AO/AO_gui.rst", "examples/GUI/Synchronous/DO/DO_gui.rst", "examples/GUI/Synchronous/I2C/I2C_gui.rst", "examples/GUI/Synchronous/SPI/SPI_gui.rst", "examples/GUI/Synchronous/System/find_all_devices_gui.rst", "examples/GUI/Synchronous/System/get_device_info_gui.rst", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui.rst", "examples/GUI/Synchronous/Temperature_TC/TC_gui.rst", "examples/GUI/Synchronous/UART/UART_gui.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products/DeviceFinder.rst", "products/EDriveST.rst", "products/EMotion.rst", "products/EthanA.rst", "products/EthanA2.rst", "products/EthanD.rst", "products/EthanEXD.rst", "products/EthanI.rst", "products/EthanIA.rst", "products/EthanL.rst", "products/EthanO.rst", "products/EthanP.rst", "products/EthanT.rst", "products/STEM.rst", "products/USBDAQF1AD.rst", "products/USBDAQF1AOD.rst", "products/USBDAQF1CD.rst", "products/USBDAQF1D.rst", "products/USBDAQF1DSNK.rst", "products/USBDAQF1RD.rst", "products/USBDAQF1TD.rst", "products/WifiDAQE3A.rst", "products/WifiDAQE3AH.rst", "products/WifiDAQE3AOD.rst", "products/WifiDAQF4A.rst", "products_summary.rst", "ref_AIO.rst", "ref_channel.rst", "ref_error.rst", "ref_param.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "RTC trigger AI N samples", "RTC trigger AI continuous", "RTC trigger AI on demand", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DPOT read by channel", "DPOT write all channels", "DPOT write by channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AHRS getAcceleration", "AHRS getAngularVelocity", "AHRS getEstimation", "AHRS getOrientation", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "SD read", "SD write", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "SD read", "SD write", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "RTC trigger AI N samples", "RTC trigger AI continuous", "RTC trigger AI on demand", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Relay read counters", "Relay set channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DPOT read by channel", "DPOT write all channels", "DPOT write by channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "Encoder read", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AHRS getAcceleration", "AHRS getAngularVelocity", "AHRS getEstimation", "AHRS getOrientation", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "SD read", "SD write", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "SD read", "SD write", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-A2", "Ethan-D", "Ethan-EX-D", "Ethan-I", "Ethan-IA", "Ethan-L", "Ethan-O", "Ethan-P", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-E3-AH", "Wifi-DAQ-E3-AOD", "Wifi-DAQ-F4-A", "Products Feature", "AI Max Sampling Rate Table", "I/O Channel Function Table", "Error Code Table", "Setting Table", "I/O Port Function Table"], "terms": {"welcom": [0, 814], "wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 846], "api": [0, 814, 815, 844], "document": [0, 814], "It": [0, 81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 775, 776, 814, 818, 821, 829, 830, 831, 832, 833, 834, 835, 836], "i": [0, 12, 13, 15, 17, 25, 26, 27, 29, 30, 34, 43, 44, 46, 48, 49, 53, 55, 56, 57, 60, 61, 63, 65, 66, 70, 75, 76, 78, 80, 83, 84, 85, 86, 90, 91, 93, 95, 98, 99, 100, 101, 104, 105, 107, 109, 113, 114, 116, 118, 122, 123, 125, 127, 129, 132, 133, 135, 137, 139, 140, 143, 144, 146, 148, 149, 154, 155, 157, 159, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 196, 197, 201, 206, 207, 208, 209, 211, 213, 215, 217, 218, 220, 222, 225, 229, 231, 232, 235, 236, 240, 241, 242, 243, 245, 247, 249, 250, 252, 254, 257, 262, 263, 264, 265, 267, 269, 271, 273, 274, 276, 278, 284, 285, 286, 287, 289, 291, 293, 295, 296, 298, 300, 306, 307, 308, 309, 312, 314, 315, 317, 319, 323, 324, 325, 326, 328, 330, 332, 334, 335, 340, 342, 348, 349, 350, 351, 353, 355, 357, 359, 360, 365, 367, 370, 374, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 395, 402, 403, 404, 406, 408, 409, 413, 415, 416, 419, 420, 426, 427, 428, 430, 432, 433, 437, 442, 443, 444, 446, 448, 460, 461, 469, 470, 471, 473, 474, 478, 487, 488, 489, 493, 495, 496, 497, 500, 501, 502, 506, 511, 512, 515, 516, 517, 518, 522, 523, 526, 527, 528, 529, 532, 533, 537, 538, 542, 543, 545, 548, 549, 551, 552, 555, 556, 557, 562, 563, 566, 567, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 597, 602, 603, 604, 605, 607, 609, 611, 613, 614, 617, 621, 623, 624, 627, 628, 632, 633, 634, 635, 637, 639, 641, 642, 645, 650, 651, 652, 653, 655, 657, 659, 661, 662, 668, 669, 670, 671, 673, 675, 677, 679, 680, 686, 687, 688, 689, 692, 694, 695, 699, 700, 701, 702, 704, 706, 708, 710, 711, 720, 721, 722, 723, 725, 727, 729, 731, 732, 738, 742, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 766, 767, 768, 769, 773, 775, 776, 779, 780, 786, 787, 788, 789, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844], "an": [0, 807, 814, 817, 818, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "easi": [0, 814, 818, 841], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 495, 496, 497, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 607, 623, 624, 630, 631, 637, 648, 649, 655, 666, 667, 673, 684, 685, 697, 698, 704, 718, 719, 725, 754, 775, 776, 814, 818, 819, 820, 826, 829, 830, 831, 832, 837, 838, 839, 840, 846], "open": [0, 2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 110, 119, 128, 129, 138, 139, 140, 149, 150, 151, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 368, 369, 370, 371, 373, 374, 375, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 433, 434, 436, 437, 438, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 489, 490, 492, 493, 494, 495, 496, 497, 502, 503, 505, 506, 507, 508, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 528, 529, 534, 539, 544, 545, 550, 551, 552, 557, 558, 559, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 789, 790, 792, 793, 794, 801, 802, 803, 804, 805, 808, 809, 810, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sourc": [0, 814], "tool": [0, 814], "beginn": [0, 814], "we": [0, 211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 814], "provid": [0, 814], "excel": [0, 814], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 846], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "help": [0, 814], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 819, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843], "quickli": [0, 814], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 438, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 487, 489, 490, 492, 493, 494, 495, 496, 497, 500, 502, 503, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 518, 519, 522, 524, 525, 526, 527, 528, 529, 532, 534, 537, 539, 542, 544, 545, 548, 550, 551, 552, 555, 557, 558, 559, 562, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 748, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 766, 767, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 786, 787, 789, 790, 792, 793, 794, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "our": [0, 814], "product": [0, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 390, 571, 572, 574, 575, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 754, 814, 823, 824, 842, 843, 844, 846], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844], "real": [0, 814], "world": [0, 812, 813, 814], "usag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 819, 820, 826, 829, 830, 831, 832, 837, 838, 839, 840, 842, 844], "make": [0, 211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 814], "great": [0, 814], "wai": [0, 87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 814], "learn": [0, 814], "therefor": [0, 814], "highli": [0, 814], "recommend": [0, 814], "becaus": [0, 14, 15, 16, 17, 45, 46, 47, 48, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 193, 194, 195, 196, 219, 220, 221, 222, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 382, 383, 384, 385, 405, 406, 407, 408, 429, 430, 431, 432, 445, 446, 447, 448, 814], "": [0, 6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 69, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 185, 186, 191, 192, 193, 194, 195, 196, 198, 200, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 222, 223, 226, 228, 234, 240, 241, 242, 243, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 262, 263, 264, 265, 268, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 290, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 323, 324, 325, 326, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 350, 351, 354, 359, 360, 361, 362, 364, 365, 366, 367, 368, 371, 373, 379, 380, 381, 382, 383, 384, 385, 392, 394, 402, 403, 404, 405, 406, 407, 408, 410, 412, 418, 426, 427, 428, 429, 430, 431, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 454, 456, 457, 460, 461, 471, 474, 482, 483, 484, 487, 488, 490, 492, 500, 501, 503, 505, 511, 512, 515, 516, 517, 518, 519, 522, 523, 526, 527, 528, 529, 532, 533, 537, 538, 542, 543, 545, 548, 549, 550, 555, 556, 562, 563, 566, 567, 568, 569, 572, 574, 585, 586, 591, 592, 594, 596, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 618, 620, 626, 632, 633, 634, 635, 637, 638, 641, 642, 643, 645, 646, 650, 651, 652, 653, 655, 656, 657, 658, 661, 662, 663, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 686, 687, 688, 689, 691, 694, 695, 699, 700, 701, 702, 704, 705, 706, 707, 710, 711, 712, 713, 715, 720, 721, 722, 723, 725, 726, 727, 728, 731, 732, 733, 734, 736, 739, 741, 747, 748, 749, 756, 758, 766, 767, 768, 770, 772, 778, 786, 787, 788, 790, 792, 798, 799, 800, 801, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845], "simpl": [0, 814], "just": [0, 814], "read": [0, 33, 49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 81, 82, 96, 97, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 197, 198, 200, 201, 202, 204, 205, 225, 226, 228, 229, 230, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 398, 409, 410, 412, 413, 414, 415, 416, 422, 433, 434, 436, 437, 438, 475, 477, 489, 490, 492, 493, 494, 495, 496, 497, 502, 503, 505, 506, 507, 508, 513, 514, 524, 525, 534, 539, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 593, 594, 596, 597, 598, 600, 601, 617, 618, 620, 621, 622, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 762, 769, 770, 772, 773, 774, 775, 776, 782, 789, 790, 792, 793, 794, 804, 805, 808, 809, 810, 812, 813, 814, 817, 818, 819, 820, 821, 822, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "write": [0, 52, 69, 81, 82, 83, 84, 96, 97, 98, 99, 129, 138, 165, 174, 177, 178, 179, 183, 184, 185, 186, 200, 204, 205, 206, 207, 228, 231, 232, 234, 238, 239, 240, 241, 260, 261, 262, 263, 282, 283, 284, 285, 304, 305, 306, 307, 321, 322, 323, 324, 337, 346, 347, 348, 349, 362, 373, 394, 397, 412, 415, 416, 418, 421, 436, 492, 505, 513, 514, 515, 516, 524, 525, 526, 527, 545, 550, 569, 574, 577, 578, 579, 583, 584, 585, 586, 596, 600, 601, 602, 603, 620, 623, 624, 626, 630, 631, 632, 633, 648, 649, 650, 651, 666, 667, 668, 669, 684, 685, 686, 687, 697, 698, 699, 700, 713, 718, 719, 720, 721, 734, 741, 758, 761, 772, 775, 776, 778, 781, 792, 802, 803, 804, 805, 810, 812, 813, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "allow": [0, 814, 842], "access": [0, 814], "updat": [0, 50, 52, 67, 69, 172, 173, 174, 179, 198, 200, 226, 228, 371, 373, 386, 387, 388, 389, 390, 392, 394, 410, 412, 434, 436, 490, 492, 503, 505, 572, 573, 574, 579, 594, 596, 618, 620, 739, 741, 750, 751, 752, 753, 754, 756, 758, 770, 772, 790, 792, 801, 802, 803, 804, 805, 807, 808, 809, 810, 814, 823, 824, 826, 827, 841], "data": [0, 15, 16, 17, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 69, 70, 71, 72, 78, 79, 80, 93, 94, 95, 107, 108, 109, 110, 116, 117, 118, 119, 125, 126, 127, 135, 136, 137, 146, 147, 148, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 194, 195, 196, 197, 198, 200, 201, 202, 211, 213, 214, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 245, 252, 253, 254, 255, 256, 257, 258, 267, 269, 270, 276, 277, 278, 279, 280, 289, 291, 292, 298, 299, 300, 301, 302, 317, 318, 319, 328, 330, 331, 340, 341, 342, 343, 344, 353, 355, 356, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 421, 422, 430, 431, 432, 433, 434, 436, 437, 438, 446, 447, 448, 489, 490, 492, 493, 494, 495, 496, 497, 502, 503, 505, 506, 507, 508, 534, 539, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 594, 596, 597, 598, 607, 609, 610, 615, 616, 617, 618, 620, 621, 622, 623, 624, 637, 643, 644, 645, 646, 655, 657, 658, 663, 664, 673, 675, 676, 681, 682, 704, 706, 707, 715, 716, 725, 727, 728, 736, 737, 738, 739, 741, 742, 743, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 769, 770, 772, 773, 774, 775, 776, 781, 782, 789, 790, 792, 793, 794, 801, 802, 804, 805, 808, 809, 810, 812, 813, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "eas": [0, 814], "ad": [0, 814, 815, 842, 843, 846], "your": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 823, 824], "toolkit": [0, 814], "onli": [0, 814, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "simplifi": [0, 814], "task": [0, 814], "also": [0, 814], "practic": [0, 814], "experi": [0, 814], "bridg": [0, 814], "theori": [0, 814], "applic": [0, 814], "last": [0, 10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 164, 165, 166, 189, 211, 213, 214, 215, 223, 224, 245, 247, 255, 256, 257, 258, 267, 269, 270, 271, 279, 280, 289, 291, 292, 293, 301, 302, 312, 328, 330, 331, 332, 336, 337, 338, 343, 344, 353, 355, 356, 357, 361, 362, 363, 368, 369, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 568, 569, 570, 589, 607, 609, 610, 611, 615, 616, 637, 639, 643, 644, 645, 646, 655, 657, 658, 659, 663, 664, 673, 675, 676, 677, 681, 682, 692, 704, 706, 707, 708, 712, 713, 714, 715, 716, 725, 727, 728, 729, 733, 734, 735, 736, 737, 745, 764, 784, 796, 814], "least": [0, 164, 165, 336, 337, 361, 362, 489, 502, 568, 569, 593, 617, 712, 713, 733, 734, 738, 755, 769, 789, 814], "valuabl": [0, 814], "resourc": [0, 814], "both": [0, 814], "work": [0, 814], "effici": [0, 814], "support": [0, 51, 68, 180, 199, 227, 233, 372, 393, 411, 417, 435, 491, 504, 580, 595, 619, 625, 740, 757, 771, 777, 791, 814, 829, 841, 844], "synchron": [0, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 558, 559, 579, 814], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844], "comput": [0, 814], "process": [0, 49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 110, 119, 138, 139, 140, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 508, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 534, 539, 550, 551, 552, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 789, 790, 792, 793, 794, 814, 817, 844], "thread": [0, 14, 16, 27, 30, 45, 47, 62, 64, 77, 79, 92, 94, 106, 108, 115, 117, 124, 126, 134, 136, 145, 147, 156, 158, 167, 169, 193, 195, 219, 221, 251, 253, 275, 277, 297, 299, 316, 318, 339, 341, 364, 366, 382, 384, 405, 407, 429, 431, 445, 447, 471, 474, 801, 812, 814], "mean": [0, 814, 819, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "two": [0, 14, 15, 17, 45, 46, 48, 62, 63, 65, 77, 78, 80, 92, 93, 95, 106, 107, 109, 115, 116, 118, 124, 125, 127, 134, 135, 137, 145, 146, 148, 156, 157, 159, 167, 168, 170, 193, 194, 196, 211, 219, 220, 222, 245, 251, 252, 254, 267, 275, 276, 278, 289, 297, 298, 300, 316, 317, 319, 328, 336, 337, 338, 339, 340, 342, 353, 364, 365, 367, 382, 383, 385, 405, 406, 408, 429, 430, 432, 445, 446, 448, 607, 637, 655, 673, 704, 712, 713, 714, 725, 808, 814, 818, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 845], "more": [0, 814], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 817], "step": [0, 49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 138, 139, 140, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 550, 551, 552, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 789, 790, 792, 793, 794, 814, 817, 818, 829, 841, 845], "manner": [0, 814], "one": [0, 812, 813, 814, 818, 819, 820, 828, 829, 830, 831, 835, 836, 837, 838, 839, 840], "after": [0, 55, 56, 57, 164, 165, 361, 362, 495, 496, 568, 569, 733, 734, 814, 817, 818, 819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 817, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "In": [0, 139, 140, 177, 178, 179, 181, 182, 231, 232, 235, 236, 415, 416, 419, 420, 551, 552, 577, 578, 579, 581, 582, 623, 624, 627, 628, 775, 776, 779, 780, 814, 830, 831, 832, 833, 835, 836, 844, 846], "execut": [0, 14, 15, 16, 17, 45, 46, 47, 48, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 193, 194, 195, 196, 219, 220, 221, 222, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 382, 383, 384, 385, 405, 406, 407, 408, 429, 430, 431, 432, 445, 446, 447, 448, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "block": [0, 814], "until": [0, 814], "previou": [0, 814], "complet": [0, 25, 26, 27, 29, 30, 469, 470, 471, 472, 473, 474, 814, 818, 829], "independ": [0, 814], "each": [0, 83, 84, 98, 99, 129, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 545, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721, 814, 816, 819, 820, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "don": [0, 814], "t": [0, 16, 47, 64, 79, 94, 108, 117, 126, 136, 147, 158, 164, 165, 169, 195, 221, 253, 277, 299, 318, 341, 361, 362, 366, 384, 407, 431, 447, 568, 569, 733, 734, 814, 815, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 836, 841, 845, 846], "wait": [0, 6, 8, 9, 27, 30, 38, 50, 52, 67, 69, 83, 84, 85, 86, 87, 98, 99, 100, 101, 129, 138, 164, 165, 172, 173, 174, 185, 186, 198, 200, 206, 207, 208, 209, 212, 223, 226, 228, 234, 240, 241, 242, 243, 246, 255, 257, 258, 262, 263, 264, 265, 268, 279, 284, 285, 286, 287, 290, 301, 306, 307, 308, 309, 311, 323, 324, 325, 326, 329, 336, 337, 343, 348, 349, 350, 351, 354, 361, 362, 368, 371, 373, 392, 394, 410, 412, 418, 434, 436, 454, 456, 457, 471, 474, 482, 483, 484, 490, 492, 503, 505, 515, 516, 517, 518, 519, 526, 527, 528, 529, 545, 550, 568, 569, 572, 574, 585, 586, 594, 596, 602, 603, 604, 605, 608, 615, 618, 620, 626, 632, 633, 634, 635, 638, 643, 645, 646, 650, 651, 652, 653, 656, 663, 668, 669, 670, 671, 674, 681, 686, 687, 688, 689, 691, 699, 700, 701, 702, 705, 712, 713, 715, 720, 721, 722, 723, 726, 733, 734, 736, 739, 741, 756, 758, 770, 772, 778, 790, 792, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "instead": [0, 814, 844], "its": [0, 177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 814, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "own": [0, 814], "without": [0, 814], "gener": [0, 211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 812, 813, 814, 821, 822, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 839, 841, 844], "easier": [0, 814], "understand": [0, 814], "debug": [0, 814], "while": [0, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 45, 46, 47, 48, 50, 52, 62, 63, 64, 65, 67, 69, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 172, 173, 174, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 198, 200, 203, 210, 219, 220, 221, 222, 226, 228, 237, 244, 251, 252, 253, 254, 259, 266, 275, 276, 277, 278, 281, 288, 297, 298, 299, 300, 303, 310, 316, 317, 318, 319, 320, 327, 339, 340, 341, 342, 345, 352, 364, 365, 366, 367, 371, 373, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 405, 406, 407, 408, 410, 412, 429, 430, 431, 432, 434, 436, 445, 446, 447, 448, 450, 451, 452, 453, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 490, 492, 503, 505, 572, 573, 574, 583, 584, 585, 586, 587, 588, 594, 596, 599, 606, 618, 620, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 739, 741, 750, 751, 752, 753, 754, 756, 758, 770, 772, 790, 792, 801, 812, 813, 814, 837, 838, 839, 840, 842, 846], "scalabl": [0, 814], "greater": [0, 814], "concurr": [0, 814], "sure": [0, 211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 814], "latest": [0, 814], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 807, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "up": [0, 183, 184, 185, 186, 187, 188, 583, 584, 585, 586, 587, 588, 814], "date": [0, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pip": [0, 814], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814], "fast": [0, 814, 830, 831, 832, 833, 835, 836, 845], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pkg_name": [0, 814], "handle_list": [0, 814], "devicefind": [0, 1, 449, 806, 814, 815, 816], "ethana": [0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 801, 807, 814, 815, 819, 841], "ethana2": [0, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 814, 815, 820, 841], "ethand": [0, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 803, 807, 814, 815, 821, 841], "ethanexd": [0, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 814, 815, 822], "ethani": [0, 110, 111, 112, 113, 114, 115, 116, 117, 118, 534, 535, 536, 537, 538, 814, 815, 823, 824, 841], "ethania": [0, 119, 120, 121, 122, 123, 124, 125, 126, 127, 539, 540, 541, 542, 543, 814, 815, 823, 824, 841], "ethanl": [0, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 544, 545, 546, 547, 548, 549, 814, 815, 825, 841], "ethano": [0, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 550, 551, 552, 553, 554, 555, 556, 814, 815, 826, 841], "ethanp": [0, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 557, 558, 559, 560, 561, 562, 563, 814, 815, 827, 841], "ethant": [0, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 564, 565, 566, 567, 568, 569, 570, 814, 815, 828, 841], "usbdaqf1d": [0, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 803, 804, 805, 810, 814, 815, 833, 841], "usbdaqf1dsnk": [0, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 803, 814, 815, 834, 841], "usbdaqf1ad": [0, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 801, 803, 804, 805, 810, 814, 815, 819, 829, 830, 831, 837, 838, 839, 840, 841], "usbdaqf1aod": [0, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 801, 802, 803, 804, 805, 810, 814, 815, 819, 829, 830, 831, 837, 838, 839, 840, 841], "usbdaqf1td": [0, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 803, 804, 805, 809, 810, 814, 815, 836, 841], "usbdaqf1rd": [0, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 803, 804, 805, 808, 810, 814, 815, 835, 841], "usbdaqf1cd": [0, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 803, 804, 805, 810, 814, 815, 832, 841], "wifidaqe3a": [0, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 801, 807, 814, 815, 837, 841], "wifidaqe3ah": [0, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 814, 815, 838, 841], "wifidaqf4a": [0, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 840, 841], "wifidaqe3aod": [0, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 814, 815, 839], "stem": [0, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 801, 814, 815, 819, 830, 831, 837, 838, 839, 840, 841, 842, 844, 846], "emot": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 814, 815, 841, 846], "edrivest": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 814, 815, 817], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814], "conda": [0, 814], "command": [0, 814, 837, 838, 839, 840], "consol": [0, 814], "how": [0, 1, 10, 11, 13, 14, 15, 16, 17, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 181, 182, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 234, 235, 236, 237, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 458, 459, 461, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 509, 510, 512, 519, 520, 521, 523, 530, 531, 533, 535, 536, 538, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 581, 582, 589, 590, 592, 593, 594, 596, 597, 598, 599, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 626, 627, 628, 629, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 690, 691, 692, 693, 695, 696, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "build": [0, 814], "ex": [0, 814, 815, 846], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 813, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "miniconda": [0, 814], "virtual": [0, 814], "environ": [0, 814], "labview": [0, 814, 841], "time": [0, 14, 15, 16, 17, 27, 30, 45, 46, 47, 48, 53, 56, 62, 63, 64, 65, 70, 77, 78, 79, 80, 83, 84, 92, 93, 94, 95, 98, 99, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 129, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 175, 186, 193, 194, 195, 196, 201, 206, 207, 219, 220, 221, 222, 229, 240, 241, 251, 252, 253, 254, 257, 262, 263, 275, 276, 277, 278, 284, 285, 297, 298, 299, 300, 306, 307, 316, 317, 318, 319, 323, 324, 339, 340, 341, 342, 348, 349, 364, 365, 366, 367, 374, 382, 383, 384, 385, 395, 405, 406, 407, 408, 413, 429, 430, 431, 432, 437, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 807, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844], "engin": [0, 814], "under": [0, 814, 842], "mit": [0, 814], "style": [0, 390, 754, 814], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "incorpor": [0, 814], "project": [0, 14, 15, 16, 17, 45, 46, 47, 48, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 193, 194, 195, 196, 219, 220, 221, 222, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 382, 383, 384, 385, 390, 405, 406, 407, 408, 429, 430, 431, 432, 445, 446, 447, 448, 754, 814], "mai": [0, 814], "differ": [0, 83, 84, 98, 99, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 776, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 816, 819, 820, 821, 822, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "non": [0, 814, 823, 824, 841], "commerci": [0, 814], "find_devic": [1, 449], "find_all_devic": [1, 449], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "demonstr": [1, 10, 11, 13, 14, 15, 16, 17, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 458, 459, 461, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800], "avail": [1, 449, 806, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844, 846], "usb": [1, 449, 814, 841, 842, 843, 844, 846], "ethernet": [1, 449, 806, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 841], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 807, 830, 832, 833, 835, 836, 844], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810], "correct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 798, 799, 800, 807, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 798, 799, 800, 801, 807, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840, 844], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 519, 520, 521, 522, 523, 524, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 632, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 809, 810, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 819, 820, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 807, 818, 829, 830, 832, 833, 835, 836, 844], "http": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "com": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "system": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 545, 547, 549, 550, 551, 552, 554, 556, 557, 558, 559, 561, 563, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 785, 787, 788, 789, 790, 792, 793, 794, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813], "ltd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "wpc_python_driver_releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "tree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "readm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "md": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "detail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842], "2022": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801], "2024": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 830, 831, 832, 833, 835, 836], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "creat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 806], "handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "perform": [1, 15, 16, 17, 46, 47, 48, 63, 64, 65, 78, 79, 80, 81, 82, 93, 94, 95, 96, 97, 107, 108, 109, 116, 117, 118, 125, 126, 127, 135, 136, 137, 146, 147, 148, 157, 158, 159, 168, 169, 170, 183, 184, 194, 195, 196, 204, 205, 220, 221, 222, 238, 239, 252, 253, 254, 260, 261, 276, 277, 278, 282, 283, 298, 299, 300, 304, 305, 317, 318, 319, 321, 322, 340, 341, 342, 346, 347, 365, 366, 367, 383, 384, 385, 406, 407, 408, 430, 431, 432, 446, 447, 448, 449, 513, 514, 524, 525, 583, 584, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 806, 817, 818, 829], "inform": [1, 10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 183, 184, 185, 186, 187, 188, 189, 376, 377, 399, 400, 423, 424, 439, 440, 449, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 583, 584, 585, 586, 587, 588, 589, 744, 745, 763, 764, 783, 784, 795, 796, 801, 803, 806, 807, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810], "dev_list": [1, 449], "bcst_enumerateusbdevic": [1, 449, 815, 816], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810], "printgenericerror": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "network": [1, 11, 12, 13, 42, 43, 44, 59, 60, 61, 74, 75, 76, 89, 90, 91, 103, 104, 105, 112, 113, 114, 121, 122, 123, 131, 132, 133, 142, 143, 144, 153, 154, 155, 161, 162, 163, 190, 191, 192, 216, 217, 218, 248, 249, 250, 272, 273, 274, 294, 295, 296, 313, 314, 315, 333, 334, 335, 358, 359, 360, 376, 378, 379, 380, 381, 397, 398, 399, 401, 402, 403, 404, 421, 422, 423, 425, 426, 427, 428, 439, 441, 442, 443, 444, 449, 459, 460, 461, 486, 487, 488, 499, 500, 501, 510, 511, 512, 521, 522, 523, 531, 532, 533, 536, 537, 538, 541, 542, 543, 547, 548, 549, 554, 555, 556, 561, 562, 563, 565, 566, 567, 590, 591, 592, 612, 613, 614, 640, 641, 642, 660, 661, 662, 678, 679, 680, 693, 694, 695, 709, 710, 711, 730, 731, 732, 744, 746, 747, 748, 749, 761, 762, 763, 765, 766, 767, 768, 781, 782, 783, 785, 786, 787, 788, 795, 797, 798, 799, 800, 811, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840, 844], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "bcst_enumeratenetworkdevices_async": [1, 815, 816], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 825, 841], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 471, 474, 801], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "resultels": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 470, 473, 489, 502, 545, 571, 593, 617, 645, 738, 755, 769, 789, 801, 803, 807], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "ipython": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "7": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 461, 488, 501, 512, 515, 523, 526, 533, 538, 543, 549, 556, 558, 563, 567, 568, 569, 583, 584, 585, 586, 587, 588, 592, 602, 614, 632, 642, 650, 662, 668, 680, 686, 695, 699, 711, 720, 732, 733, 734, 749, 754, 768, 788, 800, 803, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 845, 846], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846], "spyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "drive_find_hom": [2, 450], "devic": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 809, 810, 811], "192": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "168": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846], "110": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "depend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 832, 842], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 110, 119, 128, 129, 138, 139, 140, 149, 150, 151, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 368, 369, 370, 371, 373, 374, 375, 380, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 403, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 427, 433, 434, 436, 437, 438, 443, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "set": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 110, 119, 128, 138, 139, 140, 149, 150, 151, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 368, 369, 370, 371, 373, 374, 375, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 433, 434, 436, 437, 438, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 546, 547, 548, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 792, 793, 794, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843], "searching_spe": [2, 3, 450, 451, 817], "50000": [2, 3, 4, 5, 8, 9, 450, 451, 452, 453, 456, 457], "approaching_spe": [2, 3, 450, 451, 817], "10000": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 37, 138, 234, 418, 450, 451, 452, 453, 454, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 476, 477, 480, 481, 550, 626, 778, 802, 818, 829], "acceler": [2, 3, 4, 5, 6, 9, 386, 388, 390, 450, 451, 452, 453, 454, 457, 750, 752, 754, 812, 813, 817, 818, 829, 838, 841, 844], "search_direct": [2, 450, 817], "point": [2, 49, 66, 171, 197, 225, 370, 391, 409, 433, 450, 489, 502, 571, 593, 617, 738, 755, 769, 789, 817, 818, 829, 841], "forward": [2, 3, 31, 33, 210, 244, 266, 288, 310, 327, 352, 390, 450, 451, 475, 477, 606, 636, 654, 672, 690, 703, 724, 754, 803, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 845], "revers": [2, 3, 31, 33, 210, 244, 266, 288, 310, 327, 352, 450, 451, 475, 477, 606, 636, 654, 672, 690, 703, 724, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 845], "approach_direct": [2, 450, 817], "offset": [2, 3, 138, 234, 418, 450, 451, 550, 626, 778, 817, 818, 826, 829, 831, 839], "reset_posit": [2, 3, 450, 451, 817], "fals": [2, 3, 28, 49, 66, 171, 197, 225, 258, 370, 390, 391, 409, 433, 450, 451, 472, 489, 502, 571, 593, 617, 646, 738, 754, 755, 769, 789, 801, 803, 807, 817, 818, 829, 832, 845], "en_forward": [2, 3, 4, 5, 6, 8, 9, 450, 451, 452, 453, 454, 456, 457, 817, 818, 829], "en_revers": [2, 3, 4, 5, 6, 8, 9, 450, 451, 452, 453, 454, 456, 457, 817, 818, 829], "active_high": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 450, 451, 452, 453, 454, 456, 457, 462, 463, 464, 465, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484], "model": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 806, 807, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "driver_info": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 807, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_getdriverinfo_asyncname": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 784, 785, 787, 788, 789, 790, 792, 793, 794, 796, 797, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "motion": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "motion_open_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 815, 817, 818, 829], "motion_open": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 815, 817, 818, 829], "statu": [2, 3, 4, 5, 6, 7, 8, 9, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 57, 61, 66, 67, 69, 70, 71, 72, 76, 81, 82, 83, 84, 85, 86, 87, 91, 96, 97, 98, 99, 100, 101, 105, 110, 114, 119, 123, 128, 129, 133, 138, 139, 140, 144, 149, 150, 151, 155, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 368, 369, 370, 371, 373, 374, 375, 381, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 404, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 428, 433, 434, 436, 437, 438, 444, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 490, 492, 493, 494, 495, 496, 497, 501, 502, 503, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 533, 534, 538, 539, 543, 544, 545, 549, 550, 551, 552, 556, 557, 558, 559, 563, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 788, 789, 790, 792, 793, 794, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "config": [2, 3, 451, 812, 813], "motion_cfglimit_async": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 24, 27, 30, 31, 32, 33, 36, 39, 40, 815, 817, 818, 829], "motion_cfglimit": [2, 3, 4, 5, 6, 8, 9, 450, 451, 452, 453, 454, 456, 457, 462, 463, 464, 468, 471, 474, 475, 476, 477, 480, 483, 484, 815, 817, 818, 829], "reset": [2, 3, 4, 5, 8, 9, 380, 403, 427, 443, 450, 451, 452, 453, 456, 457, 748, 767, 787, 799, 817, 818, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840], "motion_rstencoderposi_async": [2, 3, 4, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40, 815, 817, 818, 829], "motion_resetencod": [2, 3, 4, 5], "servo": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 36, 39, 40, 450, 451, 452, 453, 454, 456, 457, 462, 463, 464, 465, 466, 467, 468, 475, 476, 477, 480, 483, 484, 812, 813, 817, 818, 829, 841], "motion_enableservoon_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39, 40, 815, 817, 818, 829], "motion_enableservoon": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 476, 477, 480, 482, 483, 484, 815, 817, 818, 829], "refer": [2, 3, 31, 32, 33, 177, 178, 231, 232, 415, 416, 475, 476, 477, 577, 578, 623, 624, 775, 776, 817, 818, 829], "motion_startfindhome_async": [2, 815, 817], "motion_startfindhom": [2, 450, 815, 817], "motion_getprocessstate_async": [2, 3, 4, 5, 815, 817], "motion_getprocessst": [2, 3, 4, 5, 450, 451, 452, 453, 815, 817], "limit": [2, 31, 179, 450, 475, 579, 801, 812, 813, 817, 818, 829, 841, 845], "state_list": [2, 3, 81, 82, 96, 97, 183, 184, 204, 205, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 450, 451, 513, 514, 524, 525, 583, 584, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "motion_getlimitstatus_async": [2, 3, 31, 33, 815, 817, 818, 829], "2": [2, 3, 14, 27, 29, 30, 33, 39, 40, 45, 49, 50, 52, 55, 56, 57, 62, 66, 67, 69, 77, 81, 85, 92, 96, 97, 100, 106, 115, 124, 129, 134, 138, 139, 140, 145, 150, 156, 164, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 193, 197, 198, 200, 204, 208, 213, 214, 219, 223, 224, 225, 226, 228, 231, 232, 234, 235, 236, 238, 242, 251, 255, 256, 257, 258, 260, 264, 269, 270, 275, 279, 280, 282, 286, 291, 292, 297, 301, 302, 304, 305, 306, 307, 308, 309, 316, 321, 325, 330, 331, 339, 343, 344, 346, 350, 355, 356, 361, 362, 364, 368, 369, 370, 371, 373, 382, 390, 391, 392, 394, 405, 409, 410, 412, 415, 416, 418, 419, 420, 429, 433, 434, 436, 445, 450, 451, 471, 473, 474, 477, 483, 484, 489, 490, 492, 495, 496, 497, 502, 503, 505, 513, 517, 524, 525, 528, 545, 550, 551, 552, 558, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 600, 604, 609, 610, 615, 616, 617, 618, 620, 623, 624, 626, 627, 628, 630, 634, 643, 644, 645, 646, 648, 652, 657, 658, 663, 664, 666, 670, 675, 676, 681, 682, 684, 685, 686, 687, 688, 689, 697, 701, 706, 707, 715, 716, 718, 722, 727, 728, 733, 734, 736, 737, 738, 739, 741, 754, 755, 756, 758, 769, 770, 772, 775, 776, 778, 779, 780, 789, 790, 792, 801, 803, 804, 805, 806, 807, 808, 809, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 846], "keyboardinterrupt": [2, 3, 4, 5, 6, 7, 8, 9, 173, 179, 203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 386, 387, 388, 389, 390, 450, 451, 452, 453, 454, 455, 456, 457, 573, 579, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 750, 751, 752, 753, 754], "press": [2, 3, 4, 5, 6, 7, 8, 9, 173, 179, 203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 386, 387, 388, 389, 390, 450, 451, 452, 453, 454, 455, 456, 457, 573, 579, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 750, 751, 752, 753, 754], "keyboard": [2, 3, 4, 5, 6, 7, 8, 9, 173, 179, 203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 386, 387, 388, 389, 390, 450, 451, 452, 453, 454, 455, 456, 457, 573, 579, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 750, 751, 752, 753, 754], "final": [2, 3, 4, 5, 6, 7, 8, 9, 49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 138, 139, 140, 171, 172, 173, 174, 175, 176, 179, 181, 182, 197, 198, 200, 201, 202, 203, 210, 225, 226, 228, 229, 230, 234, 235, 236, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 370, 371, 373, 374, 375, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 450, 451, 452, 453, 454, 455, 456, 457, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 550, 551, 552, 571, 572, 573, 574, 575, 576, 579, 581, 582, 593, 594, 596, 597, 598, 599, 606, 617, 618, 620, 621, 622, 626, 627, 628, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 738, 739, 741, 742, 743, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794, 818, 829], "stop": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 49, 50, 52, 56, 66, 67, 69, 87, 171, 172, 173, 174, 179, 197, 198, 200, 203, 210, 212, 223, 224, 225, 226, 228, 237, 244, 246, 255, 256, 257, 258, 259, 266, 268, 279, 280, 281, 288, 290, 301, 302, 303, 310, 311, 320, 327, 329, 343, 344, 345, 352, 354, 368, 369, 370, 371, 373, 386, 387, 388, 389, 390, 391, 392, 394, 409, 410, 412, 433, 434, 436, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 483, 484, 489, 490, 492, 496, 502, 503, 505, 519, 571, 572, 573, 574, 579, 593, 594, 596, 599, 606, 608, 615, 616, 617, 618, 620, 629, 636, 638, 643, 644, 645, 646, 647, 654, 656, 663, 664, 665, 672, 674, 681, 682, 683, 690, 691, 696, 703, 705, 715, 716, 717, 724, 726, 736, 737, 738, 739, 741, 750, 751, 752, 753, 754, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "motion_stopprocess_async": [2, 3, 4, 5, 6, 7, 8, 9, 815, 817], "motion_stopprocess": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457, 815, 817], "off": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 36, 38, 39, 40, 390, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 475, 476, 477, 480, 482, 483, 484, 754, 817, 818, 829, 832, 837, 838, 839, 840], "motion_enableservooff_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39, 40, 815, 817, 818, 829], "motion_enableservooff": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 476, 477, 480, 482, 483, 484, 815, 817, 818, 829], "motion_close_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 815, 817, 818, 829], "motion_clos": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 815, 817, 818, 829], "drive_find_limit": [3, 451], "motion_startfindlimit_async": [3, 815, 817], "motion_startfindlimit": [3, 451, 815, 817], "home": [3, 33, 451, 477, 812, 813, 817, 818, 829, 845], "drive_position_blend": [4, 452], "80000": [4, 452], "position1": [4, 452], "position2": [4, 452], "speed": [4, 5, 6, 8, 9, 25, 26, 28, 29, 257, 258, 452, 453, 454, 456, 457, 469, 470, 472, 473, 645, 646, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 841, 842, 844], "deceler": [4, 5, 8, 9, 452, 453, 456, 457, 817, 818, 829, 845], "absolut": [4, 5, 452, 453, 817, 818, 829, 845], "rel": [4, 5, 452, 453, 817, 818, 821, 829, 830, 831, 832, 833, 834, 835, 836, 845], "configur": [4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 138, 164, 165, 171, 172, 173, 174, 175, 176, 197, 198, 200, 201, 202, 211, 213, 214, 223, 224, 225, 226, 228, 229, 230, 234, 245, 255, 256, 257, 258, 267, 269, 270, 279, 280, 289, 291, 292, 301, 302, 328, 330, 331, 343, 344, 353, 355, 356, 361, 362, 368, 369, 370, 371, 373, 374, 375, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 433, 434, 436, 437, 438, 450, 452, 453, 454, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 550, 568, 569, 571, 572, 573, 574, 575, 576, 593, 594, 596, 597, 598, 607, 609, 610, 615, 616, 617, 618, 620, 621, 622, 626, 637, 643, 644, 645, 646, 655, 657, 658, 663, 664, 673, 675, 676, 681, 682, 704, 706, 707, 715, 716, 725, 727, 728, 733, 734, 736, 737, 738, 739, 741, 742, 743, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 789, 790, 792, 793, 794, 817, 818, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840, 841], "start": [4, 5, 6, 8, 9, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 46, 48, 49, 50, 52, 55, 56, 57, 63, 65, 66, 67, 69, 78, 80, 87, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 138, 146, 148, 157, 159, 168, 170, 171, 172, 173, 174, 179, 183, 184, 185, 186, 187, 188, 194, 196, 197, 198, 200, 203, 210, 212, 220, 222, 225, 226, 228, 234, 237, 244, 246, 252, 254, 257, 258, 259, 266, 268, 276, 278, 281, 288, 290, 298, 300, 303, 310, 311, 317, 319, 320, 327, 329, 340, 342, 345, 352, 354, 365, 367, 370, 371, 373, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 406, 408, 409, 410, 412, 418, 430, 432, 433, 434, 436, 446, 448, 452, 453, 454, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 483, 484, 489, 490, 492, 495, 496, 497, 502, 503, 505, 519, 550, 571, 572, 573, 574, 579, 583, 584, 585, 586, 587, 588, 593, 594, 596, 599, 606, 608, 617, 618, 620, 626, 629, 636, 638, 645, 646, 647, 654, 656, 665, 672, 674, 683, 690, 691, 696, 703, 705, 717, 724, 726, 738, 739, 741, 750, 751, 752, 753, 754, 755, 756, 758, 769, 770, 772, 778, 789, 790, 792, 801, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "motion_startpositionmove_async": [4, 5, 815, 817], "motion_startpositionmov": [4, 5, 452, 453, 815, 817], "drive_position_mov": [5, 453], "drive_scan_mov": [6, 454], "position_0": [6, 454, 817], "30000": [6, 454], "position_1": [6, 454, 817], "motion_startscanmove_async": [6, 815, 817], "motion_startscanmov": [6, 454, 815, 817], "second": [6, 8, 9, 12, 14, 27, 30, 43, 45, 49, 50, 52, 55, 56, 57, 60, 62, 66, 67, 69, 75, 77, 83, 84, 85, 86, 87, 90, 92, 98, 99, 100, 101, 104, 106, 113, 115, 122, 124, 129, 132, 134, 143, 145, 154, 156, 162, 164, 165, 166, 167, 171, 172, 173, 174, 179, 185, 186, 191, 193, 197, 198, 200, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 219, 223, 224, 225, 226, 228, 240, 241, 242, 243, 245, 246, 247, 249, 251, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 279, 280, 284, 285, 286, 287, 289, 290, 291, 292, 293, 295, 297, 301, 302, 306, 307, 308, 309, 311, 312, 314, 316, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 343, 344, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 368, 369, 370, 371, 373, 379, 382, 391, 392, 394, 402, 405, 409, 410, 412, 426, 429, 433, 434, 436, 442, 445, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sleep": [6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 69, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 185, 186, 191, 192, 193, 194, 195, 196, 198, 200, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 222, 223, 226, 228, 234, 240, 241, 242, 243, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 262, 263, 264, 265, 268, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 290, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 323, 324, 325, 326, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 350, 351, 354, 359, 360, 361, 362, 364, 365, 366, 367, 368, 371, 373, 379, 380, 381, 382, 383, 384, 385, 392, 394, 402, 403, 404, 405, 406, 407, 408, 410, 412, 418, 426, 427, 428, 429, 430, 431, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 454, 456, 457, 460, 461, 471, 474, 482, 483, 484, 487, 488, 490, 492, 495, 496, 497, 500, 501, 503, 505, 511, 512, 515, 516, 517, 518, 519, 522, 523, 526, 527, 528, 529, 532, 533, 537, 538, 542, 543, 545, 548, 549, 550, 555, 556, 562, 563, 566, 567, 568, 569, 572, 574, 585, 586, 591, 592, 594, 596, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 618, 620, 626, 632, 633, 634, 635, 637, 638, 641, 642, 643, 645, 646, 650, 651, 652, 653, 655, 656, 657, 658, 661, 662, 663, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 686, 687, 688, 689, 691, 694, 695, 699, 700, 701, 702, 704, 705, 706, 707, 710, 711, 712, 713, 715, 720, 721, 722, 723, 725, 726, 727, 728, 731, 732, 733, 734, 736, 739, 741, 747, 748, 749, 756, 758, 766, 767, 768, 770, 772, 778, 786, 787, 788, 790, 792, 798, 799, 800, 801], "10": [6, 12, 13, 43, 44, 55, 56, 57, 60, 61, 75, 76, 83, 84, 90, 91, 98, 99, 104, 105, 113, 114, 122, 123, 129, 132, 133, 138, 143, 144, 154, 155, 162, 163, 179, 185, 186, 191, 192, 206, 207, 217, 218, 223, 234, 240, 241, 249, 250, 255, 258, 262, 263, 273, 274, 279, 284, 285, 295, 296, 301, 306, 307, 314, 315, 323, 324, 334, 335, 343, 348, 349, 359, 360, 368, 379, 381, 390, 402, 404, 418, 426, 428, 442, 444, 454, 460, 461, 487, 488, 495, 496, 497, 500, 501, 511, 512, 515, 516, 522, 523, 526, 527, 532, 533, 537, 538, 542, 543, 545, 548, 549, 550, 555, 556, 562, 563, 566, 567, 579, 585, 586, 591, 592, 602, 603, 613, 614, 615, 626, 632, 633, 641, 642, 643, 646, 650, 651, 661, 662, 663, 668, 669, 679, 680, 681, 686, 687, 694, 695, 699, 700, 710, 711, 715, 720, 721, 731, 732, 736, 747, 749, 754, 766, 768, 778, 786, 788, 798, 800, 801, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 841, 845], "delai": [6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 69, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 185, 186, 191, 192, 193, 194, 195, 196, 198, 200, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 222, 223, 226, 228, 234, 240, 241, 242, 243, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 262, 263, 264, 265, 268, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 290, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 323, 324, 325, 326, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 350, 351, 354, 359, 360, 361, 362, 364, 365, 366, 367, 368, 371, 373, 379, 380, 381, 382, 383, 384, 385, 392, 394, 402, 403, 404, 405, 406, 407, 408, 410, 412, 418, 426, 427, 428, 429, 430, 431, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 454, 456, 457, 460, 461, 471, 474, 482, 483, 484, 487, 488, 490, 492, 500, 501, 503, 505, 511, 512, 515, 516, 517, 518, 519, 522, 523, 526, 527, 528, 529, 532, 533, 537, 538, 542, 543, 545, 548, 549, 550, 555, 556, 562, 563, 566, 567, 568, 569, 572, 574, 585, 586, 591, 592, 594, 596, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 618, 620, 626, 632, 633, 634, 635, 637, 638, 641, 642, 643, 645, 646, 650, 651, 652, 653, 655, 656, 657, 658, 661, 662, 663, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 686, 687, 688, 689, 691, 694, 695, 699, 700, 701, 702, 704, 705, 706, 707, 710, 711, 712, 713, 715, 720, 721, 722, 723, 725, 726, 727, 728, 731, 732, 733, 734, 736, 739, 741, 747, 748, 749, 756, 758, 766, 767, 768, 770, 772, 778, 786, 787, 788, 790, 792, 798, 799, 800, 819, 820, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840], "drive_servo_on": [7, 455], "drive_velocity_blending_acceler": [8, 456], "dir": [8, 9, 456, 457, 817, 818, 829, 845], "motion_resetencoderposi": [8, 9, 450, 451, 452, 453, 456, 457], "motion_startvelocticymove_async": [8, 9, 815, 817], "motion_startvelocticymov": [8, 9, 456, 457, 815, 817], "move": [8, 25, 26, 29, 456, 469, 470, 472, 473, 483, 484, 812, 813, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 841], "3": [8, 9, 16, 39, 47, 55, 56, 57, 64, 79, 81, 83, 85, 86, 94, 96, 98, 100, 101, 108, 117, 126, 136, 138, 139, 140, 147, 158, 164, 165, 169, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 195, 204, 206, 208, 209, 213, 214, 215, 221, 223, 224, 231, 232, 234, 235, 236, 238, 240, 242, 243, 247, 253, 255, 256, 257, 258, 260, 262, 264, 265, 269, 270, 271, 277, 279, 280, 282, 284, 286, 287, 291, 292, 293, 299, 301, 302, 304, 306, 308, 309, 312, 318, 321, 323, 325, 326, 330, 331, 332, 341, 343, 344, 346, 348, 350, 351, 355, 356, 357, 361, 362, 366, 368, 369, 380, 384, 386, 388, 390, 403, 407, 415, 416, 418, 419, 420, 427, 431, 443, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 846], "new_spe": [8, 456], "new_dir": [8, 456], "new_acceler": [8, 456], "20000": [8, 456], "new_deceler": [8, 456], "drive_velocity_mov": [9, 457], "system_eth": [10, 11, 12, 13, 41, 42, 43, 44, 58, 59, 60, 61, 73, 74, 75, 76, 88, 89, 90, 91, 102, 103, 104, 105, 111, 112, 113, 114, 120, 121, 122, 123, 130, 131, 132, 133, 141, 142, 143, 144, 152, 153, 154, 155, 160, 161, 162, 163, 189, 190, 191, 192, 458, 459, 460, 461, 485, 486, 487, 488, 498, 499, 500, 501, 509, 510, 511, 512, 520, 521, 522, 523, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 546, 547, 548, 549, 553, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566, 567, 589, 590, 591, 592], "get_network_info": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796], "hardwar": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 817, 818, 829], "first": [10, 41, 58, 73, 87, 88, 102, 111, 120, 130, 141, 152, 160, 164, 165, 166, 189, 211, 212, 213, 214, 215, 223, 224, 245, 246, 247, 255, 256, 257, 258, 267, 268, 269, 270, 271, 279, 280, 289, 290, 291, 292, 293, 301, 302, 311, 312, 328, 329, 330, 331, 332, 336, 337, 338, 343, 344, 353, 354, 355, 356, 357, 361, 362, 363, 368, 369, 377, 400, 424, 440, 458, 485, 498, 509, 519, 520, 530, 535, 540, 546, 553, 560, 564, 568, 569, 570, 589, 607, 608, 609, 610, 611, 615, 616, 637, 638, 639, 643, 644, 645, 646, 655, 656, 657, 658, 659, 663, 664, 673, 674, 675, 676, 677, 681, 682, 691, 692, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 725, 726, 727, 728, 729, 733, 734, 735, 736, 737, 745, 764, 784, 796, 801, 803, 807, 830, 832, 833, 835, 836, 844, 845], "submask": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 806, 807], "mac": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 806, 807, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "ip_addr": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "net_getipaddrandsubmask_async": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "net_getmacaddr_async": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "get_serial_numb": [11, 42, 59, 74, 89, 103, 112, 121, 131, 142, 153, 161, 190, 216, 248, 272, 294, 313, 333, 358, 378, 401, 425, 441, 459, 486, 499, 510, 521, 531, 536, 541, 547, 554, 561, 565, 590, 612, 640, 660, 678, 693, 709, 730, 746, 765, 785, 797], "serial_numb": [11, 42, 59, 74, 89, 103, 112, 121, 131, 142, 153, 161, 190, 216, 248, 272, 294, 313, 333, 358, 378, 401, 425, 441, 459, 486, 499, 510, 521, 531, 536, 541, 547, 554, 561, 565, 590, 612, 640, 660, 678, 693, 709, 730, 746, 765, 785, 797, 801, 802, 803, 804, 805, 807, 808, 809, 810], "sys_getserialnumber_async": [11, 42, 59, 74, 89, 103, 112, 121, 131, 142, 153, 161, 190, 216, 248, 272, 294, 313, 333, 358, 378, 401, 425, 441, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "hello_world": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "public": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "domain": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "rang": [12, 13, 25, 34, 43, 44, 53, 55, 56, 57, 60, 61, 70, 75, 76, 83, 84, 90, 91, 98, 99, 104, 105, 113, 114, 122, 123, 129, 132, 133, 143, 144, 149, 154, 155, 162, 163, 175, 185, 186, 191, 192, 201, 206, 207, 215, 217, 218, 229, 240, 241, 247, 249, 250, 257, 262, 263, 271, 273, 274, 284, 285, 293, 295, 296, 306, 307, 312, 314, 315, 323, 324, 332, 334, 335, 348, 349, 357, 359, 360, 374, 379, 380, 381, 395, 402, 403, 404, 413, 426, 427, 428, 437, 442, 443, 444, 460, 461, 469, 478, 487, 488, 493, 495, 496, 497, 500, 501, 506, 511, 512, 515, 516, 522, 523, 526, 527, 532, 533, 537, 538, 542, 543, 545, 548, 549, 555, 556, 557, 562, 563, 566, 567, 575, 585, 586, 591, 592, 597, 602, 603, 611, 613, 614, 621, 632, 633, 639, 641, 642, 645, 650, 651, 659, 661, 662, 668, 669, 677, 679, 680, 686, 687, 692, 694, 695, 699, 700, 708, 710, 711, 720, 721, 729, 731, 732, 742, 747, 748, 749, 759, 766, 767, 768, 773, 786, 787, 788, 793, 798, 799, 800, 801, 802, 803, 806, 808, 809, 819, 820, 823, 824, 826, 827, 830, 831, 837, 838, 839, 840, 841, 844], "restart": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "now": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "sys_reboot_async": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "set_and_get_rtc": [13, 44, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 404, 428, 444, 461, 488, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800], "sys_setrtc_async": [13, 44, 55, 56, 57, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 404, 428, 444, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "2023": [13, 44, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 404, 428, 444, 461, 488, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810], "5": [13, 38, 40, 44, 49, 53, 55, 56, 57, 61, 66, 70, 76, 83, 84, 87, 91, 98, 99, 105, 114, 123, 129, 133, 139, 140, 144, 150, 151, 155, 163, 164, 165, 171, 175, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 197, 201, 206, 207, 212, 218, 223, 224, 225, 229, 231, 232, 235, 236, 240, 241, 246, 250, 255, 256, 257, 262, 263, 268, 274, 279, 280, 284, 285, 290, 296, 301, 302, 306, 307, 311, 315, 323, 324, 329, 335, 343, 344, 348, 349, 354, 360, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 461, 482, 484, 488, 493, 495, 496, 497, 501, 506, 512, 515, 516, 519, 523, 526, 527, 533, 538, 543, 545, 549, 551, 552, 556, 558, 559, 563, 567, 568, 569, 571, 575, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 592, 597, 602, 603, 608, 614, 615, 616, 621, 623, 624, 627, 628, 632, 633, 638, 642, 643, 644, 645, 650, 651, 656, 662, 663, 664, 668, 669, 674, 680, 681, 682, 686, 687, 691, 695, 699, 700, 705, 711, 715, 716, 720, 721, 726, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 810, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845], "8": [13, 44, 49, 50, 52, 53, 54, 55, 56, 57, 61, 66, 67, 69, 70, 71, 76, 91, 105, 114, 123, 133, 144, 150, 155, 163, 164, 165, 171, 172, 174, 179, 192, 197, 198, 200, 201, 202, 211, 213, 214, 218, 223, 224, 225, 226, 228, 229, 230, 231, 232, 245, 250, 255, 256, 258, 267, 269, 270, 274, 279, 280, 289, 291, 292, 296, 301, 302, 315, 328, 330, 331, 335, 343, 344, 353, 355, 356, 360, 361, 362, 368, 369, 370, 371, 373, 374, 375, 381, 390, 391, 392, 394, 395, 396, 404, 409, 410, 412, 413, 414, 415, 416, 428, 433, 434, 436, 437, 438, 444, 461, 488, 489, 490, 492, 493, 494, 495, 496, 497, 501, 502, 503, 505, 506, 507, 512, 523, 533, 538, 543, 549, 556, 558, 563, 567, 568, 569, 571, 572, 574, 579, 592, 593, 594, 596, 597, 598, 607, 609, 610, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 637, 642, 643, 644, 646, 655, 657, 658, 662, 663, 664, 673, 675, 676, 680, 681, 682, 695, 704, 706, 707, 711, 715, 716, 725, 727, 728, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 749, 754, 755, 756, 758, 759, 760, 768, 769, 770, 772, 773, 774, 775, 776, 788, 789, 790, 792, 793, 794, 800, 801, 802, 803, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845], "15": [13, 44, 55, 56, 57, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 390, 397, 404, 421, 428, 444, 461, 488, 495, 496, 497, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 754, 768, 788, 800], "05": [13, 44, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 390, 404, 428, 444, 461, 488, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 607, 609, 610, 614, 637, 642, 655, 657, 658, 662, 673, 675, 676, 680, 695, 704, 706, 707, 711, 725, 727, 728, 732, 749, 754, 768, 788, 800, 801], "08": [13, 44, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 404, 428, 444, 461, 488, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800], "07": [13, 44, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 404, 428, 444, 461, 488, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800], "sys_getrtc_async": [13, 14, 15, 16, 17, 44, 45, 46, 47, 48, 55, 56, 57, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 91, 92, 93, 94, 95, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 163, 167, 168, 169, 170, 192, 193, 194, 195, 196, 218, 219, 220, 221, 222, 250, 251, 252, 253, 254, 274, 275, 276, 277, 278, 296, 297, 298, 299, 300, 315, 316, 317, 318, 319, 335, 339, 340, 341, 342, 360, 364, 365, 366, 367, 381, 382, 383, 384, 385, 404, 405, 406, 407, 408, 428, 429, 430, 431, 432, 444, 445, 446, 447, 448, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "multiple_loops_async": [14, 45, 62, 77, 92, 106, 115, 124, 134, 145, 156, 167, 193, 219, 251, 275, 297, 316, 339, 364, 382, 405, 429, 445], "rtc": [14, 15, 16, 17, 45, 46, 47, 48, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 193, 194, 195, 196, 219, 220, 221, 222, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 382, 383, 384, 385, 405, 406, 407, 408, 429, 430, 431, 432, 445, 446, 447, 448, 807, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844, 845], "string": [14, 15, 45, 46, 62, 63, 77, 78, 92, 93, 106, 107, 115, 116, 124, 125, 134, 135, 145, 146, 156, 157, 167, 168, 193, 194, 219, 220, 224, 251, 252, 256, 275, 276, 280, 297, 298, 302, 316, 317, 339, 340, 344, 364, 365, 369, 382, 383, 405, 406, 429, 430, 445, 446, 616, 644, 664, 682, 716, 737, 804, 805, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "readrtc_loop": [14, 45, 62, 77, 92, 106, 115, 124, 134, 145, 156, 167, 193, 219, 251, 275, 297, 316, 339, 364, 382, 405, 429, 445], "true": [14, 15, 17, 21, 22, 45, 46, 48, 49, 62, 63, 65, 66, 77, 78, 80, 92, 93, 95, 106, 107, 109, 115, 116, 118, 124, 125, 127, 134, 135, 137, 145, 146, 148, 156, 157, 159, 167, 168, 170, 171, 193, 194, 196, 197, 203, 210, 219, 220, 222, 225, 237, 244, 251, 252, 254, 258, 259, 266, 275, 276, 278, 281, 288, 297, 298, 300, 303, 310, 316, 317, 319, 320, 327, 339, 340, 342, 345, 352, 364, 365, 367, 370, 382, 383, 385, 386, 387, 388, 389, 390, 391, 405, 406, 408, 409, 429, 430, 432, 433, 445, 446, 448, 465, 466, 489, 502, 571, 593, 599, 606, 617, 629, 636, 646, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 738, 750, 751, 752, 753, 754, 755, 769, 789, 801, 803, 807, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845], "printstring_loop": [14, 45, 62, 77, 92, 106, 115, 124, 134, 145, 156, 167, 193, 219, 251, 275, 297, 316, 339, 364, 382, 405, 429, 445], "gather": [14, 45, 62, 77, 92, 106, 115, 124, 134, 145, 156, 167, 193, 219, 251, 275, 297, 316, 339, 364, 382, 405, 429, 445], "part": [14, 15, 16, 17, 45, 46, 47, 48, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 193, 194, 195, 196, 219, 220, 221, 222, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 382, 383, 384, 385, 405, 406, 407, 408, 429, 430, 431, 432, 445, 446, 447, 448], "never": [14, 16, 45, 47, 62, 64, 77, 79, 92, 94, 106, 108, 115, 117, 124, 126, 134, 136, 145, 147, 156, 158, 167, 169, 193, 195, 219, 221, 251, 253, 275, 277, 297, 299, 316, 318, 339, 341, 364, 366, 382, 384, 405, 407, 429, 431, 445, 447], "multiple_loops_thread": [15, 46, 63, 78, 93, 107, 116, 125, 135, 146, 157, 168, 194, 220, 252, 276, 298, 317, 340, 365, 383, 406, 430, 446], "getrtc": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448], "str": [15, 16, 17, 46, 47, 48, 63, 64, 65, 78, 79, 80, 93, 94, 95, 107, 108, 109, 116, 117, 118, 125, 126, 127, 135, 136, 137, 146, 147, 148, 157, 158, 159, 168, 169, 170, 194, 195, 196, 220, 221, 222, 252, 253, 254, 276, 277, 278, 298, 299, 300, 317, 318, 319, 340, 341, 342, 365, 366, 367, 383, 384, 385, 406, 407, 408, 430, 431, 432, 446, 447, 448, 801, 802, 803, 804, 805, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "printstr": [15, 46, 63, 78, 93, 107, 116, 125, 135, 146, 157, 168, 194, 220, 252, 276, 298, 317, 340, 365, 383, 406, 430, 446], "rtc_thread": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448], "print_thread": [15, 46, 63, 78, 93, 107, 116, 125, 135, 146, 157, 168, 194, 220, 252, 276, 298, 317, 340, 365, 383, 406, 430, 446], "sync": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448, 812, 818, 841], "queri": [15, 16, 17, 46, 47, 48, 63, 64, 65, 78, 79, 80, 93, 94, 95, 107, 108, 109, 116, 117, 118, 125, 126, 127, 135, 136, 137, 146, 147, 148, 157, 158, 159, 168, 169, 170, 194, 195, 196, 220, 221, 222, 252, 253, 254, 276, 277, 278, 298, 299, 300, 317, 318, 319, 340, 341, 342, 365, 366, 367, 383, 384, 385, 406, 407, 408, 430, 431, 432, 446, 447, 448], "_threadprint": [15, 46, 63, 78, 93, 107, 116, 125, 135, 146, 157, 168, 194, 220, 252, 276, 298, 317, 340, 365, 383, 406, 430, 446], "target": [15, 17, 27, 30, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448, 471, 474, 801, 817, 818, 829], "_threadrtc": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448], "immedi": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448], "parallel": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448], "single_loop_async": [16, 47, 64, 79, 94, 108, 117, 126, 136, 147, 158, 169, 195, 221, 253, 277, 299, 318, 341, 366, 384, 407, 431, 447], "loop_func": [16, 47, 64, 79, 94, 108, 117, 126, 136, 147, 158, 169, 195, 221, 253, 277, 299, 318, 341, 366, 384, 407, 431, 447], "timeout": [16, 47, 64, 79, 94, 108, 117, 126, 136, 147, 158, 169, 195, 221, 253, 277, 299, 318, 341, 366, 384, 407, 431, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "single_loop_thread": [17, 48, 65, 80, 95, 109, 118, 127, 137, 148, 159, 170, 196, 222, 254, 278, 300, 319, 342, 367, 385, 408, 432, 448], "motion_1axis_mov": [18, 462], "axi": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 386, 387, 388, 389, 390, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 750, 751, 752, 753, 754, 801, 817, 818, 829, 838, 844], "two_pulse_mod": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 462, 464, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484], "rel_posi_mod": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 36, 37, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 480, 481], "stop_decel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 483, 484], "encod": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 462, 464, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484, 812, 813, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 841, 843, 844, 845], "axis_dir_cw": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 462, 464, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484], "encoder_dir_cw": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 462, 464, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484], "polar": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 462, 463, 464, 465, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484, 817, 818, 829, 830, 832, 833, 835, 836, 844], "enabl": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 138, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 234, 418, 462, 463, 464, 465, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484, 550, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 587, 588, 626, 778, 817, 818, 819, 820, 821, 822, 825, 826, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844], "active_low": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 462, 463, 464, 465, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484], "forward_enable_tru": [18, 19, 20, 24, 31, 32, 33, 36, 39, 40, 462, 463, 464, 468, 475, 476, 477, 480, 483, 484], "reverse_enable_tru": [18, 19, 20, 24, 31, 32, 33, 36, 39, 40, 462, 463, 464, 468, 475, 476, 477, 480, 483, 484], "home_enable_fals": [18, 31, 33, 36, 462, 475, 477, 480], "open_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "motion_opencfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 815, 817, 818, 829], "user": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 819, 820, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840], "desktop": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484], "3axisstage_2p": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484], "ini": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 817, 818, 829, 844], "opencfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40], "load": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 390, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 483, 484, 754, 812, 813, 817, 818, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "motion_loadcfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 815, 817, 818, 829], "loadcfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40], "motion_cfgaxis_async": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 815, 818, 829], "cfgaxis_async": [18, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40], "cfglimit_async": [18, 19, 20, 24, 27, 30, 31, 32, 33, 36, 39, 40], "motion_cfghome_async": [18, 31, 33, 36, 815, 818, 829], "cfghome_async": [18, 31, 33, 36], "motion_cfgaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 815, 818, 829], "target_posi": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 480, 481, 483, 484, 818, 829], "5000": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 480, 481, 483, 484], "velo": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 480, 481, 483, 484, 818, 829], "accel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 480, 481, 483, 484, 818, 829], "100000": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 480, 481, 483, 484, 818, 829, 830, 831, 832, 833, 835, 836, 845], "decel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 480, 481, 483, 484, 818, 829], "cfgaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40], "encoder_posi": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 476, 477, 480, 483, 484, 817, 818, 829], "rstencoderposi_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40], "enableservoon_async": [18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 38, 39, 40], "motion_startsingleaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 39, 40, 815, 818, 829], "startsingleaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 39, 40], "move_statu": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480], "motion_getmovestatus_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 815, 818, 829], "logical_posi": [18, 36, 462, 480], "motion_getlogicalposi_async": [18, 34, 36, 815, 818, 829], "motion_getencoderposi_async": [18, 36, 815, 818, 829], "motion_stop_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 815, 818, 829], "stop_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40], "enableservooff_async": [18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 38, 39, 40], "close_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "motion_1axis_move_with_s_curve_acceler": [19, 463], "jerk": [19, 25, 463, 469, 818, 829], "accelet": [19, 25, 463, 469], "motion_cfgjerkandaccelmode_async": [19, 25, 815, 818, 829], "cfgjerkandaccelmode_async": [19, 25], "getmovestatus_async": [19, 22, 23, 24, 28], "motion_1axis_move_with_alarm_in": [20, 464], "alarm_enable_fals": [20, 464], "cfgaxisparam_async": 20, "motion_cfgalarm_async": [20, 815, 818, 829], "cfgalarm_async": 20, "getmovestatu": [20, 21], "motion_1axis_move_with_breakpoint": [21, 465], "start_posit": [21, 465], "100": [21, 28, 34, 40, 87, 203, 210, 212, 237, 244, 246, 259, 266, 268, 281, 288, 290, 303, 310, 311, 320, 327, 329, 336, 337, 345, 352, 354, 465, 472, 478, 484, 519, 599, 606, 608, 629, 636, 638, 647, 654, 656, 665, 672, 674, 683, 690, 691, 696, 703, 705, 712, 713, 717, 724, 726, 801, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 835, 841], "pulse_width": [21, 465, 818, 829], "pulse_period": [21, 465, 818, 829], "pulse_numb": [21, 465, 818, 829], "motion_cfgbreakpoint_async": [21, 815, 818, 829], "cfgbreakpoint_async": 21, "motion_enablebreakpoint_async": [21, 815, 818, 829], "int": [21, 22, 28, 390, 465, 466, 472, 754, 801, 802, 803, 804, 805, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "enablebreakpoint_async": 21, "motion_1axis_move_with_captur": [22, 466], "rising_edg": [22, 466], "capture_logical_posit": [22, 466], "motion_cfgcapture_async": [22, 815, 818, 829], "cfgcapture_async": 22, "motion_enablecapture_async": [22, 815, 818, 829], "enablecapture_async": 22, "capture_point": [22, 466], "motion_readcapturepoint_async": [22, 815, 818, 829], "readcapturepoint_async": 22, "motion_1axis_move_with_configuration_fil": [23, 467], "motion_1axis_move_with_inposit": [24, 468], "inposi_enable_fals": [24, 468], "motion_cfginposi_async": [24, 815, 818, 829], "cfginposi_async": 24, "motion_2axis_circular_interpol": [25, 469], "interpol": [25, 26, 29, 469, 470, 473, 818, 829, 841], "x_axi": [25, 469, 818, 829], "y_axi": [25, 469, 818, 829], "center_point_x": [25, 469, 818, 829], "2000": [25, 26, 29, 469, 470, 473, 802, 808, 809, 810], "center_point_i": [25, 469, 818, 829], "finish_point_x": [25, 469, 818, 829], "finish_point_i": [25, 469, 818, 829], "circular_dir_cw": [25, 469], "scurv": [25, 469, 812, 813], "motion_cfgcircularinterpo_async": [25, 815, 818, 829], "1000": [25, 27, 28, 30, 39, 49, 66, 171, 197, 225, 257, 370, 391, 409, 433, 469, 471, 472, 474, 483, 489, 495, 496, 502, 550, 571, 593, 617, 626, 645, 738, 755, 769, 778, 789, 835, 841], "cfgcircularinterpo_async": 25, "motion_startcircularinterpo_async": [25, 815, 818, 829], "startcircularinterpo_async": 25, "4": [25, 55, 56, 57, 149, 164, 165, 179, 183, 184, 185, 186, 187, 188, 215, 224, 247, 256, 271, 280, 293, 302, 312, 332, 344, 357, 361, 362, 369, 469, 495, 496, 497, 557, 568, 569, 579, 583, 584, 585, 586, 587, 588, 611, 616, 639, 644, 659, 664, 677, 682, 692, 708, 716, 729, 733, 734, 737, 801, 803, 804, 805, 806, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 846], "x_axis_move_statu": [25, 469], "y_axis_move_statu": [25, 469], "motion_2axis_linear_interpol": [26, 470], "axis1": [26, 27, 29, 30, 470, 471, 473, 474, 818, 829], "dest_posi1": [26, 29, 470, 473, 818, 829], "axis2": [26, 27, 29, 30, 470, 471, 473, 474, 818, 829], "dest_posi2": [26, 29, 470, 473, 818, 829], "motion_cfg2axislinearinterpo_async": [26, 815, 818, 829], "cfg2axislinearinterpo_async": 26, "motion_startlinearinterpo_async": [26, 29, 815, 818, 829], "startlinearinterpo_async": [26, 29], "axis1_move_statu": [26, 29, 470, 473], "axis2_move_statu": [26, 29, 470, 473], "motion_3axis_asynchronous_mov": 27, "getaxisstatu": [27, 30], "005": [27, 30, 223, 255, 257, 279, 301, 343, 368, 471, 474, 615, 643, 645, 663, 681, 715, 736, 819, 820, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840], "axis1_thread": [27, 30, 471, 474], "axis2_thread": [27, 30, 471, 474], "axis3_thread": [27, 30, 471, 474], "axis3": [27, 29, 30, 471, 473, 474, 818, 829], "forward_enable_fals": [27, 30, 471, 474], "reverse_enable_fals": [27, 30, 471, 474], "defin": [27, 30, 471, 474, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "thread_1": [27, 30, 471, 474], "thread_2": [27, 30, 471, 474], "thread_3": [27, 30, 471, 474], "servoon": [27, 30], "join": [27, 30, 471, 474], "servooff_async": 27, "motion_3axis_helical_interpol": [28, 472], "center_x": [28, 472], "center_i": [28, 472], "finish_x": [28, 472], "finish_i": [28, 472], "pitch_axis3": [28, 472, 818, 829], "pitch_axis4": [28, 472, 818, 829], "rotation_num": [28, 472], "cal_timeout": [28, 472], "helical_dir_cw": [28, 472], "motion_cfghelicalinterpo_async": [28, 815, 818, 829], "cfghelicalinterpo_async": 28, "motion_starthelicalinterpo_async": [28, 815, 818, 829], "starthelicalinterpo_async": 28, "motion_3axis_linear_interpol": [29, 473], "dest_posi3": [29, 473, 818, 829], "motion_cfg3axislinearinterpo_async": [29, 815, 818, 829], "cfg3axislinearinterpo_async": 29, "axis3_move_statu": [29, 473], "motion_3axis_synchronous_mov": [30, 474], "motion_startmultiaxismove_async": [30, 815, 818, 829], "startmultiaxismove_async": 30, "servooff": 30, "motion_find_hom": [31, 475], "find_hom": [31, 475], "dir_revers": [31, 32, 33, 475, 476, 477], "motion_cfgfindref_async": [31, 32, 33, 815, 818, 829], "search_velo": [31, 32, 33, 475, 476, 477, 818, 829], "search_accl": [31, 32, 33, 475, 476, 477, 818, 829], "approach_velo_perc": [31, 32, 33, 475, 476, 477, 818, 829], "20": [31, 32, 33, 138, 223, 234, 255, 258, 279, 301, 343, 368, 390, 418, 475, 476, 477, 550, 615, 626, 643, 646, 663, 681, 715, 736, 754, 778, 818, 829, 830, 831, 832, 833, 834, 835, 836], "en_reset_posi": [31, 32, 33, 475, 476, 477, 818, 829], "offset_posi": [31, 32, 33, 475, 476, 477, 818, 829], "1500": [31, 32, 33, 475, 476, 477], "cfgfindref_async": [31, 32, 33], "motion_findref_async": [31, 32, 33, 815, 818, 829], "findref_async": [31, 32, 33], "home_statu": [31, 33, 475, 477], "hit_statu": [31, 33, 475, 477], "forward_hit": [31, 33, 475, 477], "reverse_hit": [31, 33, 475, 477], "hit": [31, 33, 475, 477], "motion_gethomestatus_async": [31, 33, 815, 818, 829], "found": [31, 33, 475, 477, 818, 829, 844], "driving_statu": [31, 32, 33, 475, 476, 477], "motion_checkref_async": [31, 32, 33, 815, 818, 829], "motion_find_index": [32, 476], "one_pulse_mod": [32, 476], "find_index": [32, 476], "motion_cfgencoder_async": [32, 39, 40, 815, 817, 818, 829], "cfgencoder_async": [32, 39, 40], "motion_find_limit": [33, 477], "find_limit": [33, 477], "motion_get_logical_posit": [34, 478], "motion_setlogicalposi_async": [34, 815, 818, 829], "setlogicalposi_async": 34, "posi": [34, 203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 478, 599, 629, 647, 665, 683, 696, 717], "getlogicalposi": 34, "motion_load_configuration_fil": [35, 479], "motion_position_blend": [36, 480], "new_posit": [36, 480, 818, 829], "motion_overrideaxisposi_async": [36, 815, 818, 829], "overrideaxisposi_async": 36, "motion_save_configuration_fil": [37, 481], "motion_savecfgfile_async": [37, 815, 817, 818, 829], "savecfgfile_async": 37, "motion_servo_on": [38, 482], "motion_velocity_blend": [39, 483], "velocity_mod": [39, 40, 483, 484], "overrid": [39, 40, 483, 484, 818, 829], "new_velo": [39, 40, 483, 484, 818, 829], "motion_overrideaxisvelocity_async": [39, 40, 815, 818, 829], "overrideaxisvelocity_async": [39, 40], "3000": [39, 40, 179, 483, 484, 579], "motion_velocity_blending_acceler": [40, 484], "veloc": [40, 386, 387, 388, 484, 751, 752, 812, 813, 817, 818, 829, 838, 845], "new_accel": [40, 484, 818, 829], "new_decel": [40, 484, 818, 829], "motion_overrideaxisaccel_async": [40, 815, 818, 829], "overrideaxisaccel_async": 40, "6000": [40, 484], "ai_n_samples_onc": [49, 66, 171, 197, 225, 370, 391, 409, 433, 489, 502, 571, 593, 617, 738, 755, 769, 789], "obtain": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 72, 110, 119, 171, 172, 173, 174, 175, 176, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 508, 534, 539, 571, 572, 573, 574, 575, 576, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 789, 790, 792, 793, 794], "addition": [49, 53, 54, 66, 70, 71, 72, 110, 119, 171, 175, 176, 197, 201, 202, 225, 229, 230, 370, 374, 375, 391, 395, 396, 409, 413, 414, 433, 437, 438, 489, 493, 494, 502, 506, 507, 508, 534, 539, 571, 575, 576, 593, 597, 598, 617, 621, 622, 738, 742, 743, 755, 759, 760, 769, 773, 774, 789, 793, 794, 846], "To": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 138, 139, 140, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 225, 226, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 550, 551, 552, 571, 572, 573, 574, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 617, 618, 620, 621, 622, 626, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794], "begin": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 138, 139, 140, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 225, 226, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 550, 551, 552, 571, 572, 573, 574, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 617, 618, 620, 621, 622, 626, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794], "next": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 138, 139, 140, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 550, 551, 552, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 789, 790, 792, 793, 794], "outlin": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 138, 139, 140, 171, 172, 173, 174, 175, 176, 181, 182, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 234, 235, 236, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 550, 551, 552, 571, 572, 573, 574, 575, 576, 581, 582, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 626, 627, 628, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794], "procedur": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 138, 139, 140, 171, 172, 173, 174, 175, 176, 181, 182, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 234, 235, 236, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 550, 551, 552, 571, 572, 573, 574, 575, 576, 581, 582, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 626, 627, 628, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794], "stream": [49, 50, 52, 66, 67, 69, 138, 171, 172, 173, 174, 197, 198, 200, 225, 226, 228, 234, 370, 371, 373, 391, 392, 394, 409, 410, 412, 418, 433, 434, 436, 489, 490, 492, 502, 503, 505, 550, 571, 572, 573, 574, 593, 594, 596, 617, 618, 620, 626, 738, 739, 741, 755, 756, 758, 769, 770, 772, 778, 789, 790, 792, 801, 812, 813, 819, 820, 829, 830, 831, 832, 837, 838, 839, 840, 842], "conclud": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 138, 139, 140, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 225, 226, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 550, 551, 552, 571, 572, 573, 574, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 617, 618, 620, 621, 622, 626, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794], "explain": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 138, 139, 140, 171, 172, 173, 174, 175, 176, 181, 182, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 234, 235, 236, 370, 371, 373, 374, 375, 386, 387, 388, 389, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 550, 551, 552, 571, 572, 573, 574, 575, 576, 581, 582, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 626, 627, 628, 738, 739, 741, 742, 743, 750, 751, 752, 753, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 779, 780, 789, 790, 792, 793, 794], "channel": [49, 50, 52, 53, 54, 66, 67, 69, 70, 71, 87, 138, 172, 174, 179, 197, 198, 200, 201, 202, 203, 210, 212, 225, 226, 228, 229, 230, 234, 237, 244, 246, 259, 266, 268, 281, 288, 290, 303, 310, 311, 320, 327, 329, 345, 352, 354, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 418, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 502, 503, 505, 506, 507, 519, 550, 572, 574, 579, 593, 594, 596, 597, 598, 599, 606, 608, 617, 618, 620, 621, 622, 626, 629, 636, 638, 647, 654, 656, 665, 672, 674, 683, 690, 691, 696, 703, 705, 717, 724, 726, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 778, 789, 790, 792, 793, 794, 801, 808, 809, 812, 813, 819, 820, 821, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844], "On": [49, 50, 52, 55, 56, 57, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 489, 490, 492, 495, 496, 497, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 845], "demand": [49, 50, 52, 55, 56, 66, 67, 69, 138, 171, 172, 173, 174, 177, 178, 179, 197, 198, 200, 225, 226, 228, 231, 232, 234, 370, 371, 373, 391, 392, 394, 409, 410, 412, 415, 416, 418, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 550, 571, 572, 573, 574, 577, 578, 579, 593, 594, 596, 617, 618, 620, 623, 624, 626, 738, 739, 741, 755, 756, 758, 769, 770, 772, 775, 776, 778, 789, 790, 792, 801, 812, 813, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840, 845], "continu": [49, 55, 57, 66, 138, 171, 179, 197, 225, 234, 370, 391, 409, 418, 433, 489, 495, 497, 502, 550, 571, 579, 593, 617, 626, 738, 755, 769, 778, 789, 801, 812, 813, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840, 845], "sampling_r": [49, 50, 52, 55, 56, 66, 67, 69, 138, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 234, 370, 371, 373, 391, 392, 394, 409, 410, 412, 418, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 550, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 626, 738, 739, 741, 755, 756, 758, 769, 770, 772, 778, 789, 790, 792, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "200": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 817, 841], "read_point": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792], "read_delai": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 257, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792], "ai_open_async": [49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 72, 110, 119, 171, 172, 173, 174, 175, 176, 177, 178, 179, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 231, 232, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 415, 416, 433, 434, 436, 437, 438, 815, 819, 820, 823, 824, 829, 830, 831, 837, 838, 839, 840], "acquisit": [49, 50, 52, 53, 54, 55, 56, 66, 67, 69, 70, 71, 72, 110, 119, 171, 172, 173, 174, 175, 176, 177, 178, 179, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 231, 232, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 415, 416, 433, 434, 436, 437, 438, 489, 490, 492, 493, 494, 495, 496, 502, 503, 505, 506, 507, 508, 534, 539, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 623, 624, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 775, 776, 789, 790, 792, 793, 794, 801, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_setmode_async": [49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 171, 172, 173, 174, 175, 176, 179, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 433, 434, 436, 437, 438, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "rate": [49, 50, 52, 55, 56, 66, 67, 69, 138, 171, 172, 173, 174, 179, 197, 198, 200, 211, 225, 226, 228, 234, 245, 267, 289, 328, 353, 370, 371, 373, 386, 387, 388, 389, 390, 391, 392, 394, 409, 410, 412, 418, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 550, 571, 572, 573, 574, 579, 593, 594, 596, 607, 617, 618, 620, 626, 637, 655, 673, 704, 725, 738, 739, 741, 750, 751, 752, 753, 754, 755, 756, 758, 769, 770, 772, 778, 789, 790, 792, 801, 804, 818, 819, 820, 823, 824, 826, 827, 829, 830, 831, 837, 838, 839, 840, 841, 844], "ai_setsamplingrate_async": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_setnumsamples_async": [49, 55, 66, 171, 197, 225, 370, 391, 409, 433, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_start_async": [49, 50, 52, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_2dlist": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792], "ai_readstreaming_async": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 573, 579, 815, 819, 820, 829, 830, 831, 837, 838, 840], "len": [49, 50, 52, 55, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 257, 370, 371, 373, 390, 391, 392, 394, 409, 410, 412, 433, 434, 436, 489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 645, 738, 739, 741, 754, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 806, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ok": [49, 66, 171, 197, 225, 370, 391, 409, 433, 489, 502, 571, 593, 617, 738, 755, 769, 789, 801, 803, 807], "ai_list": [49, 53, 54, 57, 66, 70, 71, 171, 175, 176, 177, 178, 197, 201, 202, 225, 229, 230, 231, 232, 370, 374, 375, 391, 395, 396, 409, 413, 414, 415, 416, 433, 437, 438, 489, 493, 494, 497, 502, 506, 507, 571, 575, 576, 577, 578, 593, 597, 598, 617, 621, 622, 623, 624, 738, 742, 743, 755, 759, 760, 769, 773, 774, 775, 776, 789, 793, 794], "enumer": [49, 66, 171, 197, 225, 370, 391, 409, 433, 489, 502, 571, 593, 617, 738, 755, 769, 789, 801], "ani": [49, 66, 171, 197, 225, 370, 391, 409, 433, 489, 502, 571, 593, 617, 738, 755, 769, 789, 801], "miss": [49, 66, 171, 197, 225, 370, 391, 409, 433, 489, 502, 571, 593, 617, 738, 755, 769, 789], "ng": [49, 66, 171, 197, 225, 370, 391, 409, 433, 571], "ai_stop_async": [49, 50, 52, 56, 66, 67, 69, 171, 172, 173, 174, 179, 197, 198, 200, 225, 226, 228, 370, 371, 373, 391, 392, 394, 409, 410, 412, 433, 434, 436, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_close_async": [49, 50, 52, 53, 54, 55, 56, 57, 66, 67, 69, 70, 71, 72, 110, 119, 171, 172, 173, 174, 175, 176, 177, 178, 179, 197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 231, 232, 370, 371, 373, 374, 375, 391, 392, 394, 395, 396, 409, 410, 412, 413, 414, 415, 416, 433, 434, 436, 437, 438, 815, 819, 820, 823, 824, 829, 830, 831, 837, 838, 839, 840], "ai_continu": [50, 67, 172, 198, 226, 371, 392, 410, 434, 490, 503, 572, 594, 618, 739, 756, 770, 790], "n": [50, 52, 56, 57, 67, 69, 138, 164, 165, 172, 173, 174, 179, 198, 200, 226, 228, 234, 361, 362, 371, 373, 390, 392, 394, 410, 412, 418, 434, 436, 490, 492, 496, 497, 503, 505, 550, 568, 569, 572, 573, 574, 579, 594, 596, 618, 620, 626, 733, 734, 739, 741, 754, 756, 758, 770, 772, 778, 790, 792, 801, 812, 813, 819, 820, 826, 828, 829, 830, 831, 836, 837, 838, 839, 840, 841, 845], "sampl": [50, 52, 56, 57, 67, 69, 138, 164, 165, 172, 173, 174, 179, 198, 200, 226, 228, 234, 361, 362, 371, 373, 392, 394, 410, 412, 418, 434, 436, 490, 492, 496, 497, 503, 505, 550, 568, 569, 572, 573, 574, 579, 594, 596, 618, 620, 626, 733, 734, 739, 741, 756, 758, 770, 772, 778, 790, 792, 801, 809, 812, 813, 819, 820, 826, 828, 829, 830, 831, 836, 837, 838, 839, 840, 841, 844, 845], "data_len": [50, 52, 67, 69, 172, 173, 174, 179, 198, 200, 226, 228, 371, 373, 392, 394, 410, 412, 434, 436, 490, 492, 503, 505, 572, 573, 574, 579, 594, 596, 618, 620, 739, 741, 756, 758, 770, 772, 790, 792], "did": [51, 68, 199, 227, 233, 372, 393, 411, 417, 435, 491, 504, 595, 619, 625, 740, 757, 771, 777, 791], "ai_continuous_with_logg": [52, 69, 174, 200, 228, 373, 394, 412, 436, 492, 505, 574, 596, 620, 741, 758, 772, 792], "Then": [52, 69, 174, 200, 228, 373, 394, 412, 436, 492, 505, 574, 596, 620, 741, 758, 772, 792], "save": [52, 69, 165, 174, 200, 228, 337, 362, 373, 390, 394, 412, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 754, 758, 772, 792, 812, 813, 817, 818, 829, 841], "csv": [52, 69, 165, 174, 200, 228, 337, 362, 373, 394, 412, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 758, 772, 792, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "wpc_test": [52, 69, 165, 174, 200, 228, 337, 362, 373, 394, 397, 398, 412, 421, 422, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 758, 761, 762, 772, 781, 782, 792], "logger_openfil": [52, 69, 165, 174, 200, 228, 337, 362, 373, 394, 412, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 758, 772, 792, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "header": [52, 69, 165, 174, 200, 228, 337, 362, 373, 394, 412, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 758, 772, 792, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "logger_writehead": [52, 69, 165, 174, 200, 228, 337, 362, 373, 394, 412, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 758, 772, 792, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ch0": [52, 69, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 336, 337, 338, 363, 373, 394, 412, 436, 492, 505, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 712, 713, 714, 735, 741, 758, 772, 792, 801], "ch1": [52, 69, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 336, 337, 338, 362, 363, 373, 394, 412, 436, 492, 505, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 712, 713, 714, 734, 735, 741, 758, 772, 792, 801], "ch2": [52, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 373, 394, 412, 436, 492, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 741, 758, 772, 792, 801], "ch3": [52, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 373, 394, 412, 436, 492, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 741, 758, 772, 792, 801], "ch4": [52, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 373, 394, 412, 436, 492, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 741, 758, 772, 792, 801], "ch5": [52, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 373, 394, 412, 436, 492, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 741, 758, 772, 792, 801], "ch6": [52, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 373, 394, 412, 436, 492, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 741, 758, 772, 792, 801], "ch7": [52, 69, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 228, 373, 394, 412, 436, 492, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 596, 620, 741, 758, 772, 792, 801], "logger_write2dlist": [52, 69, 174, 200, 228, 373, 394, 412, 436, 492, 505, 574, 596, 620, 741, 758, 772, 792, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ai_on_demand_in_loop": [53, 70, 175, 201, 229, 374, 395, 413, 437, 493, 506, 575, 597, 621, 742, 759, 773, 793], "util": [53, 70, 175, 201, 229, 374, 390, 395, 413, 437, 493, 506, 575, 597, 621, 742, 754, 759, 773, 793], "retriev": [53, 54, 70, 71, 72, 110, 119, 175, 176, 201, 202, 229, 230, 374, 375, 395, 396, 413, 414, 437, 438, 493, 494, 506, 507, 508, 534, 539, 575, 576, 597, 598, 621, 622, 742, 743, 759, 760, 773, 774, 793, 794, 819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "chip_select": [53, 70, 171, 172, 173, 174, 175, 176, 177, 178, 179, 201, 229, 231, 232, 374, 395, 413, 415, 416, 437, 571, 572, 573, 574, 575, 576, 577, 578, 579, 819, 829, 830, 831, 837, 838, 839, 840], "ai_readondemand_async": [53, 54, 57, 70, 71, 72, 110, 119, 171, 172, 173, 174, 175, 176, 177, 178, 179, 201, 202, 229, 230, 231, 232, 374, 375, 395, 396, 413, 414, 415, 416, 437, 438, 573, 579, 815, 819, 820, 823, 824, 829, 830, 831, 837, 838, 840], "ai_on_demand_onc": [54, 71, 72, 110, 119, 176, 202, 230, 375, 396, 414, 438, 494, 507, 508, 534, 539, 576, 598, 622, 743, 760, 774, 794], "rtc_ai": [55, 56, 57, 495, 496, 497], "rtc_trigger_ai_n_sampl": [55, 495, 497], "mode_alarm": [55, 56, 57, 495, 496, 497], "month": [55, 56, 57, 495, 496, 497, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "dai": [55, 56, 57, 495, 496, 497, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "hour": [55, 56, 57, 495, 496, 497, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "minut": [55, 56, 57, 495, 496, 497, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "50": [55, 56, 57, 87, 212, 246, 268, 290, 311, 329, 354, 390, 495, 496, 497, 519, 608, 638, 656, 674, 691, 705, 726, 754], "alarm": [55, 56, 57, 495, 496, 497, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_startrtcalarm_async": [55, 56, 57, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "rtc_trigger_ai_continu": [56, 496], "stop_flag": [56, 496], "rtc_trigger_ai_on_demand": 57, "ai24bit": [72, 110, 119, 508, 534, 539], "dio_loopback_pin": [81, 96, 183, 204, 238, 260, 282, 304, 321, 346, 513, 524, 583, 600, 630, 648, 666, 684, 697, 718], "involv": [81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 775, 776], "do": [81, 82, 96, 97, 183, 184, 204, 205, 213, 214, 215, 238, 239, 247, 260, 261, 269, 270, 271, 282, 283, 291, 292, 293, 304, 305, 312, 321, 322, 330, 331, 332, 346, 347, 355, 356, 357, 513, 514, 524, 525, 583, 584, 600, 601, 609, 610, 611, 630, 631, 639, 648, 649, 657, 658, 659, 666, 667, 675, 676, 677, 684, 685, 692, 697, 698, 706, 707, 708, 718, 719, 727, 728, 729, 805, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "send": [81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 775, 776, 801, 830, 831, 832, 833, 835, 836], "signal": [81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 138, 139, 140, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 212, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 260, 261, 262, 263, 264, 265, 268, 282, 283, 284, 285, 286, 287, 290, 304, 305, 306, 307, 308, 309, 311, 321, 322, 323, 324, 325, 326, 329, 346, 347, 348, 349, 350, 351, 354, 415, 416, 418, 419, 420, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 528, 529, 550, 551, 552, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 608, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 638, 648, 649, 650, 651, 652, 653, 656, 666, 667, 668, 669, 670, 671, 674, 684, 685, 686, 687, 688, 689, 691, 697, 698, 699, 700, 701, 702, 705, 718, 719, 720, 721, 722, 723, 726, 775, 776, 778, 779, 780, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "di": [81, 82, 87, 96, 97, 183, 184, 204, 205, 212, 215, 238, 239, 246, 247, 260, 261, 268, 271, 282, 283, 290, 293, 304, 305, 311, 312, 321, 322, 329, 332, 346, 347, 354, 357, 513, 514, 519, 524, 525, 583, 584, 600, 601, 608, 611, 630, 631, 638, 639, 648, 649, 656, 659, 666, 667, 674, 677, 684, 685, 691, 692, 697, 698, 705, 708, 718, 719, 726, 729, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "receiv": [81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 223, 231, 232, 238, 239, 255, 260, 261, 279, 282, 283, 301, 304, 305, 321, 322, 343, 346, 347, 368, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 615, 623, 624, 630, 631, 643, 648, 649, 663, 666, 667, 681, 684, 685, 697, 698, 715, 718, 719, 736, 775, 776, 830, 831, 832, 833, 835, 836, 838, 839, 844], "singl": [81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 775, 776, 812, 818, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840, 841], "commonli": [81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 775, 776], "known": [81, 82, 96, 97, 183, 184, 204, 205, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 513, 514, 524, 525, 583, 584, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719], "illustr": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723], "requir": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 177, 178, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 231, 232, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 415, 416, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 577, 578, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 623, 624, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 775, 776, 834, 841], "oper": [81, 82, 96, 97, 183, 184, 204, 205, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 513, 514, 524, 525, 583, 584, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 818, 825, 829, 841, 844], "lastli": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 177, 178, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 231, 232, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 346, 347, 348, 349, 350, 351, 415, 416, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 577, 578, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 623, 624, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 775, 776], "do_port": [81, 82, 96, 97, 129, 183, 184, 185, 186, 187, 188, 204, 205, 213, 214, 238, 239, 260, 261, 269, 270, 282, 283, 291, 292, 304, 305, 321, 322, 330, 331, 346, 347, 355, 356, 513, 514, 524, 525, 545, 583, 584, 585, 586, 587, 588, 600, 601, 609, 610, 630, 631, 648, 649, 657, 658, 666, 667, 675, 676, 684, 685, 697, 698, 706, 707, 718, 719, 727, 728, 805, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_port": [81, 82, 96, 97, 183, 184, 204, 205, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 513, 514, 524, 525, 583, 584, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_pin": [81, 96, 183, 204, 238, 260, 282, 304, 321, 346, 513, 524, 583, 600, 630, 648, 666, 684, 697, 718], "di_pin": [81, 96, 183, 204, 238, 260, 282, 304, 321, 346, 513, 524, 583, 600, 630, 648, 666, 684, 697, 718], "do_valu": [81, 82, 85, 86, 96, 97, 100, 101, 183, 184, 187, 188, 204, 205, 208, 209, 238, 239, 242, 243, 260, 261, 264, 265, 282, 283, 286, 287, 304, 305, 308, 309, 321, 322, 325, 326, 346, 347, 350, 351, 513, 514, 517, 518, 524, 525, 528, 529, 583, 584, 587, 588, 600, 601, 604, 605, 630, 631, 634, 635, 648, 649, 652, 653, 666, 667, 670, 671, 684, 685, 688, 689, 697, 698, 701, 702, 718, 719, 722, 723], "digit": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 129, 139, 140, 149, 150, 151, 177, 178, 181, 182, 186, 204, 205, 206, 207, 208, 209, 213, 214, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 269, 270, 282, 283, 284, 285, 286, 287, 291, 292, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 330, 331, 346, 347, 348, 349, 350, 351, 355, 356, 390, 415, 416, 419, 420, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 545, 551, 552, 557, 558, 559, 577, 578, 581, 582, 585, 586, 600, 601, 602, 603, 604, 605, 609, 610, 623, 624, 627, 628, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 657, 658, 666, 667, 668, 669, 670, 671, 675, 676, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 706, 707, 718, 719, 720, 721, 722, 723, 727, 728, 754, 775, 776, 779, 780, 803, 805, 821, 822, 825, 827, 829, 830, 831, 832, 833, 834, 835, 836, 841], "output": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 213, 214, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 269, 270, 282, 283, 284, 285, 286, 287, 291, 292, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 330, 331, 346, 347, 348, 349, 350, 351, 355, 356, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 609, 610, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 657, 658, 666, 667, 668, 669, 670, 671, 675, 676, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 706, 707, 718, 719, 720, 721, 722, 723, 727, 728, 802, 803, 805, 812, 813, 817, 818, 821, 822, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 841, 844], "do_openpins_async": [81, 83, 85, 96, 98, 100, 204, 206, 208, 213, 214, 238, 240, 242, 260, 262, 264, 269, 270, 282, 284, 286, 291, 292, 304, 306, 308, 321, 323, 325, 330, 331, 346, 348, 350, 355, 356, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "high": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 213, 214, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 269, 270, 282, 283, 284, 285, 286, 287, 291, 292, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 330, 331, 346, 347, 348, 349, 350, 351, 355, 356, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 609, 610, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 657, 658, 666, 667, 668, 669, 670, 671, 675, 676, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 706, 707, 718, 719, 720, 721, 722, 723, 727, 728, 805, 817, 818, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845], "low": [81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 213, 214, 238, 239, 240, 241, 242, 243, 260, 261, 262, 263, 264, 265, 269, 270, 282, 283, 284, 285, 286, 287, 291, 292, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 330, 331, 346, 347, 348, 349, 350, 351, 355, 356, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 604, 605, 609, 610, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 657, 658, 666, 667, 668, 669, 670, 671, 675, 676, 684, 685, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 706, 707, 718, 719, 720, 721, 722, 723, 727, 728, 805, 817, 818, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845], "do_writepins_async": [81, 85, 96, 100, 183, 187, 204, 208, 213, 214, 238, 242, 260, 264, 269, 270, 282, 286, 291, 292, 304, 308, 321, 325, 330, 331, 346, 350, 355, 356, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "iutput": [81, 96, 204, 238, 260, 282, 304, 321, 346, 513, 524, 600, 630, 648, 666, 684, 697, 718], "di_openpins_async": [81, 96, 204, 238, 260, 282, 304, 321, 346, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "state": [81, 82, 83, 84, 96, 97, 98, 99, 129, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 238, 239, 240, 241, 260, 261, 262, 263, 282, 283, 284, 285, 304, 305, 306, 307, 321, 322, 323, 324, 346, 347, 348, 349, 513, 514, 515, 516, 524, 525, 526, 527, 545, 583, 584, 585, 586, 587, 588, 600, 601, 602, 603, 630, 631, 632, 633, 648, 649, 650, 651, 666, 667, 668, 669, 684, 685, 686, 687, 697, 698, 699, 700, 718, 719, 720, 721, 803, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "di_readpins_async": [81, 96, 183, 204, 238, 260, 282, 304, 321, 346, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_closepins_async": [81, 83, 85, 96, 98, 100, 204, 206, 208, 213, 214, 238, 240, 242, 260, 262, 264, 269, 270, 282, 284, 286, 291, 292, 304, 306, 308, 321, 323, 325, 330, 331, 346, 348, 350, 355, 356, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "input": [81, 82, 96, 97, 204, 205, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 513, 514, 524, 525, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844], "di_closepins_async": [81, 96, 204, 238, 260, 282, 304, 321, 346, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "dio_loopback_port": [82, 97, 184, 205, 239, 261, 283, 305, 322, 347, 514, 525, 584, 601, 631, 649, 667, 685, 698, 719], "pin": [82, 87, 97, 139, 140, 177, 178, 181, 182, 184, 205, 212, 213, 214, 231, 232, 235, 236, 239, 246, 261, 268, 269, 270, 283, 290, 291, 292, 305, 311, 322, 329, 330, 331, 347, 354, 355, 356, 415, 416, 419, 420, 514, 519, 525, 551, 552, 577, 578, 581, 582, 584, 601, 608, 609, 610, 623, 624, 627, 628, 631, 638, 649, 656, 657, 658, 667, 674, 675, 676, 685, 691, 698, 705, 706, 707, 719, 726, 727, 728, 775, 776, 779, 780, 805, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "do_openport_async": [82, 84, 86, 97, 99, 101, 205, 207, 209, 239, 241, 243, 261, 263, 265, 283, 285, 287, 305, 307, 309, 322, 324, 326, 347, 349, 351, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_openport_async": [82, 97, 205, 239, 261, 283, 305, 322, 347, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_writeport_async": [82, 86, 97, 101, 129, 184, 188, 205, 209, 239, 243, 261, 265, 283, 287, 305, 309, 322, 326, 347, 351, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_readport_async": [82, 97, 184, 205, 239, 261, 283, 305, 322, 347, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_closeport_async": [82, 84, 86, 97, 99, 101, 205, 207, 209, 239, 241, 243, 261, 263, 265, 283, 285, 287, 305, 307, 309, 322, 324, 326, 347, 349, 351, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_closeport_async": [82, 97, 205, 239, 261, 283, 305, 322, 347, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "dio": [83, 84, 85, 86, 98, 99, 100, 101, 185, 186, 187, 188, 206, 207, 208, 209, 213, 214, 240, 241, 242, 243, 262, 263, 264, 265, 269, 270, 284, 285, 286, 287, 291, 292, 306, 307, 308, 309, 323, 324, 325, 326, 330, 331, 348, 349, 350, 351, 355, 356, 515, 516, 517, 518, 526, 527, 528, 529, 585, 586, 587, 588, 602, 603, 604, 605, 609, 610, 632, 633, 634, 635, 650, 651, 652, 653, 657, 658, 668, 669, 670, 671, 675, 676, 686, 687, 688, 689, 699, 700, 701, 702, 706, 707, 720, 721, 722, 723, 727, 728, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "do_blinky_pin": [83, 98, 185, 206, 240, 262, 284, 306, 323, 348, 515, 526, 585, 602, 632, 650, 668, 686, 699, 720], "loop": [83, 84, 98, 99, 149, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 557, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721, 812, 813], "voltag": [83, 84, 85, 86, 98, 99, 100, 101, 138, 185, 186, 187, 188, 206, 207, 208, 209, 234, 240, 241, 242, 243, 262, 263, 264, 265, 284, 285, 286, 287, 306, 307, 308, 309, 323, 324, 325, 326, 348, 349, 350, 351, 418, 515, 516, 517, 518, 526, 527, 528, 529, 550, 585, 586, 587, 588, 602, 603, 604, 605, 626, 632, 633, 634, 635, 650, 651, 652, 653, 668, 669, 670, 671, 686, 687, 688, 689, 699, 700, 701, 702, 720, 721, 722, 723, 778, 801, 802, 823, 824, 826, 829, 831, 839, 841, 845], "appli": [83, 84, 98, 99, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 390, 515, 516, 526, 527, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721, 754], "blink": [83, 84, 98, 99, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721], "effect": [83, 84, 98, 99, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "pinindex": [83, 98, 185, 206, 240, 262, 284, 306, 323, 348, 515, 526, 585, 602, 632, 650, 668, 686, 699, 720], "toggl": [83, 84, 98, 99, 129, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 545, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_togglepins_async": [83, 98, 185, 206, 240, 262, 284, 306, 323, 348, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "led": [83, 84, 85, 86, 98, 99, 100, 101, 185, 186, 206, 207, 208, 209, 240, 241, 242, 243, 262, 263, 264, 265, 284, 285, 286, 287, 306, 307, 308, 309, 323, 324, 325, 326, 348, 349, 350, 351, 515, 516, 517, 518, 526, 527, 528, 529, 585, 586, 602, 603, 604, 605, 632, 633, 634, 635, 650, 651, 652, 653, 668, 669, 670, 671, 686, 687, 688, 689, 699, 700, 701, 702, 720, 721, 722, 723, 801, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 837, 838, 839, 840], "do_blinky_port": [84, 99, 186, 207, 241, 263, 285, 307, 324, 349, 516, 527, 586, 603, 633, 651, 669, 687, 700, 721], "do_toggleport_async": [84, 99, 186, 207, 241, 263, 285, 307, 324, 349, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_write_pin": [85, 100, 187, 208, 242, 264, 286, 308, 325, 350, 517, 528, 587, 604, 634, 652, 670, 688, 701, 722], "written": [85, 86, 100, 101, 187, 188, 208, 209, 211, 213, 242, 243, 245, 264, 265, 267, 269, 286, 287, 289, 291, 308, 309, 325, 326, 328, 330, 350, 351, 353, 355, 517, 518, 528, 529, 587, 588, 604, 605, 607, 609, 634, 635, 637, 652, 653, 655, 657, 670, 671, 673, 675, 688, 689, 701, 702, 704, 706, 722, 723, 725, 727, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pin_index": [85, 100, 187, 208, 242, 264, 286, 308, 325, 350, 517, 528, 587, 604, 634, 652, 670, 688, 701, 722, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_write_port": [86, 101, 188, 209, 243, 265, 287, 309, 326, 351, 518, 529, 588, 605, 635, 653, 671, 689, 702, 723], "pwm_gener": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726], "should": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 819, 820, 826, 829, 830, 831, 832, 837, 838, 839, 840], "frequenc": [87, 203, 210, 212, 237, 244, 246, 259, 266, 268, 281, 288, 290, 303, 310, 311, 320, 327, 329, 345, 352, 354, 519, 599, 606, 608, 629, 636, 638, 647, 654, 656, 665, 672, 674, 683, 690, 691, 696, 703, 705, 717, 724, 726, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 839, 845], "duti": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 839], "cycl": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 839], "so": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726], "can": [87, 179, 212, 246, 268, 290, 311, 329, 354, 519, 579, 608, 638, 656, 674, 691, 705, 726, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 846], "proper": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726], "By": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726], "want": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 819, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "could": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 825, 827, 828, 835, 836], "duty_cycl": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 839], "pwm_open_async": [87, 212, 246, 268, 290, 311, 329, 354, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_setfrequency_async": [87, 212, 246, 268, 290, 311, 329, 354, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_setdutycycle_async": [87, 212, 246, 268, 290, 311, 329, 354, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_start_async": [87, 212, 246, 268, 290, 311, 329, 354, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_stop_async": [87, 212, 246, 268, 290, 311, 329, 354, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_close_async": [87, 212, 246, 268, 290, 311, 329, 354, 815, 821, 830, 831, 832, 833, 834, 835, 836], "relay_read_count": [128, 544], "index": [128, 544, 812, 813, 818, 825, 829, 832, 844, 845], "relay_open_async": [128, 129, 815, 825], "relay_read_async": [128, 815, 825], "relay_close_async": [128, 129, 815, 825], "relay_set_channel": [129, 545], "valu": [129, 139, 140, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 211, 213, 231, 232, 235, 236, 245, 267, 269, 289, 291, 328, 330, 353, 355, 380, 403, 415, 416, 419, 420, 427, 443, 545, 551, 552, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 607, 609, 623, 624, 627, 628, 637, 655, 657, 673, 675, 704, 706, 725, 727, 748, 767, 775, 776, 779, 780, 787, 799, 801, 802, 805, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844, 845, 846], "ao_waveform_gen": [138, 234, 418, 550, 626, 778], "number_of_sampl": [138, 234, 418, 550, 626, 778], "form_mod": [138, 234, 418, 550, 626, 778], "dc": [138, 234, 418, 550, 626, 778, 826, 829, 831, 839, 845], "retangular": [138, 234, 418, 550, 626, 778, 826, 829, 831, 839], "triangular": [138, 234, 418, 550, 626, 778, 826, 829, 831, 839, 845], "sine": [138, 234, 418, 550, 626, 778, 826, 829, 831, 839, 845], "amplitud": [138, 234, 418, 550, 626, 778, 826, 829, 831, 839], "freq_0": [138, 234, 418, 550, 626, 778], "freq_1": [138, 234, 418, 550, 626, 778], "ao_open_async": [138, 139, 140, 177, 178, 179, 181, 182, 231, 232, 234, 235, 236, 415, 416, 418, 419, 420, 815, 826, 829, 831, 839], "ao_setmode_async": [138, 234, 418, 815, 826, 829, 831, 839], "10k": [138, 234, 418, 550, 626, 778, 842], "hz": [138, 179, 234, 386, 387, 388, 389, 390, 418, 550, 579, 626, 750, 751, 752, 753, 754, 778, 819, 820, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ao_setsamplingrate_async": [138, 234, 418, 815, 826, 829, 831, 839], "numsampl": [138, 234, 418, 550, 626, 778, 801], "ao_setnumsamples_async": [138, 234, 418, 815, 826, 829, 831, 839], "ao_setnumsampl": [138, 234, 418, 550, 626, 778, 815, 826, 829, 831, 839], "ao_setenablechannels_async": [138, 234, 418, 815, 826, 829, 831, 839], "form": [138, 234, 397, 418, 421, 550, 626, 761, 778, 781, 825, 826, 829, 831, 839, 841, 844], "ao_setform_async": [138, 234, 418, 815, 826, 829, 831, 839], "ao_setformparam_async": [138, 234, 418, 815, 826, 829, 831, 839], "info": [138, 183, 184, 185, 186, 187, 188, 234, 418, 550, 583, 584, 585, 586, 587, 588, 626, 778, 801, 811, 812, 813, 826, 829, 831, 839], "ao_openstreaming_async": [138, 234, 418, 815, 826, 829, 831, 839], "ao_startstreaming_async": [138, 234, 418, 815, 826, 829, 831, 839], "ao_closestreaming_async": [138, 234, 418, 815, 826, 829, 831, 839], "ao_close_async": [138, 139, 140, 177, 178, 179, 181, 182, 231, 232, 234, 235, 236, 415, 416, 418, 419, 420, 815, 826, 829, 831, 839], "ao_write_all_channel": [139, 181, 235, 419, 551, 581, 627, 779], "simultan": [139, 177, 181, 231, 235, 415, 419, 551, 577, 581, 623, 627, 775, 779, 802, 819, 820, 823, 824, 826, 829, 830, 831, 837, 838, 839, 840, 841], "ao_value_list": [139, 140, 177, 178, 181, 182, 231, 232, 235, 236, 415, 416, 419, 420, 551, 552, 577, 578, 581, 582, 623, 624, 627, 628, 775, 776, 779, 780], "ao_writeallchannels_async": [139, 177, 181, 231, 235, 415, 419, 802, 815, 826, 829, 831, 839], "ao_write_one_channel": [140, 182, 236, 420, 552, 582, 628, 780], "vaul": [140, 178, 179, 182, 232, 236, 416, 420, 552, 578, 579, 582, 624, 628, 776, 780], "ao_writeonechannel_async": [140, 178, 179, 182, 232, 236, 416, 420, 815, 826, 829, 831, 839], "dpot_readbychannel": [149, 557, 815, 827], "potentiomet": [149, 150, 151, 557, 558, 559, 827], "resist": [149, 150, 151, 557, 558, 559, 827], "dpot_open_async": [149, 150, 151, 815, 827], "resistance_ratio": [149, 150, 151, 557, 558, 559, 827], "dpot_readbychannel_async": [149, 815, 827], "dpot_close_async": [149, 150, 151, 815, 827], "dpot_writeallchannel": [150, 558, 815, 827], "dpot_writeallchannel_async": [150, 815, 827], "dpot_writebychannel": [151, 559, 815, 827], "specef": [151, 559, 821, 822, 825, 827, 829, 830, 831, 832, 833, 834, 835, 836], "dpot_writebychannel_async": [151, 815, 827], "temperature_tc": [164, 165, 166, 361, 362, 363, 568, 569, 570, 733, 734, 735], "tc_read_channel_data": [164, 361, 568, 733], "thermocoupl": [164, 165, 361, 362, 568, 569, 733, 734, 809, 828, 835, 836, 841, 846], "show": [164, 165, 166, 211, 213, 214, 215, 223, 224, 245, 247, 255, 256, 257, 258, 267, 269, 270, 271, 279, 280, 289, 291, 292, 293, 301, 302, 312, 328, 330, 331, 332, 336, 337, 338, 343, 344, 353, 355, 356, 357, 361, 362, 363, 368, 369, 390, 568, 569, 570, 607, 609, 610, 611, 615, 616, 637, 639, 643, 644, 645, 646, 655, 657, 658, 659, 663, 664, 673, 675, 676, 677, 681, 682, 692, 704, 706, 707, 708, 712, 713, 714, 715, 716, 725, 727, 728, 729, 733, 734, 735, 736, 737, 754, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "thermal": [164, 165, 166, 336, 337, 338, 361, 362, 363, 568, 569, 570, 712, 713, 714, 733, 734, 735, 828, 835, 836, 844], "ch": [164, 165, 361, 362, 568, 569, 733, 734], "over_sampling_mod": [164, 165, 361, 362, 568, 569, 733, 734], "16": [164, 165, 213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 361, 362, 568, 569, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 733, 734, 804, 805, 819, 826, 828, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 845], "thermo_typ": [164, 165, 361, 362, 568, 569, 733, 734], "b": [164, 165, 361, 362, 568, 569, 733, 734, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845], "type": [164, 165, 361, 362, 568, 569, 733, 734, 808, 809, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 841, 844], "e": [164, 165, 361, 362, 568, 569, 733, 734, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845], "j": [164, 165, 361, 362, 568, 569, 733, 734, 801, 828, 836, 841, 845], "k": [164, 165, 361, 362, 390, 568, 569, 733, 734, 754, 801, 828, 836, 841, 845], "r": [164, 165, 361, 362, 568, 569, 733, 734, 828, 836, 841, 845], "6": [164, 165, 179, 183, 184, 185, 186, 187, 188, 361, 362, 386, 388, 390, 568, 569, 579, 583, 584, 585, 586, 587, 588, 733, 734, 752, 754, 801, 803, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 845], "thermo": [164, 165, 166, 361, 362, 363, 376, 399, 423, 439, 568, 569, 570, 733, 734, 735, 744, 763, 783, 795, 809], "thermal_open_async": [164, 165, 166, 336, 337, 338, 361, 362, 363, 815, 828, 835, 836], "over": [164, 165, 361, 362, 568, 569, 733, 734, 809, 828, 836], "thermal_setoversampling_async": [164, 165, 361, 362, 815, 828, 836], "thermal_settype_async": [164, 165, 361, 362, 808, 815, 828, 835, 836], "500": [164, 165, 257, 258, 361, 362, 568, 569, 645, 646, 733, 734, 832], "m": [164, 165, 336, 337, 361, 362, 568, 569, 712, 713, 733, 734, 801, 830, 831, 832, 833, 834, 835, 836], "oversampl": [164, 165, 361, 362, 568, 569, 733, 734, 809, 828, 836], "thermal_readsensor_async": [164, 165, 336, 337, 361, 362, 815, 828, 835, 836], "sensor": [164, 165, 211, 245, 267, 289, 328, 336, 337, 353, 361, 362, 390, 568, 569, 607, 637, 655, 673, 704, 712, 713, 725, 733, 734, 754, 808, 809, 828, 835, 836, 841], "deg": [164, 165, 336, 337, 361, 362, 390, 568, 569, 712, 713, 733, 734, 754], "thermal_close_async": [164, 165, 166, 336, 337, 338, 361, 362, 363, 815, 828, 835, 836], "tc_read_channel_data_with_logg": [165, 362, 569, 734], "them": [165, 337, 362, 569, 713, 734, 819, 820, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "logger_writevalu": [165, 362, 569, 734, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "tc_read_channel_statu": [166, 363, 570, 735], "thermal_getstatus_async": [166, 338, 363, 815, 828, 835, 836], "If": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 390, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 754, 818, 819, 820, 823, 824, 825, 826, 829, 830, 831, 832, 837, 838, 839, 840, 843], "invok": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "function": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 390, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 754, 815, 841, 844], "sys_setaiomode_async": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 573, 579, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ai_enablecs_async": [171, 172, 173, 174, 175, 176, 177, 178, 179, 573, 579, 815, 819, 829, 830, 831, 837, 838, 840], "subsequ": [171, 172, 173, 174, 175, 176, 177, 178, 179, 571, 572, 573, 574, 575, 576, 577, 578, 579], "displai": [171, 172, 173, 174, 175, 176, 177, 178, 179, 231, 232, 390, 415, 416, 571, 572, 573, 574, 575, 576, 577, 578, 579, 623, 624, 754, 775, 776], "follow": [171, 172, 173, 174, 175, 176, 177, 178, 179, 231, 232, 415, 416, 571, 572, 573, 574, 575, 576, 577, 578, 579, 623, 624, 775, 776], "cs0": [171, 172, 173, 174, 175, 176, 177, 178, 179, 571, 572, 573, 574, 575, 576, 577, 578, 579], "cs2": [171, 172, 173, 174, 175, 176, 177, 178, 179, 571, 572, 573, 574, 575, 576, 577, 578, 579], "sample0": [171, 172, 173, 174, 175, 176, 177, 178, 179, 571, 572, 573, 574, 575, 576, 577, 578, 579], "sample1": [171, 172, 173, 174, 175, 176, 177, 178, 179, 571, 572, 573, 574, 575, 576, 577, 578, 579], "samplen": [171, 172, 173, 174, 175, 176, 177, 178, 179, 571, 572, 573, 574, 575, 576, 577, 578, 579], "slot": [171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 571, 572, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "aio": [171, 172, 173, 174, 175, 176, 179, 181, 182, 571, 572, 573, 574, 575, 576, 579, 581, 582, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 846], "modul": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 817, 818, 819, 820, 823, 824, 825, 826, 827, 829, 830, 831, 832, 837, 838, 839, 840, 841, 843, 846], "slot_mod": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "sys_getmode_async": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ai_continuous_multi_slot": [173, 573], "slot_list": [173, 573], "counter": [173, 179, 573, 579, 812, 813, 818, 825, 829, 830, 831, 832, 833, 834, 835, 836, 841, 843, 844], "aio_all_channels_loopback": [177, 231, 415, 577, 623, 775], "across": [177, 231, 415, 577, 623, 775], "ao": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 812, 813, 826, 829, 831, 839, 841, 842, 844, 846], "ai": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "The": [177, 178, 183, 184, 185, 186, 187, 188, 211, 231, 232, 245, 267, 289, 328, 353, 415, 416, 577, 578, 583, 584, 585, 586, 587, 588, 607, 623, 624, 637, 655, 673, 704, 725, 775, 776, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844], "ar": [177, 178, 183, 184, 185, 186, 187, 188, 231, 232, 415, 416, 577, 578, 583, 584, 585, 586, 587, 588, 623, 624, 775, 776, 819, 820, 821, 822, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 846], "wire": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 829, 835, 841], "initi": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 818, 829], "correspond": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "onc": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776, 812, 813], "again": [177, 178, 215, 231, 232, 247, 271, 293, 312, 332, 357, 390, 415, 416, 577, 578, 611, 623, 624, 639, 659, 677, 692, 708, 729, 754, 775, 776], "aio_one_channel_loopback": [178, 232, 416, 578, 624, 776], "specif": [178, 232, 416, 578, 624, 776, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842], "ao_output_while_ai_stream": [179, 579], "Not": [179, 579], "alter": [179, 579], "Its": [179, 579, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "must": [179, 579], "less": [179, 258, 579, 646], "than": [179, 258, 579, 646, 819, 820, 829, 830, 831, 837, 838, 839, 840], "equal": [179, 579, 819, 820, 829, 830, 831, 837, 838, 839, 840], "random": [179, 211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 579, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727], "ao_list": [179, 579], "select": [179, 579, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 818, 819, 829, 830, 831, 837, 838, 839, 840, 842], "list": [179, 224, 256, 280, 302, 344, 369, 579, 616, 644, 664, 682, 716, 737, 801, 804, 805, 806, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ao_valu": [179, 579], "choic": [179, 579], "ha": [180, 390, 489, 502, 580, 593, 617, 738, 754, 755, 769, 789, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843], "yet": [180, 580], "sys_setdiomode_async": [183, 184, 185, 186, 187, 188, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "assign": [183, 184, 185, 186, 187, 188, 583, 584, 585, 586, 587, 588, 846], "dio_loadstartup_async": [183, 184, 185, 186, 187, 188, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "direct": [183, 184, 185, 186, 187, 188, 210, 244, 266, 288, 310, 327, 352, 583, 584, 585, 586, 587, 588, 606, 636, 654, 672, 690, 703, 724, 817, 818, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 841, 844], "state_list_async": 183, "default": [197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "ai_enablechannel_async": [197, 198, 200, 201, 202, 225, 226, 228, 229, 230, 231, 232, 815, 819, 829, 830, 831, 837, 838, 840], "counter_read": [203, 237, 259, 281, 303, 320, 345, 599, 629, 647, 665, 683, 696, 717], "edg": [203, 237, 259, 281, 303, 320, 345, 599, 629, 647, 665, 683, 696, 717, 818, 829, 830, 831, 832, 833, 834, 835, 836, 845], "fall": [203, 237, 259, 281, 303, 320, 345, 599, 629, 647, 665, 683, 696, 717, 818, 829, 830, 831, 832, 833, 834, 835, 836, 845], "rise": [203, 237, 259, 281, 303, 320, 345, 599, 629, 647, 665, 683, 696, 717, 818, 829, 830, 831, 832, 833, 834, 835, 836, 845], "window_s": [203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 830, 831, 832, 833, 834, 835, 836], "posit": [203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 812, 813, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845], "counter_open_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_setedge_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_setedg": [203, 237, 259, 281, 303, 320, 345, 599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "window": [203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 801, 830, 831, 832, 833, 834, 835, 836], "size": [203, 210, 237, 244, 259, 266, 281, 288, 303, 310, 320, 327, 345, 352, 390, 599, 606, 629, 636, 647, 654, 665, 672, 683, 690, 696, 703, 717, 724, 754, 830, 831, 832, 833, 834, 835, 836, 844], "counter_setfreqwindow_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_setfreqwindow": [203, 237, 259, 281, 303, 320, 345, 599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "counter_setposition_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_start_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_readposition_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_stop_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "counter_close_async": [203, 237, 259, 281, 303, 320, 345, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_read": [210, 244, 266, 288, 310, 327, 352, 606, 636, 654, 672, 690, 703, 724], "encoder_open_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_setdirection_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_setposition_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_setfreqwindow_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_start_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_readposition_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_stop_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_close_async": [210, 244, 266, 288, 310, 327, 352, 815, 830, 831, 832, 833, 834, 835, 836], "i2c_write_read": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "commun": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728, 832], "master": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728], "24c08c": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "slave": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728, 830, 831, 832, 833, 835, 836], "interfac": [211, 213, 214, 223, 224, 245, 255, 256, 257, 258, 267, 269, 270, 279, 280, 289, 291, 292, 301, 302, 328, 330, 331, 343, 344, 353, 355, 356, 368, 369, 607, 609, 610, 615, 616, 637, 643, 644, 645, 646, 655, 657, 658, 663, 664, 673, 675, 676, 681, 682, 704, 706, 707, 715, 716, 725, 727, 728, 736, 737, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 841], "some": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728], "byte": [211, 213, 214, 223, 224, 245, 255, 256, 257, 258, 267, 269, 270, 279, 280, 289, 291, 292, 301, 302, 328, 330, 331, 343, 344, 353, 355, 356, 368, 369, 607, 609, 610, 615, 616, 637, 643, 644, 645, 646, 655, 657, 658, 663, 664, 673, 675, 676, 681, 682, 704, 706, 707, 715, 716, 725, 727, 728, 736, 737, 804, 805, 810, 830, 831, 832, 833, 835, 836, 838, 839], "address": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728, 804, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 844], "eeprom": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 844], "have": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 390, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 754, 819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "howev": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727], "expeci": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "wore": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "device_address": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "0x50": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "01010000": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "numpi": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 390, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 754, 801], "np": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 390, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 754, 801], "word_address": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725], "randint": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727], "256": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 830, 832, 833, 835, 836, 845], "take": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728, 846], "i2c_open_async": [211, 245, 267, 289, 328, 353, 815, 830, 831, 832, 833, 835, 836], "clock": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725, 804, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "standard": [211, 245, 258, 267, 289, 328, 353, 607, 637, 646, 655, 673, 704, 725, 830, 831, 832, 833, 835, 836, 845], "i2c_setclockrate_async": [211, 245, 267, 289, 328, 353, 815, 830, 831, 832, 833, 835, 836], "via": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 607, 609, 610, 637, 655, 657, 658, 673, 675, 676, 704, 706, 707, 725, 727, 728, 830, 831, 832, 833, 835, 836], "wren": [211, 213, 214, 245, 267, 269, 270, 289, 291, 292, 328, 330, 331, 353, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805], "i2c_write_async": [211, 245, 267, 289, 328, 353, 815, 830, 831, 832, 833, 835, 836], "0x": [211, 245, 267, 289, 328, 353, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727], "02x": [211, 213, 245, 267, 269, 289, 291, 328, 330, 353, 355, 607, 609, 637, 655, 657, 673, 675, 704, 706, 725, 727, 805], "i2c_read_async": [211, 245, 267, 289, 328, 353, 815, 830, 831, 832, 833, 835, 836], "i2c_close_async": [211, 245, 267, 289, 328, 353, 815, 830, 831, 832, 833, 835, 836], "spi_read_and_writ": [213, 269, 291, 330, 355, 609, 657, 675, 706, 727], "25lc640": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728], "datas": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728], "bit": [213, 214, 223, 224, 255, 256, 269, 270, 279, 280, 291, 292, 301, 302, 330, 331, 343, 344, 355, 356, 368, 369, 609, 610, 615, 616, 643, 644, 657, 658, 663, 664, 675, 676, 681, 682, 706, 707, 715, 716, 727, 728, 736, 737, 810, 819, 820, 823, 824, 826, 828, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 844], "first_bit": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728], "msb": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 830, 832, 833, 835, 836, 845], "lsb": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 845], "prescal": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 830, 832, 833, 835, 836, 844, 845], "64": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 830, 831, 832, 833, 834, 835, 836, 845], "cpol": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 830, 832, 833, 835, 836, 845], "cpha": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 830, 832, 833, 835, 836, 845], "do_index": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805], "elif": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 801, 803, 804, 805, 807, 810], "addr": [213, 269, 291, 330, 355, 609, 657, 675, 706, 727], "0x02": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805], "dummi": [213, 269, 291, 330, 355, 609, 657, 675, 706, 727], "0x01": [213, 269, 291, 330, 355, 609, 657, 675, 706, 727], "0x03": [213, 269, 291, 330, 355, 609, 657, 675, 706, 727], "0x06": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805], "pin0": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "spi_open_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "spi_setdatasize_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "spi_setfirstbit_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "spi_setprescaler_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "spi_setmode_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "spi_write_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "0x00": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728], "spi_readandwrite_async": [213, 269, 291, 330, 355, 815, 830, 832, 833, 835, 836], "format": [213, 224, 256, 269, 280, 291, 302, 330, 344, 355, 369, 390, 609, 616, 644, 657, 664, 675, 682, 706, 716, 727, 737, 754, 801, 805, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "spi_close_async": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 815, 830, 832, 833, 835, 836], "spi_writ": [214, 270, 292, 331, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 815, 830, 832, 833, 835, 836], "0x55": [214, 270, 292, 331, 356, 610, 658, 676, 707, 728], "0x0002": [214, 270, 292, 331, 356, 610, 658, 676, 707, 728], "system_usb": [215, 216, 217, 218, 247, 248, 249, 250, 271, 272, 273, 274, 293, 294, 295, 296, 312, 313, 314, 315, 332, 333, 334, 335, 357, 358, 359, 360, 611, 612, 613, 614, 639, 640, 641, 642, 659, 660, 661, 662, 677, 678, 679, 680, 692, 693, 694, 695, 708, 709, 710, 711, 729, 730, 731, 732], "get_pin_mod": [215, 247, 271, 293, 312, 332, 357, 611, 639, 659, 677, 692, 708, 729], "idl": [215, 247, 271, 293, 312, 332, 357, 611, 639, 659, 677, 692, 708, 729, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pinmod": [215, 247, 271, 293, 312, 332, 357, 611, 639, 659, 677, 692, 708, 729, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pin_mod": [215, 247, 271, 293, 312, 332, 357, 611, 639, 659, 677, 692, 708, 729, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_getpinmodeinport_async": [215, 247, 271, 293, 312, 332, 357, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "uart_read": [223, 255, 279, 301, 343, 368, 615, 643, 663, 681, 715, 736, 810, 815, 830, 831, 832, 833, 835, 836], "anoth": [223, 224, 255, 256, 257, 258, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 645, 646, 663, 664, 681, 682, 715, 716, 736, 737, 844], "baudrat": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 830, 831, 832, 833, 835, 836], "9600": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737], "data_bit_mod": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737], "9": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 830, 831, 832, 833, 835, 836, 845], "parity_mod": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737], "none": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 390, 611, 615, 616, 639, 643, 644, 659, 663, 664, 677, 681, 682, 692, 708, 715, 716, 729, 736, 737, 754, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845], "even": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 830, 831, 832, 833, 835, 836, 845], "pariti": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 830, 831, 832, 833, 835, 836, 844], "odd": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 830, 831, 832, 833, 835, 836, 845], "stop_bit_mod": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737], "read_byt": [223, 255, 279, 301, 343, 368, 397, 421, 615, 643, 663, 681, 715, 736, 761, 781, 810], "uart_open_async": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 815, 830, 831, 832, 833, 835, 836], "uart_setbaudrate_async": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 815, 830, 831, 832, 833, 835, 836], "uart_setdatabit_async": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 815, 830, 831, 832, 833, 835, 836], "uart_setparity_async": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 815, 830, 831, 832, 833, 835, 836], "uart_setnumstopbit_async": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 815, 830, 831, 832, 833, 835, 836], "informaion": [223, 255, 279, 301, 343, 368, 615, 643, 663, 681, 715, 736], "uart_read_async": [223, 255, 279, 301, 343, 368, 815, 830, 831, 832, 833, 835, 836], "uart_close_async": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 815, 830, 831, 832, 833, 835, 836], "uart_writ": [224, 256, 280, 302, 344, 369, 616, 644, 664, 682, 716, 737, 810, 815, 830, 831, 832, 833, 835, 836], "12345": [224, 256, 280, 302, 344, 369, 616, 644, 664, 682, 716, 737, 762, 782], "uart_write_async": [224, 256, 280, 302, 344, 369, 815, 830, 831, 832, 833, 835, 836], "chungle": [224, 256, 280, 302, 344, 369, 616, 644, 664, 682, 716, 737], "peopl": [224, 256, 280, 302, 344, 369, 616, 644, 664, 682, 716, 737], "can_read": [257, 645, 815, 832], "125": [257, 258, 645, 646, 832, 845], "khz": [257, 258, 645, 646, 832, 845], "250": [257, 258, 645, 646, 832], "mhz": [257, 258, 645, 646, 832, 845], "can_open_async": [257, 258, 815, 832], "can_setspeed_async": [257, 258, 815, 832], "can_start_async": [257, 258, 815, 832], "frame": [257, 645, 830, 832, 833, 835, 836], "frame_list": [257, 645, 832], "can_read_async": [257, 815, 832], "01": [257, 609, 610, 645, 657, 658, 675, 676, 706, 707, 727, 728], "can_stop_async": [257, 258, 815, 832], "can_close_async": [257, 258, 815, 832], "can_writ": [258, 646, 815, 832], "can_length": [258, 646], "extend": [258, 646, 801, 832, 845], "can_typ": [258, 646], "remot": [258, 646, 832, 845], "id": [258, 646, 832], "can_write_async": [258, 815, 832], "33": [258, 646], "22": [258, 646], "11": [258, 646, 832, 837, 838, 839, 840, 841], "88": [258, 646], "77": [258, 646], "55": [258, 646], "66": [258, 646], "sec": [258, 646, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "temperature_rtd": [336, 337, 338, 712, 713, 714], "rtd_read_channel_data": [336, 712], "data0": [336, 337, 712, 713], "data1": [336, 337, 712, 713], "rtd_read_channel_data_with_logg": [337, 713], "logger_writelist": [337, 713, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "rtd_read_channel_statu": [338, 714], "38": [370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800], "system_wifi": [376, 377, 378, 379, 380, 381, 399, 400, 401, 402, 403, 404, 423, 424, 425, 426, 427, 428, 439, 440, 441, 442, 443, 444, 744, 745, 746, 747, 748, 749, 763, 764, 765, 766, 767, 768, 783, 784, 785, 786, 787, 788, 795, 796, 797, 798, 799, 800], "get_wifi_daq_statu": [376, 399, 423, 439, 744, 763, 783, 795], "basic": [376, 399, 423, 439, 744, 763, 783, 795], "rssi": [376, 399, 423, 439, 744, 763, 783, 795, 837, 838, 839, 840], "batteri": [376, 399, 423, 439, 744, 763, 783, 795, 837, 838, 839, 840], "power": [376, 399, 423, 439, 744, 763, 783, 795, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 841], "charg": [376, 399, 423, 439, 744, 763, 783, 795, 837, 838, 839, 840], "wifi_readrssi_async": [376, 399, 423, 439, 815, 837, 838, 839, 840], "wifi_readbattery_async": [376, 399, 423, 439, 815, 837, 838, 839, 840], "power_statu": [376, 399, 423, 439, 744, 763, 783, 795], "wifi_getpowergoodstatus_async": [376, 399, 423, 439, 815, 837, 838, 839, 840], "charge_statu": [376, 399, 423, 439, 744, 763, 783, 795], "wifi_getchargestatus_async": [376, 399, 423, 439, 815, 837, 838, 839, 840], "dbm": [376, 399, 423, 439, 744, 763, 783, 795, 837, 838, 839, 840], "mv": [376, 399, 423, 439, 744, 763, 783, 795, 837, 838, 839, 840], "set_led_statu": [380, 403, 427, 443, 748, 767, 787, 799], "wifi_resetled_async": [380, 403, 427, 443, 815, 837, 838, 839, 840], "green": [380, 403, 427, 443, 748, 767, 787, 799, 837, 838, 839, 840], "wifi_setgreenled_async": [380, 403, 427, 443, 815, 837, 838, 839, 840], "blue": [380, 403, 427, 443, 748, 767, 787, 799, 837, 838, 839, 840], "wifi_setblueled_async": [380, 403, 427, 443, 815, 837, 838, 839, 840], "red": [380, 403, 427, 443, 748, 767, 787, 799, 837, 838, 839, 840], "wifi_setredled_async": [380, 403, 427, 443, 815, 837, 838, 839, 840], "ahrs_getacceler": [386, 750, 815, 838], "three": [386, 387, 388, 389, 750, 751, 752, 753, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "orient": [386, 388, 389, 390, 752, 753, 754, 838], "angular": [386, 387, 388, 751, 752, 838], "333": [386, 387, 388, 389, 390, 750, 751, 752, 753, 754], "ahrs_open_async": [386, 387, 388, 389, 390, 815, 838], "ahrs_start_async": [386, 387, 388, 389, 390, 815, 838], "ahrs_list": [386, 387, 388, 389, 390, 752, 754], "ahrs_getacceleration_async": [386, 815, 838], "ahrs_stop_async": [386, 387, 388, 389, 390, 815, 838], "ahrs_close_async": [386, 387, 388, 389, 390, 815, 838], "ahrs_getangularveloc": [387, 751, 815, 838], "ahrs_getangularvelocity_async": [387, 815, 838], "ahrs_getestim": [388, 752, 754, 815, 838], "ahrs_getestimate_async": [388, 390, 815, 838], "ahrs_getorient": [389, 753, 815, 838], "ahrs_getorientation_async": [389, 815, 838], "ahrs_visu": [390, 754], "3d": [390, 754], "stl": [390, 754], "mesh": [390, 754], "mpl_toolkit": [390, 754], "mplot3d": [390, 754], "pil": [390, 754], "imag": [390, 754, 803], "matplotlib": [390, 754, 801], "pyplot": [390, 754], "plt": [390, 754], "gridspec": [390, 754], "mpimg": [390, 754], "font_manag": [390, 754], "rcparam": [390, 754], "transform": [390, 754], "affine2d": [390, 754], "data_path": [390, 754], "materi": [390, 754, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "viz_data": [390, 754], "img_path": [390, 754], "avion_": [390, 754], "font": [390, 754], "findsystemfont": [390, 754], "fontmanag": [390, 754], "addfont": [390, 754], "famili": [390, 754], "global": [390, 754], "mono": [390, 754], "bmh": [390, 754], "bmh_burgundi": [390, 754], "a70f34": [390, 754], "bmh_blue": [390, 754], "3d90be": [390, 754], "bmh_purpl": [390, 754], "7c6ca4": [390, 754], "img_wpc": [390, 754], "imread": [390, 754], "trademark": [390, 754, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "jpg": [390, 754, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "img_wpc_pil": [390, 754], "plane": [390, 754], "constant": [390, 754], "img_yaw": [390, 754], "yaw": [390, 754], "png": [390, 754, 801, 802, 803, 804, 805, 807, 808, 809, 810], "img_pitch": [390, 754], "pitch": [390, 754, 818, 829], "img_rol": [390, 754], "roll": [390, 754], "size_yaw": [390, 754], "arrai": [390, 754, 801], "shape": [390, 754], "center_yaw": [390, 754], "diag_yaw": [390, 754], "sqrt": [390, 754], "sum": [390, 754], "alpha_yaw": [390, 754], "size_pitch": [390, 754], "center_pitch": [390, 754], "diag_pitch": [390, 754], "alpha_pitch": [390, 754], "size_rol": [390, 754], "center_rol": [390, 754], "diag_rol": [390, 754], "alpha_rol": [390, 754], "dictionari": [390, 754, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "plane_dict": [390, 754], "dict": [390, 754], "img": [390, 754], "center": [390, 754, 801, 811, 818, 829], "diag": [390, 754], "alpha": [390, 754, 801], "model_dict": [390, 754], "cat": [390, 754], "label": [390, 754, 801], "view": [390, 754], "400": [390, 754], "rat": [390, 754], "default_model": [390, 754], "degree_to_radian": [390, 754], "pi": [390, 754], "180": [390, 754], "radian_to_degre": [390, 754], "wpc_initializefigur": [390, 754], "nb_row": [390, 754], "nb_col": [390, 754], "share_x": [390, 754], "share_i": [390, 754], "option": [390, 754], "fig": [390, 754], "figur": [390, 754], "figsiz": [390, 754], "clf": [390, 754], "g": [390, 754, 837, 838, 839, 840, 841], "width_ratio": [390, 754], "height_ratio": [390, 754], "d": [390, 754, 802, 803, 815, 817, 818, 819, 820, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 843, 846], "ax_main": [390, 754], "add_subplot": [390, 754], "set_titl": [390, 754], "plot": [390, 754, 801], "ax_plane_yaw": [390, 754], "ax_plane_pitch": [390, 754], "ax_plane_rol": [390, 754], "ax_value_yaw": [390, 754], "ax_value_pitch": [390, 754], "ax_value_rol": [390, 754], "pil_width": [390, 754], "width": [390, 754, 803, 818, 829], "pil_height": [390, 754], "height": [390, 754, 803], "new_pil_imag": [390, 754], "resiz": [390, 754], "figimag": [390, 754], "xo": [390, 754], "bbox": [390, 754], "xmin": [390, 754, 801], "yo": [390, 754], "ymin": [390, 754], "zorder": [390, 754], "ax_dict": [390, 754], "plane_yaw": [390, 754], "plane_pitch": [390, 754], "plane_rol": [390, 754], "value_yaw": [390, 754], "value_pitch": [390, 754], "value_rol": [390, 754], "grid": [390, 754, 801], "further": [390, 754], "ax_grid": [390, 754], "empti": [390, 754], "row": [390, 754, 806], "column": [390, 754, 806], "subplot": [390, 754], "ax_mat": [390, 754], "sharex": [390, 754], "sharei": [390, 754], "squeez": [390, 754], "would": [390, 754], "share": [390, 754], "same": [390, 754], "ensur": [390, 754], "2d": [390, 754], "ax_arr": [390, 754], "flatten": [390, 754], "ax": [390, 754, 801, 818, 829, 841], "add": [390, 754, 806], "wpc_initialize_plan": [390, 754], "angle_typ": [390, 754], "set_axis_off": [390, 754], "d_plane": [390, 754], "img_plan": [390, 754], "im": [390, 754], "imshow": [390, 754], "size_plan": [390, 754], "center_plan": [390, 754], "diag_plan": [390, 754], "alpha_plan": [390, 754], "tt": [390, 754], "toler": [390, 754, 830, 831, 832, 833, 835, 836, 841], "threshold": [390, 754], "percent": [390, 754, 818, 829], "cut": [390, 754], "circl": [390, 754], "set_xlim": [390, 754, 801], "set_ylim": [390, 754, 801], "cc": [390, 754], "fill": [390, 754], "color": [390, 754, 801, 806], "black": [390, 754], "linewidth": [390, 754, 801], "linestyl": [390, 754, 801], "dashdot": [390, 754], "add_artist": [390, 754], "wpc_showfigur": [390, 754], "w": [390, 754], "h": [390, 754], "get_size_inch": [390, 754], "set_size_inch": [390, 754], "ion": [390, 754], "turn": [390, 754, 832, 837, 838, 839, 840], "interact": [390, 754], "wpc_getrotmat": [390, 754], "use_deg": [390, 754], "rot_mat_x": [390, 754], "co": [390, 754], "sin": [390, 754], "rot_mat_i": [390, 754], "rot_mat_z": [390, 754], "rot_mat": [390, 754], "dot": [390, 754], "back": [390, 754], "rxryrz": [390, 754], "wpc_showempti": [390, 754], "tag": [390, 754], "im_yaw": [390, 754], "im_pitch": [390, 754], "im_rol": [390, 754], "im_dict": [390, 754], "from_fil": [390, 754], "data_orig": [390, 754], "vector": [390, 754, 817, 818, 829], "poli": [390, 754], "art3d": [390, 754], "poly3dcollect": [390, 754], "edgecolor": [390, 754], "lw": [390, 754], "lightsteelblu": [390, 754], "add_collection3d": [390, 754], "scale": [390, 754], "view_init": [390, 754], "elev": [390, 754], "azim": [390, 754], "auto_scale_xyz": [390, 754], "fusion": [390, 754], "weight": [390, 754], "bold": [390, 754], "subplots_adjust": [390, 754], "left": [390, 754, 801], "95": [390, 754], "bottom": [390, 754], "top": [390, 754], "canva": [390, 754, 801], "manag": [390, 754], "set_window_titl": [390, 754], "wpc_draw3dmodel": [390, 754], "rotat": [390, 754], "set_vert": [390, 754], "wpc_plot_plan": [390, 754], "remov": [390, 754, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "calcul": [390, 754, 803, 818, 829], "angl": [390, 754], "radian": [390, 754], "deg2rad": [390, 754], "convert": [390, 754, 803, 804, 805], "en": [390, 754], "rotation_matrix": [390, 754], "rotate_deg_around": [390, 754], "rad2deg": [390, 754], "set_transform": [390, 754], "transdata": [390, 754], "wpc_text_button": [390, 754], "clear": [390, 754, 801, 806, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "add_patch": [390, 754], "rectangl": [390, 754], "facecolor": [390, 754, 801], "ebebeb": [390, 754], "transax": [390, 754], "2f": [390, 754, 801], "text": [390, 754, 801, 802, 803, 804, 805, 807, 808, 809, 810], "fontsiz": [390, 754, 801], "32": [390, 754, 830, 832, 833, 835, 836, 845], "va": [390, 754], "fignum_exist": [390, 754], "tight_layout": [390, 754], "paus": [390, 754], "sd_write": [397, 398, 421, 422, 761, 762, 781, 782], "messag": [397, 398, 421, 422, 761, 762, 781, 782, 801, 803, 807, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "card": [397, 398, 421, 422, 761, 762, 781, 782, 838, 839], "filenam": [397, 398, 421, 422, 761, 762, 781, 782, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "txt": [397, 398, 421, 422, 761, 762, 781, 782], "sdcard": [397, 398, 421, 422, 761, 762, 781, 782], "sd_openfile_async": [397, 398, 421, 422, 815, 838, 839], "storag": [397, 398, 421, 422, 761, 762, 781, 782, 838, 839], "sd_getstorage_async": [397, 398, 421, 422, 815, 838, 839], "read_data": [397, 421, 761, 781], "sd_readfile_async": [397, 421, 815, 838, 839], "sd_closefile_async": [397, 398, 421, 422, 815, 838, 839], "write_data": [398, 422, 762, 782, 804, 805, 810, 830, 831, 832, 833, 835, 836, 838, 839], "sd_writefile_async": [398, 422, 815, 838, 839], "bcst_enumeratenetworkdevic": [449, 806, 815, 816], "sys_getdriverinfo": [450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 807, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "motion_rstencoderposi": [450, 451, 452, 453, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 475, 476, 477, 480, 483, 484, 815, 817, 818, 829], "motion_getlimitstatu": [450, 451, 475, 477, 815, 817, 818, 829], "motion_start": [452, 453], "net_getipaddrandsubmask": [458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "net_getmacaddr": [458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getserialnumb": [459, 486, 499, 510, 521, 531, 536, 541, 547, 554, 561, 565, 590, 612, 640, 660, 678, 693, 709, 730, 746, 765, 785, 797, 807, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_reboot": [460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setrtc": [461, 488, 495, 496, 497, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_getrtc": [461, 488, 495, 496, 497, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800, 807, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "motion_opencfgfil": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 815, 817, 818, 829], "opencfgfil": [462, 464, 468, 471, 474, 475, 476, 477, 480, 483, 484], "motion_loadcfgfil": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 483, 484, 815, 817, 818, 829], "loadcfgfil": [462, 464, 468, 471, 474, 475, 476, 477, 480, 483, 484], "motion_cfgaxi": [462, 464, 468, 471, 474, 475, 476, 477, 480, 481, 483, 484, 815, 818, 829], "motion_cfghom": [462, 475, 477, 480, 815, 818, 829], "motion_cfgaxismov": [462, 463, 464, 465, 466, 467, 468, 469, 471, 474, 480, 481, 483, 484, 815, 818, 829], "motion_startsingleaxismov": [462, 463, 464, 465, 466, 467, 468, 469, 471, 480, 483, 484, 815, 818, 829], "motion_getmovestatu": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 815, 818, 829], "motion_getlogicalposi": [462, 478, 480, 815, 818, 829], "motion_getencoderposi": [462, 480, 815, 818, 829], "motion_stop": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 483, 484, 815, 818, 829], "motion_cfgjerkandaccelmod": [463, 469, 815, 818, 829], "motion_cfgalarm": [464, 815, 818, 829], "motion_cfgbreakpoint": [465, 815, 818, 829], "motion_enablebreakpoint": [465, 815, 818, 829], "motion_cfgcaptur": [466, 815, 818, 829], "motion_enablecaptur": [466, 815, 818, 829], "motion_readcapturepoint": [466, 815, 818, 829], "motion_cfginposi": [468, 815, 818, 829], "motion_cfgcircularinterpo": [469, 815, 818, 829], "motion_startcircularinterpo": [469, 815, 818, 829], "motion_cfg2axislinearinterpo": [470, 815, 818, 829], "motion_startlinearinterpo": [470, 473, 815, 818, 829], "motion_3axishronous_mov": 471, "motion_cfghelicalinterpo": [472, 815, 818, 829], "motion_starthelicalinterpo": [472, 815, 818, 829], "motion_cfg3axislinearinterpo": [473, 815, 818, 829], "cfglimit": 474, "motion_startmultiaxismov": [474, 815, 818, 829], "motion_cfgfindref": [475, 476, 477, 815, 818, 829], "motion_findref": [475, 476, 477, 815, 818, 829], "motion_gethomestatu": [475, 477, 815, 818, 829], "motion_checkref": [475, 476, 477, 815, 818, 829], "motion_cfgencod": [476, 483, 484, 815, 817, 818, 829], "motion_setlogicalposi": [478, 815, 818, 829], "motion_overrideaxisposi": [480, 815, 818, 829], "motion_savecfgfil": [481, 815, 817, 818, 829], "motion_overrideaxisveloc": [483, 484, 815, 818, 829], "motion_overrideaxisaccel": [484, 815, 818, 829], "ai_open": [489, 490, 492, 493, 494, 495, 496, 497, 502, 503, 505, 506, 507, 508, 534, 539, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 623, 624, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 775, 776, 789, 790, 792, 793, 794, 801, 815, 819, 820, 823, 824, 829, 830, 831, 837, 838, 839, 840], "ai_setmod": [489, 490, 492, 493, 494, 495, 496, 497, 502, 503, 505, 506, 507, 571, 572, 573, 574, 575, 576, 579, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 789, 790, 792, 793, 794, 801, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_setsamplingr": [489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_setnumsampl": [489, 495, 502, 571, 593, 617, 738, 755, 769, 789, 801, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_start": [489, 490, 492, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_readstream": [489, 490, 492, 495, 496, 502, 503, 505, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "length": [489, 502, 593, 617, 738, 755, 769, 789, 806, 844], "error": [489, 502, 593, 617, 738, 755, 769, 789, 801, 802, 803, 804, 805, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "wrong": [489, 502, 593, 617, 738, 755, 769, 789], "ai_stop": [489, 490, 492, 496, 502, 503, 505, 571, 572, 573, 574, 579, 593, 594, 596, 617, 618, 620, 738, 739, 741, 755, 756, 758, 769, 770, 772, 789, 790, 792, 801, 815, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_clos": [489, 490, 492, 493, 494, 495, 496, 497, 502, 503, 505, 506, 507, 508, 534, 539, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 623, 624, 738, 739, 741, 742, 743, 755, 756, 758, 759, 760, 769, 770, 772, 773, 774, 775, 776, 789, 790, 792, 793, 794, 801, 815, 819, 820, 823, 824, 829, 830, 831, 837, 838, 839, 840], "ai_readondemand": [493, 494, 497, 506, 507, 508, 534, 539, 571, 572, 574, 575, 576, 577, 578, 597, 598, 621, 622, 623, 624, 742, 743, 759, 760, 773, 774, 775, 776, 793, 794, 801, 815, 819, 820, 823, 824, 829, 830, 831, 837, 838, 839, 840], "sys_startrtcalarm": [495, 496, 497, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "do_openpin": [513, 515, 517, 524, 526, 528, 600, 602, 604, 609, 610, 630, 632, 634, 648, 650, 652, 657, 658, 666, 668, 670, 675, 676, 684, 686, 688, 697, 699, 701, 706, 707, 718, 720, 722, 727, 728, 805, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_writepin": [513, 517, 524, 528, 583, 587, 600, 604, 609, 610, 630, 634, 648, 652, 657, 658, 666, 670, 675, 676, 684, 688, 697, 701, 706, 707, 718, 722, 727, 728, 805, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_openpin": [513, 524, 600, 630, 648, 666, 684, 697, 718, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_readpin": [513, 524, 583, 600, 630, 648, 666, 684, 697, 718, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_closepin": [513, 515, 517, 524, 526, 528, 600, 602, 604, 609, 610, 630, 632, 634, 648, 650, 652, 657, 658, 666, 668, 670, 675, 676, 684, 686, 688, 697, 699, 701, 706, 707, 718, 720, 722, 727, 728, 805, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_closepin": [513, 524, 600, 630, 648, 666, 684, 697, 718, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_openport": [514, 516, 518, 525, 527, 529, 601, 603, 605, 631, 633, 635, 649, 651, 653, 667, 669, 671, 685, 687, 689, 698, 700, 702, 719, 721, 723, 803, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_openport": [514, 525, 601, 631, 649, 667, 685, 698, 719, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_writeport": [514, 518, 525, 529, 545, 584, 588, 601, 605, 631, 635, 649, 653, 667, 671, 685, 689, 698, 702, 719, 723, 803, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_readport": [514, 525, 584, 601, 631, 649, 667, 685, 698, 719, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_closeport": [514, 516, 518, 525, 527, 529, 601, 603, 605, 631, 633, 635, 649, 651, 653, 667, 669, 671, 685, 687, 689, 698, 700, 702, 719, 721, 723, 803, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "di_closeport": [514, 525, 601, 631, 649, 667, 685, 698, 719, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_togglepin": [515, 526, 585, 602, 632, 650, 668, 686, 699, 720, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_toggleport": [516, 527, 586, 603, 633, 651, 669, 687, 700, 721, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "pwm_open": [519, 608, 638, 656, 674, 691, 705, 726, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_setfrequ": [519, 608, 638, 656, 674, 691, 705, 726, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_setdutycycl": [519, 608, 638, 656, 674, 691, 705, 726, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_start": [519, 608, 638, 656, 674, 691, 705, 726, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_stop": [519, 608, 638, 656, 674, 691, 705, 726, 815, 821, 830, 831, 832, 833, 834, 835, 836], "pwm_close": [519, 608, 638, 656, 674, 691, 705, 726, 815, 821, 830, 831, 832, 833, 834, 835, 836], "relay_open": [544, 545, 815, 825], "relay_read": [544, 815, 825], "relay_clos": [544, 545, 815, 825], "ao_open": [550, 551, 552, 577, 578, 579, 581, 582, 623, 624, 626, 627, 628, 775, 776, 778, 779, 780, 802, 815, 826, 829, 831, 839], "ao_setmod": [550, 626, 778, 815, 826, 829, 831, 839], "ao_setsamplingr": [550, 626, 778, 815, 826, 829, 831, 839], "ao_setenablechannel": [550, 626, 778, 815, 826, 829, 831, 839], "ao_setform": [550, 626, 778, 815, 826, 829, 831, 839], "ao_setformparam": [550, 626, 778, 815, 826, 829, 831, 839], "ao_openstream": [550, 626, 778, 815, 826, 829, 831, 839], "ao_startstream": [550, 626, 778, 815, 826, 829, 831, 839], "ao_closestream": [550, 626, 778, 815, 826, 829, 831, 839], "ao_clos": [550, 551, 552, 577, 578, 579, 581, 582, 623, 624, 626, 627, 628, 775, 776, 778, 779, 780, 802, 815, 826, 829, 831, 839], "ao_writeallchannel": [551, 577, 581, 623, 627, 775, 779, 802, 815, 826, 829, 831, 839], "ao_writeonechannel": [552, 578, 579, 582, 624, 628, 776, 780, 815, 826, 829, 831, 839], "dpot_open": [557, 558, 559, 815, 827], "dpot_clos": [557, 558, 559, 815, 827], "thermal_open": [568, 569, 570, 712, 713, 714, 733, 734, 735, 808, 809, 815, 828, 835, 836], "thermal_setoversampl": [568, 569, 733, 734, 809, 815, 828, 836], "thermal_settyp": [568, 569, 733, 734, 808, 809, 815, 828, 835, 836], "thermal_readsensor": [568, 569, 712, 713, 733, 734, 808, 809, 815, 828, 835, 836], "thermal_clos": [568, 569, 570, 712, 713, 714, 733, 734, 735, 808, 809, 815, 828, 835, 836], "thermal_getstatu": [570, 714, 735, 815, 828, 835, 836], "sys_setaiomod": [571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ai_enablec": [571, 572, 573, 574, 575, 576, 577, 578, 579, 815, 819, 829, 830, 831, 837, 838, 839, 840], "sys_getmod": [571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setdiomod": [583, 584, 585, 586, 587, 588, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "dio_loadstartup": [583, 584, 585, 586, 587, 588, 815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "ai_enablechannel": [593, 594, 596, 597, 598, 617, 618, 620, 621, 622, 623, 624, 815, 819, 829, 830, 831, 837, 838, 839, 840], "counter_open": [599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "counter_setposit": [599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "counter_start": [599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "counter_readposit": [599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "counter_stop": [599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "counter_clos": [599, 629, 647, 665, 683, 696, 717, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_open": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_setdirect": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_setposit": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_setfreqwindow": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_start": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_readposit": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_stop": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "encoder_clos": [606, 636, 654, 672, 690, 703, 724, 815, 830, 831, 832, 833, 834, 835, 836], "i2c_open": [607, 637, 655, 673, 704, 725, 804, 815, 830, 831, 832, 833, 835, 836], "i2c_setclockr": [607, 637, 655, 673, 704, 725, 804, 815, 830, 831, 832, 833, 835, 836], "i2c_writ": [607, 637, 655, 673, 704, 725, 804, 815, 830, 831, 832, 833, 835, 836], "pointer": [607, 637, 655, 673, 704, 725], "i2c_read": [607, 637, 655, 673, 704, 725, 804, 815, 830, 831, 832, 833, 835, 836], "i2c_clos": [607, 637, 655, 673, 704, 725, 804, 815, 830, 831, 832, 833, 835, 836], "spi_open": [609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 815, 830, 832, 833, 835, 836], "spi_setdatas": [609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 815, 830, 832, 833, 835, 836], "spi_setfirstbit": [609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 815, 830, 832, 833, 835, 836], "spi_setprescal": [609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 815, 830, 832, 833, 835, 836], "spi_setmod": [609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 815, 830, 832, 833, 835, 836], "spi_readandwrit": [609, 657, 675, 706, 727, 805, 815, 830, 832, 833, 835, 836], "spi_clos": [609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 815, 830, 832, 833, 835, 836], "sys_getpinmodeinport": [611, 639, 659, 677, 692, 708, 729, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "uart_open": [615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 815, 830, 831, 832, 833, 835, 836], "uart_setbaudr": [615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 815, 830, 831, 832, 833, 835, 836], "uart_setdatabit": [615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 815, 830, 831, 832, 833, 835, 836], "uart_setpar": [615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 815, 830, 831, 832, 833, 835, 836], "uart_setnumstopbit": [615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 815, 830, 831, 832, 833, 835, 836], "uart_clos": [615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 815, 830, 831, 832, 833, 835, 836], "can_open": [645, 646, 815, 832], "can_setspe": [645, 646, 815, 832], "can_start": [645, 646, 815, 832], "can_stop": [645, 646, 815, 832], "can_clos": [645, 646, 815, 832], "wifi_readrssi": [744, 763, 783, 795, 815, 837, 838, 839, 840], "wifi_readbatteri": [744, 763, 783, 795, 815, 837, 838, 839, 840], "wifi_getpowergoodstatu": [744, 763, 783, 795, 815, 837, 838, 839, 840], "wifi_getchargestatu": [744, 763, 783, 795, 815, 837, 838, 839, 840], "wifi_resetl": [748, 767, 787, 799, 815, 837, 838, 839, 840], "wifi_setgreenl": [748, 767, 787, 799, 815, 837, 838, 839, 840], "wifi_setbluel": [748, 767, 787, 799, 815, 837, 838, 839, 840], "wifi_setblule": [748, 767, 787, 799], "wifi_setredl": [748, 767, 787, 799, 815, 837, 838, 839, 840], "ahrs_open": [750, 751, 752, 753, 754, 815, 838], "ahrs_start": [750, 751, 752, 753, 754, 815, 838], "ahrs_stop": [750, 751, 752, 753, 754, 815, 838], "ahrs_clos": [750, 751, 752, 753, 754, 815, 838], "sd_openfil": [761, 762, 781, 782, 815, 838, 839], "sd_getstorag": [761, 762, 781, 782, 815, 838, 839], "sd_readfil": [761, 781, 815, 838, 839], "sd_closefil": [761, 762, 781, 782, 815, 838, 839], "sd_writefil": [762, 782, 815, 838, 839], "example_analog_input": 801, "daq": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 819, 820, 829, 842, 843, 844, 846], "o": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 815, 833, 834, 841], "sy": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "third": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "parti": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "anim": 801, "pyqt5": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "qtwidget": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "qtgui": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "qwidget": 801, "qmessagebox": [801, 803, 807], "ui_design": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "ui_example_gui_ai": 801, "ui_mainwindow": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "class": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "matplotlibwidget": 801, "__init__": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "self": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "parent": 801, "super": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "mainwindow": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "qmainwindow": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "ui": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "setupui": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "path": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 844], "file_path": [801, 802, 803, 804, 805, 807, 808, 809, 810], "dirnam": [801, 802, 803, 804, 805, 807, 808, 809, 810], "__file__": [801, 802, 803, 804, 805, 807, 808, 809, 810], "trademark_path": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "blue_led_path": [801, 802, 803, 804, 805, 807, 808, 809, 810], "led_blu": [801, 802, 803, 804, 805, 807, 808, 809, 810], "red_led_path": [801, 802, 803, 804, 805, 807, 808, 809, 810], "led_r": [801, 802, 803, 804, 805, 807, 808, 809, 810], "green_led_path": [801, 802, 803, 804, 805, 807, 808, 809, 810], "led_green": [801, 802, 803, 804, 805, 807, 808, 809, 810], "gray_led_path": [801, 802, 803, 804, 805, 807, 808, 809, 810], "led_grai": [801, 802, 803, 804, 805, 807, 808, 809, 810], "lb_trademark": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "setpixmap": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "qpixmap": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "lb_led": [801, 802, 803, 804, 805, 807, 808, 809, 810], "flag": [801, 802, 803, 804, 805, 807, 808, 809, 810], "connect_flag": [801, 802, 803, 804, 805, 807, 808, 809, 810], "declar": [801, 802, 803, 804, 805, 807, 808, 809, 810], "plot_y_min": 801, "plot_y_max": 801, "channel_list": [801, 826, 829, 831, 839], "append": [801, 802, 804, 805, 806], "plot_total_tim": 801, "callback": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "event": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "btn_connect": [801, 802, 803, 804, 805, 807, 808, 809, 810], "click": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "connectev": [801, 802, 803, 804, 805, 807, 808, 809, 810], "btn_disconnect": [801, 802, 803, 804, 805, 807, 808, 809, 810], "disconnectev": [801, 802, 803, 804, 805, 807, 808, 809, 810], "btn_aistart": 801, "startaiev": 801, "btn_aistop": 801, "stopaiev": 801, "lineedit_samplingr": 801, "returnpress": 801, "setsamplingrateev": 801, "lineedit_numsampl": 801, "setnumofsampleev": 801, "combobox_aimod": 801, "currentindexchang": 801, "chooseaimodeev": 801, "lineedit_yscalemax": 801, "setyscalemaxev": 801, "lineedit_yscalemin": 801, "setyscaleminev": 801, "kill": 801, "ai_lock": 801, "lock": 801, "acquir": [801, 819, 820, 829, 830, 831, 837, 838, 839, 840], "ai_stream_thread": 801, "aistreamthread": 801, "plotiniti": 801, "plotanim": 801, "closeev": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "selecthandl": [801, 802, 803, 804, 805, 807, 808, 809, 810], "handle_idx": [801, 802, 803, 804, 805, 807, 808, 809, 810], "combobox_handl": [801, 802, 803, 804, 805, 807, 808, 809, 810], "currentindex": [801, 802, 803, 804, 805, 807, 808, 809, 810], "updateparam": [801, 802, 803, 804, 805, 807, 808, 809, 810], "gui": [801, 802, 803, 804, 805, 807, 808, 809, 810], "lineedit_ip": [801, 802, 803, 804, 805, 807, 808, 809, 810], "combobox_port": [801, 802, 803, 804, 805, 808, 809, 810], "ai_sampling_r": 801, "float": [801, 802, 818, 819, 820, 821, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ai_n_sampl": 801, "param": [801, 802, 803, 804, 805, 807, 808, 809, 810], "setdisplayplotnum": 801, "checkconnectionstatu": [801, 803, 807], "checkboxstatu": 801, "x": [801, 818, 829], "mplwidget": 801, "rearrag": 801, "accord": 801, "amount": [801, 819, 820, 821, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "funcanim": 801, "plotchart": 801, "plotgetaxisdata": 801, "interv": 801, "repeat": 801, "draw": 801, "checkbox": 801, "mainui": 801, "list_ch": 801, "cb_ch0": 801, "cb_ch1": 801, "cb_ch2": 801, "cb_ch3": 801, "cb_ch4": 801, "cb_ch5": 801, "cb_ch6": 801, "cb_ch7": 801, "ischeck": [801, 803], "xmax": 801, "x_max": 801, "x_min": 801, "max": [801, 818, 819, 820, 823, 824, 825, 826, 827, 830, 831, 833, 837, 838, 839, 840, 841], "x_list": 801, "xtick": 801, "dx": 801, "tick": 801, "arang": 801, "yield": [801, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "marker": 801, "markers": 801, "err_xlist": 801, "err_ylist": 801, "y": [801, 818, 829], "xtickslabel": 801, "set_xtick": 801, "new_tick": 801, "plotconvertxtick": 801, "set_xticklabel": 801, "set_xlabel": 801, "12": [801, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "set_ylabel": 801, "v": [801, 823, 824], "legend": 801, "loc": 801, "shadow": 801, "bbox_to_anchor": 801, "75": 801, "f0f0f0": 801, "bac3d1": 801, "num": 801, "yscalemax": 801, "yscalemin": 801, "server": [801, 803, 807], "app": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "qapplic": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "wpc_main_ui": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "exit": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "exec_": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810], "example_analog_output": 802, "analog": [802, 819, 820, 826, 830, 831, 837, 838, 839, 840, 841], "ui_example_gui_ao": 802, "devid": [802, 808, 809, 810], "fct_list": 802, "hrztslider_cb0": 802, "hrztslider_cb1": 802, "hrztslider_cb2": 802, "hrztslider_cb3": 802, "hrztslider_cb4": 802, "hrztslider_cb5": 802, "hrztslider_cb6": 802, "hrztslider_cb7": 802, "obj_hrztslid": 802, "getattr": [802, 803], "horizontalslid": 802, "setrang": 802, "setsinglestep": 802, "valuechang": 802, "btn_updat": 802, "writeaovalu": 802, "btn_setal": 802, "setlineeditvalueev": 802, "scaledvalu": 802, "lineedit0": 802, "settext": [802, 804, 805, 807, 808, 809, 810], "lineedit1": 802, "lineedit2": 802, "lineedit3": 802, "lineedit4": 802, "lineedit5": 802, "lineedit6": 802, "lineedit7": 802, "voltage_list": 802, "obj_lineedit": 802, "lineedit": 802, "lineedit_setal": 802, "example_digital_output": 803, "ui_example_gui_do": 803, "state_c": 803, "255": [803, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "switch_blue_path": 803, "switch_blu": 803, "switch_gray_path": 803, "switch_grai": 803, "backward": 803, "slash": 803, "replac": [803, 804, 805], "obj_chbox_st": 803, "checkbox_st": 803, "statechang": 803, "statedoev": 803, "setstylesheet": [803, 806], "qcheckbox": 803, "indic": [803, 818, 819, 820, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 842, 844], "60px": 803, "uncheck": 803, "url": 803, "mcu": 803, "example_i2c": 804, "ui_example_gui_i2c": 804, "btn_write": [804, 805, 810], "writeev": [804, 805, 810], "btn_read": [804, 805, 810], "readev": [804, 805, 810], "btn_set": [804, 805, 808, 809], "setclockev": 804, "clock_mod": 804, "combobox_clockr": 804, "hex": [804, 805], "write_addr": 804, "lineedit_writeaddr": 804, "lineedit_writ": [804, 805, 810], "converstrtointlist": [804, 805], "byte_read": 804, "lineedit_byteread": [804, 810], "read_addr": 804, "lineedit_readaddr": 804, "lineedit_read": [804, 805, 810], "str_": [804, 805, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "split": [804, 805, 806], "comma": [804, 805], "write_data_strlist": [804, 805], "write_data_int": [804, 805], "item": [804, 805], "example_spi": 805, "ui_example_gui_spi": 805, "setev": [805, 808, 809], "combobox_mod": 805, "combobox_prescal": 805, "example_find_all_devic": 806, "find": [806, 812, 813, 817, 818, 829], "qtablewidget": 806, "qtcore": 806, "qt": 806, "ui_example_gui_find_all_devic": 806, "column_width": 806, "160": 806, "getcwd": 806, "tabl": 806, "initibroadcastt": 806, "button": 806, "btn_broadcast": 806, "broadcastnetworkev": 806, "broadcast_list": 806, "tablewidget_brst": 806, "setcolumnwidth": 806, "background": 806, "217536": 806, "loaddata": 806, "setrowcount": 806, "setitem": 806, "qtablewidgetitem": 806, "firmware_v": 806, "restoreoverridecursor": 806, "waitcursor": 806, "setoverridecursor": 806, "broadcast": [806, 816], "broadcast_info": 806, "device_amount": 806, "model_vers": 806, "str_list": 806, "_": 806, "example_get_device_info": 807, "ui_example_gui_get_device_info": 807, "btn_deviceinfo": 807, "getdeviceinfoev": 807, "sys_getipaddrandsubmask": [807, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getmacaddr": [807, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "lineedit_sbk": 807, "lineedit_serialnum": 807, "lineedit_mac": 807, "lineedit_model": 807, "lineedit_vers": 807, "lineedit_rtc": 807, "tcp": [807, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840, 844], "example_rtd": 808, "ui_example_gui_rtd": 808, "btn_rtd": 808, "rtdevent": 808, "combobox_typ": [808, 809], "noisereject": [808, 809], "combobox_noisereject": [808, 809], "lineedit_sensor0": [808, 809], "lineedit_sensor1": [808, 809], "example_thermo": 809, "ui_example_gui_thermocoupl": 809, "btn_temp": 809, "tempev": 809, "combobox_oversampl": 809, "example_uart": 810, "ui_example_gui_uart": 810, "lb_ledport": 810, "btn_open": 810, "openportev": 810, "btn_close": 810, "closeportev": 810, "combobox_baudr": 810, "currenttext": 810, "databit": 810, "combobox_databit": 810, "combobox_par": 810, "stopbit": 810, "combobox_stopbit": 810, "test": [811, 817, 818, 829], "panel": 811, "finder": [811, 815], "logger": [812, 813], "multi": [812, 813, 818, 829, 841], "waveform": [812, 813], "loopback": [812, 813], "blinki": [812, 813], "hello": [812, 813], "tutori": 812, "multipl": [812, 818, 829], "drive": [812, 813, 844, 846], "blend": [812, 813], "scan": [812, 813, 817], "logic": [812, 813, 817, 818, 829, 845], "1axi": [812, 813], "breakpoint": [812, 813, 818, 829, 844], "captur": [812, 813, 818, 829, 841, 844], "inposit": [812, 813, 818, 829], "2axi": [812, 813], "circular": [812, 813, 818, 829, 841], "interpo": [812, 813], "linear": [812, 813, 818, 829, 841], "3axi": [812, 813], "helic": [812, 813, 818, 829, 841], "trigger": [812, 813], "pwm": [812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844], "relai": [812, 813, 825, 841, 844, 846], "dpot": [812, 813, 844, 846], "tc": [812, 813, 828, 835, 836, 846], "i2c": [812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "spi": [812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "uart": [812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846], "rtd": [812, 813, 828, 835, 836, 841, 846], "ahr": [812, 813, 838, 844, 846], "getacceler": [812, 813], "getestim": [812, 813], "getangularveloc": [812, 813], "getorient": [812, 813], "visual": [812, 813], "sd": [812, 813, 838, 839], "control": [814, 818, 841], "motion card": 814, "wifi": [814, 841, 842, 843, 846], "descript": 815, "bcst_checkmacandreboot": [815, 816], "bcst_checkmacandreboot_async": [815, 816], "bcst_checkmacandsetip": [815, 816], "bcst_checkmacandsetip_async": [815, 816], "e3": [815, 842, 846], "A": [815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 846], "pinout": 815, "net_getgatewai": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "net_getgateway_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "net_setipaddrandsubmask": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "net_setipaddrandsubmask_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getgatewai": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getgateway_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getipaddrandsubmask_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getmacaddr_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_getpythonvers": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_getpythonversion_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setdimod": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setdimode_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setdomod": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setdomode_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setipaddrandsubmask": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_setipaddrandsubmask_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "sys_setidlemod": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setidlemode_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setmotionmod": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setmotionmode_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setswitchmod": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_setswitchmode_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_stoprtcalarm": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "sys_stoprtcalarm_async": [815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "wifi_getconfigur": [815, 837, 838, 839, 840], "wifi_getconfiguration_async": [815, 837, 838, 839, 840], "wifi_getwifibandwidth": [815, 837, 838, 839, 840], "wifi_getwifibandwidth_async": [815, 837, 838, 839, 840], "ah": [815, 842, 846], "ahrs_reset": [815, 838], "ahrs_reset_async": [815, 838], "f4": [815, 842, 846], "aod": [815, 842, 843, 846], "ao_getport": [815, 826, 829, 831, 839], "ao_getvalu": [815, 826, 829, 831, 839], "ao_getvalues_async": [815, 826, 829, 831, 839], "di_getpinmap": [815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "do_getpinmap": [815, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "motion_cfg4axislinearinterpo": [815, 818, 829], "motion_cfg4axislinearinterpo_async": [815, 818, 829], "edriv": [815, 841, 846], "st": [815, 841, 846], "motion_cfgaxisdirect": [815, 817], "motion_cfgaxisdirection_async": [815, 817], "motion_getalarmstatu": [815, 817], "motion_getalarmstatus_async": [815, 817], "motion_getparamet": [815, 817], "motion_readcurrentveloc": [815, 817], "motion_readcurrentvelocity_async": [815, 817], "motion_readencoderposit": [815, 817], "motion_readencoderposition_async": [815, 817], "motion_resetfactori": [815, 817], "motion_resetfactory_async": [815, 817], "motion_startfindzpolar": [815, 817], "motion_startfindzpolarity_async": [815, 817], "ethan": [815, 842, 843, 846], "a2": [815, 842, 846], "ia": [815, 846], "l": [815, 846], "p": [815, 846], "thermal_getpinmap": [815, 828, 835, 836], "f1": [815, 842, 843, 846], "counter_readfrequ": [815, 830, 831, 832, 833, 834, 835, 836], "counter_readfrequency_async": [815, 830, 831, 832, 833, 834, 835, 836], "encoder_getdirect": [815, 830, 831, 832, 833, 834, 835, 836], "encoder_getdirection_async": [815, 830, 831, 832, 833, 834, 835, 836], "encoder_readfrequ": [815, 830, 831, 832, 833, 834, 835, 836], "encoder_readfrequency_async": [815, 830, 831, 832, 833, 834, 835, 836], "i2c_getpinmap": [815, 830, 831, 832, 833, 835, 836], "i2c_reset": [815, 830, 831, 832, 833, 835, 836], "i2c_reset_async": [815, 830, 831, 832, 833, 835, 836], "i2c_setaddresss": [815, 830, 831, 832, 833, 835, 836], "i2c_setaddresssize_async": [815, 830, 831, 832, 833, 835, 836], "spi_getpinmap": [815, 830, 832, 833, 835, 836], "spi_read": [815, 830, 832, 833, 835, 836], "spi_read_async": [815, 830, 832, 833, 835, 836], "spi_reset": [815, 830, 832, 833, 835, 836], "spi_reset_async": [815, 830, 832, 833, 835, 836], "uart_getpinmap": [815, 830, 831, 832, 833, 835, 836], "uart_reset": [815, 830, 831, 832, 833, 835, 836], "uart_reset_async": [815, 830, 831, 832, 833, 835, 836], "snk": 815, "td": [815, 843, 846], "rd": [815, 843, 846], "cd": [815, 843, 846], "can_getport": [815, 832], "can_setrxfilterormask": [815, 832], "can_setrxfilterormask_async": [815, 832], "can_setrxfilteringon": [815, 832], "can_setrxfilteringon_async": [815, 832], "verbos": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "mac_addr": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "reboot": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "separ": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "colon": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "successfulli": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "otherwis": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "here": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "subnet_mask": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "period": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "dev_info_list": 816, "element": [816, 819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "contain": 816, "subnet": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "mask": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 837, 838, 839, 840], "bool": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "whether": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "out": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "disonnect": 816, "phase": [817, 826, 829, 830, 831, 832, 833, 835, 836, 839, 841], "stepper": [817, 841, 844], "motor": [817, 841, 846], "51": [817, 841], "revolut": [817, 841], "36v": [817, 841], "maximum": [817, 841, 844], "suppli": [817, 841], "1a": [817, 825, 841], "current": [817, 818, 823, 824, 825, 826, 829, 831, 839, 841], "5a": [817, 841], "peak": [817, 841], "switch": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "fwd": [817, 841], "rev": [817, 841], "abz": [817, 818, 841], "nomin": [817, 841], "8mhz": [817, 841], "stall": [817, 841], "detect": [817, 841], "intellig": [817, 841], "energi": [817, 841], "diagnost": [817, 841], "ramp": [817, 841], "smooth": [817, 841], "axis_dir": [817, 818, 829], "dirction": 817, "origin": 817, "invers": 817, "specifi": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844], "report": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "encoder_dir": [817, 818, 829], "limit_polar": [817, 818, 829], "prevent": 817, "mechan": [817, 825, 841], "compon": 817, "exceed": 817, "boundari": 817, "activ": [817, 818, 821, 829, 830, 831, 832, 833, 834, 835, 836, 845], "given": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "singal": [817, 818, 829], "instantan": [817, 818, 829], "finish": [817, 818, 829], "still": 817, "runnung": 817, "veloicti": 817, "factori": 817, "count": [817, 818, 829, 830, 831, 832, 833, 834, 835, 836], "s2": [817, 818, 829], "distanc": [817, 818, 829], "locat": [817, 818, 829], "request": [817, 818, 829, 830, 831, 832, 833, 835, 836], "z": [817, 818, 829], "getewai": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "web": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840, 841], "gatewai": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "network_info": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "deprec": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "v1": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "Will": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "ref": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840], "mani": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pin1": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pin7": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "disabl": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "adc": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "softwar": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "repres": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 846], "year": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "charact": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "ce": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "31": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "24": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841], "23": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "59": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "interpret": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "calendar": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "weekdai": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "celendar": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "base": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 837, 838, 839, 840, 841], "modular": [818, 841], "inter": [818, 841], "quick": [818, 841], "amplifi": [818, 841], "puls": [818, 829, 830, 831, 832, 833, 834, 835, 836, 841, 844, 845], "cw": [818, 829, 841, 845], "ccw": [818, 829, 841, 845], "differenti": [818, 841], "8mpp": [818, 841], "12mhz": [818, 841], "break": [818, 841], "curv": [818, 829, 841], "clear_old": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "old": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "alread": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "exist": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "value_mat": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "value_list": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "object": [818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "destin": [818, 829], "axis4": [818, 829], "dest_posi4": [818, 829], "four": [818, 829], "en_alarm": [818, 829], "alarm_polar": [818, 829], "selector": [818, 829], "stepper_output": [818, 829], "servo_on_polar": [818, 829], "clockwis": [818, 829], "counterclockwis": [818, 829], "One": [818, 829, 845], "breakpoint_polar": [818, 829], "start_posi": [818, 829], "capture_typ": [818, 829], "respect": [818, 829], "encoder_z_polar": [818, 829], "search_typ": [818, 829], "search_dir": [818, 829], "search": [818, 829, 844], "adjust": [818, 829], "en_axis3": [818, 829], "en_axis4": [818, 829], "rotation_numb": [818, 829], "calculation_timeout": [818, 829], "en_hom": [818, 829], "home_polar": [818, 829], "en_inposi": [818, 829], "inposi_polar": [818, 829], "accel_mod": [818, 829], "accerler": [818, 829], "increas": [818, 829], "decreas": [818, 829], "per": [818, 829, 830, 831, 832, 833, 835, 836], "unit": [818, 829], "acceleration_mod": [818, 829], "trapezoid": [818, 829], "sequenc": [818, 829], "en_break": [818, 829], "en_captur": [818, 829], "emcod": [818, 829], "new": [818, 829], "axis_list": [818, 829], "halt": [818, 829, 845], "24vdc": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 834, 841], "8ch": [819, 820, 821, 823, 824, 826, 830, 831, 837, 838, 839, 840, 841], "end": [819, 820, 826, 830, 831, 837, 838, 839, 840, 841], "20khz": [819, 840, 841], "10v": [819, 826, 830, 831, 837, 838, 839, 840, 841], "chip": [819, 829, 830, 831, 837, 838, 839, 840, 842, 844], "volt": [819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "measur": [819, 820, 829, 830, 831, 837, 838, 839, 840], "num_sampl": [819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "pc": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "stock": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "queue": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840, 844], "call": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840, 842], "fewer": [819, 820, 829, 830, 831, 837, 838, 839, 840], "expect": [819, 820, 829, 830, 831, 837, 838, 839, 840], "ones": [819, 820, 829, 830, 831, 837, 838, 839, 840], "expir": [819, 820, 829, 830, 831, 837, 838, 839, 840], "arriv": [819, 820, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840], "becom": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "ineffect": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840], "alreadi": [819, 820, 829, 830, 831, 832, 837, 838, 839, 840, 844], "sample_list": [819, 820, 829, 830, 831, 837, 838, 839, 840], "been": [819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "made": [819, 820, 826, 829, 830, 831, 837, 838, 839, 840], "10khz": [820, 837, 838, 839, 841], "13": [820, 841], "75v": [820, 841], "6ch": [821, 825, 841], "npn": [821, 822, 834, 841], "pnp": [821, 822, 841], "opto": [821, 822, 834, 841], "isol": [821, 822, 834, 841], "24v": [821, 822, 829, 834, 841], "2ch": [821, 822, 825, 835, 836, 841], "enable_list": [821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "about": [821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "direction_list": [821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "intput": [821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "associ": [821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "pinmap": [821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "kei": [821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "integ": [821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "thei": [821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "p0": [821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 836], "p1": [821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836], "16ch": [822, 831, 841], "2khz": [823, 841], "1ch": [823, 824, 828, 830, 831, 841], "20ma": [823, 824, 841], "ma": [823, 824], "600hz": [824, 841], "25v": [824, 841], "qualiti": [825, 841], "4ch": [825, 827, 841], "NO": [825, 841], "nc": [825, 841], "2m": [825, 841], "exclud": [825, 841], "bounc": [825, 841], "1m": [825, 841, 845], "relay_count": 825, "1khz": [826, 841], "where": [826, 829, 831, 839], "which": [826, 829, 831, 839], "accordingli": [826, 829, 831, 839], "averag": [826, 829, 831, 839], "variabl": [827, 841], "resistor": [827, 841], "300\u03c9": [827, 841], "50k\u03c9": [827, 841], "500hz": [827, 841], "ratio": 827, "7ch": [828, 841], "settl": [828, 841], "160m": [828, 841], "tupl": [828, 830, 831, 832, 833, 835, 836], "constitut": [828, 830, 831, 832, 833, 835, 836], "physic": [828, 830, 831, 832, 833, 835, 836], "thermal1": [828, 835, 836], "five": [828, 835, 836], "p2": [828, 830, 831, 832, 833, 835, 836], "thermal_port": [828, 835, 836], "circuit": [828, 835, 836], "fault": [828, 835, 836], "manual": [828, 835, 836], "temperatur": [828, 835, 836], "celsiu": [828, 835, 836], "type_": [828, 835, 836], "idc": [829, 841], "50p": [829, 841], "3v": [829, 830, 831, 832, 833, 835, 836, 841], "24ch": [829, 841], "12ch": [829, 834, 841], "5v": [829, 830, 831, 832, 833, 835, 836, 841], "ttl": [829, 841], "multiplex": [829, 841], "4x6": [829, 841], "matrix": [829, 841], "20ch": [830, 832, 841], "16khz": [830, 831, 841], "full": [830, 831, 832, 833, 834, 835, 836, 841], "bu": [830, 831, 832, 833, 834, 835, 836, 841], "uint64": [830, 831, 832, 833, 834, 835, 836], "100m": [830, 831, 832, 833, 834, 835, 836], "minimum": [830, 831, 832, 833, 834, 835, 836], "uint": [830, 831, 832, 833, 834, 835, 836], "i2c1": [830, 831, 832, 833, 835, 836], "i2c2": [830, 831, 832, 833, 835, 836], "p3": [830, 831, 832, 833, 835, 836], "i2c_port": [830, 831, 832, 833, 835, 836], "read_address": [830, 831, 832, 833, 835, 836], "bytes_to_read": [830, 831, 832, 833, 835, 836, 838, 839], "i2c_data": [830, 831, 832, 833, 835, 836], "400000": [830, 831, 832, 833, 835, 836, 845], "plu": [830, 831, 832, 833, 835, 836, 845], "1000000": [830, 831, 832, 833, 835, 836, 845], "3400000": [830, 831, 832, 833, 835, 836, 845], "write_address": [830, 831, 832, 833, 835, 836], "transfer": [830, 831, 832, 833, 835, 836, 838, 839, 844], "spi1": [830, 832, 833, 835, 836, 845], "spi2": [830, 832, 833, 835, 836, 845], "spi_port": [830, 832, 833, 835, 836], "spi_data": [830, 832, 833, 835, 836], "128": [830, 832, 833, 835, 836, 845], "uart1": [830, 831, 832, 833, 835, 836], "uart2": [830, 831, 832, 833, 835, 836], "uart_port": [830, 831, 832, 833, 835, 836], "baud_rat": [830, 831, 832, 833, 835, 836], "baud": [830, 831, 832, 833, 835, 836, 844], "serial_num": [830, 831, 832, 833, 834, 835, 836], "0v": [831, 841], "v2": [832, 841], "0b": [832, 841], "1mb": [832, 841], "num_fram": 832, "millisecond": 832, "canfram": 832, "give": 832, "identifi": 832, "extended_id": 832, "tell": 832, "id_": 832, "filter": [832, 844], "recept": 832, "buffer": 832, "29": 832, "ignor": 832, "on_off": 832, "speed_mod": 832, "26ch": [833, 841], "400khz": [833, 841], "14ch": 834, "extern": [834, 841, 844], "21ch": [835, 836, 841], "pt": [835, 841], "802": [837, 838, 839, 840, 841], "wi": [837, 838, 839, 840], "fi": [837, 838, 839, 840], "4ghz": [837, 838, 839, 840], "5ghz": [837, 838, 839, 840], "being": [837, 838, 839, 840], "wifidaq": [837, 838, 839, 840], "reconnect": [837, 838, 839, 840], "ap": [837, 838, 839, 840], "stai": [837, 838, 839, 840], "wifi_configur": [837, 838, 839, 840], "retri": [837, 838, 839, 840], "fulli": [837, 838, 839, 840], "bandwidth": [837, 838, 839, 840], "ht20": [837, 838, 839, 840], "ht40": [837, 838, 839, 840], "volatg": [837, 838, 839, 840], "level": [837, 838, 839, 840], "strength": [837, 838, 839, 840], "port1": [837, 838, 839, 840], "port2": [837, 838, 839, 840], "1336": [837, 838, 839, 840], "built": [838, 841], "9dof": [838, 841], "imu": [838, 841], "postur": [838, 841], "estim": [838, 841], "mb": [838, 839], "byte_to_read": [838, 839], "photo": 841, "ethanex_d": 841, "ghz": 841, "16k": 842, "8k": 842, "3k": 842, "4k": 842, "2k": 842, "6k": 842, "0k": 842, "12k": 842, "fix": 842, "20k": 842, "below": 842, "1k": 842, "5k": 842, "ctr": 843, "seri": [843, 846], "dsnk": [843, 846], "520003": 844, "warn": 844, "occurr": 844, "overflow": 844, "520002": 844, "520001": 844, "520000": 844, "519000": 844, "librari": 844, "libusb": 844, "dll": 844, "look": 844, "7000": 844, "7001": 844, "7002": 844, "hal": 844, "7003": 844, "7004": 844, "7005": 844, "7006": 844, "7007": 844, "7008": 844, "7009": 844, "7010": 844, "7011": 844, "7012": 844, "7013": 844, "ol": 844, "7014": 844, "core": 844, "7015": 844, "7016": 844, "7017": 844, "7018": 844, "7019": 844, "7020": 844, "7021": 844, "7022": 844, "7023": 844, "7024": 844, "7025": 844, "udp": 844, "7026": 844, "bootload": 844, "7027": 844, "parser": 844, "7028": 844, "8000": 844, "8001": 844, "fail": 844, "plugin": 844, "8002": 844, "8003": 844, "lost": 844, "8004": 844, "packet": 844, "8005": 844, "valid": 844, "recogn": 844, "8006": 844, "inconsist": 844, "between": 844, "8007": 844, "8008": 844, "8009": 844, "accept": 844, "8010": 844, "extens": 844, "8011": 844, "No": 844, "directori": 844, "8100": 844, "occupi": 844, "8101": 844, "8102": 844, "8103": 844, "8104": 844, "8105": 844, "8106": 844, "8200": 844, "8201": 844, "8202": 844, "8203": 844, "8204": 844, "8300": 844, "8301": 844, "8302": 844, "span": 844, "8303": 844, "8304": 844, "8305": 844, "8400": 844, "8401": 844, "8500": 844, "8501": 844, "8502": 844, "8503": 844, "8600": 844, "8601": 844, "8602": 844, "8700": 844, "8701": 844, "exce": 844, "8702": 844, "8703": 844, "8704": 844, "8705": 844, "8800": 844, "8801": 844, "8802": 844, "8803": 844, "8804": 844, "8805": 844, "8900": 844, "8901": 844, "8902": 844, "invalid": 844, "8903": 844, "tx": 844, "8904": 844, "prioriti": 844, "9100": 844, "9101": 844, "9102": 844, "9103": 844, "9104": 844, "9105": 844, "9106": 844, "9107": 844, "9108": 844, "9109": 844, "9110": 844, "9111": 844, "9112": 844, "9113": 844, "9200": 844, "9300": 844, "9301": 844, "rectangular": 845, "125k": 845, "250k": 845, "500k": 845, "bp": 845, "peripher": 845, "f_pclk2": 845, "72": 845, "f_pclk1": 845, "36": 845, "18": 845, "25": 845, "562": 845, "281": 845, "140": 845, "625": 845, "big": 845, "littl": 845, "remark": 846, "stand": 846}, "objects": {"": [[814, 0, 0, "-", "pywpc"]], "pywpc": [[816, 1, 1, "", "DeviceFinder"], [817, 1, 1, "", "EDriveST"], [818, 1, 1, "", "EMotion"], [819, 1, 1, "", "EthanA"], [820, 1, 1, "", "EthanA2"], [821, 1, 1, "", "EthanD"], [822, 1, 1, "", "EthanEXD"], [823, 1, 1, "", "EthanI"], [824, 1, 1, "", "EthanIA"], [825, 1, 1, "", "EthanL"], [826, 1, 1, "", "EthanO"], [827, 1, 1, "", "EthanP"], [828, 1, 1, "", "EthanT"], [829, 1, 1, "", "STEM"], [830, 1, 1, "", "USBDAQF1AD"], [831, 1, 1, "", "USBDAQF1AOD"], [832, 1, 1, "", "USBDAQF1CD"], [833, 1, 1, "", "USBDAQF1D"], [834, 1, 1, "", "USBDAQF1DSNK"], [835, 1, 1, "", "USBDAQF1RD"], [836, 1, 1, "", "USBDAQF1TD"], [837, 1, 1, "", "WifiDAQE3A"], [838, 1, 1, "", "WifiDAQE3AH"], [839, 1, 1, "", "WifiDAQE3AOD"], [840, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[816, 2, 1, "", "Bcst_checkMACAndReboot"], [816, 2, 1, "", "Bcst_checkMACAndReboot_async"], [816, 2, 1, "", "Bcst_checkMACAndSetIP"], [816, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [816, 2, 1, "", "Bcst_enumerateNetworkDevices"], [816, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [816, 2, 1, "", "Bcst_enumerateUSBDevices"], [816, 2, 1, "", "close"], [816, 2, 1, "", "connect"], [816, 2, 1, "", "disconnect"]], "pywpc.EDriveST": [[817, 2, 1, "", "Motion_cfgAxisDirection"], [817, 2, 1, "", "Motion_cfgAxisDirection_async"], [817, 2, 1, "", "Motion_cfgEncoder"], [817, 2, 1, "", "Motion_cfgEncoder_async"], [817, 2, 1, "", "Motion_cfgLimit"], [817, 2, 1, "", "Motion_cfgLimit_async"], [817, 2, 1, "", "Motion_close"], [817, 2, 1, "", "Motion_close_async"], [817, 2, 1, "", "Motion_enableServoOff"], [817, 2, 1, "", "Motion_enableServoOff_async"], [817, 2, 1, "", "Motion_enableServoOn"], [817, 2, 1, "", "Motion_enableServoOn_async"], [817, 2, 1, "", "Motion_getAlarmStatus"], [817, 2, 1, "", "Motion_getAlarmStatus_async"], [817, 2, 1, "", "Motion_getLimitStatus"], [817, 2, 1, "", "Motion_getLimitStatus_async"], [817, 2, 1, "", "Motion_getParameters"], [817, 2, 1, "", "Motion_getProcessState"], [817, 2, 1, "", "Motion_getProcessState_async"], [817, 2, 1, "", "Motion_loadCfgFile"], [817, 2, 1, "", "Motion_loadCfgFile_async"], [817, 2, 1, "", "Motion_open"], [817, 2, 1, "", "Motion_openCfgFile"], [817, 2, 1, "", "Motion_openCfgFile_async"], [817, 2, 1, "", "Motion_open_async"], [817, 2, 1, "", "Motion_readCurrentVelocity"], [817, 2, 1, "", "Motion_readCurrentVelocity_async"], [817, 2, 1, "", "Motion_readEncoderPosition"], [817, 2, 1, "", "Motion_readEncoderPosition_async"], [817, 2, 1, "", "Motion_resetFactory"], [817, 2, 1, "", "Motion_resetFactory_async"], [817, 2, 1, "", "Motion_rstEncoderPosi"], [817, 2, 1, "", "Motion_rstEncoderPosi_async"], [817, 2, 1, "", "Motion_saveCfgFile"], [817, 2, 1, "", "Motion_saveCfgFile_async"], [817, 2, 1, "", "Motion_startFindHome"], [817, 2, 1, "", "Motion_startFindHome_async"], [817, 2, 1, "", "Motion_startFindLimit"], [817, 2, 1, "", "Motion_startFindLimit_async"], [817, 2, 1, "", "Motion_startFindZPolarity"], [817, 2, 1, "", "Motion_startFindZPolarity_async"], [817, 2, 1, "", "Motion_startPositionMove"], [817, 2, 1, "", "Motion_startPositionMove_async"], [817, 2, 1, "", "Motion_startScanMove"], [817, 2, 1, "", "Motion_startScanMove_async"], [817, 2, 1, "", "Motion_startVelocticyMove"], [817, 2, 1, "", "Motion_startVelocticyMove_async"], [817, 2, 1, "", "Motion_stopProcess"], [817, 2, 1, "", "Motion_stopProcess_async"], [817, 2, 1, "", "Net_getGateway"], [817, 2, 1, "", "Net_getGateway_async"], [817, 2, 1, "", "Net_getIPAddrAndSubmask"], [817, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [817, 2, 1, "", "Net_getMACAddr"], [817, 2, 1, "", "Net_getMACAddr_async"], [817, 2, 1, "", "Net_setIPAddrAndSubmask"], [817, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [817, 2, 1, "", "Sys_getDriverInfo"], [817, 2, 1, "", "Sys_getDriverInfo_async"], [817, 2, 1, "", "Sys_getGateway"], [817, 2, 1, "", "Sys_getGateway_async"], [817, 2, 1, "", "Sys_getIPAddrAndSubmask"], [817, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [817, 2, 1, "", "Sys_getMACAddr"], [817, 2, 1, "", "Sys_getMACAddr_async"], [817, 2, 1, "", "Sys_getMode"], [817, 2, 1, "", "Sys_getMode_async"], [817, 2, 1, "", "Sys_getPinModeInPort"], [817, 2, 1, "", "Sys_getPinModeInPort_async"], [817, 2, 1, "", "Sys_getPythonVersion"], [817, 2, 1, "", "Sys_getPythonVersion_async"], [817, 2, 1, "", "Sys_getRTC"], [817, 2, 1, "", "Sys_getRTC_async"], [817, 2, 1, "", "Sys_getSerialNumber"], [817, 2, 1, "", "Sys_getSerialNumber_async"], [817, 2, 1, "", "Sys_reboot"], [817, 2, 1, "", "Sys_reboot_async"], [817, 2, 1, "", "Sys_setAIOMode"], [817, 2, 1, "", "Sys_setAIOMode_async"], [817, 2, 1, "", "Sys_setDIMode"], [817, 2, 1, "", "Sys_setDIMode_async"], [817, 2, 1, "", "Sys_setDIOMode"], [817, 2, 1, "", "Sys_setDIOMode_async"], [817, 2, 1, "", "Sys_setDOMode"], [817, 2, 1, "", "Sys_setDOMode_async"], [817, 2, 1, "", "Sys_setIPAddrAndSubmask"], [817, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [817, 2, 1, "", "Sys_setIdleMode"], [817, 2, 1, "", "Sys_setIdleMode_async"], [817, 2, 1, "", "Sys_setMotionMode"], [817, 2, 1, "", "Sys_setMotionMode_async"], [817, 2, 1, "", "Sys_setRTC"], [817, 2, 1, "", "Sys_setRTC_async"], [817, 2, 1, "", "Sys_setSwitchMode"], [817, 2, 1, "", "Sys_setSwitchMode_async"], [817, 2, 1, "", "Sys_startRTCAlarm"], [817, 2, 1, "", "Sys_startRTCAlarm_async"], [817, 2, 1, "", "Sys_stopRTCAlarm"], [817, 2, 1, "", "Sys_stopRTCAlarm_async"], [817, 2, 1, "", "close"], [817, 2, 1, "", "connect"], [817, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[818, 2, 1, "", "Logger_openFile"], [818, 2, 1, "", "Logger_write2DList"], [818, 2, 1, "", "Logger_writeHeader"], [818, 2, 1, "", "Logger_writeList"], [818, 2, 1, "", "Logger_writeValue"], [818, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [818, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [818, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [818, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [818, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [818, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [818, 2, 1, "", "Motion_cfgAlarm"], [818, 2, 1, "", "Motion_cfgAlarm_async"], [818, 2, 1, "", "Motion_cfgAxis"], [818, 2, 1, "", "Motion_cfgAxisMove"], [818, 2, 1, "", "Motion_cfgAxisMove_async"], [818, 2, 1, "", "Motion_cfgAxis_async"], [818, 2, 1, "", "Motion_cfgBreakPoint"], [818, 2, 1, "", "Motion_cfgBreakPoint_async"], [818, 2, 1, "", "Motion_cfgCapture"], [818, 2, 1, "", "Motion_cfgCapture_async"], [818, 2, 1, "", "Motion_cfgCircularInterpo"], [818, 2, 1, "", "Motion_cfgCircularInterpo_async"], [818, 2, 1, "", "Motion_cfgEncoder"], [818, 2, 1, "", "Motion_cfgEncoder_async"], [818, 2, 1, "", "Motion_cfgFindRef"], [818, 2, 1, "", "Motion_cfgFindRef_async"], [818, 2, 1, "", "Motion_cfgHelicalInterpo"], [818, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [818, 2, 1, "", "Motion_cfgHome"], [818, 2, 1, "", "Motion_cfgHome_async"], [818, 2, 1, "", "Motion_cfgInposi"], [818, 2, 1, "", "Motion_cfgInposi_async"], [818, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [818, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [818, 2, 1, "", "Motion_cfgLimit"], [818, 2, 1, "", "Motion_cfgLimit_async"], [818, 2, 1, "", "Motion_checkRef"], [818, 2, 1, "", "Motion_checkRef_async"], [818, 2, 1, "", "Motion_close"], [818, 2, 1, "", "Motion_close_async"], [818, 2, 1, "", "Motion_enableBreakPoint"], [818, 2, 1, "", "Motion_enableBreakPoint_async"], [818, 2, 1, "", "Motion_enableCapture"], [818, 2, 1, "", "Motion_enableCapture_async"], [818, 2, 1, "", "Motion_enableServoOff"], [818, 2, 1, "", "Motion_enableServoOff_async"], [818, 2, 1, "", "Motion_enableServoOn"], [818, 2, 1, "", "Motion_enableServoOn_async"], [818, 2, 1, "", "Motion_findRef"], [818, 2, 1, "", "Motion_findRef_async"], [818, 2, 1, "", "Motion_getEncoderPosi"], [818, 2, 1, "", "Motion_getEncoderPosi_async"], [818, 2, 1, "", "Motion_getHomeStatus"], [818, 2, 1, "", "Motion_getHomeStatus_async"], [818, 2, 1, "", "Motion_getLimitStatus"], [818, 2, 1, "", "Motion_getLimitStatus_async"], [818, 2, 1, "", "Motion_getLogicalPosi"], [818, 2, 1, "", "Motion_getLogicalPosi_async"], [818, 2, 1, "", "Motion_getMoveStatus"], [818, 2, 1, "", "Motion_getMoveStatus_async"], [818, 2, 1, "", "Motion_loadCfgFile"], [818, 2, 1, "", "Motion_loadCfgFile_async"], [818, 2, 1, "", "Motion_open"], [818, 2, 1, "", "Motion_openCfgFile"], [818, 2, 1, "", "Motion_openCfgFile_async"], [818, 2, 1, "", "Motion_open_async"], [818, 2, 1, "", "Motion_overrideAxisAccel"], [818, 2, 1, "", "Motion_overrideAxisAccel_async"], [818, 2, 1, "", "Motion_overrideAxisPosi"], [818, 2, 1, "", "Motion_overrideAxisPosi_async"], [818, 2, 1, "", "Motion_overrideAxisVelocity"], [818, 2, 1, "", "Motion_overrideAxisVelocity_async"], [818, 2, 1, "", "Motion_readCapturePoint"], [818, 2, 1, "", "Motion_readCapturePoint_async"], [818, 2, 1, "", "Motion_rstEncoderPosi"], [818, 2, 1, "", "Motion_rstEncoderPosi_async"], [818, 2, 1, "", "Motion_saveCfgFile"], [818, 2, 1, "", "Motion_saveCfgFile_async"], [818, 2, 1, "", "Motion_setLogicalPosi"], [818, 2, 1, "", "Motion_setLogicalPosi_async"], [818, 2, 1, "", "Motion_startCircularInterpo"], [818, 2, 1, "", "Motion_startCircularInterpo_async"], [818, 2, 1, "", "Motion_startHelicalInterpo"], [818, 2, 1, "", "Motion_startHelicalInterpo_async"], [818, 2, 1, "", "Motion_startLinearInterpo"], [818, 2, 1, "", "Motion_startLinearInterpo_async"], [818, 2, 1, "", "Motion_startMultiAxisMove"], [818, 2, 1, "", "Motion_startMultiAxisMove_async"], [818, 2, 1, "", "Motion_startSingleAxisMove"], [818, 2, 1, "", "Motion_startSingleAxisMove_async"], [818, 2, 1, "", "Motion_stop"], [818, 2, 1, "", "Motion_stop_async"], [818, 2, 1, "", "Net_getGateway"], [818, 2, 1, "", "Net_getGateway_async"], [818, 2, 1, "", "Net_getIPAddrAndSubmask"], [818, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [818, 2, 1, "", "Net_getMACAddr"], [818, 2, 1, "", "Net_getMACAddr_async"], [818, 2, 1, "", "Net_setIPAddrAndSubmask"], [818, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [818, 2, 1, "", "Sys_getDriverInfo"], [818, 2, 1, "", "Sys_getDriverInfo_async"], [818, 2, 1, "", "Sys_getGateway"], [818, 2, 1, "", "Sys_getGateway_async"], [818, 2, 1, "", "Sys_getIPAddrAndSubmask"], [818, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [818, 2, 1, "", "Sys_getMACAddr"], [818, 2, 1, "", "Sys_getMACAddr_async"], [818, 2, 1, "", "Sys_getMode"], [818, 2, 1, "", "Sys_getMode_async"], [818, 2, 1, "", "Sys_getPinModeInPort"], [818, 2, 1, "", "Sys_getPinModeInPort_async"], [818, 2, 1, "", "Sys_getPythonVersion"], [818, 2, 1, "", "Sys_getPythonVersion_async"], [818, 2, 1, "", "Sys_getRTC"], [818, 2, 1, "", "Sys_getRTC_async"], [818, 2, 1, "", "Sys_getSerialNumber"], [818, 2, 1, "", "Sys_getSerialNumber_async"], [818, 2, 1, "", "Sys_reboot"], [818, 2, 1, "", "Sys_reboot_async"], [818, 2, 1, "", "Sys_setAIOMode"], [818, 2, 1, "", "Sys_setAIOMode_async"], [818, 2, 1, "", "Sys_setDIMode"], [818, 2, 1, "", "Sys_setDIMode_async"], [818, 2, 1, "", "Sys_setDIOMode"], [818, 2, 1, "", "Sys_setDIOMode_async"], [818, 2, 1, "", "Sys_setDOMode"], [818, 2, 1, "", "Sys_setDOMode_async"], [818, 2, 1, "", "Sys_setIPAddrAndSubmask"], [818, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [818, 2, 1, "", "Sys_setIdleMode"], [818, 2, 1, "", "Sys_setIdleMode_async"], [818, 2, 1, "", "Sys_setMotionMode"], [818, 2, 1, "", "Sys_setMotionMode_async"], [818, 2, 1, "", "Sys_setRTC"], [818, 2, 1, "", "Sys_setRTC_async"], [818, 2, 1, "", "Sys_setSwitchMode"], [818, 2, 1, "", "Sys_setSwitchMode_async"], [818, 2, 1, "", "Sys_startRTCAlarm"], [818, 2, 1, "", "Sys_startRTCAlarm_async"], [818, 2, 1, "", "Sys_stopRTCAlarm"], [818, 2, 1, "", "Sys_stopRTCAlarm_async"], [818, 2, 1, "", "close"], [818, 2, 1, "", "connect"], [818, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[819, 2, 1, "", "AI_close"], [819, 2, 1, "", "AI_close_async"], [819, 2, 1, "", "AI_enableCS"], [819, 2, 1, "", "AI_enableCS_async"], [819, 2, 1, "", "AI_enableChannel"], [819, 2, 1, "", "AI_enableChannel_async"], [819, 2, 1, "", "AI_open"], [819, 2, 1, "", "AI_open_async"], [819, 2, 1, "", "AI_readOnDemand"], [819, 2, 1, "", "AI_readOnDemand_async"], [819, 2, 1, "", "AI_readStreaming"], [819, 2, 1, "", "AI_readStreaming_async"], [819, 2, 1, "", "AI_setMode"], [819, 2, 1, "", "AI_setMode_async"], [819, 2, 1, "", "AI_setNumSamples"], [819, 2, 1, "", "AI_setNumSamples_async"], [819, 2, 1, "", "AI_setSamplingRate"], [819, 2, 1, "", "AI_setSamplingRate_async"], [819, 2, 1, "", "AI_start"], [819, 2, 1, "", "AI_start_async"], [819, 2, 1, "", "AI_stop"], [819, 2, 1, "", "AI_stop_async"], [819, 2, 1, "", "Logger_openFile"], [819, 2, 1, "", "Logger_write2DList"], [819, 2, 1, "", "Logger_writeHeader"], [819, 2, 1, "", "Logger_writeList"], [819, 2, 1, "", "Logger_writeValue"], [819, 2, 1, "", "Net_getGateway"], [819, 2, 1, "", "Net_getGateway_async"], [819, 2, 1, "", "Net_getIPAddrAndSubmask"], [819, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [819, 2, 1, "", "Net_getMACAddr"], [819, 2, 1, "", "Net_getMACAddr_async"], [819, 2, 1, "", "Net_setIPAddrAndSubmask"], [819, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [819, 2, 1, "", "Sys_getDriverInfo"], [819, 2, 1, "", "Sys_getDriverInfo_async"], [819, 2, 1, "", "Sys_getGateway"], [819, 2, 1, "", "Sys_getGateway_async"], [819, 2, 1, "", "Sys_getIPAddrAndSubmask"], [819, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [819, 2, 1, "", "Sys_getMACAddr"], [819, 2, 1, "", "Sys_getMACAddr_async"], [819, 2, 1, "", "Sys_getMode"], [819, 2, 1, "", "Sys_getMode_async"], [819, 2, 1, "", "Sys_getPinModeInPort"], [819, 2, 1, "", "Sys_getPinModeInPort_async"], [819, 2, 1, "", "Sys_getPythonVersion"], [819, 2, 1, "", "Sys_getPythonVersion_async"], [819, 2, 1, "", "Sys_getRTC"], [819, 2, 1, "", "Sys_getRTC_async"], [819, 2, 1, "", "Sys_getSerialNumber"], [819, 2, 1, "", "Sys_getSerialNumber_async"], [819, 2, 1, "", "Sys_reboot"], [819, 2, 1, "", "Sys_reboot_async"], [819, 2, 1, "", "Sys_setAIOMode"], [819, 2, 1, "", "Sys_setAIOMode_async"], [819, 2, 1, "", "Sys_setDIMode"], [819, 2, 1, "", "Sys_setDIMode_async"], [819, 2, 1, "", "Sys_setDIOMode"], [819, 2, 1, "", "Sys_setDIOMode_async"], [819, 2, 1, "", "Sys_setDOMode"], [819, 2, 1, "", "Sys_setDOMode_async"], [819, 2, 1, "", "Sys_setIPAddrAndSubmask"], [819, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [819, 2, 1, "", "Sys_setIdleMode"], [819, 2, 1, "", "Sys_setIdleMode_async"], [819, 2, 1, "", "Sys_setMotionMode"], [819, 2, 1, "", "Sys_setMotionMode_async"], [819, 2, 1, "", "Sys_setRTC"], [819, 2, 1, "", "Sys_setRTC_async"], [819, 2, 1, "", "Sys_setSwitchMode"], [819, 2, 1, "", "Sys_setSwitchMode_async"], [819, 2, 1, "", "Sys_startRTCAlarm"], [819, 2, 1, "", "Sys_startRTCAlarm_async"], [819, 2, 1, "", "Sys_stopRTCAlarm"], [819, 2, 1, "", "Sys_stopRTCAlarm_async"], [819, 2, 1, "", "close"], [819, 2, 1, "", "connect"], [819, 2, 1, "", "disconnect"]], "pywpc.EthanA2": [[820, 2, 1, "", "AI_close"], [820, 2, 1, "", "AI_close_async"], [820, 2, 1, "", "AI_open"], [820, 2, 1, "", "AI_open_async"], [820, 2, 1, "", "AI_readOnDemand"], [820, 2, 1, "", "AI_readOnDemand_async"], [820, 2, 1, "", "AI_readStreaming"], [820, 2, 1, "", "AI_readStreaming_async"], [820, 2, 1, "", "AI_setMode"], [820, 2, 1, "", "AI_setMode_async"], [820, 2, 1, "", "AI_setNumSamples"], [820, 2, 1, "", "AI_setNumSamples_async"], [820, 2, 1, "", "AI_setSamplingRate"], [820, 2, 1, "", "AI_setSamplingRate_async"], [820, 2, 1, "", "AI_start"], [820, 2, 1, "", "AI_start_async"], [820, 2, 1, "", "AI_stop"], [820, 2, 1, "", "AI_stop_async"], [820, 2, 1, "", "Logger_openFile"], [820, 2, 1, "", "Logger_write2DList"], [820, 2, 1, "", "Logger_writeHeader"], [820, 2, 1, "", "Logger_writeList"], [820, 2, 1, "", "Logger_writeValue"], [820, 2, 1, "", "Net_getGateway"], [820, 2, 1, "", "Net_getGateway_async"], [820, 2, 1, "", "Net_getIPAddrAndSubmask"], [820, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [820, 2, 1, "", "Net_getMACAddr"], [820, 2, 1, "", "Net_getMACAddr_async"], [820, 2, 1, "", "Net_setIPAddrAndSubmask"], [820, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [820, 2, 1, "", "Sys_getDriverInfo"], [820, 2, 1, "", "Sys_getDriverInfo_async"], [820, 2, 1, "", "Sys_getGateway"], [820, 2, 1, "", "Sys_getGateway_async"], [820, 2, 1, "", "Sys_getIPAddrAndSubmask"], [820, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [820, 2, 1, "", "Sys_getMACAddr"], [820, 2, 1, "", "Sys_getMACAddr_async"], [820, 2, 1, "", "Sys_getMode"], [820, 2, 1, "", "Sys_getMode_async"], [820, 2, 1, "", "Sys_getPinModeInPort"], [820, 2, 1, "", "Sys_getPinModeInPort_async"], [820, 2, 1, "", "Sys_getPythonVersion"], [820, 2, 1, "", "Sys_getPythonVersion_async"], [820, 2, 1, "", "Sys_getRTC"], [820, 2, 1, "", "Sys_getRTC_async"], [820, 2, 1, "", "Sys_getSerialNumber"], [820, 2, 1, "", "Sys_getSerialNumber_async"], [820, 2, 1, "", "Sys_reboot"], [820, 2, 1, "", "Sys_reboot_async"], [820, 2, 1, "", "Sys_setAIOMode"], [820, 2, 1, "", "Sys_setAIOMode_async"], [820, 2, 1, "", "Sys_setDIMode"], [820, 2, 1, "", "Sys_setDIMode_async"], [820, 2, 1, "", "Sys_setDIOMode"], [820, 2, 1, "", "Sys_setDIOMode_async"], [820, 2, 1, "", "Sys_setDOMode"], [820, 2, 1, "", "Sys_setDOMode_async"], [820, 2, 1, "", "Sys_setIPAddrAndSubmask"], [820, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [820, 2, 1, "", "Sys_setIdleMode"], [820, 2, 1, "", "Sys_setIdleMode_async"], [820, 2, 1, "", "Sys_setMotionMode"], [820, 2, 1, "", "Sys_setMotionMode_async"], [820, 2, 1, "", "Sys_setRTC"], [820, 2, 1, "", "Sys_setRTC_async"], [820, 2, 1, "", "Sys_setSwitchMode"], [820, 2, 1, "", "Sys_setSwitchMode_async"], [820, 2, 1, "", "Sys_startRTCAlarm"], [820, 2, 1, "", "Sys_startRTCAlarm_async"], [820, 2, 1, "", "Sys_stopRTCAlarm"], [820, 2, 1, "", "Sys_stopRTCAlarm_async"], [820, 2, 1, "", "close"], [820, 2, 1, "", "connect"], [820, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[821, 2, 1, "", "DIO_loadStartup"], [821, 2, 1, "", "DIO_loadStartup_async"], [821, 2, 1, "", "DI_closePins"], [821, 2, 1, "", "DI_closePins_async"], [821, 2, 1, "", "DI_closePort"], [821, 2, 1, "", "DI_closePort_async"], [821, 2, 1, "", "DI_getPinMap"], [821, 2, 1, "", "DI_openPins"], [821, 2, 1, "", "DI_openPins_async"], [821, 2, 1, "", "DI_openPort"], [821, 2, 1, "", "DI_openPort_async"], [821, 2, 1, "", "DI_readPins"], [821, 2, 1, "", "DI_readPins_async"], [821, 2, 1, "", "DI_readPort"], [821, 2, 1, "", "DI_readPort_async"], [821, 2, 1, "", "DO_closePins"], [821, 2, 1, "", "DO_closePins_async"], [821, 2, 1, "", "DO_closePort"], [821, 2, 1, "", "DO_closePort_async"], [821, 2, 1, "", "DO_getPinMap"], [821, 2, 1, "", "DO_openPins"], [821, 2, 1, "", "DO_openPins_async"], [821, 2, 1, "", "DO_openPort"], [821, 2, 1, "", "DO_openPort_async"], [821, 2, 1, "", "DO_togglePins"], [821, 2, 1, "", "DO_togglePins_async"], [821, 2, 1, "", "DO_togglePort"], [821, 2, 1, "", "DO_togglePort_async"], [821, 2, 1, "", "DO_writePins"], [821, 2, 1, "", "DO_writePins_async"], [821, 2, 1, "", "DO_writePort"], [821, 2, 1, "", "DO_writePort_async"], [821, 2, 1, "", "Logger_openFile"], [821, 2, 1, "", "Logger_write2DList"], [821, 2, 1, "", "Logger_writeHeader"], [821, 2, 1, "", "Logger_writeList"], [821, 2, 1, "", "Logger_writeValue"], [821, 2, 1, "", "Net_getGateway"], [821, 2, 1, "", "Net_getGateway_async"], [821, 2, 1, "", "Net_getIPAddrAndSubmask"], [821, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [821, 2, 1, "", "Net_getMACAddr"], [821, 2, 1, "", "Net_getMACAddr_async"], [821, 2, 1, "", "Net_setIPAddrAndSubmask"], [821, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [821, 2, 1, "", "PWM_close"], [821, 2, 1, "", "PWM_close_async"], [821, 2, 1, "", "PWM_open"], [821, 2, 1, "", "PWM_open_async"], [821, 2, 1, "", "PWM_setDutyCycle"], [821, 2, 1, "", "PWM_setDutyCycle_async"], [821, 2, 1, "", "PWM_setFrequency"], [821, 2, 1, "", "PWM_setFrequency_async"], [821, 2, 1, "", "PWM_start"], [821, 2, 1, "", "PWM_start_async"], [821, 2, 1, "", "PWM_stop"], [821, 2, 1, "", "PWM_stop_async"], [821, 2, 1, "", "Sys_getDriverInfo"], [821, 2, 1, "", "Sys_getDriverInfo_async"], [821, 2, 1, "", "Sys_getGateway"], [821, 2, 1, "", "Sys_getGateway_async"], [821, 2, 1, "", "Sys_getIPAddrAndSubmask"], [821, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [821, 2, 1, "", "Sys_getMACAddr"], [821, 2, 1, "", "Sys_getMACAddr_async"], [821, 2, 1, "", "Sys_getMode"], [821, 2, 1, "", "Sys_getMode_async"], [821, 2, 1, "", "Sys_getPinModeInPort"], [821, 2, 1, "", "Sys_getPinModeInPort_async"], [821, 2, 1, "", "Sys_getPythonVersion"], [821, 2, 1, "", "Sys_getPythonVersion_async"], [821, 2, 1, "", "Sys_getRTC"], [821, 2, 1, "", "Sys_getRTC_async"], [821, 2, 1, "", "Sys_getSerialNumber"], [821, 2, 1, "", "Sys_getSerialNumber_async"], [821, 2, 1, "", "Sys_reboot"], [821, 2, 1, "", "Sys_reboot_async"], [821, 2, 1, "", "Sys_setAIOMode"], [821, 2, 1, "", "Sys_setAIOMode_async"], [821, 2, 1, "", "Sys_setDIMode"], [821, 2, 1, "", "Sys_setDIMode_async"], [821, 2, 1, "", "Sys_setDIOMode"], [821, 2, 1, "", "Sys_setDIOMode_async"], [821, 2, 1, "", "Sys_setDOMode"], [821, 2, 1, "", "Sys_setDOMode_async"], [821, 2, 1, "", "Sys_setIPAddrAndSubmask"], [821, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [821, 2, 1, "", "Sys_setIdleMode"], [821, 2, 1, "", "Sys_setIdleMode_async"], [821, 2, 1, "", "Sys_setMotionMode"], [821, 2, 1, "", "Sys_setMotionMode_async"], [821, 2, 1, "", "Sys_setRTC"], [821, 2, 1, "", "Sys_setRTC_async"], [821, 2, 1, "", "Sys_setSwitchMode"], [821, 2, 1, "", "Sys_setSwitchMode_async"], [821, 2, 1, "", "Sys_startRTCAlarm"], [821, 2, 1, "", "Sys_startRTCAlarm_async"], [821, 2, 1, "", "Sys_stopRTCAlarm"], [821, 2, 1, "", "Sys_stopRTCAlarm_async"], [821, 2, 1, "", "close"], [821, 2, 1, "", "connect"], [821, 2, 1, "", "disconnect"]], "pywpc.EthanEXD": [[822, 2, 1, "", "DIO_loadStartup"], [822, 2, 1, "", "DIO_loadStartup_async"], [822, 2, 1, "", "DI_closePins"], [822, 2, 1, "", "DI_closePins_async"], [822, 2, 1, "", "DI_closePort"], [822, 2, 1, "", "DI_closePort_async"], [822, 2, 1, "", "DI_getPinMap"], [822, 2, 1, "", "DI_openPins"], [822, 2, 1, "", "DI_openPins_async"], [822, 2, 1, "", "DI_openPort"], [822, 2, 1, "", "DI_openPort_async"], [822, 2, 1, "", "DI_readPins"], [822, 2, 1, "", "DI_readPins_async"], [822, 2, 1, "", "DI_readPort"], [822, 2, 1, "", "DI_readPort_async"], [822, 2, 1, "", "DO_closePins"], [822, 2, 1, "", "DO_closePins_async"], [822, 2, 1, "", "DO_closePort"], [822, 2, 1, "", "DO_closePort_async"], [822, 2, 1, "", "DO_getPinMap"], [822, 2, 1, "", "DO_openPins"], [822, 2, 1, "", "DO_openPins_async"], [822, 2, 1, "", "DO_openPort"], [822, 2, 1, "", "DO_openPort_async"], [822, 2, 1, "", "DO_togglePins"], [822, 2, 1, "", "DO_togglePins_async"], [822, 2, 1, "", "DO_togglePort"], [822, 2, 1, "", "DO_togglePort_async"], [822, 2, 1, "", "DO_writePins"], [822, 2, 1, "", "DO_writePins_async"], [822, 2, 1, "", "DO_writePort"], [822, 2, 1, "", "DO_writePort_async"], [822, 2, 1, "", "Logger_openFile"], [822, 2, 1, "", "Logger_write2DList"], [822, 2, 1, "", "Logger_writeHeader"], [822, 2, 1, "", "Logger_writeList"], [822, 2, 1, "", "Logger_writeValue"], [822, 2, 1, "", "Net_getGateway"], [822, 2, 1, "", "Net_getGateway_async"], [822, 2, 1, "", "Net_getIPAddrAndSubmask"], [822, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [822, 2, 1, "", "Net_getMACAddr"], [822, 2, 1, "", "Net_getMACAddr_async"], [822, 2, 1, "", "Net_setIPAddrAndSubmask"], [822, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [822, 2, 1, "", "Sys_getDriverInfo"], [822, 2, 1, "", "Sys_getDriverInfo_async"], [822, 2, 1, "", "Sys_getGateway"], [822, 2, 1, "", "Sys_getGateway_async"], [822, 2, 1, "", "Sys_getIPAddrAndSubmask"], [822, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [822, 2, 1, "", "Sys_getMACAddr"], [822, 2, 1, "", "Sys_getMACAddr_async"], [822, 2, 1, "", "Sys_getMode"], [822, 2, 1, "", "Sys_getMode_async"], [822, 2, 1, "", "Sys_getPinModeInPort"], [822, 2, 1, "", "Sys_getPinModeInPort_async"], [822, 2, 1, "", "Sys_getPythonVersion"], [822, 2, 1, "", "Sys_getPythonVersion_async"], [822, 2, 1, "", "Sys_getRTC"], [822, 2, 1, "", "Sys_getRTC_async"], [822, 2, 1, "", "Sys_getSerialNumber"], [822, 2, 1, "", "Sys_getSerialNumber_async"], [822, 2, 1, "", "Sys_reboot"], [822, 2, 1, "", "Sys_reboot_async"], [822, 2, 1, "", "Sys_setAIOMode"], [822, 2, 1, "", "Sys_setAIOMode_async"], [822, 2, 1, "", "Sys_setDIMode"], [822, 2, 1, "", "Sys_setDIMode_async"], [822, 2, 1, "", "Sys_setDIOMode"], [822, 2, 1, "", "Sys_setDIOMode_async"], [822, 2, 1, "", "Sys_setDOMode"], [822, 2, 1, "", "Sys_setDOMode_async"], [822, 2, 1, "", "Sys_setIPAddrAndSubmask"], [822, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [822, 2, 1, "", "Sys_setIdleMode"], [822, 2, 1, "", "Sys_setIdleMode_async"], [822, 2, 1, "", "Sys_setMotionMode"], [822, 2, 1, "", "Sys_setMotionMode_async"], [822, 2, 1, "", "Sys_setRTC"], [822, 2, 1, "", "Sys_setRTC_async"], [822, 2, 1, "", "Sys_setSwitchMode"], [822, 2, 1, "", "Sys_setSwitchMode_async"], [822, 2, 1, "", "Sys_startRTCAlarm"], [822, 2, 1, "", "Sys_startRTCAlarm_async"], [822, 2, 1, "", "Sys_stopRTCAlarm"], [822, 2, 1, "", "Sys_stopRTCAlarm_async"], [822, 2, 1, "", "close"], [822, 2, 1, "", "connect"], [822, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[823, 2, 1, "", "AI_close"], [823, 2, 1, "", "AI_close_async"], [823, 2, 1, "", "AI_open"], [823, 2, 1, "", "AI_open_async"], [823, 2, 1, "", "AI_readOnDemand"], [823, 2, 1, "", "AI_readOnDemand_async"], [823, 2, 1, "", "Logger_openFile"], [823, 2, 1, "", "Logger_write2DList"], [823, 2, 1, "", "Logger_writeHeader"], [823, 2, 1, "", "Logger_writeList"], [823, 2, 1, "", "Logger_writeValue"], [823, 2, 1, "", "Net_getGateway"], [823, 2, 1, "", "Net_getGateway_async"], [823, 2, 1, "", "Net_getIPAddrAndSubmask"], [823, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [823, 2, 1, "", "Net_getMACAddr"], [823, 2, 1, "", "Net_getMACAddr_async"], [823, 2, 1, "", "Net_setIPAddrAndSubmask"], [823, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [823, 2, 1, "", "Sys_getDriverInfo"], [823, 2, 1, "", "Sys_getDriverInfo_async"], [823, 2, 1, "", "Sys_getGateway"], [823, 2, 1, "", "Sys_getGateway_async"], [823, 2, 1, "", "Sys_getIPAddrAndSubmask"], [823, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [823, 2, 1, "", "Sys_getMACAddr"], [823, 2, 1, "", "Sys_getMACAddr_async"], [823, 2, 1, "", "Sys_getMode"], [823, 2, 1, "", "Sys_getMode_async"], [823, 2, 1, "", "Sys_getPinModeInPort"], [823, 2, 1, "", "Sys_getPinModeInPort_async"], [823, 2, 1, "", "Sys_getPythonVersion"], [823, 2, 1, "", "Sys_getPythonVersion_async"], [823, 2, 1, "", "Sys_getRTC"], [823, 2, 1, "", "Sys_getRTC_async"], [823, 2, 1, "", "Sys_getSerialNumber"], [823, 2, 1, "", "Sys_getSerialNumber_async"], [823, 2, 1, "", "Sys_reboot"], [823, 2, 1, "", "Sys_reboot_async"], [823, 2, 1, "", "Sys_setAIOMode"], [823, 2, 1, "", "Sys_setAIOMode_async"], [823, 2, 1, "", "Sys_setDIMode"], [823, 2, 1, "", "Sys_setDIMode_async"], [823, 2, 1, "", "Sys_setDIOMode"], [823, 2, 1, "", "Sys_setDIOMode_async"], [823, 2, 1, "", "Sys_setDOMode"], [823, 2, 1, "", "Sys_setDOMode_async"], [823, 2, 1, "", "Sys_setIPAddrAndSubmask"], [823, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [823, 2, 1, "", "Sys_setIdleMode"], [823, 2, 1, "", "Sys_setIdleMode_async"], [823, 2, 1, "", "Sys_setMotionMode"], [823, 2, 1, "", "Sys_setMotionMode_async"], [823, 2, 1, "", "Sys_setRTC"], [823, 2, 1, "", "Sys_setRTC_async"], [823, 2, 1, "", "Sys_setSwitchMode"], [823, 2, 1, "", "Sys_setSwitchMode_async"], [823, 2, 1, "", "Sys_startRTCAlarm"], [823, 2, 1, "", "Sys_startRTCAlarm_async"], [823, 2, 1, "", "Sys_stopRTCAlarm"], [823, 2, 1, "", "Sys_stopRTCAlarm_async"], [823, 2, 1, "", "close"], [823, 2, 1, "", "connect"], [823, 2, 1, "", "disconnect"]], "pywpc.EthanIA": [[824, 2, 1, "", "AI_close"], [824, 2, 1, "", "AI_close_async"], [824, 2, 1, "", "AI_open"], [824, 2, 1, "", "AI_open_async"], [824, 2, 1, "", "AI_readOnDemand"], [824, 2, 1, "", "AI_readOnDemand_async"], [824, 2, 1, "", "Logger_openFile"], [824, 2, 1, "", "Logger_write2DList"], [824, 2, 1, "", "Logger_writeHeader"], [824, 2, 1, "", "Logger_writeList"], [824, 2, 1, "", "Logger_writeValue"], [824, 2, 1, "", "Net_getGateway"], [824, 2, 1, "", "Net_getGateway_async"], [824, 2, 1, "", "Net_getIPAddrAndSubmask"], [824, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [824, 2, 1, "", "Net_getMACAddr"], [824, 2, 1, "", "Net_getMACAddr_async"], [824, 2, 1, "", "Net_setIPAddrAndSubmask"], [824, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [824, 2, 1, "", "Sys_getDriverInfo"], [824, 2, 1, "", "Sys_getDriverInfo_async"], [824, 2, 1, "", "Sys_getGateway"], [824, 2, 1, "", "Sys_getGateway_async"], [824, 2, 1, "", "Sys_getIPAddrAndSubmask"], [824, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [824, 2, 1, "", "Sys_getMACAddr"], [824, 2, 1, "", "Sys_getMACAddr_async"], [824, 2, 1, "", "Sys_getMode"], [824, 2, 1, "", "Sys_getMode_async"], [824, 2, 1, "", "Sys_getPinModeInPort"], [824, 2, 1, "", "Sys_getPinModeInPort_async"], [824, 2, 1, "", "Sys_getPythonVersion"], [824, 2, 1, "", "Sys_getPythonVersion_async"], [824, 2, 1, "", "Sys_getRTC"], [824, 2, 1, "", "Sys_getRTC_async"], [824, 2, 1, "", "Sys_getSerialNumber"], [824, 2, 1, "", "Sys_getSerialNumber_async"], [824, 2, 1, "", "Sys_reboot"], [824, 2, 1, "", "Sys_reboot_async"], [824, 2, 1, "", "Sys_setAIOMode"], [824, 2, 1, "", "Sys_setAIOMode_async"], [824, 2, 1, "", "Sys_setDIMode"], [824, 2, 1, "", "Sys_setDIMode_async"], [824, 2, 1, "", "Sys_setDIOMode"], [824, 2, 1, "", "Sys_setDIOMode_async"], [824, 2, 1, "", "Sys_setDOMode"], [824, 2, 1, "", "Sys_setDOMode_async"], [824, 2, 1, "", "Sys_setIPAddrAndSubmask"], [824, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [824, 2, 1, "", "Sys_setIdleMode"], [824, 2, 1, "", "Sys_setIdleMode_async"], [824, 2, 1, "", "Sys_setMotionMode"], [824, 2, 1, "", "Sys_setMotionMode_async"], [824, 2, 1, "", "Sys_setRTC"], [824, 2, 1, "", "Sys_setRTC_async"], [824, 2, 1, "", "Sys_setSwitchMode"], [824, 2, 1, "", "Sys_setSwitchMode_async"], [824, 2, 1, "", "Sys_startRTCAlarm"], [824, 2, 1, "", "Sys_startRTCAlarm_async"], [824, 2, 1, "", "Sys_stopRTCAlarm"], [824, 2, 1, "", "Sys_stopRTCAlarm_async"], [824, 2, 1, "", "close"], [824, 2, 1, "", "connect"], [824, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[825, 2, 1, "", "DIO_loadStartup"], [825, 2, 1, "", "DIO_loadStartup_async"], [825, 2, 1, "", "DI_closePins"], [825, 2, 1, "", "DI_closePins_async"], [825, 2, 1, "", "DI_closePort"], [825, 2, 1, "", "DI_closePort_async"], [825, 2, 1, "", "DI_getPinMap"], [825, 2, 1, "", "DI_openPins"], [825, 2, 1, "", "DI_openPins_async"], [825, 2, 1, "", "DI_openPort"], [825, 2, 1, "", "DI_openPort_async"], [825, 2, 1, "", "DI_readPins"], [825, 2, 1, "", "DI_readPins_async"], [825, 2, 1, "", "DI_readPort"], [825, 2, 1, "", "DI_readPort_async"], [825, 2, 1, "", "DO_closePins"], [825, 2, 1, "", "DO_closePins_async"], [825, 2, 1, "", "DO_closePort"], [825, 2, 1, "", "DO_closePort_async"], [825, 2, 1, "", "DO_getPinMap"], [825, 2, 1, "", "DO_openPins"], [825, 2, 1, "", "DO_openPins_async"], [825, 2, 1, "", "DO_openPort"], [825, 2, 1, "", "DO_openPort_async"], [825, 2, 1, "", "DO_togglePins"], [825, 2, 1, "", "DO_togglePins_async"], [825, 2, 1, "", "DO_togglePort"], [825, 2, 1, "", "DO_togglePort_async"], [825, 2, 1, "", "DO_writePins"], [825, 2, 1, "", "DO_writePins_async"], [825, 2, 1, "", "DO_writePort"], [825, 2, 1, "", "DO_writePort_async"], [825, 2, 1, "", "Logger_openFile"], [825, 2, 1, "", "Logger_write2DList"], [825, 2, 1, "", "Logger_writeHeader"], [825, 2, 1, "", "Logger_writeList"], [825, 2, 1, "", "Logger_writeValue"], [825, 2, 1, "", "Net_getGateway"], [825, 2, 1, "", "Net_getGateway_async"], [825, 2, 1, "", "Net_getIPAddrAndSubmask"], [825, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [825, 2, 1, "", "Net_getMACAddr"], [825, 2, 1, "", "Net_getMACAddr_async"], [825, 2, 1, "", "Net_setIPAddrAndSubmask"], [825, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [825, 2, 1, "", "Relay_close"], [825, 2, 1, "", "Relay_close_async"], [825, 2, 1, "", "Relay_open"], [825, 2, 1, "", "Relay_open_async"], [825, 2, 1, "", "Relay_read"], [825, 2, 1, "", "Relay_read_async"], [825, 2, 1, "", "Sys_getDriverInfo"], [825, 2, 1, "", "Sys_getDriverInfo_async"], [825, 2, 1, "", "Sys_getGateway"], [825, 2, 1, "", "Sys_getGateway_async"], [825, 2, 1, "", "Sys_getIPAddrAndSubmask"], [825, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [825, 2, 1, "", "Sys_getMACAddr"], [825, 2, 1, "", "Sys_getMACAddr_async"], [825, 2, 1, "", "Sys_getMode"], [825, 2, 1, "", "Sys_getMode_async"], [825, 2, 1, "", "Sys_getPinModeInPort"], [825, 2, 1, "", "Sys_getPinModeInPort_async"], [825, 2, 1, "", "Sys_getPythonVersion"], [825, 2, 1, "", "Sys_getPythonVersion_async"], [825, 2, 1, "", "Sys_getRTC"], [825, 2, 1, "", "Sys_getRTC_async"], [825, 2, 1, "", "Sys_getSerialNumber"], [825, 2, 1, "", "Sys_getSerialNumber_async"], [825, 2, 1, "", "Sys_reboot"], [825, 2, 1, "", "Sys_reboot_async"], [825, 2, 1, "", "Sys_setAIOMode"], [825, 2, 1, "", "Sys_setAIOMode_async"], [825, 2, 1, "", "Sys_setDIMode"], [825, 2, 1, "", "Sys_setDIMode_async"], [825, 2, 1, "", "Sys_setDIOMode"], [825, 2, 1, "", "Sys_setDIOMode_async"], [825, 2, 1, "", "Sys_setDOMode"], [825, 2, 1, "", "Sys_setDOMode_async"], [825, 2, 1, "", "Sys_setIPAddrAndSubmask"], [825, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [825, 2, 1, "", "Sys_setIdleMode"], [825, 2, 1, "", "Sys_setIdleMode_async"], [825, 2, 1, "", "Sys_setMotionMode"], [825, 2, 1, "", "Sys_setMotionMode_async"], [825, 2, 1, "", "Sys_setRTC"], [825, 2, 1, "", "Sys_setRTC_async"], [825, 2, 1, "", "Sys_setSwitchMode"], [825, 2, 1, "", "Sys_setSwitchMode_async"], [825, 2, 1, "", "Sys_startRTCAlarm"], [825, 2, 1, "", "Sys_startRTCAlarm_async"], [825, 2, 1, "", "Sys_stopRTCAlarm"], [825, 2, 1, "", "Sys_stopRTCAlarm_async"], [825, 2, 1, "", "close"], [825, 2, 1, "", "connect"], [825, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[826, 2, 1, "", "AO_close"], [826, 2, 1, "", "AO_closeStreaming"], [826, 2, 1, "", "AO_closeStreaming_async"], [826, 2, 1, "", "AO_close_async"], [826, 2, 1, "", "AO_getPort"], [826, 2, 1, "", "AO_getValues"], [826, 2, 1, "", "AO_getValues_async"], [826, 2, 1, "", "AO_open"], [826, 2, 1, "", "AO_openStreaming"], [826, 2, 1, "", "AO_openStreaming_async"], [826, 2, 1, "", "AO_open_async"], [826, 2, 1, "", "AO_setEnableChannels"], [826, 2, 1, "", "AO_setEnableChannels_async"], [826, 2, 1, "", "AO_setForm"], [826, 2, 1, "", "AO_setFormParam"], [826, 2, 1, "", "AO_setFormParam_async"], [826, 2, 1, "", "AO_setForm_async"], [826, 2, 1, "", "AO_setMode"], [826, 2, 1, "", "AO_setMode_async"], [826, 2, 1, "", "AO_setNumSamples"], [826, 2, 1, "", "AO_setNumSamples_async"], [826, 2, 1, "", "AO_setSamplingRate"], [826, 2, 1, "", "AO_setSamplingRate_async"], [826, 2, 1, "", "AO_startStreaming"], [826, 2, 1, "", "AO_startStreaming_async"], [826, 2, 1, "", "AO_writeAllChannels"], [826, 2, 1, "", "AO_writeAllChannels_async"], [826, 2, 1, "", "AO_writeOneChannel"], [826, 2, 1, "", "AO_writeOneChannel_async"], [826, 2, 1, "", "Logger_openFile"], [826, 2, 1, "", "Logger_write2DList"], [826, 2, 1, "", "Logger_writeHeader"], [826, 2, 1, "", "Logger_writeList"], [826, 2, 1, "", "Logger_writeValue"], [826, 2, 1, "", "Net_getGateway"], [826, 2, 1, "", "Net_getGateway_async"], [826, 2, 1, "", "Net_getIPAddrAndSubmask"], [826, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [826, 2, 1, "", "Net_getMACAddr"], [826, 2, 1, "", "Net_getMACAddr_async"], [826, 2, 1, "", "Net_setIPAddrAndSubmask"], [826, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [826, 2, 1, "", "Sys_getDriverInfo"], [826, 2, 1, "", "Sys_getDriverInfo_async"], [826, 2, 1, "", "Sys_getGateway"], [826, 2, 1, "", "Sys_getGateway_async"], [826, 2, 1, "", "Sys_getIPAddrAndSubmask"], [826, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [826, 2, 1, "", "Sys_getMACAddr"], [826, 2, 1, "", "Sys_getMACAddr_async"], [826, 2, 1, "", "Sys_getMode"], [826, 2, 1, "", "Sys_getMode_async"], [826, 2, 1, "", "Sys_getPinModeInPort"], [826, 2, 1, "", "Sys_getPinModeInPort_async"], [826, 2, 1, "", "Sys_getPythonVersion"], [826, 2, 1, "", "Sys_getPythonVersion_async"], [826, 2, 1, "", "Sys_getRTC"], [826, 2, 1, "", "Sys_getRTC_async"], [826, 2, 1, "", "Sys_getSerialNumber"], [826, 2, 1, "", "Sys_getSerialNumber_async"], [826, 2, 1, "", "Sys_reboot"], [826, 2, 1, "", "Sys_reboot_async"], [826, 2, 1, "", "Sys_setAIOMode"], [826, 2, 1, "", "Sys_setAIOMode_async"], [826, 2, 1, "", "Sys_setDIMode"], [826, 2, 1, "", "Sys_setDIMode_async"], [826, 2, 1, "", "Sys_setDIOMode"], [826, 2, 1, "", "Sys_setDIOMode_async"], [826, 2, 1, "", "Sys_setDOMode"], [826, 2, 1, "", "Sys_setDOMode_async"], [826, 2, 1, "", "Sys_setIPAddrAndSubmask"], [826, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [826, 2, 1, "", "Sys_setIdleMode"], [826, 2, 1, "", "Sys_setIdleMode_async"], [826, 2, 1, "", "Sys_setMotionMode"], [826, 2, 1, "", "Sys_setMotionMode_async"], [826, 2, 1, "", "Sys_setRTC"], [826, 2, 1, "", "Sys_setRTC_async"], [826, 2, 1, "", "Sys_setSwitchMode"], [826, 2, 1, "", "Sys_setSwitchMode_async"], [826, 2, 1, "", "Sys_startRTCAlarm"], [826, 2, 1, "", "Sys_startRTCAlarm_async"], [826, 2, 1, "", "Sys_stopRTCAlarm"], [826, 2, 1, "", "Sys_stopRTCAlarm_async"], [826, 2, 1, "", "close"], [826, 2, 1, "", "connect"], [826, 2, 1, "", "disconnect"]], "pywpc.EthanP": [[827, 2, 1, "", "DPOT_close"], [827, 2, 1, "", "DPOT_close_async"], [827, 2, 1, "", "DPOT_open"], [827, 2, 1, "", "DPOT_open_async"], [827, 2, 1, "", "DPOT_readByChannel"], [827, 2, 1, "", "DPOT_readByChannel_async"], [827, 2, 1, "", "DPOT_writeAllChannel"], [827, 2, 1, "", "DPOT_writeAllChannel_async"], [827, 2, 1, "", "DPOT_writeByChannel"], [827, 2, 1, "", "DPOT_writeByChannel_async"], [827, 2, 1, "", "Logger_openFile"], [827, 2, 1, "", "Logger_write2DList"], [827, 2, 1, "", "Logger_writeHeader"], [827, 2, 1, "", "Logger_writeList"], [827, 2, 1, "", "Logger_writeValue"], [827, 2, 1, "", "Net_getGateway"], [827, 2, 1, "", "Net_getGateway_async"], [827, 2, 1, "", "Net_getIPAddrAndSubmask"], [827, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [827, 2, 1, "", "Net_getMACAddr"], [827, 2, 1, "", "Net_getMACAddr_async"], [827, 2, 1, "", "Net_setIPAddrAndSubmask"], [827, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [827, 2, 1, "", "Sys_getDriverInfo"], [827, 2, 1, "", "Sys_getDriverInfo_async"], [827, 2, 1, "", "Sys_getGateway"], [827, 2, 1, "", "Sys_getGateway_async"], [827, 2, 1, "", "Sys_getIPAddrAndSubmask"], [827, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [827, 2, 1, "", "Sys_getMACAddr"], [827, 2, 1, "", "Sys_getMACAddr_async"], [827, 2, 1, "", "Sys_getMode"], [827, 2, 1, "", "Sys_getMode_async"], [827, 2, 1, "", "Sys_getPinModeInPort"], [827, 2, 1, "", "Sys_getPinModeInPort_async"], [827, 2, 1, "", "Sys_getPythonVersion"], [827, 2, 1, "", "Sys_getPythonVersion_async"], [827, 2, 1, "", "Sys_getRTC"], [827, 2, 1, "", "Sys_getRTC_async"], [827, 2, 1, "", "Sys_getSerialNumber"], [827, 2, 1, "", "Sys_getSerialNumber_async"], [827, 2, 1, "", "Sys_reboot"], [827, 2, 1, "", "Sys_reboot_async"], [827, 2, 1, "", "Sys_setAIOMode"], [827, 2, 1, "", "Sys_setAIOMode_async"], [827, 2, 1, "", "Sys_setDIMode"], [827, 2, 1, "", "Sys_setDIMode_async"], [827, 2, 1, "", "Sys_setDIOMode"], [827, 2, 1, "", "Sys_setDIOMode_async"], [827, 2, 1, "", "Sys_setDOMode"], [827, 2, 1, "", "Sys_setDOMode_async"], [827, 2, 1, "", "Sys_setIPAddrAndSubmask"], [827, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [827, 2, 1, "", "Sys_setIdleMode"], [827, 2, 1, "", "Sys_setIdleMode_async"], [827, 2, 1, "", "Sys_setMotionMode"], [827, 2, 1, "", "Sys_setMotionMode_async"], [827, 2, 1, "", "Sys_setRTC"], [827, 2, 1, "", "Sys_setRTC_async"], [827, 2, 1, "", "Sys_setSwitchMode"], [827, 2, 1, "", "Sys_setSwitchMode_async"], [827, 2, 1, "", "Sys_startRTCAlarm"], [827, 2, 1, "", "Sys_startRTCAlarm_async"], [827, 2, 1, "", "Sys_stopRTCAlarm"], [827, 2, 1, "", "Sys_stopRTCAlarm_async"], [827, 2, 1, "", "close"], [827, 2, 1, "", "connect"], [827, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[828, 2, 1, "", "Logger_openFile"], [828, 2, 1, "", "Logger_write2DList"], [828, 2, 1, "", "Logger_writeHeader"], [828, 2, 1, "", "Logger_writeList"], [828, 2, 1, "", "Logger_writeValue"], [828, 2, 1, "", "Net_getGateway"], [828, 2, 1, "", "Net_getGateway_async"], [828, 2, 1, "", "Net_getIPAddrAndSubmask"], [828, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [828, 2, 1, "", "Net_getMACAddr"], [828, 2, 1, "", "Net_getMACAddr_async"], [828, 2, 1, "", "Net_setIPAddrAndSubmask"], [828, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [828, 2, 1, "", "Sys_getDriverInfo"], [828, 2, 1, "", "Sys_getDriverInfo_async"], [828, 2, 1, "", "Sys_getGateway"], [828, 2, 1, "", "Sys_getGateway_async"], [828, 2, 1, "", "Sys_getIPAddrAndSubmask"], [828, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [828, 2, 1, "", "Sys_getMACAddr"], [828, 2, 1, "", "Sys_getMACAddr_async"], [828, 2, 1, "", "Sys_getMode"], [828, 2, 1, "", "Sys_getMode_async"], [828, 2, 1, "", "Sys_getPinModeInPort"], [828, 2, 1, "", "Sys_getPinModeInPort_async"], [828, 2, 1, "", "Sys_getPythonVersion"], [828, 2, 1, "", "Sys_getPythonVersion_async"], [828, 2, 1, "", "Sys_getRTC"], [828, 2, 1, "", "Sys_getRTC_async"], [828, 2, 1, "", "Sys_getSerialNumber"], [828, 2, 1, "", "Sys_getSerialNumber_async"], [828, 2, 1, "", "Sys_reboot"], [828, 2, 1, "", "Sys_reboot_async"], [828, 2, 1, "", "Sys_setAIOMode"], [828, 2, 1, "", "Sys_setAIOMode_async"], [828, 2, 1, "", "Sys_setDIMode"], [828, 2, 1, "", "Sys_setDIMode_async"], [828, 2, 1, "", "Sys_setDIOMode"], [828, 2, 1, "", "Sys_setDIOMode_async"], [828, 2, 1, "", "Sys_setDOMode"], [828, 2, 1, "", "Sys_setDOMode_async"], [828, 2, 1, "", "Sys_setIPAddrAndSubmask"], [828, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [828, 2, 1, "", "Sys_setIdleMode"], [828, 2, 1, "", "Sys_setIdleMode_async"], [828, 2, 1, "", "Sys_setMotionMode"], [828, 2, 1, "", "Sys_setMotionMode_async"], [828, 2, 1, "", "Sys_setRTC"], [828, 2, 1, "", "Sys_setRTC_async"], [828, 2, 1, "", "Sys_setSwitchMode"], [828, 2, 1, "", "Sys_setSwitchMode_async"], [828, 2, 1, "", "Sys_startRTCAlarm"], [828, 2, 1, "", "Sys_startRTCAlarm_async"], [828, 2, 1, "", "Sys_stopRTCAlarm"], [828, 2, 1, "", "Sys_stopRTCAlarm_async"], [828, 2, 1, "", "Thermal_close"], [828, 2, 1, "", "Thermal_close_async"], [828, 2, 1, "", "Thermal_getPinMap"], [828, 2, 1, "", "Thermal_getStatus"], [828, 2, 1, "", "Thermal_getStatus_async"], [828, 2, 1, "", "Thermal_open"], [828, 2, 1, "", "Thermal_open_async"], [828, 2, 1, "", "Thermal_readSensor"], [828, 2, 1, "", "Thermal_readSensor_async"], [828, 2, 1, "", "Thermal_setOverSampling"], [828, 2, 1, "", "Thermal_setOverSampling_async"], [828, 2, 1, "", "Thermal_setType"], [828, 2, 1, "", "Thermal_setType_async"], [828, 2, 1, "", "close"], [828, 2, 1, "", "connect"], [828, 2, 1, "", "disconnect"]], "pywpc.STEM": [[829, 2, 1, "", "AI_close"], [829, 2, 1, "", "AI_close_async"], [829, 2, 1, "", "AI_enableCS"], [829, 2, 1, "", "AI_enableCS_async"], [829, 2, 1, "", "AI_enableChannel"], [829, 2, 1, "", "AI_enableChannel_async"], [829, 2, 1, "", "AI_open"], [829, 2, 1, "", "AI_open_async"], [829, 2, 1, "", "AI_readOnDemand"], [829, 2, 1, "", "AI_readOnDemand_async"], [829, 2, 1, "", "AI_readStreaming"], [829, 2, 1, "", "AI_readStreaming_async"], [829, 2, 1, "", "AI_setMode"], [829, 2, 1, "", "AI_setMode_async"], [829, 2, 1, "", "AI_setNumSamples"], [829, 2, 1, "", "AI_setNumSamples_async"], [829, 2, 1, "", "AI_setSamplingRate"], [829, 2, 1, "", "AI_setSamplingRate_async"], [829, 2, 1, "", "AI_start"], [829, 2, 1, "", "AI_start_async"], [829, 2, 1, "", "AI_stop"], [829, 2, 1, "", "AI_stop_async"], [829, 2, 1, "", "AO_close"], [829, 2, 1, "", "AO_closeStreaming"], [829, 2, 1, "", "AO_closeStreaming_async"], [829, 2, 1, "", "AO_close_async"], [829, 2, 1, "", "AO_getPort"], [829, 2, 1, "", "AO_getValues"], [829, 2, 1, "", "AO_getValues_async"], [829, 2, 1, "", "AO_open"], [829, 2, 1, "", "AO_openStreaming"], [829, 2, 1, "", "AO_openStreaming_async"], [829, 2, 1, "", "AO_open_async"], [829, 2, 1, "", "AO_setEnableChannels"], [829, 2, 1, "", "AO_setEnableChannels_async"], [829, 2, 1, "", "AO_setForm"], [829, 2, 1, "", "AO_setFormParam"], [829, 2, 1, "", "AO_setFormParam_async"], [829, 2, 1, "", "AO_setForm_async"], [829, 2, 1, "", "AO_setMode"], [829, 2, 1, "", "AO_setMode_async"], [829, 2, 1, "", "AO_setNumSamples"], [829, 2, 1, "", "AO_setNumSamples_async"], [829, 2, 1, "", "AO_setSamplingRate"], [829, 2, 1, "", "AO_setSamplingRate_async"], [829, 2, 1, "", "AO_startStreaming"], [829, 2, 1, "", "AO_startStreaming_async"], [829, 2, 1, "", "AO_writeAllChannels"], [829, 2, 1, "", "AO_writeAllChannels_async"], [829, 2, 1, "", "AO_writeOneChannel"], [829, 2, 1, "", "AO_writeOneChannel_async"], [829, 2, 1, "", "DIO_loadStartup"], [829, 2, 1, "", "DIO_loadStartup_async"], [829, 2, 1, "", "DI_closePins"], [829, 2, 1, "", "DI_closePins_async"], [829, 2, 1, "", "DI_closePort"], [829, 2, 1, "", "DI_closePort_async"], [829, 2, 1, "", "DI_getPinMap"], [829, 2, 1, "", "DI_openPins"], [829, 2, 1, "", "DI_openPins_async"], [829, 2, 1, "", "DI_openPort"], [829, 2, 1, "", "DI_openPort_async"], [829, 2, 1, "", "DI_readPins"], [829, 2, 1, "", "DI_readPins_async"], [829, 2, 1, "", "DI_readPort"], [829, 2, 1, "", "DI_readPort_async"], [829, 2, 1, "", "DO_closePins"], [829, 2, 1, "", "DO_closePins_async"], [829, 2, 1, "", "DO_closePort"], [829, 2, 1, "", "DO_closePort_async"], [829, 2, 1, "", "DO_getPinMap"], [829, 2, 1, "", "DO_openPins"], [829, 2, 1, "", "DO_openPins_async"], [829, 2, 1, "", "DO_openPort"], [829, 2, 1, "", "DO_openPort_async"], [829, 2, 1, "", "DO_togglePins"], [829, 2, 1, "", "DO_togglePins_async"], [829, 2, 1, "", "DO_togglePort"], [829, 2, 1, "", "DO_togglePort_async"], [829, 2, 1, "", "DO_writePins"], [829, 2, 1, "", "DO_writePins_async"], [829, 2, 1, "", "DO_writePort"], [829, 2, 1, "", "DO_writePort_async"], [829, 2, 1, "", "Logger_openFile"], [829, 2, 1, "", "Logger_write2DList"], [829, 2, 1, "", "Logger_writeHeader"], [829, 2, 1, "", "Logger_writeList"], [829, 2, 1, "", "Logger_writeValue"], [829, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [829, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [829, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [829, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [829, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [829, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [829, 2, 1, "", "Motion_cfgAlarm"], [829, 2, 1, "", "Motion_cfgAlarm_async"], [829, 2, 1, "", "Motion_cfgAxis"], [829, 2, 1, "", "Motion_cfgAxisMove"], [829, 2, 1, "", "Motion_cfgAxisMove_async"], [829, 2, 1, "", "Motion_cfgAxis_async"], [829, 2, 1, "", "Motion_cfgBreakPoint"], [829, 2, 1, "", "Motion_cfgBreakPoint_async"], [829, 2, 1, "", "Motion_cfgCapture"], [829, 2, 1, "", "Motion_cfgCapture_async"], [829, 2, 1, "", "Motion_cfgCircularInterpo"], [829, 2, 1, "", "Motion_cfgCircularInterpo_async"], [829, 2, 1, "", "Motion_cfgEncoder"], [829, 2, 1, "", "Motion_cfgEncoder_async"], [829, 2, 1, "", "Motion_cfgFindRef"], [829, 2, 1, "", "Motion_cfgFindRef_async"], [829, 2, 1, "", "Motion_cfgHelicalInterpo"], [829, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [829, 2, 1, "", "Motion_cfgHome"], [829, 2, 1, "", "Motion_cfgHome_async"], [829, 2, 1, "", "Motion_cfgInposi"], [829, 2, 1, "", "Motion_cfgInposi_async"], [829, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [829, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [829, 2, 1, "", "Motion_cfgLimit"], [829, 2, 1, "", "Motion_cfgLimit_async"], [829, 2, 1, "", "Motion_checkRef"], [829, 2, 1, "", "Motion_checkRef_async"], [829, 2, 1, "", "Motion_close"], [829, 2, 1, "", "Motion_close_async"], [829, 2, 1, "", "Motion_enableBreakPoint"], [829, 2, 1, "", "Motion_enableBreakPoint_async"], [829, 2, 1, "", "Motion_enableCapture"], [829, 2, 1, "", "Motion_enableCapture_async"], [829, 2, 1, "", "Motion_enableServoOff"], [829, 2, 1, "", "Motion_enableServoOff_async"], [829, 2, 1, "", "Motion_enableServoOn"], [829, 2, 1, "", "Motion_enableServoOn_async"], [829, 2, 1, "", "Motion_findRef"], [829, 2, 1, "", "Motion_findRef_async"], [829, 2, 1, "", "Motion_getEncoderPosi"], [829, 2, 1, "", "Motion_getEncoderPosi_async"], [829, 2, 1, "", "Motion_getHomeStatus"], [829, 2, 1, "", "Motion_getHomeStatus_async"], [829, 2, 1, "", "Motion_getLimitStatus"], [829, 2, 1, "", "Motion_getLimitStatus_async"], [829, 2, 1, "", "Motion_getLogicalPosi"], [829, 2, 1, "", "Motion_getLogicalPosi_async"], [829, 2, 1, "", "Motion_getMoveStatus"], [829, 2, 1, "", "Motion_getMoveStatus_async"], [829, 2, 1, "", "Motion_loadCfgFile"], [829, 2, 1, "", "Motion_loadCfgFile_async"], [829, 2, 1, "", "Motion_open"], [829, 2, 1, "", "Motion_openCfgFile"], [829, 2, 1, "", "Motion_openCfgFile_async"], [829, 2, 1, "", "Motion_open_async"], [829, 2, 1, "", "Motion_overrideAxisAccel"], [829, 2, 1, "", "Motion_overrideAxisAccel_async"], [829, 2, 1, "", "Motion_overrideAxisPosi"], [829, 2, 1, "", "Motion_overrideAxisPosi_async"], [829, 2, 1, "", "Motion_overrideAxisVelocity"], [829, 2, 1, "", "Motion_overrideAxisVelocity_async"], [829, 2, 1, "", "Motion_readCapturePoint"], [829, 2, 1, "", "Motion_readCapturePoint_async"], [829, 2, 1, "", "Motion_rstEncoderPosi"], [829, 2, 1, "", "Motion_rstEncoderPosi_async"], [829, 2, 1, "", "Motion_saveCfgFile"], [829, 2, 1, "", "Motion_saveCfgFile_async"], [829, 2, 1, "", "Motion_setLogicalPosi"], [829, 2, 1, "", "Motion_setLogicalPosi_async"], [829, 2, 1, "", "Motion_startCircularInterpo"], [829, 2, 1, "", "Motion_startCircularInterpo_async"], [829, 2, 1, "", "Motion_startHelicalInterpo"], [829, 2, 1, "", "Motion_startHelicalInterpo_async"], [829, 2, 1, "", "Motion_startLinearInterpo"], [829, 2, 1, "", "Motion_startLinearInterpo_async"], [829, 2, 1, "", "Motion_startMultiAxisMove"], [829, 2, 1, "", "Motion_startMultiAxisMove_async"], [829, 2, 1, "", "Motion_startSingleAxisMove"], [829, 2, 1, "", "Motion_startSingleAxisMove_async"], [829, 2, 1, "", "Motion_stop"], [829, 2, 1, "", "Motion_stop_async"], [829, 2, 1, "", "Net_getGateway"], [829, 2, 1, "", "Net_getGateway_async"], [829, 2, 1, "", "Net_getIPAddrAndSubmask"], [829, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [829, 2, 1, "", "Net_getMACAddr"], [829, 2, 1, "", "Net_getMACAddr_async"], [829, 2, 1, "", "Net_setIPAddrAndSubmask"], [829, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [829, 2, 1, "", "Sys_getDriverInfo"], [829, 2, 1, "", "Sys_getDriverInfo_async"], [829, 2, 1, "", "Sys_getGateway"], [829, 2, 1, "", "Sys_getGateway_async"], [829, 2, 1, "", "Sys_getIPAddrAndSubmask"], [829, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [829, 2, 1, "", "Sys_getMACAddr"], [829, 2, 1, "", "Sys_getMACAddr_async"], [829, 2, 1, "", "Sys_getMode"], [829, 2, 1, "", "Sys_getMode_async"], [829, 2, 1, "", "Sys_getPinModeInPort"], [829, 2, 1, "", "Sys_getPinModeInPort_async"], [829, 2, 1, "", "Sys_getPythonVersion"], [829, 2, 1, "", "Sys_getPythonVersion_async"], [829, 2, 1, "", "Sys_getRTC"], [829, 2, 1, "", "Sys_getRTC_async"], [829, 2, 1, "", "Sys_getSerialNumber"], [829, 2, 1, "", "Sys_getSerialNumber_async"], [829, 2, 1, "", "Sys_reboot"], [829, 2, 1, "", "Sys_reboot_async"], [829, 2, 1, "", "Sys_setAIOMode"], [829, 2, 1, "", "Sys_setAIOMode_async"], [829, 2, 1, "", "Sys_setDIMode"], [829, 2, 1, "", "Sys_setDIMode_async"], [829, 2, 1, "", "Sys_setDIOMode"], [829, 2, 1, "", "Sys_setDIOMode_async"], [829, 2, 1, "", "Sys_setDOMode"], [829, 2, 1, "", "Sys_setDOMode_async"], [829, 2, 1, "", "Sys_setIPAddrAndSubmask"], [829, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [829, 2, 1, "", "Sys_setIdleMode"], [829, 2, 1, "", "Sys_setIdleMode_async"], [829, 2, 1, "", "Sys_setMotionMode"], [829, 2, 1, "", "Sys_setMotionMode_async"], [829, 2, 1, "", "Sys_setRTC"], [829, 2, 1, "", "Sys_setRTC_async"], [829, 2, 1, "", "Sys_setSwitchMode"], [829, 2, 1, "", "Sys_setSwitchMode_async"], [829, 2, 1, "", "Sys_startRTCAlarm"], [829, 2, 1, "", "Sys_startRTCAlarm_async"], [829, 2, 1, "", "Sys_stopRTCAlarm"], [829, 2, 1, "", "Sys_stopRTCAlarm_async"], [829, 2, 1, "", "close"], [829, 2, 1, "", "connect"], [829, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[830, 2, 1, "", "AI_close"], [830, 2, 1, "", "AI_close_async"], [830, 2, 1, "", "AI_enableCS"], [830, 2, 1, "", "AI_enableCS_async"], [830, 2, 1, "", "AI_enableChannel"], [830, 2, 1, "", "AI_enableChannel_async"], [830, 2, 1, "", "AI_open"], [830, 2, 1, "", "AI_open_async"], [830, 2, 1, "", "AI_readOnDemand"], [830, 2, 1, "", "AI_readOnDemand_async"], [830, 2, 1, "", "AI_readStreaming"], [830, 2, 1, "", "AI_readStreaming_async"], [830, 2, 1, "", "AI_setMode"], [830, 2, 1, "", "AI_setMode_async"], [830, 2, 1, "", "AI_setNumSamples"], [830, 2, 1, "", "AI_setNumSamples_async"], [830, 2, 1, "", "AI_setSamplingRate"], [830, 2, 1, "", "AI_setSamplingRate_async"], [830, 2, 1, "", "AI_start"], [830, 2, 1, "", "AI_start_async"], [830, 2, 1, "", "AI_stop"], [830, 2, 1, "", "AI_stop_async"], [830, 2, 1, "", "Counter_close"], [830, 2, 1, "", "Counter_close_async"], [830, 2, 1, "", "Counter_open"], [830, 2, 1, "", "Counter_open_async"], [830, 2, 1, "", "Counter_readFrequency"], [830, 2, 1, "", "Counter_readFrequency_async"], [830, 2, 1, "", "Counter_readPosition"], [830, 2, 1, "", "Counter_readPosition_async"], [830, 2, 1, "", "Counter_setEdge"], [830, 2, 1, "", "Counter_setEdge_async"], [830, 2, 1, "", "Counter_setFreqWindow"], [830, 2, 1, "", "Counter_setFreqWindow_async"], [830, 2, 1, "", "Counter_setPosition"], [830, 2, 1, "", "Counter_setPosition_async"], [830, 2, 1, "", "Counter_start"], [830, 2, 1, "", "Counter_start_async"], [830, 2, 1, "", "Counter_stop"], [830, 2, 1, "", "Counter_stop_async"], [830, 2, 1, "", "DIO_loadStartup"], [830, 2, 1, "", "DIO_loadStartup_async"], [830, 2, 1, "", "DI_closePins"], [830, 2, 1, "", "DI_closePins_async"], [830, 2, 1, "", "DI_closePort"], [830, 2, 1, "", "DI_closePort_async"], [830, 2, 1, "", "DI_getPinMap"], [830, 2, 1, "", "DI_openPins"], [830, 2, 1, "", "DI_openPins_async"], [830, 2, 1, "", "DI_openPort"], [830, 2, 1, "", "DI_openPort_async"], [830, 2, 1, "", "DI_readPins"], [830, 2, 1, "", "DI_readPins_async"], [830, 2, 1, "", "DI_readPort"], [830, 2, 1, "", "DI_readPort_async"], [830, 2, 1, "", "DO_closePins"], [830, 2, 1, "", "DO_closePins_async"], [830, 2, 1, "", "DO_closePort"], [830, 2, 1, "", "DO_closePort_async"], [830, 2, 1, "", "DO_getPinMap"], [830, 2, 1, "", "DO_openPins"], [830, 2, 1, "", "DO_openPins_async"], [830, 2, 1, "", "DO_openPort"], [830, 2, 1, "", "DO_openPort_async"], [830, 2, 1, "", "DO_togglePins"], [830, 2, 1, "", "DO_togglePins_async"], [830, 2, 1, "", "DO_togglePort"], [830, 2, 1, "", "DO_togglePort_async"], [830, 2, 1, "", "DO_writePins"], [830, 2, 1, "", "DO_writePins_async"], [830, 2, 1, "", "DO_writePort"], [830, 2, 1, "", "DO_writePort_async"], [830, 2, 1, "", "Encoder_close"], [830, 2, 1, "", "Encoder_close_async"], [830, 2, 1, "", "Encoder_getDirection"], [830, 2, 1, "", "Encoder_getDirection_async"], [830, 2, 1, "", "Encoder_open"], [830, 2, 1, "", "Encoder_open_async"], [830, 2, 1, "", "Encoder_readFrequency"], [830, 2, 1, "", "Encoder_readFrequency_async"], [830, 2, 1, "", "Encoder_readPosition"], [830, 2, 1, "", "Encoder_readPosition_async"], [830, 2, 1, "", "Encoder_setDirection"], [830, 2, 1, "", "Encoder_setDirection_async"], [830, 2, 1, "", "Encoder_setFreqWindow"], [830, 2, 1, "", "Encoder_setFreqWindow_async"], [830, 2, 1, "", "Encoder_setPosition"], [830, 2, 1, "", "Encoder_setPosition_async"], [830, 2, 1, "", "Encoder_start"], [830, 2, 1, "", "Encoder_start_async"], [830, 2, 1, "", "Encoder_stop"], [830, 2, 1, "", "Encoder_stop_async"], [830, 2, 1, "", "I2C_close"], [830, 2, 1, "", "I2C_close_async"], [830, 2, 1, "", "I2C_getPinMap"], [830, 2, 1, "", "I2C_open"], [830, 2, 1, "", "I2C_open_async"], [830, 2, 1, "", "I2C_read"], [830, 2, 1, "", "I2C_read_async"], [830, 2, 1, "", "I2C_reset"], [830, 2, 1, "", "I2C_reset_async"], [830, 2, 1, "", "I2C_setAddressSize"], [830, 2, 1, "", "I2C_setAddressSize_async"], [830, 2, 1, "", "I2C_setClockRate"], [830, 2, 1, "", "I2C_setClockRate_async"], [830, 2, 1, "", "I2C_write"], [830, 2, 1, "", "I2C_write_async"], [830, 2, 1, "", "Logger_openFile"], [830, 2, 1, "", "Logger_write2DList"], [830, 2, 1, "", "Logger_writeHeader"], [830, 2, 1, "", "Logger_writeList"], [830, 2, 1, "", "Logger_writeValue"], [830, 2, 1, "", "PWM_close"], [830, 2, 1, "", "PWM_close_async"], [830, 2, 1, "", "PWM_open"], [830, 2, 1, "", "PWM_open_async"], [830, 2, 1, "", "PWM_setDutyCycle"], [830, 2, 1, "", "PWM_setDutyCycle_async"], [830, 2, 1, "", "PWM_setFrequency"], [830, 2, 1, "", "PWM_setFrequency_async"], [830, 2, 1, "", "PWM_start"], [830, 2, 1, "", "PWM_start_async"], [830, 2, 1, "", "PWM_stop"], [830, 2, 1, "", "PWM_stop_async"], [830, 2, 1, "", "SPI_close"], [830, 2, 1, "", "SPI_close_async"], [830, 2, 1, "", "SPI_getPinMap"], [830, 2, 1, "", "SPI_open"], [830, 2, 1, "", "SPI_open_async"], [830, 2, 1, "", "SPI_read"], [830, 2, 1, "", "SPI_readAndWrite"], [830, 2, 1, "", "SPI_readAndWrite_async"], [830, 2, 1, "", "SPI_read_async"], [830, 2, 1, "", "SPI_reset"], [830, 2, 1, "", "SPI_reset_async"], [830, 2, 1, "", "SPI_setDataSize"], [830, 2, 1, "", "SPI_setDataSize_async"], [830, 2, 1, "", "SPI_setFirstBit"], [830, 2, 1, "", "SPI_setFirstBit_async"], [830, 2, 1, "", "SPI_setMode"], [830, 2, 1, "", "SPI_setMode_async"], [830, 2, 1, "", "SPI_setPrescaler"], [830, 2, 1, "", "SPI_setPrescaler_async"], [830, 2, 1, "", "SPI_write"], [830, 2, 1, "", "SPI_write_async"], [830, 2, 1, "", "Sys_getDriverInfo"], [830, 2, 1, "", "Sys_getDriverInfo_async"], [830, 2, 1, "", "Sys_getMode"], [830, 2, 1, "", "Sys_getMode_async"], [830, 2, 1, "", "Sys_getPinModeInPort"], [830, 2, 1, "", "Sys_getPinModeInPort_async"], [830, 2, 1, "", "Sys_getPythonVersion"], [830, 2, 1, "", "Sys_getPythonVersion_async"], [830, 2, 1, "", "Sys_getRTC"], [830, 2, 1, "", "Sys_getRTC_async"], [830, 2, 1, "", "Sys_getSerialNumber"], [830, 2, 1, "", "Sys_getSerialNumber_async"], [830, 2, 1, "", "Sys_reboot"], [830, 2, 1, "", "Sys_reboot_async"], [830, 2, 1, "", "Sys_setAIOMode"], [830, 2, 1, "", "Sys_setAIOMode_async"], [830, 2, 1, "", "Sys_setDIMode"], [830, 2, 1, "", "Sys_setDIMode_async"], [830, 2, 1, "", "Sys_setDIOMode"], [830, 2, 1, "", "Sys_setDIOMode_async"], [830, 2, 1, "", "Sys_setDOMode"], [830, 2, 1, "", "Sys_setDOMode_async"], [830, 2, 1, "", "Sys_setIdleMode"], [830, 2, 1, "", "Sys_setIdleMode_async"], [830, 2, 1, "", "Sys_setMotionMode"], [830, 2, 1, "", "Sys_setMotionMode_async"], [830, 2, 1, "", "Sys_setRTC"], [830, 2, 1, "", "Sys_setRTC_async"], [830, 2, 1, "", "Sys_setSwitchMode"], [830, 2, 1, "", "Sys_setSwitchMode_async"], [830, 2, 1, "", "Sys_startRTCAlarm"], [830, 2, 1, "", "Sys_startRTCAlarm_async"], [830, 2, 1, "", "Sys_stopRTCAlarm"], [830, 2, 1, "", "Sys_stopRTCAlarm_async"], [830, 2, 1, "", "UART_close"], [830, 2, 1, "", "UART_close_async"], [830, 2, 1, "", "UART_getPinMap"], [830, 2, 1, "", "UART_open"], [830, 2, 1, "", "UART_open_async"], [830, 2, 1, "", "UART_read"], [830, 2, 1, "", "UART_read_async"], [830, 2, 1, "", "UART_reset"], [830, 2, 1, "", "UART_reset_async"], [830, 2, 1, "", "UART_setBaudRate"], [830, 2, 1, "", "UART_setBaudRate_async"], [830, 2, 1, "", "UART_setDataBit"], [830, 2, 1, "", "UART_setDataBit_async"], [830, 2, 1, "", "UART_setNumStopBit"], [830, 2, 1, "", "UART_setNumStopBit_async"], [830, 2, 1, "", "UART_setParity"], [830, 2, 1, "", "UART_setParity_async"], [830, 2, 1, "", "UART_write"], [830, 2, 1, "", "UART_write_async"], [830, 2, 1, "", "close"], [830, 2, 1, "", "connect"], [830, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[831, 2, 1, "", "AI_close"], [831, 2, 1, "", "AI_close_async"], [831, 2, 1, "", "AI_enableCS"], [831, 2, 1, "", "AI_enableCS_async"], [831, 2, 1, "", "AI_enableChannel"], [831, 2, 1, "", "AI_enableChannel_async"], [831, 2, 1, "", "AI_open"], [831, 2, 1, "", "AI_open_async"], [831, 2, 1, "", "AI_readOnDemand"], [831, 2, 1, "", "AI_readOnDemand_async"], [831, 2, 1, "", "AI_readStreaming"], [831, 2, 1, "", "AI_readStreaming_async"], [831, 2, 1, "", "AI_setMode"], [831, 2, 1, "", "AI_setMode_async"], [831, 2, 1, "", "AI_setNumSamples"], [831, 2, 1, "", "AI_setNumSamples_async"], [831, 2, 1, "", "AI_setSamplingRate"], [831, 2, 1, "", "AI_setSamplingRate_async"], [831, 2, 1, "", "AI_start"], [831, 2, 1, "", "AI_start_async"], [831, 2, 1, "", "AI_stop"], [831, 2, 1, "", "AI_stop_async"], [831, 2, 1, "", "AO_close"], [831, 2, 1, "", "AO_closeStreaming"], [831, 2, 1, "", "AO_closeStreaming_async"], [831, 2, 1, "", "AO_close_async"], [831, 2, 1, "", "AO_getPort"], [831, 2, 1, "", "AO_getValues"], [831, 2, 1, "", "AO_getValues_async"], [831, 2, 1, "", "AO_open"], [831, 2, 1, "", "AO_openStreaming"], [831, 2, 1, "", "AO_openStreaming_async"], [831, 2, 1, "", "AO_open_async"], [831, 2, 1, "", "AO_setEnableChannels"], [831, 2, 1, "", "AO_setEnableChannels_async"], [831, 2, 1, "", "AO_setForm"], [831, 2, 1, "", "AO_setFormParam"], [831, 2, 1, "", "AO_setFormParam_async"], [831, 2, 1, "", "AO_setForm_async"], [831, 2, 1, "", "AO_setMode"], [831, 2, 1, "", "AO_setMode_async"], [831, 2, 1, "", "AO_setNumSamples"], [831, 2, 1, "", "AO_setNumSamples_async"], [831, 2, 1, "", "AO_setSamplingRate"], [831, 2, 1, "", "AO_setSamplingRate_async"], [831, 2, 1, "", "AO_startStreaming"], [831, 2, 1, "", "AO_startStreaming_async"], [831, 2, 1, "", "AO_writeAllChannels"], [831, 2, 1, "", "AO_writeAllChannels_async"], [831, 2, 1, "", "AO_writeOneChannel"], [831, 2, 1, "", "AO_writeOneChannel_async"], [831, 2, 1, "", "Counter_close"], [831, 2, 1, "", "Counter_close_async"], [831, 2, 1, "", "Counter_open"], [831, 2, 1, "", "Counter_open_async"], [831, 2, 1, "", "Counter_readFrequency"], [831, 2, 1, "", "Counter_readFrequency_async"], [831, 2, 1, "", "Counter_readPosition"], [831, 2, 1, "", "Counter_readPosition_async"], [831, 2, 1, "", "Counter_setEdge"], [831, 2, 1, "", "Counter_setEdge_async"], [831, 2, 1, "", "Counter_setFreqWindow"], [831, 2, 1, "", "Counter_setFreqWindow_async"], [831, 2, 1, "", "Counter_setPosition"], [831, 2, 1, "", "Counter_setPosition_async"], [831, 2, 1, "", "Counter_start"], [831, 2, 1, "", "Counter_start_async"], [831, 2, 1, "", "Counter_stop"], [831, 2, 1, "", "Counter_stop_async"], [831, 2, 1, "", "DIO_loadStartup"], [831, 2, 1, "", "DIO_loadStartup_async"], [831, 2, 1, "", "DI_closePins"], [831, 2, 1, "", "DI_closePins_async"], [831, 2, 1, "", "DI_closePort"], [831, 2, 1, "", "DI_closePort_async"], [831, 2, 1, "", "DI_getPinMap"], [831, 2, 1, "", "DI_openPins"], [831, 2, 1, "", "DI_openPins_async"], [831, 2, 1, "", "DI_openPort"], [831, 2, 1, "", "DI_openPort_async"], [831, 2, 1, "", "DI_readPins"], [831, 2, 1, "", "DI_readPins_async"], [831, 2, 1, "", "DI_readPort"], [831, 2, 1, "", "DI_readPort_async"], [831, 2, 1, "", "DO_closePins"], [831, 2, 1, "", "DO_closePins_async"], [831, 2, 1, "", "DO_closePort"], [831, 2, 1, "", "DO_closePort_async"], [831, 2, 1, "", "DO_getPinMap"], [831, 2, 1, "", "DO_openPins"], [831, 2, 1, "", "DO_openPins_async"], [831, 2, 1, "", "DO_openPort"], [831, 2, 1, "", "DO_openPort_async"], [831, 2, 1, "", "DO_togglePins"], [831, 2, 1, "", "DO_togglePins_async"], [831, 2, 1, "", "DO_togglePort"], [831, 2, 1, "", "DO_togglePort_async"], [831, 2, 1, "", "DO_writePins"], [831, 2, 1, "", "DO_writePins_async"], [831, 2, 1, "", "DO_writePort"], [831, 2, 1, "", "DO_writePort_async"], [831, 2, 1, "", "Encoder_close"], [831, 2, 1, "", "Encoder_close_async"], [831, 2, 1, "", "Encoder_getDirection"], [831, 2, 1, "", "Encoder_getDirection_async"], [831, 2, 1, "", "Encoder_open"], [831, 2, 1, "", "Encoder_open_async"], [831, 2, 1, "", "Encoder_readFrequency"], [831, 2, 1, "", "Encoder_readFrequency_async"], [831, 2, 1, "", "Encoder_readPosition"], [831, 2, 1, "", "Encoder_readPosition_async"], [831, 2, 1, "", "Encoder_setDirection"], [831, 2, 1, "", "Encoder_setDirection_async"], [831, 2, 1, "", "Encoder_setFreqWindow"], [831, 2, 1, "", "Encoder_setFreqWindow_async"], [831, 2, 1, "", "Encoder_setPosition"], [831, 2, 1, "", "Encoder_setPosition_async"], [831, 2, 1, "", "Encoder_start"], [831, 2, 1, "", "Encoder_start_async"], [831, 2, 1, "", "Encoder_stop"], [831, 2, 1, "", "Encoder_stop_async"], [831, 2, 1, "", "I2C_close"], [831, 2, 1, "", "I2C_close_async"], [831, 2, 1, "", "I2C_getPinMap"], [831, 2, 1, "", "I2C_open"], [831, 2, 1, "", "I2C_open_async"], [831, 2, 1, "", "I2C_read"], [831, 2, 1, "", "I2C_read_async"], [831, 2, 1, "", "I2C_reset"], [831, 2, 1, "", "I2C_reset_async"], [831, 2, 1, "", "I2C_setAddressSize"], [831, 2, 1, "", "I2C_setAddressSize_async"], [831, 2, 1, "", "I2C_setClockRate"], [831, 2, 1, "", "I2C_setClockRate_async"], [831, 2, 1, "", "I2C_write"], [831, 2, 1, "", "I2C_write_async"], [831, 2, 1, "", "Logger_openFile"], [831, 2, 1, "", "Logger_write2DList"], [831, 2, 1, "", "Logger_writeHeader"], [831, 2, 1, "", "Logger_writeList"], [831, 2, 1, "", "Logger_writeValue"], [831, 2, 1, "", "PWM_close"], [831, 2, 1, "", "PWM_close_async"], [831, 2, 1, "", "PWM_open"], [831, 2, 1, "", "PWM_open_async"], [831, 2, 1, "", "PWM_setDutyCycle"], [831, 2, 1, "", "PWM_setDutyCycle_async"], [831, 2, 1, "", "PWM_setFrequency"], [831, 2, 1, "", "PWM_setFrequency_async"], [831, 2, 1, "", "PWM_start"], [831, 2, 1, "", "PWM_start_async"], [831, 2, 1, "", "PWM_stop"], [831, 2, 1, "", "PWM_stop_async"], [831, 2, 1, "", "Sys_getDriverInfo"], [831, 2, 1, "", "Sys_getDriverInfo_async"], [831, 2, 1, "", "Sys_getMode"], [831, 2, 1, "", "Sys_getMode_async"], [831, 2, 1, "", "Sys_getPinModeInPort"], [831, 2, 1, "", "Sys_getPinModeInPort_async"], [831, 2, 1, "", "Sys_getPythonVersion"], [831, 2, 1, "", "Sys_getPythonVersion_async"], [831, 2, 1, "", "Sys_getRTC"], [831, 2, 1, "", "Sys_getRTC_async"], [831, 2, 1, "", "Sys_getSerialNumber"], [831, 2, 1, "", "Sys_getSerialNumber_async"], [831, 2, 1, "", "Sys_reboot"], [831, 2, 1, "", "Sys_reboot_async"], [831, 2, 1, "", "Sys_setAIOMode"], [831, 2, 1, "", "Sys_setAIOMode_async"], [831, 2, 1, "", "Sys_setDIMode"], [831, 2, 1, "", "Sys_setDIMode_async"], [831, 2, 1, "", "Sys_setDIOMode"], [831, 2, 1, "", "Sys_setDIOMode_async"], [831, 2, 1, "", "Sys_setDOMode"], [831, 2, 1, "", "Sys_setDOMode_async"], [831, 2, 1, "", "Sys_setIdleMode"], [831, 2, 1, "", "Sys_setIdleMode_async"], [831, 2, 1, "", "Sys_setMotionMode"], [831, 2, 1, "", "Sys_setMotionMode_async"], [831, 2, 1, "", "Sys_setRTC"], [831, 2, 1, "", "Sys_setRTC_async"], [831, 2, 1, "", "Sys_setSwitchMode"], [831, 2, 1, "", "Sys_setSwitchMode_async"], [831, 2, 1, "", "Sys_startRTCAlarm"], [831, 2, 1, "", "Sys_startRTCAlarm_async"], [831, 2, 1, "", "Sys_stopRTCAlarm"], [831, 2, 1, "", "Sys_stopRTCAlarm_async"], [831, 2, 1, "", "UART_close"], [831, 2, 1, "", "UART_close_async"], [831, 2, 1, "", "UART_getPinMap"], [831, 2, 1, "", "UART_open"], [831, 2, 1, "", "UART_open_async"], [831, 2, 1, "", "UART_read"], [831, 2, 1, "", "UART_read_async"], [831, 2, 1, "", "UART_reset"], [831, 2, 1, "", "UART_reset_async"], [831, 2, 1, "", "UART_setBaudRate"], [831, 2, 1, "", "UART_setBaudRate_async"], [831, 2, 1, "", "UART_setDataBit"], [831, 2, 1, "", "UART_setDataBit_async"], [831, 2, 1, "", "UART_setNumStopBit"], [831, 2, 1, "", "UART_setNumStopBit_async"], [831, 2, 1, "", "UART_setParity"], [831, 2, 1, "", "UART_setParity_async"], [831, 2, 1, "", "UART_write"], [831, 2, 1, "", "UART_write_async"], [831, 2, 1, "", "close"], [831, 2, 1, "", "connect"], [831, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[832, 2, 1, "", "CAN_close"], [832, 2, 1, "", "CAN_close_async"], [832, 2, 1, "", "CAN_getPort"], [832, 2, 1, "", "CAN_open"], [832, 2, 1, "", "CAN_open_async"], [832, 2, 1, "", "CAN_read"], [832, 2, 1, "", "CAN_read_async"], [832, 2, 1, "", "CAN_setRXFilterOrMask"], [832, 2, 1, "", "CAN_setRXFilterOrMask_async"], [832, 2, 1, "", "CAN_setRXFilteringOn"], [832, 2, 1, "", "CAN_setRXFilteringOn_async"], [832, 2, 1, "", "CAN_setSpeed"], [832, 2, 1, "", "CAN_setSpeed_async"], [832, 2, 1, "", "CAN_start"], [832, 2, 1, "", "CAN_start_async"], [832, 2, 1, "", "CAN_stop"], [832, 2, 1, "", "CAN_stop_async"], [832, 2, 1, "", "CAN_write"], [832, 2, 1, "", "CAN_write_async"], [832, 2, 1, "", "Counter_close"], [832, 2, 1, "", "Counter_close_async"], [832, 2, 1, "", "Counter_open"], [832, 2, 1, "", "Counter_open_async"], [832, 2, 1, "", "Counter_readFrequency"], [832, 2, 1, "", "Counter_readFrequency_async"], [832, 2, 1, "", "Counter_readPosition"], [832, 2, 1, "", "Counter_readPosition_async"], [832, 2, 1, "", "Counter_setEdge"], [832, 2, 1, "", "Counter_setEdge_async"], [832, 2, 1, "", "Counter_setFreqWindow"], [832, 2, 1, "", "Counter_setFreqWindow_async"], [832, 2, 1, "", "Counter_setPosition"], [832, 2, 1, "", "Counter_setPosition_async"], [832, 2, 1, "", "Counter_start"], [832, 2, 1, "", "Counter_start_async"], [832, 2, 1, "", "Counter_stop"], [832, 2, 1, "", "Counter_stop_async"], [832, 2, 1, "", "DIO_loadStartup"], [832, 2, 1, "", "DIO_loadStartup_async"], [832, 2, 1, "", "DI_closePins"], [832, 2, 1, "", "DI_closePins_async"], [832, 2, 1, "", "DI_closePort"], [832, 2, 1, "", "DI_closePort_async"], [832, 2, 1, "", "DI_getPinMap"], [832, 2, 1, "", "DI_openPins"], [832, 2, 1, "", "DI_openPins_async"], [832, 2, 1, "", "DI_openPort"], [832, 2, 1, "", "DI_openPort_async"], [832, 2, 1, "", "DI_readPins"], [832, 2, 1, "", "DI_readPins_async"], [832, 2, 1, "", "DI_readPort"], [832, 2, 1, "", "DI_readPort_async"], [832, 2, 1, "", "DO_closePins"], [832, 2, 1, "", "DO_closePins_async"], [832, 2, 1, "", "DO_closePort"], [832, 2, 1, "", "DO_closePort_async"], [832, 2, 1, "", "DO_getPinMap"], [832, 2, 1, "", "DO_openPins"], [832, 2, 1, "", "DO_openPins_async"], [832, 2, 1, "", "DO_openPort"], [832, 2, 1, "", "DO_openPort_async"], [832, 2, 1, "", "DO_togglePins"], [832, 2, 1, "", "DO_togglePins_async"], [832, 2, 1, "", "DO_togglePort"], [832, 2, 1, "", "DO_togglePort_async"], [832, 2, 1, "", "DO_writePins"], [832, 2, 1, "", "DO_writePins_async"], [832, 2, 1, "", "DO_writePort"], [832, 2, 1, "", "DO_writePort_async"], [832, 2, 1, "", "Encoder_close"], [832, 2, 1, "", "Encoder_close_async"], [832, 2, 1, "", "Encoder_getDirection"], [832, 2, 1, "", "Encoder_getDirection_async"], [832, 2, 1, "", "Encoder_open"], [832, 2, 1, "", "Encoder_open_async"], [832, 2, 1, "", "Encoder_readFrequency"], [832, 2, 1, "", "Encoder_readFrequency_async"], [832, 2, 1, "", "Encoder_readPosition"], [832, 2, 1, "", "Encoder_readPosition_async"], [832, 2, 1, "", "Encoder_setDirection"], [832, 2, 1, "", "Encoder_setDirection_async"], [832, 2, 1, "", "Encoder_setFreqWindow"], [832, 2, 1, "", "Encoder_setFreqWindow_async"], [832, 2, 1, "", "Encoder_setPosition"], [832, 2, 1, "", "Encoder_setPosition_async"], [832, 2, 1, "", "Encoder_start"], [832, 2, 1, "", "Encoder_start_async"], [832, 2, 1, "", "Encoder_stop"], [832, 2, 1, "", "Encoder_stop_async"], [832, 2, 1, "", "I2C_close"], [832, 2, 1, "", "I2C_close_async"], [832, 2, 1, "", "I2C_getPinMap"], [832, 2, 1, "", "I2C_open"], [832, 2, 1, "", "I2C_open_async"], [832, 2, 1, "", "I2C_read"], [832, 2, 1, "", "I2C_read_async"], [832, 2, 1, "", "I2C_reset"], [832, 2, 1, "", "I2C_reset_async"], [832, 2, 1, "", "I2C_setAddressSize"], [832, 2, 1, "", "I2C_setAddressSize_async"], [832, 2, 1, "", "I2C_setClockRate"], [832, 2, 1, "", "I2C_setClockRate_async"], [832, 2, 1, "", "I2C_write"], [832, 2, 1, "", "I2C_write_async"], [832, 2, 1, "", "Logger_openFile"], [832, 2, 1, "", "Logger_write2DList"], [832, 2, 1, "", "Logger_writeHeader"], [832, 2, 1, "", "Logger_writeList"], [832, 2, 1, "", "Logger_writeValue"], [832, 2, 1, "", "PWM_close"], [832, 2, 1, "", "PWM_close_async"], [832, 2, 1, "", "PWM_open"], [832, 2, 1, "", "PWM_open_async"], [832, 2, 1, "", "PWM_setDutyCycle"], [832, 2, 1, "", "PWM_setDutyCycle_async"], [832, 2, 1, "", "PWM_setFrequency"], [832, 2, 1, "", "PWM_setFrequency_async"], [832, 2, 1, "", "PWM_start"], [832, 2, 1, "", "PWM_start_async"], [832, 2, 1, "", "PWM_stop"], [832, 2, 1, "", "PWM_stop_async"], [832, 2, 1, "", "SPI_close"], [832, 2, 1, "", "SPI_close_async"], [832, 2, 1, "", "SPI_getPinMap"], [832, 2, 1, "", "SPI_open"], [832, 2, 1, "", "SPI_open_async"], [832, 2, 1, "", "SPI_read"], [832, 2, 1, "", "SPI_readAndWrite"], [832, 2, 1, "", "SPI_readAndWrite_async"], [832, 2, 1, "", "SPI_read_async"], [832, 2, 1, "", "SPI_reset"], [832, 2, 1, "", "SPI_reset_async"], [832, 2, 1, "", "SPI_setDataSize"], [832, 2, 1, "", "SPI_setDataSize_async"], [832, 2, 1, "", "SPI_setFirstBit"], [832, 2, 1, "", "SPI_setFirstBit_async"], [832, 2, 1, "", "SPI_setMode"], [832, 2, 1, "", "SPI_setMode_async"], [832, 2, 1, "", "SPI_setPrescaler"], [832, 2, 1, "", "SPI_setPrescaler_async"], [832, 2, 1, "", "SPI_write"], [832, 2, 1, "", "SPI_write_async"], [832, 2, 1, "", "Sys_getDriverInfo"], [832, 2, 1, "", "Sys_getDriverInfo_async"], [832, 2, 1, "", "Sys_getMode"], [832, 2, 1, "", "Sys_getMode_async"], [832, 2, 1, "", "Sys_getPinModeInPort"], [832, 2, 1, "", "Sys_getPinModeInPort_async"], [832, 2, 1, "", "Sys_getPythonVersion"], [832, 2, 1, "", "Sys_getPythonVersion_async"], [832, 2, 1, "", "Sys_getRTC"], [832, 2, 1, "", "Sys_getRTC_async"], [832, 2, 1, "", "Sys_getSerialNumber"], [832, 2, 1, "", "Sys_getSerialNumber_async"], [832, 2, 1, "", "Sys_reboot"], [832, 2, 1, "", "Sys_reboot_async"], [832, 2, 1, "", "Sys_setAIOMode"], [832, 2, 1, "", "Sys_setAIOMode_async"], [832, 2, 1, "", "Sys_setDIMode"], [832, 2, 1, "", "Sys_setDIMode_async"], [832, 2, 1, "", "Sys_setDIOMode"], [832, 2, 1, "", "Sys_setDIOMode_async"], [832, 2, 1, "", "Sys_setDOMode"], [832, 2, 1, "", "Sys_setDOMode_async"], [832, 2, 1, "", "Sys_setIdleMode"], [832, 2, 1, "", "Sys_setIdleMode_async"], [832, 2, 1, "", "Sys_setMotionMode"], [832, 2, 1, "", "Sys_setMotionMode_async"], [832, 2, 1, "", "Sys_setRTC"], [832, 2, 1, "", "Sys_setRTC_async"], [832, 2, 1, "", "Sys_setSwitchMode"], [832, 2, 1, "", "Sys_setSwitchMode_async"], [832, 2, 1, "", "Sys_startRTCAlarm"], [832, 2, 1, "", "Sys_startRTCAlarm_async"], [832, 2, 1, "", "Sys_stopRTCAlarm"], [832, 2, 1, "", "Sys_stopRTCAlarm_async"], [832, 2, 1, "", "UART_close"], [832, 2, 1, "", "UART_close_async"], [832, 2, 1, "", "UART_getPinMap"], [832, 2, 1, "", "UART_open"], [832, 2, 1, "", "UART_open_async"], [832, 2, 1, "", "UART_read"], [832, 2, 1, "", "UART_read_async"], [832, 2, 1, "", "UART_reset"], [832, 2, 1, "", "UART_reset_async"], [832, 2, 1, "", "UART_setBaudRate"], [832, 2, 1, "", "UART_setBaudRate_async"], [832, 2, 1, "", "UART_setDataBit"], [832, 2, 1, "", "UART_setDataBit_async"], [832, 2, 1, "", "UART_setNumStopBit"], [832, 2, 1, "", "UART_setNumStopBit_async"], [832, 2, 1, "", "UART_setParity"], [832, 2, 1, "", "UART_setParity_async"], [832, 2, 1, "", "UART_write"], [832, 2, 1, "", "UART_write_async"], [832, 2, 1, "", "close"], [832, 2, 1, "", "connect"], [832, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[833, 2, 1, "", "Counter_close"], [833, 2, 1, "", "Counter_close_async"], [833, 2, 1, "", "Counter_open"], [833, 2, 1, "", "Counter_open_async"], [833, 2, 1, "", "Counter_readFrequency"], [833, 2, 1, "", "Counter_readFrequency_async"], [833, 2, 1, "", "Counter_readPosition"], [833, 2, 1, "", "Counter_readPosition_async"], [833, 2, 1, "", "Counter_setEdge"], [833, 2, 1, "", "Counter_setEdge_async"], [833, 2, 1, "", "Counter_setFreqWindow"], [833, 2, 1, "", "Counter_setFreqWindow_async"], [833, 2, 1, "", "Counter_setPosition"], [833, 2, 1, "", "Counter_setPosition_async"], [833, 2, 1, "", "Counter_start"], [833, 2, 1, "", "Counter_start_async"], [833, 2, 1, "", "Counter_stop"], [833, 2, 1, "", "Counter_stop_async"], [833, 2, 1, "", "DIO_loadStartup"], [833, 2, 1, "", "DIO_loadStartup_async"], [833, 2, 1, "", "DI_closePins"], [833, 2, 1, "", "DI_closePins_async"], [833, 2, 1, "", "DI_closePort"], [833, 2, 1, "", "DI_closePort_async"], [833, 2, 1, "", "DI_getPinMap"], [833, 2, 1, "", "DI_openPins"], [833, 2, 1, "", "DI_openPins_async"], [833, 2, 1, "", "DI_openPort"], [833, 2, 1, "", "DI_openPort_async"], [833, 2, 1, "", "DI_readPins"], [833, 2, 1, "", "DI_readPins_async"], [833, 2, 1, "", "DI_readPort"], [833, 2, 1, "", "DI_readPort_async"], [833, 2, 1, "", "DO_closePins"], [833, 2, 1, "", "DO_closePins_async"], [833, 2, 1, "", "DO_closePort"], [833, 2, 1, "", "DO_closePort_async"], [833, 2, 1, "", "DO_getPinMap"], [833, 2, 1, "", "DO_openPins"], [833, 2, 1, "", "DO_openPins_async"], [833, 2, 1, "", "DO_openPort"], [833, 2, 1, "", "DO_openPort_async"], [833, 2, 1, "", "DO_togglePins"], [833, 2, 1, "", "DO_togglePins_async"], [833, 2, 1, "", "DO_togglePort"], [833, 2, 1, "", "DO_togglePort_async"], [833, 2, 1, "", "DO_writePins"], [833, 2, 1, "", "DO_writePins_async"], [833, 2, 1, "", "DO_writePort"], [833, 2, 1, "", "DO_writePort_async"], [833, 2, 1, "", "Encoder_close"], [833, 2, 1, "", "Encoder_close_async"], [833, 2, 1, "", "Encoder_getDirection"], [833, 2, 1, "", "Encoder_getDirection_async"], [833, 2, 1, "", "Encoder_open"], [833, 2, 1, "", "Encoder_open_async"], [833, 2, 1, "", "Encoder_readFrequency"], [833, 2, 1, "", "Encoder_readFrequency_async"], [833, 2, 1, "", "Encoder_readPosition"], [833, 2, 1, "", "Encoder_readPosition_async"], [833, 2, 1, "", "Encoder_setDirection"], [833, 2, 1, "", "Encoder_setDirection_async"], [833, 2, 1, "", "Encoder_setFreqWindow"], [833, 2, 1, "", "Encoder_setFreqWindow_async"], [833, 2, 1, "", "Encoder_setPosition"], [833, 2, 1, "", "Encoder_setPosition_async"], [833, 2, 1, "", "Encoder_start"], [833, 2, 1, "", "Encoder_start_async"], [833, 2, 1, "", "Encoder_stop"], [833, 2, 1, "", "Encoder_stop_async"], [833, 2, 1, "", "I2C_close"], [833, 2, 1, "", "I2C_close_async"], [833, 2, 1, "", "I2C_getPinMap"], [833, 2, 1, "", "I2C_open"], [833, 2, 1, "", "I2C_open_async"], [833, 2, 1, "", "I2C_read"], [833, 2, 1, "", "I2C_read_async"], [833, 2, 1, "", "I2C_reset"], [833, 2, 1, "", "I2C_reset_async"], [833, 2, 1, "", "I2C_setAddressSize"], [833, 2, 1, "", "I2C_setAddressSize_async"], [833, 2, 1, "", "I2C_setClockRate"], [833, 2, 1, "", "I2C_setClockRate_async"], [833, 2, 1, "", "I2C_write"], [833, 2, 1, "", "I2C_write_async"], [833, 2, 1, "", "Logger_openFile"], [833, 2, 1, "", "Logger_write2DList"], [833, 2, 1, "", "Logger_writeHeader"], [833, 2, 1, "", "Logger_writeList"], [833, 2, 1, "", "Logger_writeValue"], [833, 2, 1, "", "PWM_close"], [833, 2, 1, "", "PWM_close_async"], [833, 2, 1, "", "PWM_open"], [833, 2, 1, "", "PWM_open_async"], [833, 2, 1, "", "PWM_setDutyCycle"], [833, 2, 1, "", "PWM_setDutyCycle_async"], [833, 2, 1, "", "PWM_setFrequency"], [833, 2, 1, "", "PWM_setFrequency_async"], [833, 2, 1, "", "PWM_start"], [833, 2, 1, "", "PWM_start_async"], [833, 2, 1, "", "PWM_stop"], [833, 2, 1, "", "PWM_stop_async"], [833, 2, 1, "", "SPI_close"], [833, 2, 1, "", "SPI_close_async"], [833, 2, 1, "", "SPI_getPinMap"], [833, 2, 1, "", "SPI_open"], [833, 2, 1, "", "SPI_open_async"], [833, 2, 1, "", "SPI_read"], [833, 2, 1, "", "SPI_readAndWrite"], [833, 2, 1, "", "SPI_readAndWrite_async"], [833, 2, 1, "", "SPI_read_async"], [833, 2, 1, "", "SPI_reset"], [833, 2, 1, "", "SPI_reset_async"], [833, 2, 1, "", "SPI_setDataSize"], [833, 2, 1, "", "SPI_setDataSize_async"], [833, 2, 1, "", "SPI_setFirstBit"], [833, 2, 1, "", "SPI_setFirstBit_async"], [833, 2, 1, "", "SPI_setMode"], [833, 2, 1, "", "SPI_setMode_async"], [833, 2, 1, "", "SPI_setPrescaler"], [833, 2, 1, "", "SPI_setPrescaler_async"], [833, 2, 1, "", "SPI_write"], [833, 2, 1, "", "SPI_write_async"], [833, 2, 1, "", "Sys_getDriverInfo"], [833, 2, 1, "", "Sys_getDriverInfo_async"], [833, 2, 1, "", "Sys_getMode"], [833, 2, 1, "", "Sys_getMode_async"], [833, 2, 1, "", "Sys_getPinModeInPort"], [833, 2, 1, "", "Sys_getPinModeInPort_async"], [833, 2, 1, "", "Sys_getPythonVersion"], [833, 2, 1, "", "Sys_getPythonVersion_async"], [833, 2, 1, "", "Sys_getRTC"], [833, 2, 1, "", "Sys_getRTC_async"], [833, 2, 1, "", "Sys_getSerialNumber"], [833, 2, 1, "", "Sys_getSerialNumber_async"], [833, 2, 1, "", "Sys_reboot"], [833, 2, 1, "", "Sys_reboot_async"], [833, 2, 1, "", "Sys_setAIOMode"], [833, 2, 1, "", "Sys_setAIOMode_async"], [833, 2, 1, "", "Sys_setDIMode"], [833, 2, 1, "", "Sys_setDIMode_async"], [833, 2, 1, "", "Sys_setDIOMode"], [833, 2, 1, "", "Sys_setDIOMode_async"], [833, 2, 1, "", "Sys_setDOMode"], [833, 2, 1, "", "Sys_setDOMode_async"], [833, 2, 1, "", "Sys_setIdleMode"], [833, 2, 1, "", "Sys_setIdleMode_async"], [833, 2, 1, "", "Sys_setMotionMode"], [833, 2, 1, "", "Sys_setMotionMode_async"], [833, 2, 1, "", "Sys_setRTC"], [833, 2, 1, "", "Sys_setRTC_async"], [833, 2, 1, "", "Sys_setSwitchMode"], [833, 2, 1, "", "Sys_setSwitchMode_async"], [833, 2, 1, "", "Sys_startRTCAlarm"], [833, 2, 1, "", "Sys_startRTCAlarm_async"], [833, 2, 1, "", "Sys_stopRTCAlarm"], [833, 2, 1, "", "Sys_stopRTCAlarm_async"], [833, 2, 1, "", "UART_close"], [833, 2, 1, "", "UART_close_async"], [833, 2, 1, "", "UART_getPinMap"], [833, 2, 1, "", "UART_open"], [833, 2, 1, "", "UART_open_async"], [833, 2, 1, "", "UART_read"], [833, 2, 1, "", "UART_read_async"], [833, 2, 1, "", "UART_reset"], [833, 2, 1, "", "UART_reset_async"], [833, 2, 1, "", "UART_setBaudRate"], [833, 2, 1, "", "UART_setBaudRate_async"], [833, 2, 1, "", "UART_setDataBit"], [833, 2, 1, "", "UART_setDataBit_async"], [833, 2, 1, "", "UART_setNumStopBit"], [833, 2, 1, "", "UART_setNumStopBit_async"], [833, 2, 1, "", "UART_setParity"], [833, 2, 1, "", "UART_setParity_async"], [833, 2, 1, "", "UART_write"], [833, 2, 1, "", "UART_write_async"], [833, 2, 1, "", "close"], [833, 2, 1, "", "connect"], [833, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[834, 2, 1, "", "Counter_close"], [834, 2, 1, "", "Counter_close_async"], [834, 2, 1, "", "Counter_open"], [834, 2, 1, "", "Counter_open_async"], [834, 2, 1, "", "Counter_readFrequency"], [834, 2, 1, "", "Counter_readFrequency_async"], [834, 2, 1, "", "Counter_readPosition"], [834, 2, 1, "", "Counter_readPosition_async"], [834, 2, 1, "", "Counter_setEdge"], [834, 2, 1, "", "Counter_setEdge_async"], [834, 2, 1, "", "Counter_setFreqWindow"], [834, 2, 1, "", "Counter_setFreqWindow_async"], [834, 2, 1, "", "Counter_setPosition"], [834, 2, 1, "", "Counter_setPosition_async"], [834, 2, 1, "", "Counter_start"], [834, 2, 1, "", "Counter_start_async"], [834, 2, 1, "", "Counter_stop"], [834, 2, 1, "", "Counter_stop_async"], [834, 2, 1, "", "DIO_loadStartup"], [834, 2, 1, "", "DIO_loadStartup_async"], [834, 2, 1, "", "DI_closePins"], [834, 2, 1, "", "DI_closePins_async"], [834, 2, 1, "", "DI_closePort"], [834, 2, 1, "", "DI_closePort_async"], [834, 2, 1, "", "DI_getPinMap"], [834, 2, 1, "", "DI_openPins"], [834, 2, 1, "", "DI_openPins_async"], [834, 2, 1, "", "DI_openPort"], [834, 2, 1, "", "DI_openPort_async"], [834, 2, 1, "", "DI_readPins"], [834, 2, 1, "", "DI_readPins_async"], [834, 2, 1, "", "DI_readPort"], [834, 2, 1, "", "DI_readPort_async"], [834, 2, 1, "", "DO_closePins"], [834, 2, 1, "", "DO_closePins_async"], [834, 2, 1, "", "DO_closePort"], [834, 2, 1, "", "DO_closePort_async"], [834, 2, 1, "", "DO_getPinMap"], [834, 2, 1, "", "DO_openPins"], [834, 2, 1, "", "DO_openPins_async"], [834, 2, 1, "", "DO_openPort"], [834, 2, 1, "", "DO_openPort_async"], [834, 2, 1, "", "DO_togglePins"], [834, 2, 1, "", "DO_togglePins_async"], [834, 2, 1, "", "DO_togglePort"], [834, 2, 1, "", "DO_togglePort_async"], [834, 2, 1, "", "DO_writePins"], [834, 2, 1, "", "DO_writePins_async"], [834, 2, 1, "", "DO_writePort"], [834, 2, 1, "", "DO_writePort_async"], [834, 2, 1, "", "Encoder_close"], [834, 2, 1, "", "Encoder_close_async"], [834, 2, 1, "", "Encoder_getDirection"], [834, 2, 1, "", "Encoder_getDirection_async"], [834, 2, 1, "", "Encoder_open"], [834, 2, 1, "", "Encoder_open_async"], [834, 2, 1, "", "Encoder_readFrequency"], [834, 2, 1, "", "Encoder_readFrequency_async"], [834, 2, 1, "", "Encoder_readPosition"], [834, 2, 1, "", "Encoder_readPosition_async"], [834, 2, 1, "", "Encoder_setDirection"], [834, 2, 1, "", "Encoder_setDirection_async"], [834, 2, 1, "", "Encoder_setFreqWindow"], [834, 2, 1, "", "Encoder_setFreqWindow_async"], [834, 2, 1, "", "Encoder_setPosition"], [834, 2, 1, "", "Encoder_setPosition_async"], [834, 2, 1, "", "Encoder_start"], [834, 2, 1, "", "Encoder_start_async"], [834, 2, 1, "", "Encoder_stop"], [834, 2, 1, "", "Encoder_stop_async"], [834, 2, 1, "", "Logger_openFile"], [834, 2, 1, "", "Logger_write2DList"], [834, 2, 1, "", "Logger_writeHeader"], [834, 2, 1, "", "Logger_writeList"], [834, 2, 1, "", "Logger_writeValue"], [834, 2, 1, "", "PWM_close"], [834, 2, 1, "", "PWM_close_async"], [834, 2, 1, "", "PWM_open"], [834, 2, 1, "", "PWM_open_async"], [834, 2, 1, "", "PWM_setDutyCycle"], [834, 2, 1, "", "PWM_setDutyCycle_async"], [834, 2, 1, "", "PWM_setFrequency"], [834, 2, 1, "", "PWM_setFrequency_async"], [834, 2, 1, "", "PWM_start"], [834, 2, 1, "", "PWM_start_async"], [834, 2, 1, "", "PWM_stop"], [834, 2, 1, "", "PWM_stop_async"], [834, 2, 1, "", "Sys_getDriverInfo"], [834, 2, 1, "", "Sys_getDriverInfo_async"], [834, 2, 1, "", "Sys_getMode"], [834, 2, 1, "", "Sys_getMode_async"], [834, 2, 1, "", "Sys_getPinModeInPort"], [834, 2, 1, "", "Sys_getPinModeInPort_async"], [834, 2, 1, "", "Sys_getPythonVersion"], [834, 2, 1, "", "Sys_getPythonVersion_async"], [834, 2, 1, "", "Sys_getRTC"], [834, 2, 1, "", "Sys_getRTC_async"], [834, 2, 1, "", "Sys_getSerialNumber"], [834, 2, 1, "", "Sys_getSerialNumber_async"], [834, 2, 1, "", "Sys_reboot"], [834, 2, 1, "", "Sys_reboot_async"], [834, 2, 1, "", "Sys_setAIOMode"], [834, 2, 1, "", "Sys_setAIOMode_async"], [834, 2, 1, "", "Sys_setDIMode"], [834, 2, 1, "", "Sys_setDIMode_async"], [834, 2, 1, "", "Sys_setDIOMode"], [834, 2, 1, "", "Sys_setDIOMode_async"], [834, 2, 1, "", "Sys_setDOMode"], [834, 2, 1, "", "Sys_setDOMode_async"], [834, 2, 1, "", "Sys_setIdleMode"], [834, 2, 1, "", "Sys_setIdleMode_async"], [834, 2, 1, "", "Sys_setMotionMode"], [834, 2, 1, "", "Sys_setMotionMode_async"], [834, 2, 1, "", "Sys_setRTC"], [834, 2, 1, "", "Sys_setRTC_async"], [834, 2, 1, "", "Sys_setSwitchMode"], [834, 2, 1, "", "Sys_setSwitchMode_async"], [834, 2, 1, "", "Sys_startRTCAlarm"], [834, 2, 1, "", "Sys_startRTCAlarm_async"], [834, 2, 1, "", "Sys_stopRTCAlarm"], [834, 2, 1, "", "Sys_stopRTCAlarm_async"], [834, 2, 1, "", "close"], [834, 2, 1, "", "connect"], [834, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[835, 2, 1, "", "Counter_close"], [835, 2, 1, "", "Counter_close_async"], [835, 2, 1, "", "Counter_open"], [835, 2, 1, "", "Counter_open_async"], [835, 2, 1, "", "Counter_readFrequency"], [835, 2, 1, "", "Counter_readFrequency_async"], [835, 2, 1, "", "Counter_readPosition"], [835, 2, 1, "", "Counter_readPosition_async"], [835, 2, 1, "", "Counter_setEdge"], [835, 2, 1, "", "Counter_setEdge_async"], [835, 2, 1, "", "Counter_setFreqWindow"], [835, 2, 1, "", "Counter_setFreqWindow_async"], [835, 2, 1, "", "Counter_setPosition"], [835, 2, 1, "", "Counter_setPosition_async"], [835, 2, 1, "", "Counter_start"], [835, 2, 1, "", "Counter_start_async"], [835, 2, 1, "", "Counter_stop"], [835, 2, 1, "", "Counter_stop_async"], [835, 2, 1, "", "DIO_loadStartup"], [835, 2, 1, "", "DIO_loadStartup_async"], [835, 2, 1, "", "DI_closePins"], [835, 2, 1, "", "DI_closePins_async"], [835, 2, 1, "", "DI_closePort"], [835, 2, 1, "", "DI_closePort_async"], [835, 2, 1, "", "DI_getPinMap"], [835, 2, 1, "", "DI_openPins"], [835, 2, 1, "", "DI_openPins_async"], [835, 2, 1, "", "DI_openPort"], [835, 2, 1, "", "DI_openPort_async"], [835, 2, 1, "", "DI_readPins"], [835, 2, 1, "", "DI_readPins_async"], [835, 2, 1, "", "DI_readPort"], [835, 2, 1, "", "DI_readPort_async"], [835, 2, 1, "", "DO_closePins"], [835, 2, 1, "", "DO_closePins_async"], [835, 2, 1, "", "DO_closePort"], [835, 2, 1, "", "DO_closePort_async"], [835, 2, 1, "", "DO_getPinMap"], [835, 2, 1, "", "DO_openPins"], [835, 2, 1, "", "DO_openPins_async"], [835, 2, 1, "", "DO_openPort"], [835, 2, 1, "", "DO_openPort_async"], [835, 2, 1, "", "DO_togglePins"], [835, 2, 1, "", "DO_togglePins_async"], [835, 2, 1, "", "DO_togglePort"], [835, 2, 1, "", "DO_togglePort_async"], [835, 2, 1, "", "DO_writePins"], [835, 2, 1, "", "DO_writePins_async"], [835, 2, 1, "", "DO_writePort"], [835, 2, 1, "", "DO_writePort_async"], [835, 2, 1, "", "Encoder_close"], [835, 2, 1, "", "Encoder_close_async"], [835, 2, 1, "", "Encoder_getDirection"], [835, 2, 1, "", "Encoder_getDirection_async"], [835, 2, 1, "", "Encoder_open"], [835, 2, 1, "", "Encoder_open_async"], [835, 2, 1, "", "Encoder_readFrequency"], [835, 2, 1, "", "Encoder_readFrequency_async"], [835, 2, 1, "", "Encoder_readPosition"], [835, 2, 1, "", "Encoder_readPosition_async"], [835, 2, 1, "", "Encoder_setDirection"], [835, 2, 1, "", "Encoder_setDirection_async"], [835, 2, 1, "", "Encoder_setFreqWindow"], [835, 2, 1, "", "Encoder_setFreqWindow_async"], [835, 2, 1, "", "Encoder_setPosition"], [835, 2, 1, "", "Encoder_setPosition_async"], [835, 2, 1, "", "Encoder_start"], [835, 2, 1, "", "Encoder_start_async"], [835, 2, 1, "", "Encoder_stop"], [835, 2, 1, "", "Encoder_stop_async"], [835, 2, 1, "", "I2C_close"], [835, 2, 1, "", "I2C_close_async"], [835, 2, 1, "", "I2C_getPinMap"], [835, 2, 1, "", "I2C_open"], [835, 2, 1, "", "I2C_open_async"], [835, 2, 1, "", "I2C_read"], [835, 2, 1, "", "I2C_read_async"], [835, 2, 1, "", "I2C_reset"], [835, 2, 1, "", "I2C_reset_async"], [835, 2, 1, "", "I2C_setAddressSize"], [835, 2, 1, "", "I2C_setAddressSize_async"], [835, 2, 1, "", "I2C_setClockRate"], [835, 2, 1, "", "I2C_setClockRate_async"], [835, 2, 1, "", "I2C_write"], [835, 2, 1, "", "I2C_write_async"], [835, 2, 1, "", "Logger_openFile"], [835, 2, 1, "", "Logger_write2DList"], [835, 2, 1, "", "Logger_writeHeader"], [835, 2, 1, "", "Logger_writeList"], [835, 2, 1, "", "Logger_writeValue"], [835, 2, 1, "", "PWM_close"], [835, 2, 1, "", "PWM_close_async"], [835, 2, 1, "", "PWM_open"], [835, 2, 1, "", "PWM_open_async"], [835, 2, 1, "", "PWM_setDutyCycle"], [835, 2, 1, "", "PWM_setDutyCycle_async"], [835, 2, 1, "", "PWM_setFrequency"], [835, 2, 1, "", "PWM_setFrequency_async"], [835, 2, 1, "", "PWM_start"], [835, 2, 1, "", "PWM_start_async"], [835, 2, 1, "", "PWM_stop"], [835, 2, 1, "", "PWM_stop_async"], [835, 2, 1, "", "SPI_close"], [835, 2, 1, "", "SPI_close_async"], [835, 2, 1, "", "SPI_getPinMap"], [835, 2, 1, "", "SPI_open"], [835, 2, 1, "", "SPI_open_async"], [835, 2, 1, "", "SPI_read"], [835, 2, 1, "", "SPI_readAndWrite"], [835, 2, 1, "", "SPI_readAndWrite_async"], [835, 2, 1, "", "SPI_read_async"], [835, 2, 1, "", "SPI_reset"], [835, 2, 1, "", "SPI_reset_async"], [835, 2, 1, "", "SPI_setDataSize"], [835, 2, 1, "", "SPI_setDataSize_async"], [835, 2, 1, "", "SPI_setFirstBit"], [835, 2, 1, "", "SPI_setFirstBit_async"], [835, 2, 1, "", "SPI_setMode"], [835, 2, 1, "", "SPI_setMode_async"], [835, 2, 1, "", "SPI_setPrescaler"], [835, 2, 1, "", "SPI_setPrescaler_async"], [835, 2, 1, "", "SPI_write"], [835, 2, 1, "", "SPI_write_async"], [835, 2, 1, "", "Sys_getDriverInfo"], [835, 2, 1, "", "Sys_getDriverInfo_async"], [835, 2, 1, "", "Sys_getMode"], [835, 2, 1, "", "Sys_getMode_async"], [835, 2, 1, "", "Sys_getPinModeInPort"], [835, 2, 1, "", "Sys_getPinModeInPort_async"], [835, 2, 1, "", "Sys_getPythonVersion"], [835, 2, 1, "", "Sys_getPythonVersion_async"], [835, 2, 1, "", "Sys_getRTC"], [835, 2, 1, "", "Sys_getRTC_async"], [835, 2, 1, "", "Sys_getSerialNumber"], [835, 2, 1, "", "Sys_getSerialNumber_async"], [835, 2, 1, "", "Sys_reboot"], [835, 2, 1, "", "Sys_reboot_async"], [835, 2, 1, "", "Sys_setAIOMode"], [835, 2, 1, "", "Sys_setAIOMode_async"], [835, 2, 1, "", "Sys_setDIMode"], [835, 2, 1, "", "Sys_setDIMode_async"], [835, 2, 1, "", "Sys_setDIOMode"], [835, 2, 1, "", "Sys_setDIOMode_async"], [835, 2, 1, "", "Sys_setDOMode"], [835, 2, 1, "", "Sys_setDOMode_async"], [835, 2, 1, "", "Sys_setIdleMode"], [835, 2, 1, "", "Sys_setIdleMode_async"], [835, 2, 1, "", "Sys_setMotionMode"], [835, 2, 1, "", "Sys_setMotionMode_async"], [835, 2, 1, "", "Sys_setRTC"], [835, 2, 1, "", "Sys_setRTC_async"], [835, 2, 1, "", "Sys_setSwitchMode"], [835, 2, 1, "", "Sys_setSwitchMode_async"], [835, 2, 1, "", "Sys_startRTCAlarm"], [835, 2, 1, "", "Sys_startRTCAlarm_async"], [835, 2, 1, "", "Sys_stopRTCAlarm"], [835, 2, 1, "", "Sys_stopRTCAlarm_async"], [835, 2, 1, "", "Thermal_close"], [835, 2, 1, "", "Thermal_close_async"], [835, 2, 1, "", "Thermal_getPinMap"], [835, 2, 1, "", "Thermal_getStatus"], [835, 2, 1, "", "Thermal_getStatus_async"], [835, 2, 1, "", "Thermal_open"], [835, 2, 1, "", "Thermal_open_async"], [835, 2, 1, "", "Thermal_readSensor"], [835, 2, 1, "", "Thermal_readSensor_async"], [835, 2, 1, "", "Thermal_setType"], [835, 2, 1, "", "Thermal_setType_async"], [835, 2, 1, "", "UART_close"], [835, 2, 1, "", "UART_close_async"], [835, 2, 1, "", "UART_getPinMap"], [835, 2, 1, "", "UART_open"], [835, 2, 1, "", "UART_open_async"], [835, 2, 1, "", "UART_read"], [835, 2, 1, "", "UART_read_async"], [835, 2, 1, "", "UART_reset"], [835, 2, 1, "", "UART_reset_async"], [835, 2, 1, "", "UART_setBaudRate"], [835, 2, 1, "", "UART_setBaudRate_async"], [835, 2, 1, "", "UART_setDataBit"], [835, 2, 1, "", "UART_setDataBit_async"], [835, 2, 1, "", "UART_setNumStopBit"], [835, 2, 1, "", "UART_setNumStopBit_async"], [835, 2, 1, "", "UART_setParity"], [835, 2, 1, "", "UART_setParity_async"], [835, 2, 1, "", "UART_write"], [835, 2, 1, "", "UART_write_async"], [835, 2, 1, "", "close"], [835, 2, 1, "", "connect"], [835, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[836, 2, 1, "", "Counter_close"], [836, 2, 1, "", "Counter_close_async"], [836, 2, 1, "", "Counter_open"], [836, 2, 1, "", "Counter_open_async"], [836, 2, 1, "", "Counter_readFrequency"], [836, 2, 1, "", "Counter_readFrequency_async"], [836, 2, 1, "", "Counter_readPosition"], [836, 2, 1, "", "Counter_readPosition_async"], [836, 2, 1, "", "Counter_setEdge"], [836, 2, 1, "", "Counter_setEdge_async"], [836, 2, 1, "", "Counter_setFreqWindow"], [836, 2, 1, "", "Counter_setFreqWindow_async"], [836, 2, 1, "", "Counter_setPosition"], [836, 2, 1, "", "Counter_setPosition_async"], [836, 2, 1, "", "Counter_start"], [836, 2, 1, "", "Counter_start_async"], [836, 2, 1, "", "Counter_stop"], [836, 2, 1, "", "Counter_stop_async"], [836, 2, 1, "", "DIO_loadStartup"], [836, 2, 1, "", "DIO_loadStartup_async"], [836, 2, 1, "", "DI_closePins"], [836, 2, 1, "", "DI_closePins_async"], [836, 2, 1, "", "DI_closePort"], [836, 2, 1, "", "DI_closePort_async"], [836, 2, 1, "", "DI_getPinMap"], [836, 2, 1, "", "DI_openPins"], [836, 2, 1, "", "DI_openPins_async"], [836, 2, 1, "", "DI_openPort"], [836, 2, 1, "", "DI_openPort_async"], [836, 2, 1, "", "DI_readPins"], [836, 2, 1, "", "DI_readPins_async"], [836, 2, 1, "", "DI_readPort"], [836, 2, 1, "", "DI_readPort_async"], [836, 2, 1, "", "DO_closePins"], [836, 2, 1, "", "DO_closePins_async"], [836, 2, 1, "", "DO_closePort"], [836, 2, 1, "", "DO_closePort_async"], [836, 2, 1, "", "DO_getPinMap"], [836, 2, 1, "", "DO_openPins"], [836, 2, 1, "", "DO_openPins_async"], [836, 2, 1, "", "DO_openPort"], [836, 2, 1, "", "DO_openPort_async"], [836, 2, 1, "", "DO_togglePins"], [836, 2, 1, "", "DO_togglePins_async"], [836, 2, 1, "", "DO_togglePort"], [836, 2, 1, "", "DO_togglePort_async"], [836, 2, 1, "", "DO_writePins"], [836, 2, 1, "", "DO_writePins_async"], [836, 2, 1, "", "DO_writePort"], [836, 2, 1, "", "DO_writePort_async"], [836, 2, 1, "", "Encoder_close"], [836, 2, 1, "", "Encoder_close_async"], [836, 2, 1, "", "Encoder_getDirection"], [836, 2, 1, "", "Encoder_getDirection_async"], [836, 2, 1, "", "Encoder_open"], [836, 2, 1, "", "Encoder_open_async"], [836, 2, 1, "", "Encoder_readFrequency"], [836, 2, 1, "", "Encoder_readFrequency_async"], [836, 2, 1, "", "Encoder_readPosition"], [836, 2, 1, "", "Encoder_readPosition_async"], [836, 2, 1, "", "Encoder_setDirection"], [836, 2, 1, "", "Encoder_setDirection_async"], [836, 2, 1, "", "Encoder_setFreqWindow"], [836, 2, 1, "", "Encoder_setFreqWindow_async"], [836, 2, 1, "", "Encoder_setPosition"], [836, 2, 1, "", "Encoder_setPosition_async"], [836, 2, 1, "", "Encoder_start"], [836, 2, 1, "", "Encoder_start_async"], [836, 2, 1, "", "Encoder_stop"], [836, 2, 1, "", "Encoder_stop_async"], [836, 2, 1, "", "I2C_close"], [836, 2, 1, "", "I2C_close_async"], [836, 2, 1, "", "I2C_getPinMap"], [836, 2, 1, "", "I2C_open"], [836, 2, 1, "", "I2C_open_async"], [836, 2, 1, "", "I2C_read"], [836, 2, 1, "", "I2C_read_async"], [836, 2, 1, "", "I2C_reset"], [836, 2, 1, "", "I2C_reset_async"], [836, 2, 1, "", "I2C_setAddressSize"], [836, 2, 1, "", "I2C_setAddressSize_async"], [836, 2, 1, "", "I2C_setClockRate"], [836, 2, 1, "", "I2C_setClockRate_async"], [836, 2, 1, "", "I2C_write"], [836, 2, 1, "", "I2C_write_async"], [836, 2, 1, "", "Logger_openFile"], [836, 2, 1, "", "Logger_write2DList"], [836, 2, 1, "", "Logger_writeHeader"], [836, 2, 1, "", "Logger_writeList"], [836, 2, 1, "", "Logger_writeValue"], [836, 2, 1, "", "PWM_close"], [836, 2, 1, "", "PWM_close_async"], [836, 2, 1, "", "PWM_open"], [836, 2, 1, "", "PWM_open_async"], [836, 2, 1, "", "PWM_setDutyCycle"], [836, 2, 1, "", "PWM_setDutyCycle_async"], [836, 2, 1, "", "PWM_setFrequency"], [836, 2, 1, "", "PWM_setFrequency_async"], [836, 2, 1, "", "PWM_start"], [836, 2, 1, "", "PWM_start_async"], [836, 2, 1, "", "PWM_stop"], [836, 2, 1, "", "PWM_stop_async"], [836, 2, 1, "", "SPI_close"], [836, 2, 1, "", "SPI_close_async"], [836, 2, 1, "", "SPI_getPinMap"], [836, 2, 1, "", "SPI_open"], [836, 2, 1, "", "SPI_open_async"], [836, 2, 1, "", "SPI_read"], [836, 2, 1, "", "SPI_readAndWrite"], [836, 2, 1, "", "SPI_readAndWrite_async"], [836, 2, 1, "", "SPI_read_async"], [836, 2, 1, "", "SPI_reset"], [836, 2, 1, "", "SPI_reset_async"], [836, 2, 1, "", "SPI_setDataSize"], [836, 2, 1, "", "SPI_setDataSize_async"], [836, 2, 1, "", "SPI_setFirstBit"], [836, 2, 1, "", "SPI_setFirstBit_async"], [836, 2, 1, "", "SPI_setMode"], [836, 2, 1, "", "SPI_setMode_async"], [836, 2, 1, "", "SPI_setPrescaler"], [836, 2, 1, "", "SPI_setPrescaler_async"], [836, 2, 1, "", "SPI_write"], [836, 2, 1, "", "SPI_write_async"], [836, 2, 1, "", "Sys_getDriverInfo"], [836, 2, 1, "", "Sys_getDriverInfo_async"], [836, 2, 1, "", "Sys_getMode"], [836, 2, 1, "", "Sys_getMode_async"], [836, 2, 1, "", "Sys_getPinModeInPort"], [836, 2, 1, "", "Sys_getPinModeInPort_async"], [836, 2, 1, "", "Sys_getPythonVersion"], [836, 2, 1, "", "Sys_getPythonVersion_async"], [836, 2, 1, "", "Sys_getRTC"], [836, 2, 1, "", "Sys_getRTC_async"], [836, 2, 1, "", "Sys_getSerialNumber"], [836, 2, 1, "", "Sys_getSerialNumber_async"], [836, 2, 1, "", "Sys_reboot"], [836, 2, 1, "", "Sys_reboot_async"], [836, 2, 1, "", "Sys_setAIOMode"], [836, 2, 1, "", "Sys_setAIOMode_async"], [836, 2, 1, "", "Sys_setDIMode"], [836, 2, 1, "", "Sys_setDIMode_async"], [836, 2, 1, "", "Sys_setDIOMode"], [836, 2, 1, "", "Sys_setDIOMode_async"], [836, 2, 1, "", "Sys_setDOMode"], [836, 2, 1, "", "Sys_setDOMode_async"], [836, 2, 1, "", "Sys_setIdleMode"], [836, 2, 1, "", "Sys_setIdleMode_async"], [836, 2, 1, "", "Sys_setMotionMode"], [836, 2, 1, "", "Sys_setMotionMode_async"], [836, 2, 1, "", "Sys_setRTC"], [836, 2, 1, "", "Sys_setRTC_async"], [836, 2, 1, "", "Sys_setSwitchMode"], [836, 2, 1, "", "Sys_setSwitchMode_async"], [836, 2, 1, "", "Sys_startRTCAlarm"], [836, 2, 1, "", "Sys_startRTCAlarm_async"], [836, 2, 1, "", "Sys_stopRTCAlarm"], [836, 2, 1, "", "Sys_stopRTCAlarm_async"], [836, 2, 1, "", "Thermal_close"], [836, 2, 1, "", "Thermal_close_async"], [836, 2, 1, "", "Thermal_getPinMap"], [836, 2, 1, "", "Thermal_getStatus"], [836, 2, 1, "", "Thermal_getStatus_async"], [836, 2, 1, "", "Thermal_open"], [836, 2, 1, "", "Thermal_open_async"], [836, 2, 1, "", "Thermal_readSensor"], [836, 2, 1, "", "Thermal_readSensor_async"], [836, 2, 1, "", "Thermal_setOverSampling"], [836, 2, 1, "", "Thermal_setOverSampling_async"], [836, 2, 1, "", "Thermal_setType"], [836, 2, 1, "", "Thermal_setType_async"], [836, 2, 1, "", "UART_close"], [836, 2, 1, "", "UART_close_async"], [836, 2, 1, "", "UART_getPinMap"], [836, 2, 1, "", "UART_open"], [836, 2, 1, "", "UART_open_async"], [836, 2, 1, "", "UART_read"], [836, 2, 1, "", "UART_read_async"], [836, 2, 1, "", "UART_reset"], [836, 2, 1, "", "UART_reset_async"], [836, 2, 1, "", "UART_setBaudRate"], [836, 2, 1, "", "UART_setBaudRate_async"], [836, 2, 1, "", "UART_setDataBit"], [836, 2, 1, "", "UART_setDataBit_async"], [836, 2, 1, "", "UART_setNumStopBit"], [836, 2, 1, "", "UART_setNumStopBit_async"], [836, 2, 1, "", "UART_setParity"], [836, 2, 1, "", "UART_setParity_async"], [836, 2, 1, "", "UART_write"], [836, 2, 1, "", "UART_write_async"], [836, 2, 1, "", "close"], [836, 2, 1, "", "connect"], [836, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[837, 2, 1, "", "AI_close"], [837, 2, 1, "", "AI_close_async"], [837, 2, 1, "", "AI_enableCS"], [837, 2, 1, "", "AI_enableCS_async"], [837, 2, 1, "", "AI_enableChannel"], [837, 2, 1, "", "AI_enableChannel_async"], [837, 2, 1, "", "AI_open"], [837, 2, 1, "", "AI_open_async"], [837, 2, 1, "", "AI_readOnDemand"], [837, 2, 1, "", "AI_readOnDemand_async"], [837, 2, 1, "", "AI_readStreaming"], [837, 2, 1, "", "AI_readStreaming_async"], [837, 2, 1, "", "AI_setMode"], [837, 2, 1, "", "AI_setMode_async"], [837, 2, 1, "", "AI_setNumSamples"], [837, 2, 1, "", "AI_setNumSamples_async"], [837, 2, 1, "", "AI_setSamplingRate"], [837, 2, 1, "", "AI_setSamplingRate_async"], [837, 2, 1, "", "AI_start"], [837, 2, 1, "", "AI_start_async"], [837, 2, 1, "", "AI_stop"], [837, 2, 1, "", "AI_stop_async"], [837, 2, 1, "", "Logger_openFile"], [837, 2, 1, "", "Logger_write2DList"], [837, 2, 1, "", "Logger_writeHeader"], [837, 2, 1, "", "Logger_writeList"], [837, 2, 1, "", "Logger_writeValue"], [837, 2, 1, "", "Net_getGateway"], [837, 2, 1, "", "Net_getGateway_async"], [837, 2, 1, "", "Net_getIPAddrAndSubmask"], [837, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [837, 2, 1, "", "Net_getMACAddr"], [837, 2, 1, "", "Net_getMACAddr_async"], [837, 2, 1, "", "Net_setIPAddrAndSubmask"], [837, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [837, 2, 1, "", "Sys_getDriverInfo"], [837, 2, 1, "", "Sys_getDriverInfo_async"], [837, 2, 1, "", "Sys_getGateway"], [837, 2, 1, "", "Sys_getGateway_async"], [837, 2, 1, "", "Sys_getIPAddrAndSubmask"], [837, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [837, 2, 1, "", "Sys_getMACAddr"], [837, 2, 1, "", "Sys_getMACAddr_async"], [837, 2, 1, "", "Sys_getMode"], [837, 2, 1, "", "Sys_getMode_async"], [837, 2, 1, "", "Sys_getPinModeInPort"], [837, 2, 1, "", "Sys_getPinModeInPort_async"], [837, 2, 1, "", "Sys_getPythonVersion"], [837, 2, 1, "", "Sys_getPythonVersion_async"], [837, 2, 1, "", "Sys_getRTC"], [837, 2, 1, "", "Sys_getRTC_async"], [837, 2, 1, "", "Sys_getSerialNumber"], [837, 2, 1, "", "Sys_getSerialNumber_async"], [837, 2, 1, "", "Sys_reboot"], [837, 2, 1, "", "Sys_reboot_async"], [837, 2, 1, "", "Sys_setAIOMode"], [837, 2, 1, "", "Sys_setAIOMode_async"], [837, 2, 1, "", "Sys_setDIMode"], [837, 2, 1, "", "Sys_setDIMode_async"], [837, 2, 1, "", "Sys_setDIOMode"], [837, 2, 1, "", "Sys_setDIOMode_async"], [837, 2, 1, "", "Sys_setDOMode"], [837, 2, 1, "", "Sys_setDOMode_async"], [837, 2, 1, "", "Sys_setIPAddrAndSubmask"], [837, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [837, 2, 1, "", "Sys_setIdleMode"], [837, 2, 1, "", "Sys_setIdleMode_async"], [837, 2, 1, "", "Sys_setMotionMode"], [837, 2, 1, "", "Sys_setMotionMode_async"], [837, 2, 1, "", "Sys_setRTC"], [837, 2, 1, "", "Sys_setRTC_async"], [837, 2, 1, "", "Sys_setSwitchMode"], [837, 2, 1, "", "Sys_setSwitchMode_async"], [837, 2, 1, "", "Sys_startRTCAlarm"], [837, 2, 1, "", "Sys_startRTCAlarm_async"], [837, 2, 1, "", "Sys_stopRTCAlarm"], [837, 2, 1, "", "Sys_stopRTCAlarm_async"], [837, 2, 1, "", "Wifi_getChargeStatus"], [837, 2, 1, "", "Wifi_getChargeStatus_async"], [837, 2, 1, "", "Wifi_getConfiguration"], [837, 2, 1, "", "Wifi_getConfiguration_async"], [837, 2, 1, "", "Wifi_getPowerGoodStatus"], [837, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [837, 2, 1, "", "Wifi_getWifiBandWidth"], [837, 2, 1, "", "Wifi_getWifiBandWidth_async"], [837, 2, 1, "", "Wifi_readBattery"], [837, 2, 1, "", "Wifi_readBattery_async"], [837, 2, 1, "", "Wifi_readRSSI"], [837, 2, 1, "", "Wifi_readRSSI_async"], [837, 2, 1, "", "Wifi_resetLED"], [837, 2, 1, "", "Wifi_resetLED_async"], [837, 2, 1, "", "Wifi_setBlueLED"], [837, 2, 1, "", "Wifi_setBlueLED_async"], [837, 2, 1, "", "Wifi_setGreenLED"], [837, 2, 1, "", "Wifi_setGreenLED_async"], [837, 2, 1, "", "Wifi_setRedLED"], [837, 2, 1, "", "Wifi_setRedLED_async"], [837, 2, 1, "", "close"], [837, 2, 1, "", "connect"], [837, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3AH": [[838, 2, 1, "", "AHRS_close"], [838, 2, 1, "", "AHRS_close_async"], [838, 2, 1, "", "AHRS_getAcceleration"], [838, 2, 1, "", "AHRS_getAcceleration_async"], [838, 2, 1, "", "AHRS_getAngularVelocity"], [838, 2, 1, "", "AHRS_getAngularVelocity_async"], [838, 2, 1, "", "AHRS_getEstimate"], [838, 2, 1, "", "AHRS_getEstimate_async"], [838, 2, 1, "", "AHRS_getOrientation"], [838, 2, 1, "", "AHRS_getOrientation_async"], [838, 2, 1, "", "AHRS_open"], [838, 2, 1, "", "AHRS_open_async"], [838, 2, 1, "", "AHRS_reset"], [838, 2, 1, "", "AHRS_reset_async"], [838, 2, 1, "", "AHRS_start"], [838, 2, 1, "", "AHRS_start_async"], [838, 2, 1, "", "AHRS_stop"], [838, 2, 1, "", "AHRS_stop_async"], [838, 2, 1, "", "AI_close"], [838, 2, 1, "", "AI_close_async"], [838, 2, 1, "", "AI_enableCS"], [838, 2, 1, "", "AI_enableCS_async"], [838, 2, 1, "", "AI_enableChannel"], [838, 2, 1, "", "AI_enableChannel_async"], [838, 2, 1, "", "AI_open"], [838, 2, 1, "", "AI_open_async"], [838, 2, 1, "", "AI_readOnDemand"], [838, 2, 1, "", "AI_readOnDemand_async"], [838, 2, 1, "", "AI_readStreaming"], [838, 2, 1, "", "AI_readStreaming_async"], [838, 2, 1, "", "AI_setMode"], [838, 2, 1, "", "AI_setMode_async"], [838, 2, 1, "", "AI_setNumSamples"], [838, 2, 1, "", "AI_setNumSamples_async"], [838, 2, 1, "", "AI_setSamplingRate"], [838, 2, 1, "", "AI_setSamplingRate_async"], [838, 2, 1, "", "AI_start"], [838, 2, 1, "", "AI_start_async"], [838, 2, 1, "", "AI_stop"], [838, 2, 1, "", "AI_stop_async"], [838, 2, 1, "", "Logger_openFile"], [838, 2, 1, "", "Logger_write2DList"], [838, 2, 1, "", "Logger_writeHeader"], [838, 2, 1, "", "Logger_writeList"], [838, 2, 1, "", "Logger_writeValue"], [838, 2, 1, "", "Net_getGateway"], [838, 2, 1, "", "Net_getGateway_async"], [838, 2, 1, "", "Net_getIPAddrAndSubmask"], [838, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [838, 2, 1, "", "Net_getMACAddr"], [838, 2, 1, "", "Net_getMACAddr_async"], [838, 2, 1, "", "Net_setIPAddrAndSubmask"], [838, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [838, 2, 1, "", "SD_closeFile"], [838, 2, 1, "", "SD_closeFile_async"], [838, 2, 1, "", "SD_getStorage"], [838, 2, 1, "", "SD_getStorage_async"], [838, 2, 1, "", "SD_openFile"], [838, 2, 1, "", "SD_openFile_async"], [838, 2, 1, "", "SD_readFile"], [838, 2, 1, "", "SD_readFile_async"], [838, 2, 1, "", "SD_writeFile"], [838, 2, 1, "", "SD_writeFile_async"], [838, 2, 1, "", "Sys_getDriverInfo"], [838, 2, 1, "", "Sys_getDriverInfo_async"], [838, 2, 1, "", "Sys_getGateway"], [838, 2, 1, "", "Sys_getGateway_async"], [838, 2, 1, "", "Sys_getIPAddrAndSubmask"], [838, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [838, 2, 1, "", "Sys_getMACAddr"], [838, 2, 1, "", "Sys_getMACAddr_async"], [838, 2, 1, "", "Sys_getMode"], [838, 2, 1, "", "Sys_getMode_async"], [838, 2, 1, "", "Sys_getPinModeInPort"], [838, 2, 1, "", "Sys_getPinModeInPort_async"], [838, 2, 1, "", "Sys_getPythonVersion"], [838, 2, 1, "", "Sys_getPythonVersion_async"], [838, 2, 1, "", "Sys_getRTC"], [838, 2, 1, "", "Sys_getRTC_async"], [838, 2, 1, "", "Sys_getSerialNumber"], [838, 2, 1, "", "Sys_getSerialNumber_async"], [838, 2, 1, "", "Sys_reboot"], [838, 2, 1, "", "Sys_reboot_async"], [838, 2, 1, "", "Sys_setAIOMode"], [838, 2, 1, "", "Sys_setAIOMode_async"], [838, 2, 1, "", "Sys_setDIMode"], [838, 2, 1, "", "Sys_setDIMode_async"], [838, 2, 1, "", "Sys_setDIOMode"], [838, 2, 1, "", "Sys_setDIOMode_async"], [838, 2, 1, "", "Sys_setDOMode"], [838, 2, 1, "", "Sys_setDOMode_async"], [838, 2, 1, "", "Sys_setIPAddrAndSubmask"], [838, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [838, 2, 1, "", "Sys_setIdleMode"], [838, 2, 1, "", "Sys_setIdleMode_async"], [838, 2, 1, "", "Sys_setMotionMode"], [838, 2, 1, "", "Sys_setMotionMode_async"], [838, 2, 1, "", "Sys_setRTC"], [838, 2, 1, "", "Sys_setRTC_async"], [838, 2, 1, "", "Sys_setSwitchMode"], [838, 2, 1, "", "Sys_setSwitchMode_async"], [838, 2, 1, "", "Sys_startRTCAlarm"], [838, 2, 1, "", "Sys_startRTCAlarm_async"], [838, 2, 1, "", "Sys_stopRTCAlarm"], [838, 2, 1, "", "Sys_stopRTCAlarm_async"], [838, 2, 1, "", "Wifi_getChargeStatus"], [838, 2, 1, "", "Wifi_getChargeStatus_async"], [838, 2, 1, "", "Wifi_getConfiguration"], [838, 2, 1, "", "Wifi_getConfiguration_async"], [838, 2, 1, "", "Wifi_getPowerGoodStatus"], [838, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [838, 2, 1, "", "Wifi_getWifiBandWidth"], [838, 2, 1, "", "Wifi_getWifiBandWidth_async"], [838, 2, 1, "", "Wifi_readBattery"], [838, 2, 1, "", "Wifi_readBattery_async"], [838, 2, 1, "", "Wifi_readRSSI"], [838, 2, 1, "", "Wifi_readRSSI_async"], [838, 2, 1, "", "Wifi_resetLED"], [838, 2, 1, "", "Wifi_resetLED_async"], [838, 2, 1, "", "Wifi_setBlueLED"], [838, 2, 1, "", "Wifi_setBlueLED_async"], [838, 2, 1, "", "Wifi_setGreenLED"], [838, 2, 1, "", "Wifi_setGreenLED_async"], [838, 2, 1, "", "Wifi_setRedLED"], [838, 2, 1, "", "Wifi_setRedLED_async"], [838, 2, 1, "", "close"], [838, 2, 1, "", "connect"], [838, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3AOD": [[839, 2, 1, "", "AI_close"], [839, 2, 1, "", "AI_close_async"], [839, 2, 1, "", "AI_enableCS"], [839, 2, 1, "", "AI_enableChannel"], [839, 2, 1, "", "AI_open"], [839, 2, 1, "", "AI_open_async"], [839, 2, 1, "", "AI_readOnDemand"], [839, 2, 1, "", "AI_readStreaming"], [839, 2, 1, "", "AI_setMode"], [839, 2, 1, "", "AI_setMode_async"], [839, 2, 1, "", "AI_setNumSamples"], [839, 2, 1, "", "AI_setNumSamples_async"], [839, 2, 1, "", "AI_setSamplingRate"], [839, 2, 1, "", "AI_setSamplingRate_async"], [839, 2, 1, "", "AI_start"], [839, 2, 1, "", "AI_start_async"], [839, 2, 1, "", "AI_stop"], [839, 2, 1, "", "AI_stop_async"], [839, 2, 1, "", "AO_close"], [839, 2, 1, "", "AO_closeStreaming"], [839, 2, 1, "", "AO_closeStreaming_async"], [839, 2, 1, "", "AO_close_async"], [839, 2, 1, "", "AO_getPort"], [839, 2, 1, "", "AO_getValues"], [839, 2, 1, "", "AO_getValues_async"], [839, 2, 1, "", "AO_open"], [839, 2, 1, "", "AO_openStreaming"], [839, 2, 1, "", "AO_openStreaming_async"], [839, 2, 1, "", "AO_open_async"], [839, 2, 1, "", "AO_setEnableChannels"], [839, 2, 1, "", "AO_setEnableChannels_async"], [839, 2, 1, "", "AO_setForm"], [839, 2, 1, "", "AO_setFormParam"], [839, 2, 1, "", "AO_setFormParam_async"], [839, 2, 1, "", "AO_setForm_async"], [839, 2, 1, "", "AO_setMode"], [839, 2, 1, "", "AO_setMode_async"], [839, 2, 1, "", "AO_setNumSamples"], [839, 2, 1, "", "AO_setNumSamples_async"], [839, 2, 1, "", "AO_setSamplingRate"], [839, 2, 1, "", "AO_setSamplingRate_async"], [839, 2, 1, "", "AO_startStreaming"], [839, 2, 1, "", "AO_startStreaming_async"], [839, 2, 1, "", "AO_writeAllChannels"], [839, 2, 1, "", "AO_writeAllChannels_async"], [839, 2, 1, "", "AO_writeOneChannel"], [839, 2, 1, "", "AO_writeOneChannel_async"], [839, 2, 1, "", "Logger_openFile"], [839, 2, 1, "", "Logger_write2DList"], [839, 2, 1, "", "Logger_writeHeader"], [839, 2, 1, "", "Logger_writeList"], [839, 2, 1, "", "Logger_writeValue"], [839, 2, 1, "", "Net_getGateway"], [839, 2, 1, "", "Net_getGateway_async"], [839, 2, 1, "", "Net_getIPAddrAndSubmask"], [839, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [839, 2, 1, "", "Net_getMACAddr"], [839, 2, 1, "", "Net_getMACAddr_async"], [839, 2, 1, "", "Net_setIPAddrAndSubmask"], [839, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [839, 2, 1, "", "SD_closeFile"], [839, 2, 1, "", "SD_closeFile_async"], [839, 2, 1, "", "SD_getStorage"], [839, 2, 1, "", "SD_getStorage_async"], [839, 2, 1, "", "SD_openFile"], [839, 2, 1, "", "SD_openFile_async"], [839, 2, 1, "", "SD_readFile"], [839, 2, 1, "", "SD_readFile_async"], [839, 2, 1, "", "SD_writeFile"], [839, 2, 1, "", "SD_writeFile_async"], [839, 2, 1, "", "Sys_getDriverInfo"], [839, 2, 1, "", "Sys_getDriverInfo_async"], [839, 2, 1, "", "Sys_getGateway"], [839, 2, 1, "", "Sys_getGateway_async"], [839, 2, 1, "", "Sys_getIPAddrAndSubmask"], [839, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [839, 2, 1, "", "Sys_getMACAddr"], [839, 2, 1, "", "Sys_getMACAddr_async"], [839, 2, 1, "", "Sys_getMode"], [839, 2, 1, "", "Sys_getMode_async"], [839, 2, 1, "", "Sys_getPinModeInPort"], [839, 2, 1, "", "Sys_getPinModeInPort_async"], [839, 2, 1, "", "Sys_getPythonVersion"], [839, 2, 1, "", "Sys_getPythonVersion_async"], [839, 2, 1, "", "Sys_getRTC"], [839, 2, 1, "", "Sys_getRTC_async"], [839, 2, 1, "", "Sys_getSerialNumber"], [839, 2, 1, "", "Sys_getSerialNumber_async"], [839, 2, 1, "", "Sys_reboot"], [839, 2, 1, "", "Sys_reboot_async"], [839, 2, 1, "", "Sys_setAIOMode"], [839, 2, 1, "", "Sys_setAIOMode_async"], [839, 2, 1, "", "Sys_setDIMode"], [839, 2, 1, "", "Sys_setDIMode_async"], [839, 2, 1, "", "Sys_setDIOMode"], [839, 2, 1, "", "Sys_setDIOMode_async"], [839, 2, 1, "", "Sys_setDOMode"], [839, 2, 1, "", "Sys_setDOMode_async"], [839, 2, 1, "", "Sys_setIPAddrAndSubmask"], [839, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [839, 2, 1, "", "Sys_setIdleMode"], [839, 2, 1, "", "Sys_setIdleMode_async"], [839, 2, 1, "", "Sys_setMotionMode"], [839, 2, 1, "", "Sys_setMotionMode_async"], [839, 2, 1, "", "Sys_setRTC"], [839, 2, 1, "", "Sys_setRTC_async"], [839, 2, 1, "", "Sys_setSwitchMode"], [839, 2, 1, "", "Sys_setSwitchMode_async"], [839, 2, 1, "", "Sys_startRTCAlarm"], [839, 2, 1, "", "Sys_startRTCAlarm_async"], [839, 2, 1, "", "Sys_stopRTCAlarm"], [839, 2, 1, "", "Sys_stopRTCAlarm_async"], [839, 2, 1, "", "Wifi_getChargeStatus"], [839, 2, 1, "", "Wifi_getChargeStatus_async"], [839, 2, 1, "", "Wifi_getConfiguration"], [839, 2, 1, "", "Wifi_getConfiguration_async"], [839, 2, 1, "", "Wifi_getPowerGoodStatus"], [839, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [839, 2, 1, "", "Wifi_getWifiBandWidth"], [839, 2, 1, "", "Wifi_getWifiBandWidth_async"], [839, 2, 1, "", "Wifi_readBattery"], [839, 2, 1, "", "Wifi_readBattery_async"], [839, 2, 1, "", "Wifi_readRSSI"], [839, 2, 1, "", "Wifi_readRSSI_async"], [839, 2, 1, "", "Wifi_resetLED"], [839, 2, 1, "", "Wifi_resetLED_async"], [839, 2, 1, "", "Wifi_setBlueLED"], [839, 2, 1, "", "Wifi_setBlueLED_async"], [839, 2, 1, "", "Wifi_setGreenLED"], [839, 2, 1, "", "Wifi_setGreenLED_async"], [839, 2, 1, "", "Wifi_setRedLED"], [839, 2, 1, "", "Wifi_setRedLED_async"], [839, 2, 1, "", "close"], [839, 2, 1, "", "connect"], [839, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[840, 2, 1, "", "AI_close"], [840, 2, 1, "", "AI_close_async"], [840, 2, 1, "", "AI_enableCS"], [840, 2, 1, "", "AI_enableCS_async"], [840, 2, 1, "", "AI_enableChannel"], [840, 2, 1, "", "AI_enableChannel_async"], [840, 2, 1, "", "AI_open"], [840, 2, 1, "", "AI_open_async"], [840, 2, 1, "", "AI_readOnDemand"], [840, 2, 1, "", "AI_readOnDemand_async"], [840, 2, 1, "", "AI_readStreaming"], [840, 2, 1, "", "AI_readStreaming_async"], [840, 2, 1, "", "AI_setMode"], [840, 2, 1, "", "AI_setMode_async"], [840, 2, 1, "", "AI_setNumSamples"], [840, 2, 1, "", "AI_setNumSamples_async"], [840, 2, 1, "", "AI_setSamplingRate"], [840, 2, 1, "", "AI_setSamplingRate_async"], [840, 2, 1, "", "AI_start"], [840, 2, 1, "", "AI_start_async"], [840, 2, 1, "", "AI_stop"], [840, 2, 1, "", "AI_stop_async"], [840, 2, 1, "", "Logger_openFile"], [840, 2, 1, "", "Logger_write2DList"], [840, 2, 1, "", "Logger_writeHeader"], [840, 2, 1, "", "Logger_writeList"], [840, 2, 1, "", "Logger_writeValue"], [840, 2, 1, "", "Net_getGateway"], [840, 2, 1, "", "Net_getGateway_async"], [840, 2, 1, "", "Net_getIPAddrAndSubmask"], [840, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [840, 2, 1, "", "Net_getMACAddr"], [840, 2, 1, "", "Net_getMACAddr_async"], [840, 2, 1, "", "Net_setIPAddrAndSubmask"], [840, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [840, 2, 1, "", "Sys_getDriverInfo"], [840, 2, 1, "", "Sys_getDriverInfo_async"], [840, 2, 1, "", "Sys_getGateway"], [840, 2, 1, "", "Sys_getGateway_async"], [840, 2, 1, "", "Sys_getIPAddrAndSubmask"], [840, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [840, 2, 1, "", "Sys_getMACAddr"], [840, 2, 1, "", "Sys_getMACAddr_async"], [840, 2, 1, "", "Sys_getMode"], [840, 2, 1, "", "Sys_getMode_async"], [840, 2, 1, "", "Sys_getPinModeInPort"], [840, 2, 1, "", "Sys_getPinModeInPort_async"], [840, 2, 1, "", "Sys_getPythonVersion"], [840, 2, 1, "", "Sys_getPythonVersion_async"], [840, 2, 1, "", "Sys_getRTC"], [840, 2, 1, "", "Sys_getRTC_async"], [840, 2, 1, "", "Sys_getSerialNumber"], [840, 2, 1, "", "Sys_getSerialNumber_async"], [840, 2, 1, "", "Sys_reboot"], [840, 2, 1, "", "Sys_reboot_async"], [840, 2, 1, "", "Sys_setAIOMode"], [840, 2, 1, "", "Sys_setAIOMode_async"], [840, 2, 1, "", "Sys_setDIMode"], [840, 2, 1, "", "Sys_setDIMode_async"], [840, 2, 1, "", "Sys_setDIOMode"], [840, 2, 1, "", "Sys_setDIOMode_async"], [840, 2, 1, "", "Sys_setDOMode"], [840, 2, 1, "", "Sys_setDOMode_async"], [840, 2, 1, "", "Sys_setIPAddrAndSubmask"], [840, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [840, 2, 1, "", "Sys_setIdleMode"], [840, 2, 1, "", "Sys_setIdleMode_async"], [840, 2, 1, "", "Sys_setMotionMode"], [840, 2, 1, "", "Sys_setMotionMode_async"], [840, 2, 1, "", "Sys_setRTC"], [840, 2, 1, "", "Sys_setRTC_async"], [840, 2, 1, "", "Sys_setSwitchMode"], [840, 2, 1, "", "Sys_setSwitchMode_async"], [840, 2, 1, "", "Sys_startRTCAlarm"], [840, 2, 1, "", "Sys_startRTCAlarm_async"], [840, 2, 1, "", "Sys_stopRTCAlarm"], [840, 2, 1, "", "Sys_stopRTCAlarm_async"], [840, 2, 1, "", "Wifi_getChargeStatus"], [840, 2, 1, "", "Wifi_getChargeStatus_async"], [840, 2, 1, "", "Wifi_getConfiguration"], [840, 2, 1, "", "Wifi_getConfiguration_async"], [840, 2, 1, "", "Wifi_getPowerGoodStatus"], [840, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [840, 2, 1, "", "Wifi_getWifiBandWidth"], [840, 2, 1, "", "Wifi_getWifiBandWidth_async"], [840, 2, 1, "", "Wifi_readBattery"], [840, 2, 1, "", "Wifi_readBattery_async"], [840, 2, 1, "", "Wifi_readRSSI"], [840, 2, 1, "", "Wifi_readRSSI_async"], [840, 2, 1, "", "Wifi_resetLED"], [840, 2, 1, "", "Wifi_resetLED_async"], [840, 2, 1, "", "Wifi_setBlueLED"], [840, 2, 1, "", "Wifi_setBlueLED_async"], [840, 2, 1, "", "Wifi_setGreenLED"], [840, 2, 1, "", "Wifi_setGreenLED_async"], [840, 2, 1, "", "Wifi_setRedLED"], [840, 2, 1, "", "Wifi_setRedLED_async"], [840, 2, 1, "", "close"], [840, 2, 1, "", "connect"], [840, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 814], "architectur": [0, 814], "instal": [0, 814], "upgrad": [0, 814], "quick": [0, 814], "start": [0, 814], "refer": [0, 814, 845], "licens": [0, 814], "find": [1, 2, 3, 31, 32, 33, 449, 450, 451, 475, 476, 477, 845], "all": [1, 139, 150, 177, 181, 231, 235, 415, 419, 449, 551, 558, 577, 581, 623, 627, 775, 779], "devic": [1, 449, 806, 807, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "drive": [2, 3, 4, 5, 6, 7, 8, 9, 450, 451, 452, 453, 454, 455, 456, 457], "home": [2, 31, 450, 475], "limit": [3, 33, 451, 477], "posit": [4, 5, 34, 36, 452, 453, 478, 480], "blend": [4, 8, 36, 39, 40, 452, 456, 480, 483, 484], "move": [5, 6, 9, 18, 19, 20, 21, 22, 23, 24, 27, 30, 453, 454, 457, 462, 463, 464, 465, 466, 467, 468, 471, 474], "scan": [6, 454], "servo": [7, 38, 455, 482], "veloc": [8, 9, 39, 456, 457, 483], "acceler": [8, 40, 456, 484], "system": [10, 12, 41, 43, 58, 60, 73, 75, 88, 90, 102, 104, 111, 113, 120, 122, 130, 132, 141, 143, 152, 154, 160, 162, 189, 191, 215, 217, 247, 249, 271, 273, 293, 295, 312, 314, 332, 334, 357, 359, 376, 377, 379, 399, 400, 402, 423, 424, 426, 439, 440, 442, 458, 460, 485, 487, 498, 500, 509, 511, 520, 522, 530, 532, 535, 537, 540, 542, 546, 548, 553, 555, 560, 562, 564, 566, 589, 591, 611, 613, 639, 641, 659, 661, 677, 679, 692, 694, 708, 710, 729, 731, 744, 745, 747, 763, 764, 766, 783, 784, 786, 795, 796, 798, 811], "get": [10, 11, 13, 34, 41, 42, 44, 58, 59, 61, 73, 74, 76, 88, 89, 91, 102, 103, 105, 111, 112, 114, 120, 121, 123, 130, 131, 133, 141, 142, 144, 152, 153, 155, 160, 161, 163, 189, 190, 192, 215, 216, 218, 247, 248, 250, 271, 272, 274, 293, 294, 296, 312, 313, 315, 332, 333, 335, 357, 358, 360, 376, 377, 378, 381, 399, 400, 401, 404, 423, 424, 425, 428, 439, 440, 441, 444, 458, 459, 461, 478, 485, 486, 488, 498, 499, 501, 509, 510, 512, 520, 521, 523, 530, 531, 533, 535, 536, 538, 540, 541, 543, 546, 547, 549, 553, 554, 556, 560, 561, 563, 564, 565, 567, 589, 590, 592, 611, 612, 614, 639, 640, 642, 659, 660, 662, 677, 678, 680, 692, 693, 695, 708, 709, 711, 729, 730, 732, 744, 745, 746, 749, 763, 764, 765, 768, 783, 784, 785, 788, 795, 796, 797, 800], "network": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 806, 807], "info": [10, 41, 58, 73, 88, 102, 111, 120, 130, 141, 152, 160, 189, 377, 400, 424, 440, 458, 485, 498, 509, 520, 530, 535, 540, 546, 553, 560, 564, 589, 745, 764, 784, 796, 807], "serial": [11, 42, 59, 74, 89, 103, 112, 121, 131, 142, 153, 161, 190, 216, 248, 272, 294, 313, 333, 358, 378, 401, 425, 441, 459, 486, 499, 510, 521, 531, 536, 541, 547, 554, 561, 565, 590, 612, 640, 660, 678, 693, 709, 730, 746, 765, 785, 797], "number": [11, 42, 59, 74, 89, 103, 112, 121, 131, 142, 153, 161, 190, 216, 248, 272, 294, 313, 333, 358, 378, 401, 425, 441, 459, 486, 499, 510, 521, 531, 536, 541, 547, 554, 561, 565, 590, 612, 640, 660, 678, 693, 709, 730, 746, 765, 785, 797], "hello": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "world": [12, 43, 60, 75, 90, 104, 113, 122, 132, 143, 154, 162, 191, 217, 249, 273, 295, 314, 334, 359, 379, 402, 426, 442, 460, 487, 500, 511, 522, 532, 537, 542, 548, 555, 562, 566, 591, 613, 641, 661, 679, 694, 710, 731, 747, 766, 786, 798], "set": [13, 44, 61, 76, 91, 105, 114, 123, 129, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 380, 381, 403, 404, 427, 428, 443, 444, 461, 488, 501, 512, 523, 533, 538, 543, 545, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 748, 749, 767, 768, 787, 788, 799, 800, 845], "rtc": [13, 44, 55, 56, 57, 61, 76, 91, 105, 114, 123, 133, 144, 155, 163, 192, 218, 250, 274, 296, 315, 335, 360, 381, 404, 428, 444, 461, 488, 495, 496, 497, 501, 512, 523, 533, 538, 543, 549, 556, 563, 567, 592, 614, 642, 662, 680, 695, 711, 732, 749, 768, 788, 800], "tutori": [14, 15, 16, 17, 45, 46, 47, 48, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 193, 194, 195, 196, 219, 220, 221, 222, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 382, 383, 384, 385, 405, 406, 407, 408, 429, 430, 431, 432, 445, 446, 447, 448], "multipl": [14, 15, 45, 46, 62, 63, 77, 78, 92, 93, 106, 107, 115, 116, 124, 125, 134, 135, 145, 146, 156, 157, 167, 168, 193, 194, 219, 220, 251, 252, 275, 276, 297, 298, 316, 317, 339, 340, 364, 365, 382, 383, 405, 406, 429, 430, 445, 446], "loop": [14, 15, 16, 17, 45, 46, 47, 48, 53, 62, 63, 64, 65, 70, 77, 78, 79, 80, 92, 93, 94, 95, 106, 107, 108, 109, 115, 116, 117, 118, 124, 125, 126, 127, 134, 135, 136, 137, 145, 146, 147, 148, 156, 157, 158, 159, 167, 168, 169, 170, 175, 193, 194, 195, 196, 201, 219, 220, 221, 222, 229, 251, 252, 253, 254, 275, 276, 277, 278, 297, 298, 299, 300, 316, 317, 318, 319, 339, 340, 341, 342, 364, 365, 366, 367, 374, 382, 383, 384, 385, 395, 405, 406, 407, 408, 413, 429, 430, 431, 432, 437, 445, 446, 447, 448, 493, 506, 575, 597, 621, 742, 759, 773, 793], "async": [14, 16, 27, 45, 47, 62, 64, 77, 79, 92, 94, 106, 108, 115, 117, 124, 126, 134, 136, 145, 147, 156, 158, 167, 169, 193, 195, 219, 221, 251, 253, 275, 277, 297, 299, 316, 318, 339, 341, 364, 366, 382, 384, 405, 407, 429, 431, 445, 447, 471, 812], "thread": [15, 17, 46, 48, 63, 65, 78, 80, 93, 95, 107, 109, 116, 118, 125, 127, 135, 137, 146, 148, 157, 159, 168, 170, 194, 196, 220, 222, 252, 254, 276, 278, 298, 300, 317, 319, 340, 342, 365, 367, 383, 385, 406, 408, 430, 432, 446, 448], "singl": [16, 17, 47, 48, 64, 65, 79, 80, 94, 95, 108, 109, 117, 118, 126, 127, 136, 137, 147, 148, 158, 159, 169, 170, 195, 196, 221, 222, 253, 254, 277, 278, 299, 300, 318, 319, 341, 342, 366, 367, 384, 385, 407, 408, 431, 432, 447, 448], "motion": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 845], "1axi": [18, 19, 20, 21, 22, 23, 24, 462, 463, 464, 465, 466, 467, 468], "scurv": [19, 463], "alarm": [20, 464], "breakpoint": [21, 465], "captur": [22, 466, 845], "config": [23, 35, 37, 467, 479, 481], "file": [23, 35, 37, 467, 479, 481], "inposit": [24, 468], "2axi": [25, 26, 469, 470], "circular": [25, 469], "interpo": [25, 26, 28, 29, 469, 470, 472, 473], "linear": [26, 29, 470, 473], "3axi": [27, 28, 29, 30, 471, 472, 473, 474], "helic": [28, 472], "sync": [30, 474, 811, 813], "index": [32, 476], "logic": [34, 478], "load": [35, 479], "save": [37, 481], "ai": [49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 67, 68, 69, 70, 71, 72, 110, 119, 171, 172, 173, 174, 175, 176, 179, 197, 198, 199, 200, 201, 202, 225, 226, 227, 228, 229, 230, 233, 370, 371, 372, 373, 374, 375, 391, 392, 393, 394, 395, 396, 409, 410, 411, 412, 413, 414, 417, 433, 434, 435, 436, 437, 438, 489, 490, 491, 492, 493, 494, 495, 496, 497, 502, 503, 504, 505, 506, 507, 508, 534, 539, 571, 572, 573, 574, 575, 576, 579, 593, 594, 595, 596, 597, 598, 617, 618, 619, 620, 621, 622, 625, 738, 739, 740, 741, 742, 743, 755, 756, 757, 758, 759, 760, 769, 770, 771, 772, 773, 774, 777, 789, 790, 791, 792, 793, 794, 801, 811, 842, 845], "n": [49, 55, 66, 171, 197, 225, 370, 391, 409, 433, 489, 495, 502, 571, 593, 617, 738, 755, 769, 789], "sampl": [49, 55, 66, 171, 197, 225, 370, 391, 409, 433, 489, 495, 502, 571, 593, 617, 738, 755, 769, 789, 842], "onc": [49, 54, 66, 71, 72, 110, 119, 171, 176, 197, 202, 225, 230, 370, 375, 391, 396, 409, 414, 433, 438, 489, 494, 502, 507, 508, 534, 539, 571, 576, 593, 598, 617, 622, 738, 743, 755, 760, 769, 774, 789, 794], "continu": [50, 51, 52, 56, 67, 68, 69, 172, 173, 174, 198, 199, 200, 226, 227, 228, 371, 372, 373, 392, 393, 394, 410, 411, 412, 434, 435, 436, 490, 491, 492, 496, 503, 504, 505, 572, 573, 574, 594, 595, 596, 618, 619, 620, 739, 740, 741, 756, 757, 758, 770, 771, 772, 790, 791, 792], "multi": [51, 68, 173, 199, 227, 372, 393, 411, 435, 491, 504, 573, 595, 619, 740, 757, 771, 791], "slot": [51, 68, 173, 199, 227, 372, 393, 411, 435, 491, 504, 573, 595, 619, 740, 757, 771, 791], "logger": [52, 69, 165, 174, 200, 228, 337, 362, 373, 394, 412, 436, 492, 505, 569, 574, 596, 620, 713, 734, 741, 758, 772, 792], "demand": [53, 54, 57, 70, 71, 72, 110, 119, 175, 176, 201, 202, 229, 230, 374, 375, 395, 396, 413, 414, 437, 438, 493, 494, 497, 506, 507, 508, 534, 539, 575, 576, 597, 598, 621, 622, 742, 743, 759, 760, 773, 774, 793, 794], "trigger": [55, 56, 57, 495, 496, 497], "dio": [81, 82, 96, 97, 183, 184, 204, 205, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 513, 514, 524, 525, 583, 584, 600, 601, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719], "loopback": [81, 82, 96, 97, 177, 178, 183, 184, 204, 205, 231, 232, 238, 239, 260, 261, 282, 283, 304, 305, 321, 322, 346, 347, 415, 416, 513, 514, 524, 525, 577, 578, 583, 584, 600, 601, 623, 624, 630, 631, 648, 649, 666, 667, 684, 685, 697, 698, 718, 719, 775, 776], "pin": [81, 83, 85, 96, 98, 100, 183, 185, 187, 204, 206, 208, 215, 238, 240, 242, 247, 260, 262, 264, 271, 282, 284, 286, 293, 304, 306, 308, 312, 321, 323, 325, 332, 346, 348, 350, 357, 513, 515, 517, 524, 526, 528, 583, 585, 587, 600, 602, 604, 611, 630, 632, 634, 639, 648, 650, 652, 659, 666, 668, 670, 677, 684, 686, 688, 692, 697, 699, 701, 708, 718, 720, 722, 729], "port": [82, 84, 86, 97, 99, 101, 184, 186, 188, 205, 207, 209, 239, 241, 243, 261, 263, 265, 283, 285, 287, 305, 307, 309, 322, 324, 326, 347, 349, 351, 514, 516, 518, 525, 527, 529, 584, 586, 588, 601, 603, 605, 631, 633, 635, 649, 651, 653, 667, 669, 671, 685, 687, 689, 698, 700, 702, 719, 721, 723, 846], "do": [83, 84, 85, 86, 98, 99, 100, 101, 185, 186, 187, 188, 206, 207, 208, 209, 240, 241, 242, 243, 262, 263, 264, 265, 284, 285, 286, 287, 306, 307, 308, 309, 323, 324, 325, 326, 348, 349, 350, 351, 515, 516, 517, 518, 526, 527, 528, 529, 585, 586, 587, 588, 602, 603, 604, 605, 632, 633, 634, 635, 650, 651, 652, 653, 668, 669, 670, 671, 686, 687, 688, 689, 699, 700, 701, 702, 720, 721, 722, 723, 803, 811], "blinki": [83, 84, 98, 99, 185, 186, 206, 207, 240, 241, 262, 263, 284, 285, 306, 307, 323, 324, 348, 349, 515, 516, 526, 527, 585, 586, 602, 603, 632, 633, 650, 651, 668, 669, 686, 687, 699, 700, 720, 721], "write": [85, 86, 100, 101, 139, 140, 150, 151, 181, 182, 187, 188, 208, 209, 211, 213, 214, 224, 235, 236, 242, 243, 245, 256, 258, 264, 265, 267, 269, 270, 280, 286, 287, 289, 291, 292, 302, 308, 309, 325, 326, 328, 330, 331, 344, 350, 351, 353, 355, 356, 369, 398, 419, 420, 422, 517, 518, 528, 529, 551, 552, 558, 559, 581, 582, 587, 588, 604, 605, 607, 609, 610, 616, 627, 628, 634, 635, 637, 644, 646, 652, 653, 655, 657, 658, 664, 670, 671, 673, 675, 676, 682, 688, 689, 701, 702, 704, 706, 707, 716, 722, 723, 725, 727, 728, 737, 762, 779, 780, 782], "pwm": [87, 212, 246, 268, 290, 311, 329, 354, 519, 608, 638, 656, 674, 691, 705, 726], "gener": [87, 138, 180, 212, 234, 246, 268, 290, 311, 329, 354, 418, 519, 550, 580, 608, 626, 638, 656, 674, 691, 705, 726, 778], "relai": [128, 129, 544, 545], "read": [128, 149, 164, 165, 166, 203, 210, 211, 213, 223, 237, 244, 245, 255, 257, 259, 266, 267, 269, 279, 281, 288, 289, 291, 301, 303, 310, 320, 327, 328, 330, 336, 337, 338, 343, 345, 352, 353, 355, 361, 362, 363, 368, 397, 421, 544, 557, 568, 569, 570, 599, 606, 607, 609, 615, 629, 636, 637, 643, 645, 647, 654, 655, 657, 663, 665, 672, 673, 675, 681, 683, 690, 696, 703, 704, 706, 712, 713, 714, 715, 717, 724, 725, 727, 733, 734, 735, 736, 761, 781], "counter": [128, 203, 237, 259, 281, 303, 320, 345, 544, 599, 629, 647, 665, 683, 696, 717], "channel": [129, 139, 140, 149, 150, 151, 164, 165, 166, 177, 178, 181, 182, 231, 232, 235, 236, 336, 337, 338, 361, 362, 363, 415, 416, 419, 420, 545, 551, 552, 557, 558, 559, 568, 569, 570, 577, 578, 581, 582, 623, 624, 627, 628, 712, 713, 714, 733, 734, 735, 775, 776, 779, 780, 843, 845], "ao": [138, 139, 140, 179, 180, 181, 182, 233, 234, 235, 236, 417, 418, 419, 420, 550, 551, 552, 579, 580, 581, 582, 625, 626, 627, 628, 777, 778, 779, 780, 802, 811, 845], "waveform": [138, 180, 234, 418, 550, 580, 626, 778], "one": [140, 178, 182, 232, 236, 416, 420, 552, 578, 582, 624, 628, 776, 780], "dpot": [149, 150, 151, 557, 558, 559], "tc": [164, 165, 166, 361, 362, 363, 568, 569, 570, 733, 734, 735, 809, 811], "data": [164, 165, 336, 337, 361, 362, 568, 569, 712, 713, 733, 734, 845], "statu": [166, 338, 363, 376, 380, 399, 403, 423, 427, 439, 443, 570, 714, 735, 744, 748, 763, 767, 783, 787, 795, 799], "aio": [177, 178, 231, 232, 415, 416, 577, 578, 623, 624, 775, 776], "output": [179, 233, 417, 579, 625, 777, 845], "while": [179, 233, 417, 579, 625, 777], "stream": [179, 233, 417, 579, 625, 777], "encod": [210, 244, 266, 288, 310, 327, 352, 606, 636, 654, 672, 690, 703, 724], "i2c": [211, 245, 267, 289, 328, 353, 607, 637, 655, 673, 704, 725, 804, 811, 845], "spi": [213, 214, 269, 270, 291, 292, 330, 331, 355, 356, 609, 610, 657, 658, 675, 676, 706, 707, 727, 728, 805, 811, 845], "mode": [215, 247, 271, 293, 312, 332, 357, 611, 639, 659, 677, 692, 708, 729, 845], "uart": [223, 224, 255, 256, 279, 280, 301, 302, 343, 344, 368, 369, 615, 616, 643, 644, 663, 664, 681, 682, 715, 716, 736, 737, 810, 811, 845], "can": [257, 258, 645, 646, 845], "rtd": [336, 337, 338, 712, 713, 714, 808, 811], "wifi": [376, 399, 423, 439, 744, 763, 783, 795, 812, 813, 815, 837, 838, 839, 840], "daq": [376, 399, 423, 439, 744, 763, 783, 795, 812, 813, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "led": [380, 403, 427, 443, 748, 767, 787, 799], "ahr": [386, 387, 388, 389, 390, 750, 751, 752, 753, 754], "getacceler": [386, 750], "getangularveloc": [387, 751], "getestim": [388, 752], "getorient": [389, 753], "visual": [390, 754], "sd": [397, 398, 421, 422, 761, 762, 781, 782], "test": [801, 802, 803, 804, 805, 808, 809, 810], "panel": [801, 802, 803, 804, 805, 808, 809, 810], "finder": [806, 812, 813, 816], "center": 807, "exampl": [811, 812, 813], "code": [811, 812, 813, 844], "gui": 811, "temperatur": 811, "consol": [812, 813], "stem": [812, 813, 829], "edriv": [812, 813, 817], "st": [812, 813, 817], "emot": [812, 813, 818], "ethan": [812, 813, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828], "A": [812, 813, 819, 837, 840], "a2": [812, 813, 820], "d": [812, 813, 821, 822, 833, 834], "ex": [812, 813, 822], "i": [812, 813, 823, 843, 846], "ia": [812, 813, 824], "l": [812, 813, 825], "o": [812, 813, 826, 843, 846], "p": [812, 813, 827], "t": [812, 813, 828], "usb": [812, 813, 815, 830, 831, 832, 833, 834, 835, 836], "f1": [812, 813, 830, 831, 832, 833, 834, 835, 836], "ad": [812, 813, 830], "aod": [812, 813, 831, 839], "cd": [812, 813, 832], "snk": [812, 813, 834], "rd": [812, 813, 835], "td": [812, 813, 836], "e3": [812, 813, 837, 838, 839], "ah": [812, 813, 838], "f4": [812, 813, 840], "product": [815, 841], "usag": 815, "util": 815, "ethernet": 815, "api": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "function": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 846], "descript": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "pinout": [817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840], "featur": 841, "max": 842, "rate": 842, "tabl": [842, 843, 844, 845, 846], "error": 844, "form": 845, "speed": 845, "type": 845, "address": 845, "direct": 845, "enabl": 845, "oper": 845, "polar": 845, "search": 845, "stepper": 845, "stop": 845, "clock": 845, "size": 845, "endian": 845, "thermal": 845, "oversampl": 845, "pariti": 845, "bit": 845}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Overview": [[0, "overview"], [814, "overview"]], "Architecture": [[0, "architecture"], [814, "architecture"]], "Install and Upgrade": [[0, "install-and-upgrade"], [814, "install-and-upgrade"]], "Quick Start": [[0, "quick-start"], [814, "quick-start"]], "References": [[0, "references"], [814, "references"]], "License": [[0, "license"], [814, "license"]], "Find all devices": [[1, "find-all-devices"], [449, "find-all-devices"]], "Drive find home": [[2, "drive-find-home"], [450, "drive-find-home"]], "Drive find limit": [[3, "drive-find-limit"], [451, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [452, "drive-position-blending"]], "Drive position move": [[5, "drive-position-move"], [453, "drive-position-move"]], "Drive scan move": [[6, "drive-scan-move"], [454, "drive-scan-move"]], "Drive servo on": [[7, "drive-servo-on"], [455, "drive-servo-on"]], "Drive velocity blending acceleration": [[8, "drive-velocity-blending-acceleration"], [456, "drive-velocity-blending-acceleration"]], "Drive velocity move": [[9, "drive-velocity-move"], [457, "drive-velocity-move"]], "System get network info": [[10, "system-get-network-info"], [41, "system-get-network-info"], [58, "system-get-network-info"], [73, "system-get-network-info"], [88, "system-get-network-info"], [102, "system-get-network-info"], [111, "system-get-network-info"], [120, "system-get-network-info"], [130, "system-get-network-info"], [141, "system-get-network-info"], [152, "system-get-network-info"], [160, "system-get-network-info"], [189, "system-get-network-info"], [377, "system-get-network-info"], [400, "system-get-network-info"], [424, "system-get-network-info"], [440, "system-get-network-info"], [458, "system-get-network-info"], [485, "system-get-network-info"], [498, "system-get-network-info"], [509, "system-get-network-info"], [520, "system-get-network-info"], [530, "system-get-network-info"], [535, "system-get-network-info"], [540, "system-get-network-info"], [546, "system-get-network-info"], [553, "system-get-network-info"], [560, "system-get-network-info"], [564, "system-get-network-info"], [589, "system-get-network-info"], [745, "system-get-network-info"], [764, "system-get-network-info"], [784, "system-get-network-info"], [796, "system-get-network-info"]], "Get serial number": [[11, "get-serial-number"], [42, "get-serial-number"], [59, "get-serial-number"], [74, "get-serial-number"], [89, "get-serial-number"], [103, "get-serial-number"], [112, "get-serial-number"], [121, "get-serial-number"], [131, "get-serial-number"], [142, "get-serial-number"], [153, "get-serial-number"], [161, "get-serial-number"], [190, "get-serial-number"], [216, "get-serial-number"], [248, "get-serial-number"], [272, "get-serial-number"], [294, "get-serial-number"], [313, "get-serial-number"], [333, "get-serial-number"], [358, "get-serial-number"], [378, "get-serial-number"], [401, "get-serial-number"], [425, "get-serial-number"], [441, "get-serial-number"], [459, "get-serial-number"], [486, "get-serial-number"], [499, "get-serial-number"], [510, "get-serial-number"], [521, "get-serial-number"], [531, "get-serial-number"], [536, "get-serial-number"], [541, "get-serial-number"], [547, "get-serial-number"], [554, "get-serial-number"], [561, "get-serial-number"], [565, "get-serial-number"], [590, "get-serial-number"], [612, "get-serial-number"], [640, "get-serial-number"], [660, "get-serial-number"], [678, "get-serial-number"], [693, "get-serial-number"], [709, "get-serial-number"], [730, "get-serial-number"], [746, "get-serial-number"], [765, "get-serial-number"], [785, "get-serial-number"], [797, "get-serial-number"]], "System hello world": [[12, "system-hello-world"], [43, "system-hello-world"], [60, "system-hello-world"], [75, "system-hello-world"], [90, "system-hello-world"], [104, "system-hello-world"], [113, "system-hello-world"], [122, "system-hello-world"], [132, "system-hello-world"], [143, "system-hello-world"], [154, "system-hello-world"], [162, "system-hello-world"], [191, "system-hello-world"], [217, "system-hello-world"], [249, "system-hello-world"], [273, "system-hello-world"], [295, "system-hello-world"], [314, "system-hello-world"], [334, "system-hello-world"], [359, "system-hello-world"], [379, "system-hello-world"], [402, "system-hello-world"], [426, "system-hello-world"], [442, "system-hello-world"], [460, "system-hello-world"], [487, "system-hello-world"], [500, "system-hello-world"], [511, "system-hello-world"], [522, "system-hello-world"], [532, "system-hello-world"], [537, "system-hello-world"], [542, "system-hello-world"], [548, "system-hello-world"], [555, "system-hello-world"], [562, "system-hello-world"], [566, "system-hello-world"], [591, "system-hello-world"], [613, "system-hello-world"], [641, "system-hello-world"], [661, "system-hello-world"], [679, "system-hello-world"], [694, "system-hello-world"], [710, "system-hello-world"], [731, "system-hello-world"], [747, "system-hello-world"], [766, "system-hello-world"], [786, "system-hello-world"], [798, "system-hello-world"]], "Set and get RTC": [[13, "set-and-get-rtc"], [44, "set-and-get-rtc"], [61, "set-and-get-rtc"], [76, "set-and-get-rtc"], [91, "set-and-get-rtc"], [105, "set-and-get-rtc"], [114, "set-and-get-rtc"], [123, "set-and-get-rtc"], [133, "set-and-get-rtc"], [144, "set-and-get-rtc"], [155, "set-and-get-rtc"], [163, "set-and-get-rtc"], [192, "set-and-get-rtc"], [218, "set-and-get-rtc"], [250, "set-and-get-rtc"], [274, "set-and-get-rtc"], [296, "set-and-get-rtc"], [315, "set-and-get-rtc"], [335, "set-and-get-rtc"], [360, "set-and-get-rtc"], [381, "set-and-get-rtc"], [404, "set-and-get-rtc"], [428, "set-and-get-rtc"], [444, "set-and-get-rtc"], [461, "set-and-get-rtc"], [488, "set-and-get-rtc"], [501, "set-and-get-rtc"], [512, "set-and-get-rtc"], [523, "set-and-get-rtc"], [533, "set-and-get-rtc"], [538, "set-and-get-rtc"], [543, "set-and-get-rtc"], [549, "set-and-get-rtc"], [556, "set-and-get-rtc"], [563, "set-and-get-rtc"], [567, "set-and-get-rtc"], [592, "set-and-get-rtc"], [614, "set-and-get-rtc"], [642, "set-and-get-rtc"], [662, "set-and-get-rtc"], [680, "set-and-get-rtc"], [695, "set-and-get-rtc"], [711, "set-and-get-rtc"], [732, "set-and-get-rtc"], [749, "set-and-get-rtc"], [768, "set-and-get-rtc"], [788, "set-and-get-rtc"], [800, "set-and-get-rtc"]], "Tutorial multiple loops async": [[14, "tutorial-multiple-loops-async"], [45, "tutorial-multiple-loops-async"], [62, "tutorial-multiple-loops-async"], [77, "tutorial-multiple-loops-async"], [92, "tutorial-multiple-loops-async"], [106, "tutorial-multiple-loops-async"], [115, "tutorial-multiple-loops-async"], [124, "tutorial-multiple-loops-async"], [134, "tutorial-multiple-loops-async"], [145, "tutorial-multiple-loops-async"], [156, "tutorial-multiple-loops-async"], [167, "tutorial-multiple-loops-async"], [193, "tutorial-multiple-loops-async"], [219, "tutorial-multiple-loops-async"], [251, "tutorial-multiple-loops-async"], [275, "tutorial-multiple-loops-async"], [297, "tutorial-multiple-loops-async"], [316, "tutorial-multiple-loops-async"], [339, "tutorial-multiple-loops-async"], [364, "tutorial-multiple-loops-async"], [382, "tutorial-multiple-loops-async"], [405, "tutorial-multiple-loops-async"], [429, "tutorial-multiple-loops-async"], [445, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[15, "tutorial-multiple-loops-thread"], [46, "tutorial-multiple-loops-thread"], [63, "tutorial-multiple-loops-thread"], [78, "tutorial-multiple-loops-thread"], [93, "tutorial-multiple-loops-thread"], [107, "tutorial-multiple-loops-thread"], [116, "tutorial-multiple-loops-thread"], [125, "tutorial-multiple-loops-thread"], [135, "tutorial-multiple-loops-thread"], [146, "tutorial-multiple-loops-thread"], [157, "tutorial-multiple-loops-thread"], [168, "tutorial-multiple-loops-thread"], [194, "tutorial-multiple-loops-thread"], [220, "tutorial-multiple-loops-thread"], [252, "tutorial-multiple-loops-thread"], [276, "tutorial-multiple-loops-thread"], [298, "tutorial-multiple-loops-thread"], [317, "tutorial-multiple-loops-thread"], [340, "tutorial-multiple-loops-thread"], [365, "tutorial-multiple-loops-thread"], [383, "tutorial-multiple-loops-thread"], [406, "tutorial-multiple-loops-thread"], [430, "tutorial-multiple-loops-thread"], [446, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[16, "tutorial-single-loop-async"], [47, "tutorial-single-loop-async"], [64, "tutorial-single-loop-async"], [79, "tutorial-single-loop-async"], [94, "tutorial-single-loop-async"], [108, "tutorial-single-loop-async"], [117, "tutorial-single-loop-async"], [126, "tutorial-single-loop-async"], [136, "tutorial-single-loop-async"], [147, "tutorial-single-loop-async"], [158, "tutorial-single-loop-async"], [169, "tutorial-single-loop-async"], [195, "tutorial-single-loop-async"], [221, "tutorial-single-loop-async"], [253, "tutorial-single-loop-async"], [277, "tutorial-single-loop-async"], [299, "tutorial-single-loop-async"], [318, "tutorial-single-loop-async"], [341, "tutorial-single-loop-async"], [366, "tutorial-single-loop-async"], [384, "tutorial-single-loop-async"], [407, "tutorial-single-loop-async"], [431, "tutorial-single-loop-async"], [447, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[17, "tutorial-single-loop-thread"], [48, "tutorial-single-loop-thread"], [65, "tutorial-single-loop-thread"], [80, "tutorial-single-loop-thread"], [95, "tutorial-single-loop-thread"], [109, "tutorial-single-loop-thread"], [118, "tutorial-single-loop-thread"], [127, "tutorial-single-loop-thread"], [137, "tutorial-single-loop-thread"], [148, "tutorial-single-loop-thread"], [159, "tutorial-single-loop-thread"], [170, "tutorial-single-loop-thread"], [196, "tutorial-single-loop-thread"], [222, "tutorial-single-loop-thread"], [254, "tutorial-single-loop-thread"], [278, "tutorial-single-loop-thread"], [300, "tutorial-single-loop-thread"], [319, "tutorial-single-loop-thread"], [342, "tutorial-single-loop-thread"], [367, "tutorial-single-loop-thread"], [385, "tutorial-single-loop-thread"], [408, "tutorial-single-loop-thread"], [432, "tutorial-single-loop-thread"], [448, "tutorial-single-loop-thread"]], "Motion 1axis move": [[18, "motion-1axis-move"], [462, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[19, "motion-1axis-move-with-scurve"], [463, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[20, "motion-1axis-move-with-alarm-in"], [464, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[21, "motion-1axis-move-with-breakpoint"], [465, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[22, "motion-1axis-move-with-capture"], [466, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[23, "motion-1axis-move-with-config-file"], [467, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[24, "motion-1axis-move-with-inposition"], [468, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[25, "motion-2axis-circular-interpo"], [469, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[26, "motion-2axis-linear-interpo"], [470, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[27, "motion-3axis-async-move"], [471, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[28, "motion-3axis-helical-interpo"], [472, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[29, "motion-3axis-linear-interpo"], [473, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[30, "motion-3axis-sync-move"], [474, "motion-3axis-sync-move"]], "Motion find home": [[31, "motion-find-home"], [475, "motion-find-home"]], "Motion find index": [[32, "motion-find-index"], [476, "motion-find-index"]], "Motion find limit": [[33, "motion-find-limit"], [477, "motion-find-limit"]], "Motion get logical position": [[34, "motion-get-logical-position"], [478, "motion-get-logical-position"]], "Motion load config file": [[35, "motion-load-config-file"], [479, "motion-load-config-file"]], "Motion position blending": [[36, "motion-position-blending"], [480, "motion-position-blending"]], "Motion save config file": [[37, "motion-save-config-file"], [481, "motion-save-config-file"]], "Motion servo on": [[38, "motion-servo-on"], [482, "motion-servo-on"]], "Motion velocity blending": [[39, "motion-velocity-blending"], [483, "motion-velocity-blending"]], "Motion acceleration blending": [[40, "motion-acceleration-blending"], [484, "motion-acceleration-blending"]], "AI N samples once": [[49, "ai-n-samples-once"], [66, "ai-n-samples-once"], [171, "ai-n-samples-once"], [197, "ai-n-samples-once"], [225, "ai-n-samples-once"], [370, "ai-n-samples-once"], [391, "ai-n-samples-once"], [409, "ai-n-samples-once"], [433, "ai-n-samples-once"], [489, "ai-n-samples-once"], [502, "ai-n-samples-once"], [571, "ai-n-samples-once"], [593, "ai-n-samples-once"], [617, "ai-n-samples-once"], [738, "ai-n-samples-once"], [755, "ai-n-samples-once"], [769, "ai-n-samples-once"], [789, "ai-n-samples-once"]], "AI continuous": [[50, "ai-continuous"], [67, "ai-continuous"], [172, "ai-continuous"], [198, "ai-continuous"], [226, "ai-continuous"], [371, "ai-continuous"], [392, "ai-continuous"], [410, "ai-continuous"], [434, "ai-continuous"], [490, "ai-continuous"], [503, "ai-continuous"], [572, "ai-continuous"], [594, "ai-continuous"], [618, "ai-continuous"], [739, "ai-continuous"], [756, "ai-continuous"], [770, "ai-continuous"], [790, "ai-continuous"]], "AI continuous multi slot": [[51, "ai-continuous-multi-slot"], [68, "ai-continuous-multi-slot"], [173, "ai-continuous-multi-slot"], [199, "ai-continuous-multi-slot"], [227, "ai-continuous-multi-slot"], [372, "ai-continuous-multi-slot"], [393, "ai-continuous-multi-slot"], [411, "ai-continuous-multi-slot"], [435, "ai-continuous-multi-slot"], [491, "ai-continuous-multi-slot"], [504, "ai-continuous-multi-slot"], [573, "ai-continuous-multi-slot"], [595, "ai-continuous-multi-slot"], [619, "ai-continuous-multi-slot"], [740, "ai-continuous-multi-slot"], [757, "ai-continuous-multi-slot"], [771, "ai-continuous-multi-slot"], [791, "ai-continuous-multi-slot"]], "AI continuous with logger": [[52, "ai-continuous-with-logger"], [69, "ai-continuous-with-logger"], [174, "ai-continuous-with-logger"], [200, "ai-continuous-with-logger"], [228, "ai-continuous-with-logger"], [373, "ai-continuous-with-logger"], [394, "ai-continuous-with-logger"], [412, "ai-continuous-with-logger"], [436, "ai-continuous-with-logger"], [492, "ai-continuous-with-logger"], [505, "ai-continuous-with-logger"], [574, "ai-continuous-with-logger"], [596, "ai-continuous-with-logger"], [620, "ai-continuous-with-logger"], [741, "ai-continuous-with-logger"], [758, "ai-continuous-with-logger"], [772, "ai-continuous-with-logger"], [792, "ai-continuous-with-logger"]], "AI on demand in loop": [[53, "ai-on-demand-in-loop"], [70, "ai-on-demand-in-loop"], [175, "ai-on-demand-in-loop"], [201, "ai-on-demand-in-loop"], [229, "ai-on-demand-in-loop"], [374, "ai-on-demand-in-loop"], [395, "ai-on-demand-in-loop"], [413, "ai-on-demand-in-loop"], [437, "ai-on-demand-in-loop"], [493, "ai-on-demand-in-loop"], [506, "ai-on-demand-in-loop"], [575, "ai-on-demand-in-loop"], [597, "ai-on-demand-in-loop"], [621, "ai-on-demand-in-loop"], [742, "ai-on-demand-in-loop"], [759, "ai-on-demand-in-loop"], [773, "ai-on-demand-in-loop"], [793, "ai-on-demand-in-loop"]], "AI on demand once": [[54, "ai-on-demand-once"], [71, "ai-on-demand-once"], [72, "ai-on-demand-once"], [110, "ai-on-demand-once"], [119, "ai-on-demand-once"], [176, "ai-on-demand-once"], [202, "ai-on-demand-once"], [230, "ai-on-demand-once"], [375, "ai-on-demand-once"], [396, "ai-on-demand-once"], [414, "ai-on-demand-once"], [438, "ai-on-demand-once"], [494, "ai-on-demand-once"], [507, "ai-on-demand-once"], [508, "ai-on-demand-once"], [534, "ai-on-demand-once"], [539, "ai-on-demand-once"], [576, "ai-on-demand-once"], [598, "ai-on-demand-once"], [622, "ai-on-demand-once"], [743, "ai-on-demand-once"], [760, "ai-on-demand-once"], [774, "ai-on-demand-once"], [794, "ai-on-demand-once"]], "RTC trigger AI N samples": [[55, "rtc-trigger-ai-n-samples"], [495, "rtc-trigger-ai-n-samples"]], "RTC trigger AI continuous": [[56, "rtc-trigger-ai-continuous"], [496, "rtc-trigger-ai-continuous"]], "RTC trigger AI on demand": [[57, "rtc-trigger-ai-on-demand"], [497, "rtc-trigger-ai-on-demand"]], "DIO loopback pins": [[81, "dio-loopback-pins"], [96, "dio-loopback-pins"], [183, "dio-loopback-pins"], [204, "dio-loopback-pins"], [238, "dio-loopback-pins"], [260, "dio-loopback-pins"], [282, "dio-loopback-pins"], [304, "dio-loopback-pins"], [321, "dio-loopback-pins"], [346, "dio-loopback-pins"], [513, "dio-loopback-pins"], [524, "dio-loopback-pins"], [583, "dio-loopback-pins"], [600, "dio-loopback-pins"], [630, "dio-loopback-pins"], [648, "dio-loopback-pins"], [666, "dio-loopback-pins"], [684, "dio-loopback-pins"], [697, "dio-loopback-pins"], [718, "dio-loopback-pins"]], "DIO loopback port": [[82, "dio-loopback-port"], [97, "dio-loopback-port"], [184, "dio-loopback-port"], [205, "dio-loopback-port"], [239, "dio-loopback-port"], [261, "dio-loopback-port"], [283, "dio-loopback-port"], [305, "dio-loopback-port"], [322, "dio-loopback-port"], [347, "dio-loopback-port"], [514, "dio-loopback-port"], [525, "dio-loopback-port"], [584, "dio-loopback-port"], [601, "dio-loopback-port"], [631, "dio-loopback-port"], [649, "dio-loopback-port"], [667, "dio-loopback-port"], [685, "dio-loopback-port"], [698, "dio-loopback-port"], [719, "dio-loopback-port"]], "DO blinky pins": [[83, "do-blinky-pins"], [98, "do-blinky-pins"], [185, "do-blinky-pins"], [206, "do-blinky-pins"], [240, "do-blinky-pins"], [262, "do-blinky-pins"], [284, "do-blinky-pins"], [306, "do-blinky-pins"], [323, "do-blinky-pins"], [348, "do-blinky-pins"], [515, "do-blinky-pins"], [526, "do-blinky-pins"], [585, "do-blinky-pins"], [602, "do-blinky-pins"], [632, "do-blinky-pins"], [650, "do-blinky-pins"], [668, "do-blinky-pins"], [686, "do-blinky-pins"], [699, "do-blinky-pins"], [720, "do-blinky-pins"]], "DO blinky port": [[84, "do-blinky-port"], [99, "do-blinky-port"], [186, "do-blinky-port"], [207, "do-blinky-port"], [241, "do-blinky-port"], [263, "do-blinky-port"], [285, "do-blinky-port"], [307, "do-blinky-port"], [324, "do-blinky-port"], [349, "do-blinky-port"], [516, "do-blinky-port"], [527, "do-blinky-port"], [586, "do-blinky-port"], [603, "do-blinky-port"], [633, "do-blinky-port"], [651, "do-blinky-port"], [669, "do-blinky-port"], [687, "do-blinky-port"], [700, "do-blinky-port"], [721, "do-blinky-port"]], "DO write pins": [[85, "do-write-pins"], [100, "do-write-pins"], [187, "do-write-pins"], [208, "do-write-pins"], [242, "do-write-pins"], [264, "do-write-pins"], [286, "do-write-pins"], [308, "do-write-pins"], [325, "do-write-pins"], [350, "do-write-pins"], [517, "do-write-pins"], [528, "do-write-pins"], [587, "do-write-pins"], [604, "do-write-pins"], [634, "do-write-pins"], [652, "do-write-pins"], [670, "do-write-pins"], [688, "do-write-pins"], [701, "do-write-pins"], [722, "do-write-pins"]], "DO write port": [[86, "do-write-port"], [101, "do-write-port"], [188, "do-write-port"], [209, "do-write-port"], [243, "do-write-port"], [265, "do-write-port"], [287, "do-write-port"], [309, "do-write-port"], [326, "do-write-port"], [351, "do-write-port"], [518, "do-write-port"], [529, "do-write-port"], [588, "do-write-port"], [605, "do-write-port"], [635, "do-write-port"], [653, "do-write-port"], [671, "do-write-port"], [689, "do-write-port"], [702, "do-write-port"], [723, "do-write-port"]], "PWM generate": [[87, "pwm-generate"], [212, "pwm-generate"], [246, "pwm-generate"], [268, "pwm-generate"], [290, "pwm-generate"], [311, "pwm-generate"], [329, "pwm-generate"], [354, "pwm-generate"], [519, "pwm-generate"], [608, "pwm-generate"], [638, "pwm-generate"], [656, "pwm-generate"], [674, "pwm-generate"], [691, "pwm-generate"], [705, "pwm-generate"], [726, "pwm-generate"]], "Relay read counters": [[128, "relay-read-counters"], [544, "relay-read-counters"]], "Relay set channel": [[129, "relay-set-channel"], [545, "relay-set-channel"]], "AO waveform generation": [[138, "ao-waveform-generation"], [180, "ao-waveform-generation"], [234, "ao-waveform-generation"], [418, "ao-waveform-generation"], [550, "ao-waveform-generation"], [580, "ao-waveform-generation"], [626, "ao-waveform-generation"], [778, "ao-waveform-generation"]], "AO write all channels": [[139, "ao-write-all-channels"], [181, "ao-write-all-channels"], [235, "ao-write-all-channels"], [419, "ao-write-all-channels"], [551, "ao-write-all-channels"], [581, "ao-write-all-channels"], [627, "ao-write-all-channels"], [779, "ao-write-all-channels"]], "AO write one channel": [[140, "ao-write-one-channel"], [182, "ao-write-one-channel"], [236, "ao-write-one-channel"], [420, "ao-write-one-channel"], [552, "ao-write-one-channel"], [582, "ao-write-one-channel"], [628, "ao-write-one-channel"], [780, "ao-write-one-channel"]], "DPOT read by channel": [[149, "dpot-read-by-channel"], [557, "dpot-read-by-channel"]], "DPOT write all channels": [[150, "dpot-write-all-channels"], [558, "dpot-write-all-channels"]], "DPOT write by channel": [[151, "dpot-write-by-channel"], [559, "dpot-write-by-channel"]], "TC read channel data": [[164, "tc-read-channel-data"], [361, "tc-read-channel-data"], [568, "tc-read-channel-data"], [733, "tc-read-channel-data"]], "TC read channel data with logger": [[165, "tc-read-channel-data-with-logger"], [362, "tc-read-channel-data-with-logger"], [569, "tc-read-channel-data-with-logger"], [734, "tc-read-channel-data-with-logger"]], "TC read channel status": [[166, "tc-read-channel-status"], [363, "tc-read-channel-status"], [570, "tc-read-channel-status"], [735, "tc-read-channel-status"]], "AIO all channels loopback": [[177, "aio-all-channels-loopback"], [231, "aio-all-channels-loopback"], [415, "aio-all-channels-loopback"], [577, "aio-all-channels-loopback"], [623, "aio-all-channels-loopback"], [775, "aio-all-channels-loopback"]], "AIO one channel loopback": [[178, "aio-one-channel-loopback"], [232, "aio-one-channel-loopback"], [416, "aio-one-channel-loopback"], [578, "aio-one-channel-loopback"], [624, "aio-one-channel-loopback"], [776, "aio-one-channel-loopback"]], "AO output while AI streaming": [[179, "ao-output-while-ai-streaming"], [233, "ao-output-while-ai-streaming"], [417, "ao-output-while-ai-streaming"], [579, "ao-output-while-ai-streaming"], [625, "ao-output-while-ai-streaming"], [777, "ao-output-while-ai-streaming"]], "Counter read": [[203, "counter-read"], [237, "counter-read"], [259, "counter-read"], [281, "counter-read"], [303, "counter-read"], [320, "counter-read"], [345, "counter-read"], [599, "counter-read"], [629, "counter-read"], [647, "counter-read"], [665, "counter-read"], [683, "counter-read"], [696, "counter-read"], [717, "counter-read"]], "Encoder read": [[210, "encoder-read"], [244, "encoder-read"], [266, "encoder-read"], [288, "encoder-read"], [310, "encoder-read"], [327, "encoder-read"], [352, "encoder-read"], [606, "encoder-read"], [636, "encoder-read"], [654, "encoder-read"], [672, "encoder-read"], [690, "encoder-read"], [703, "encoder-read"], [724, "encoder-read"]], "I2C write and read": [[211, "i2c-write-and-read"], [245, "i2c-write-and-read"], [267, "i2c-write-and-read"], [289, "i2c-write-and-read"], [328, "i2c-write-and-read"], [353, "i2c-write-and-read"], [607, "i2c-write-and-read"], [637, "i2c-write-and-read"], [655, "i2c-write-and-read"], [673, "i2c-write-and-read"], [704, "i2c-write-and-read"], [725, "i2c-write-and-read"]], "SPI read and write": [[213, "spi-read-and-write"], [269, "spi-read-and-write"], [291, "spi-read-and-write"], [330, "spi-read-and-write"], [355, "spi-read-and-write"], [609, "spi-read-and-write"], [657, "spi-read-and-write"], [675, "spi-read-and-write"], [706, "spi-read-and-write"], [727, "spi-read-and-write"]], "SPI write": [[214, "spi-write"], [270, "spi-write"], [292, "spi-write"], [331, "spi-write"], [356, "spi-write"], [610, "spi-write"], [658, "spi-write"], [676, "spi-write"], [707, "spi-write"], [728, "spi-write"]], "System get pin mode": [[215, "system-get-pin-mode"], [247, "system-get-pin-mode"], [271, "system-get-pin-mode"], [293, "system-get-pin-mode"], [312, "system-get-pin-mode"], [332, "system-get-pin-mode"], [357, "system-get-pin-mode"], [611, "system-get-pin-mode"], [639, "system-get-pin-mode"], [659, "system-get-pin-mode"], [677, "system-get-pin-mode"], [692, "system-get-pin-mode"], [708, "system-get-pin-mode"], [729, "system-get-pin-mode"]], "UART read": [[223, "uart-read"], [255, "uart-read"], [279, "uart-read"], [301, "uart-read"], [343, "uart-read"], [368, "uart-read"], [615, "uart-read"], [643, "uart-read"], [663, "uart-read"], [681, "uart-read"], [715, "uart-read"], [736, "uart-read"]], "UART write": [[224, "uart-write"], [256, "uart-write"], [280, "uart-write"], [302, "uart-write"], [344, "uart-write"], [369, "uart-write"], [616, "uart-write"], [644, "uart-write"], [664, "uart-write"], [682, "uart-write"], [716, "uart-write"], [737, "uart-write"]], "CAN read": [[257, "can-read"], [645, "can-read"]], "CAN write": [[258, "can-write"], [646, "can-write"]], "RTD read channel data": [[336, "rtd-read-channel-data"], [712, "rtd-read-channel-data"]], "RTD read channel data with logger": [[337, "rtd-read-channel-data-with-logger"], [713, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[338, "rtd-read-channel-status"], [714, "rtd-read-channel-status"]], "System get Wifi DAQ status": [[376, "system-get-wifi-daq-status"], [399, "system-get-wifi-daq-status"], [423, "system-get-wifi-daq-status"], [439, "system-get-wifi-daq-status"], [744, "system-get-wifi-daq-status"], [763, "system-get-wifi-daq-status"], [783, "system-get-wifi-daq-status"], [795, "system-get-wifi-daq-status"]], "Set LED status": [[380, "set-led-status"], [403, "set-led-status"], [427, "set-led-status"], [443, "set-led-status"], [748, "set-led-status"], [767, "set-led-status"], [787, "set-led-status"], [799, "set-led-status"]], "AHRS getAcceleration": [[386, "ahrs-getacceleration"], [750, "ahrs-getacceleration"]], "AHRS getAngularVelocity": [[387, "ahrs-getangularvelocity"], [751, "ahrs-getangularvelocity"]], "AHRS getEstimation": [[388, "ahrs-getestimation"], [752, "ahrs-getestimation"]], "AHRS getOrientation": [[389, "ahrs-getorientation"], [753, "ahrs-getorientation"]], "AHRS visualize": [[390, "ahrs-visualize"], [754, "ahrs-visualize"]], "SD read": [[397, "sd-read"], [421, "sd-read"], [761, "sd-read"], [781, "sd-read"]], "SD write": [[398, "sd-write"], [422, "sd-write"], [762, "sd-write"], [782, "sd-write"]], "AI test panel": [[801, "ai-test-panel"]], "AO test panel": [[802, "ao-test-panel"]], "DO test panel": [[803, "do-test-panel"]], "I2C test panel": [[804, "i2c-test-panel"]], "SPI test panel": [[805, "spi-test-panel"]], "Network device finder": [[806, "network-device-finder"]], "Device network info center": [[807, "device-network-info-center"]], "RTD test panel": [[808, "rtd-test-panel"]], "TC test panel": [[809, "tc-test-panel"]], "UART test panel": [[810, "uart-test-panel"]], "Example Codes - GUI (sync)": [[811, "example-codes-gui-sync"]], "AI": [[811, "ai"]], "AO": [[811, "ao"]], "DO": [[811, "do"]], "I2C": [[811, "i2c"]], "SPI": [[811, "spi"]], "System": [[811, "system"]], "Temperature-RTD": [[811, "temperature-rtd"]], "Temperature-TC": [[811, "temperature-tc"]], "UART": [[811, "uart"]], "Example Codes - Console (async)": [[812, "example-codes-console-async"]], "Device finder": [[812, "device-finder"], [813, "device-finder"], [816, "device-finder"]], "STEM": [[812, "stem"], [813, "stem"], [829, "stem"]], "EDrive-ST": [[812, "edrive-st"], [813, "edrive-st"], [817, "edrive-st"]], "EMotion": [[812, "emotion"], [813, "emotion"], [818, "emotion"]], "Ethan-A": [[812, "ethan-a"], [813, "ethan-a"], [819, "ethan-a"]], "Ethan-A2": [[812, "ethan-a2"], [813, "ethan-a2"], [820, "ethan-a2"]], "Ethan-D": [[812, "ethan-d"], [813, "ethan-d"], [821, "ethan-d"]], "Ethan-EX-D": [[812, "ethan-ex-d"], [813, "ethan-ex-d"], [822, "ethan-ex-d"]], "Ethan-I": [[812, "ethan-i"], [813, "ethan-i"], [823, "ethan-i"]], "Ethan-IA": [[812, "ethan-ia"], [813, "ethan-ia"], [824, "ethan-ia"]], "Ethan-L": [[812, "ethan-l"], [813, "ethan-l"], [825, "ethan-l"]], "Ethan-O": [[812, "ethan-o"], [813, "ethan-o"], [826, "ethan-o"]], "Ethan-P": [[812, "ethan-p"], [813, "ethan-p"], [827, "ethan-p"]], "Ethan-T": [[812, "ethan-t"], [813, "ethan-t"], [828, "ethan-t"]], "USB-DAQ-F1-AD": [[812, "usb-daq-f1-ad"], [813, "usb-daq-f1-ad"], [830, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[812, "usb-daq-f1-aod"], [813, "usb-daq-f1-aod"], [831, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[812, "usb-daq-f1-cd"], [813, "usb-daq-f1-cd"], [832, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[812, "usb-daq-f1-d"], [813, "usb-daq-f1-d"], [833, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[812, "usb-daq-f1-d-snk"], [813, "usb-daq-f1-d-snk"], [834, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[812, "usb-daq-f1-rd"], [813, "usb-daq-f1-rd"], [835, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[812, "usb-daq-f1-td"], [813, "usb-daq-f1-td"], [836, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[812, "wifi-daq-e3-a"], [813, "wifi-daq-e3-a"], [837, "wifi-daq-e3-a"]], "Wifi-DAQ-E3-AH": [[812, "wifi-daq-e3-ah"], [813, "wifi-daq-e3-ah"], [838, "wifi-daq-e3-ah"]], "Wifi-DAQ-F4-A": [[812, "wifi-daq-f4-a"], [813, "wifi-daq-f4-a"], [840, "wifi-daq-f4-a"]], "Wifi-DAQ-E3-AOD": [[812, "wifi-daq-e3-aod"], [813, "wifi-daq-e3-aod"], [839, "wifi-daq-e3-aod"]], "Example Codes - Console (sync)": [[813, "example-codes-console-sync"]], "Products Usage": [[815, "products-usage"]], "Utilities": [[815, "utilities"]], "Wifi devices": [[815, "wifi-devices"]], "Ethernet devices": [[815, "ethernet-devices"]], "USB devices": [[815, "usb-devices"]], "API function description": [[816, "api-function-description"], [817, "api-function-description"], [818, "api-function-description"], [819, "api-function-description"], [820, "api-function-description"], [821, "api-function-description"], [822, "api-function-description"], [823, "api-function-description"], [824, "api-function-description"], [825, "api-function-description"], [826, "api-function-description"], [827, "api-function-description"], [828, "api-function-description"], [829, "api-function-description"], [830, "api-function-description"], [831, "api-function-description"], [832, "api-function-description"], [833, "api-function-description"], [834, "api-function-description"], [835, "api-function-description"], [836, "api-function-description"], [837, "api-function-description"], [838, "api-function-description"], [839, "api-function-description"], [840, "api-function-description"]], "Device pinout": [[817, "device-pinout"], [818, "device-pinout"], [819, "device-pinout"], [820, "device-pinout"], [821, "device-pinout"], [822, "device-pinout"], [823, "device-pinout"], [824, "device-pinout"], [825, "device-pinout"], [826, "device-pinout"], [827, "device-pinout"], [828, "device-pinout"], [829, "device-pinout"], [830, "device-pinout"], [831, "device-pinout"], [832, "device-pinout"], [833, "device-pinout"], [834, "device-pinout"], [835, "device-pinout"], [836, "device-pinout"], [837, "device-pinout"], [838, "device-pinout"], [839, "device-pinout"], [840, "device-pinout"]], "Products Feature": [[841, "products-feature"]], "AI Max Sampling Rate Table": [[842, "ai-max-sampling-rate-table"]], "I/O Channel Function Table": [[843, "i-o-channel-function-table"]], "Error Code Table": [[844, "error-code-table"]], "Setting Table": [[845, "setting-table"]], "AI Mode": [[845, "ai-mode"]], "AO Form": [[845, "ao-form"]], "AO Mode": [[845, "ao-mode"]], "CAN Speed": [[845, "can-speed"]], "CAN Type": [[845, "can-type"]], "I2C Address": [[845, "i2c-address"]], "I2C Speed": [[845, "i2c-speed"]], "Motion Capture Mode": [[845, "motion-capture-mode"]], "Motion Capture Type": [[845, "motion-capture-type"]], "Motion Direction": [[845, "motion-direction"]], "Motion Enable": [[845, "motion-enable"]], "Motion Find Reference Type": [[845, "motion-find-reference-type"]], "Motion Operation Mode": [[845, "motion-operation-mode"]], "Motion Polarity": [[845, "motion-polarity"]], "Motion Search Direction": [[845, "motion-search-direction"]], "Motion Stepper Output": [[845, "motion-stepper-output"]], "Motion Stop Type": [[845, "motion-stop-type"]], "SPI Clock": [[845, "spi-clock"]], "SPI Data Size": [[845, "spi-data-size"]], "SPI Endianness": [[845, "spi-endianness"]], "SPI Mode": [[845, "spi-mode"]], "Thermal Channel": [[845, "thermal-channel"]], "Thermal OverSampling": [[845, "thermal-oversampling"]], "Thermal Type": [[845, "thermal-type"]], "UART Data Size": [[845, "uart-data-size"]], "UART Parity": [[845, "uart-parity"]], "UART Stop Bit": [[845, "uart-stop-bit"]], "I/O Port Function Table": [[846, "i-o-port-function-table"]]}, "indexentries": {"module": [[814, "module-pywpc"]], "pywpc": [[814, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[816, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[816, "pywpc.DeviceFinder.disconnect"]], "edrivest (class in pywpc)": [[817, "pywpc.EDriveST"]], "motion_cfgaxisdirection() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_cfgAxisDirection"]], "motion_cfgaxisdirection_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_cfgAxisDirection_async"]], "motion_cfgencoder() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_cfgEncoder_async"]], "motion_cfglimit() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_cfgLimit_async"]], "motion_close() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_close"]], "motion_close_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_close_async"]], "motion_enableservooff() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_enableServoOn_async"]], "motion_getalarmstatus() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getAlarmStatus"]], "motion_getalarmstatus_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getAlarmStatus_async"]], "motion_getlimitstatus() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getLimitStatus_async"]], "motion_getparameters() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getParameters"]], "motion_getprocessstate() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getProcessState"]], "motion_getprocessstate_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_getProcessState_async"]], "motion_loadcfgfile() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_loadCfgFile_async"]], "motion_open() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_open"]], "motion_opencfgfile() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_open_async"]], "motion_readcurrentvelocity() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_readCurrentVelocity"]], "motion_readcurrentvelocity_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_readCurrentVelocity_async"]], "motion_readencoderposition() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_readEncoderPosition"]], "motion_readencoderposition_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_readEncoderPosition_async"]], "motion_resetfactory() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_resetFactory"]], "motion_resetfactory_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_resetFactory_async"]], "motion_rstencoderposi() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_saveCfgFile_async"]], "motion_startfindhome() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startFindHome"]], "motion_startfindhome_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startFindHome_async"]], "motion_startfindlimit() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startFindLimit"]], "motion_startfindlimit_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startFindLimit_async"]], "motion_startfindzpolarity() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startFindZPolarity"]], "motion_startfindzpolarity_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startFindZPolarity_async"]], "motion_startpositionmove() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startPositionMove"]], "motion_startpositionmove_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startPositionMove_async"]], "motion_startscanmove() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startScanMove"]], "motion_startscanmove_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startScanMove_async"]], "motion_startvelocticymove() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startVelocticyMove"]], "motion_startvelocticymove_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_startVelocticyMove_async"]], "motion_stopprocess() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_stopProcess"]], "motion_stopprocess_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Motion_stopProcess_async"]], "net_getgateway() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_reboot"]], "sys_reboot_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.Sys_stopRTCAlarm_async"]], "close() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.close"]], "connect() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.connect"]], "disconnect() (pywpc.edrivest method)": [[817, "pywpc.EDriveST.disconnect"]], "emotion (class in pywpc)": [[818, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[818, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[818, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[818, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[818, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[818, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_reboot"]], "sys_reboot_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.emotion method)": [[818, "pywpc.EMotion.Sys_stopRTCAlarm_async"]], "close() (pywpc.emotion method)": [[818, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[818, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[818, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_enableCS_async"]], "ai_enablechannel() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_enableChannel_async"]], "ai_open() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[819, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[819, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[819, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[819, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[819, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[819, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_reboot"]], "sys_reboot_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethana method)": [[819, "pywpc.EthanA.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethana method)": [[819, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[819, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[819, "pywpc.EthanA.disconnect"]], "ai_close() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_close"]], "ai_close_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_close_async"]], "ai_open() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_open"]], "ai_open_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_open_async"]], "ai_readondemand() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_setMode"]], "ai_setmode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_start"]], "ai_start_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_start_async"]], "ai_stop() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_stop"]], "ai_stop_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.AI_stop_async"]], "ethana2 (class in pywpc)": [[820, "pywpc.EthanA2"]], "logger_openfile() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Logger_writeList"]], "logger_writevalue() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Logger_writeValue"]], "net_getgateway() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_reboot"]], "sys_reboot_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.close"]], "connect() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.connect"]], "disconnect() (pywpc.ethana2 method)": [[820, "pywpc.EthanA2.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[821, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[821, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[821, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[821, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[821, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[821, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[821, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "pwm_close() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_close"]], "pwm_close_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_close_async"]], "pwm_open() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_open"]], "pwm_open_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_setFrequency_async"]], "pwm_start() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_start"]], "pwm_start_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_start_async"]], "pwm_stop() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_stop"]], "pwm_stop_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_reboot"]], "sys_reboot_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethand method)": [[821, "pywpc.EthanD.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethand method)": [[821, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[821, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[821, "pywpc.EthanD.disconnect"]], "dio_loadstartup() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_closePins"]], "di_closepins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_closePins_async"]], "di_closeport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_closePort"]], "di_closeport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_getPinMap"]], "di_openpins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_openPins"]], "di_openpins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_openPins_async"]], "di_openport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_openPort"]], "di_openport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_openPort_async"]], "di_readpins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_readPins"]], "di_readpins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_readPins_async"]], "di_readport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_readPort"]], "di_readport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DI_readPort_async"]], "do_closepins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_closePins"]], "do_closepins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_closePins_async"]], "do_closeport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_closePort"]], "do_closeport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_getPinMap"]], "do_openpins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_openPins"]], "do_openpins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_openPins_async"]], "do_openport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_openPort"]], "do_openport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_openPort_async"]], "do_togglepins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_togglePort_async"]], "do_writepins() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_writePins"]], "do_writepins_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_writePins_async"]], "do_writeport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_writePort"]], "do_writeport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.DO_writePort_async"]], "ethanexd (class in pywpc)": [[822, "pywpc.EthanEXD"]], "logger_openfile() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Logger_writeList"]], "logger_writevalue() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Logger_writeValue"]], "net_getgateway() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.close"]], "connect() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.connect"]], "disconnect() (pywpc.ethanexd method)": [[822, "pywpc.EthanEXD.disconnect"]], "ai_close() (pywpc.ethani method)": [[823, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.AI_close_async"]], "ai_open() (pywpc.ethani method)": [[823, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[823, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[823, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[823, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[823, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[823, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[823, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[823, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_reboot"]], "sys_reboot_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethani method)": [[823, "pywpc.EthanI.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethani method)": [[823, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[823, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[823, "pywpc.EthanI.disconnect"]], "ai_close() (pywpc.ethania method)": [[824, "pywpc.EthanIA.AI_close"]], "ai_close_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.AI_close_async"]], "ai_open() (pywpc.ethania method)": [[824, "pywpc.EthanIA.AI_open"]], "ai_open_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.AI_open_async"]], "ai_readondemand() (pywpc.ethania method)": [[824, "pywpc.EthanIA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.AI_readOnDemand_async"]], "ethania (class in pywpc)": [[824, "pywpc.EthanIA"]], "logger_openfile() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Logger_writeList"]], "logger_writevalue() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Logger_writeValue"]], "net_getgateway() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_reboot"]], "sys_reboot_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethania method)": [[824, "pywpc.EthanIA.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethania method)": [[824, "pywpc.EthanIA.close"]], "connect() (pywpc.ethania method)": [[824, "pywpc.EthanIA.connect"]], "disconnect() (pywpc.ethania method)": [[824, "pywpc.EthanIA.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[825, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethanl method)": [[825, "pywpc.EthanL.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethanl method)": [[825, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[825, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[825, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_close_async"]], "ao_getport() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_getPort"]], "ao_getvalues() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_open_async"]], "ao_setenablechannels() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[826, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[826, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[826, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[826, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[826, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[826, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_reboot"]], "sys_reboot_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethano method)": [[826, "pywpc.EthanO.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethano method)": [[826, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[826, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[826, "pywpc.EthanO.disconnect"]], "dpot_close() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_close"]], "dpot_close_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_close_async"]], "dpot_open() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_open"]], "dpot_open_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_open_async"]], "dpot_readbychannel() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_readByChannel"]], "dpot_readbychannel_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_readByChannel_async"]], "dpot_writeallchannel() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_writeAllChannel"]], "dpot_writeallchannel_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_writeAllChannel_async"]], "dpot_writebychannel() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_writeByChannel"]], "dpot_writebychannel_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.DPOT_writeByChannel_async"]], "ethanp (class in pywpc)": [[827, "pywpc.EthanP"]], "logger_openfile() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Logger_writeList"]], "logger_writevalue() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Logger_writeValue"]], "net_getgateway() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethanp method)": [[827, "pywpc.EthanP.Sys_stopRTCAlarm_async"]], "close() (pywpc.ethanp method)": [[827, "pywpc.EthanP.close"]], "connect() (pywpc.ethanp method)": [[827, "pywpc.EthanP.connect"]], "disconnect() (pywpc.ethanp method)": [[827, "pywpc.EthanP.disconnect"]], "ethant (class in pywpc)": [[828, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[828, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[828, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[828, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[828, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[828, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_reboot"]], "sys_reboot_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Sys_stopRTCAlarm_async"]], "thermal_close() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[828, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[828, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[828, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[828, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[829, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[829, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_enableCS_async"]], "ai_enablechannel() (pywpc.stem method)": [[829, "pywpc.STEM.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_enableChannel_async"]], "ai_open() (pywpc.stem method)": [[829, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[829, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[829, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[829, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[829, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[829, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[829, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[829, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[829, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[829, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[829, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_close_async"]], "ao_getport() (pywpc.stem method)": [[829, "pywpc.STEM.AO_getPort"]], "ao_getvalues() (pywpc.stem method)": [[829, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[829, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[829, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_open_async"]], "ao_setenablechannels() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[829, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[829, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[829, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[829, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[829, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[829, "pywpc.STEM.DIO_loadStartup_async"]], "di_closepins() (pywpc.stem method)": [[829, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[829, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[829, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[829, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[829, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[829, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[829, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[829, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[829, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[829, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[829, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[829, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[829, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[829, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[829, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[829, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[829, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[829, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[829, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[829, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[829, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[829, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[829, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[829, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[829, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[829, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[829, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[829, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[829, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[829, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[829, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[829, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_reboot"]], "sys_reboot_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.stem method)": [[829, "pywpc.STEM.Sys_stopRTCAlarm_async"]], "close() (pywpc.stem method)": [[829, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[829, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[829, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_enableChannel_async"]], "ai_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.AI_stop_async"]], "counter_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Encoder_stop_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.Sys_stopRTCAlarm_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[830, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[830, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_enableChannel_async"]], "ai_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "counter_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Encoder_stop_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.Sys_stopRTCAlarm_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[831, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[831, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.CAN_write_async"]], "counter_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Encoder_stop_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.Sys_stopRTCAlarm_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[832, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[832, "pywpc.USBDAQF1CD.disconnect"]], "counter_close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Encoder_stop_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.Sys_stopRTCAlarm_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[833, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[833, "pywpc.USBDAQF1D.disconnect"]], "counter_close() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Encoder_stop_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.Sys_stopRTCAlarm_async"]], "usbdaqf1dsnk (class in pywpc)": [[834, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[834, "pywpc.USBDAQF1DSNK.disconnect"]], "counter_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Encoder_stop_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Sys_stopRTCAlarm_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[835, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[835, "pywpc.USBDAQF1RD.disconnect"]], "counter_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_open_async"]], "counter_readfrequency() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_readFrequency"]], "counter_readfrequency_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_readFrequency_async"]], "counter_readposition() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_readPosition"]], "counter_readposition_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_readPosition_async"]], "counter_setedge() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_setEdge"]], "counter_setedge_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_setEdge_async"]], "counter_setfreqwindow() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_setFreqWindow"]], "counter_setfreqwindow_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_setFreqWindow_async"]], "counter_setposition() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_setPosition"]], "counter_setposition_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_setPosition_async"]], "counter_start() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.DO_writePort_async"]], "encoder_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_close"]], "encoder_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_close_async"]], "encoder_getdirection() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_getDirection"]], "encoder_getdirection_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_getDirection_async"]], "encoder_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_open"]], "encoder_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_open_async"]], "encoder_readfrequency() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_readFrequency"]], "encoder_readfrequency_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_readFrequency_async"]], "encoder_readposition() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_readPosition"]], "encoder_readposition_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_readPosition_async"]], "encoder_setdirection() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_setDirection"]], "encoder_setdirection_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_setDirection_async"]], "encoder_setfreqwindow() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_setFreqWindow"]], "encoder_setfreqwindow_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_setFreqWindow_async"]], "encoder_setposition() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_setPosition"]], "encoder_setposition_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_setPosition_async"]], "encoder_start() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_start"]], "encoder_start_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_start_async"]], "encoder_stop() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_stop"]], "encoder_stop_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Encoder_stop_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Sys_stopRTCAlarm_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[836, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[836, "pywpc.USBDAQF1TD.disconnect"]], "ai_close() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_enableChannel_async"]], "ai_open() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Sys_stopRTCAlarm_async"]], "wifidaqe3a (class in pywpc)": [[837, "pywpc.WifiDAQE3A"]], "wifi_getchargestatus() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[837, "pywpc.WifiDAQE3A.disconnect"]], "ahrs_close() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_close"]], "ahrs_close_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_close_async"]], "ahrs_getacceleration() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getAcceleration"]], "ahrs_getacceleration_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getAcceleration_async"]], "ahrs_getangularvelocity() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getAngularVelocity"]], "ahrs_getangularvelocity_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getAngularVelocity_async"]], "ahrs_getestimate() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getEstimate"]], "ahrs_getestimate_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getEstimate_async"]], "ahrs_getorientation() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getOrientation"]], "ahrs_getorientation_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_getOrientation_async"]], "ahrs_open() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_open"]], "ahrs_open_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_open_async"]], "ahrs_reset() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_reset"]], "ahrs_reset_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_reset_async"]], "ahrs_start() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_start"]], "ahrs_start_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_start_async"]], "ahrs_stop() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_stop"]], "ahrs_stop_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AHRS_stop_async"]], "ai_close() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_close"]], "ai_close_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_enableChannel_async"]], "ai_open() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_open"]], "ai_open_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_start"]], "ai_start_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask_async"]], "sd_closefile() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_closeFile"]], "sd_closefile_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_closeFile_async"]], "sd_getstorage() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_getStorage"]], "sd_getstorage_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_getStorage_async"]], "sd_openfile() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_openFile"]], "sd_openfile_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_openFile_async"]], "sd_readfile() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_readFile"]], "sd_readfile_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_readFile_async"]], "sd_writefile() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_writeFile"]], "sd_writefile_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.SD_writeFile_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Sys_stopRTCAlarm_async"]], "wifidaqe3ah (class in pywpc)": [[838, "pywpc.WifiDAQE3AH"]], "wifi_getchargestatus() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.close"]], "connect() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.connect"]], "disconnect() (pywpc.wifidaqe3ah method)": [[838, "pywpc.WifiDAQE3AH.disconnect"]], "ai_close() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_close"]], "ai_close_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_enableCS"]], "ai_enablechannel() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_enableChannel"]], "ai_open() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_open"]], "ai_open_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_readOnDemand"]], "ai_readstreaming() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_readStreaming"]], "ai_setmode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_start"]], "ai_start_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AI_stop_async"]], "ao_close() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_close"]], "ao_closestreaming() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_close_async"]], "ao_getport() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_getPort"]], "ao_getvalues() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_getValues_async"]], "ao_open() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_open"]], "ao_openstreaming() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_open_async"]], "ao_setenablechannels() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setForm"]], "ao_setformparam() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setForm_async"]], "ao_setmode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setMode"]], "ao_setmode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.AO_writeOneChannel_async"]], "logger_openfile() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Net_setIPAddrAndSubmask_async"]], "sd_closefile() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_closeFile"]], "sd_closefile_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_closeFile_async"]], "sd_getstorage() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_getStorage"]], "sd_getstorage_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_getStorage_async"]], "sd_openfile() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_openFile"]], "sd_openfile_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_openFile_async"]], "sd_readfile() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_readFile"]], "sd_readfile_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_readFile_async"]], "sd_writefile() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_writeFile"]], "sd_writefile_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.SD_writeFile_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Sys_stopRTCAlarm_async"]], "wifidaqe3aod (class in pywpc)": [[839, "pywpc.WifiDAQE3AOD"]], "wifi_getchargestatus() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.close"]], "connect() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.connect"]], "disconnect() (pywpc.wifidaqe3aod method)": [[839, "pywpc.WifiDAQE3AOD.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_enableChannel_async"]], "ai_open() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "sys_startrtcalarm() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_startRTCAlarm"]], "sys_startrtcalarm_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_startRTCAlarm_async"]], "sys_stoprtcalarm() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_stopRTCAlarm"]], "sys_stoprtcalarm_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Sys_stopRTCAlarm_async"]], "wifidaqf4a (class in pywpc)": [[840, "pywpc.WifiDAQF4A"]], "wifi_getchargestatus() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[840, "pywpc.WifiDAQF4A.disconnect"]]}})