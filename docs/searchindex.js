Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_1axis_move", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_velocity_blending", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDrive_ST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDrive_ST/System_ETH/hello_world", "examples/Console/Asynchronous/EDrive_ST/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EDrive_ST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDrive_ST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDrive_ST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDrive_ST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/System_ETH/hello_world", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AHRS/AHRS_read", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_1axis_move", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_velocity_blending", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDrive_ST/System_ETH/get_network_info", "examples/Console/Synchronous/EDrive_ST/System_ETH/hello_world", "examples/Console/Synchronous/EDrive_ST/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/System_ETH/hello_world", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/System_ETH/hello_world", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/PWM/PWM_generate", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/System_ETH/hello_world", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/System_ETH/hello_world", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/System_ETH/hello_world", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/System_ETH/hello_world", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/hello_world", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/STEM/System_ETH/hello_world", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AHRS/AHRS_read", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/GUI/Asynchronous/AI/AI_integrated_gui", "examples/GUI/Asynchronous/AO/AO_gui", "examples/GUI/Asynchronous/DO/DO_gui", "examples/GUI/Asynchronous/I2C/I2C_gui", "examples/GUI/Asynchronous/SPI/SPI_gui", "examples/GUI/Asynchronous/System/find_all_devices_gui", "examples/GUI/Asynchronous/System/get_device_info_gui", "examples/GUI/Asynchronous/Temperature_RTD/RTD_gui", "examples/GUI/Asynchronous/Temperature_TC/TC_gui", "examples/GUI/Asynchronous/UART/UART_gui", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Asynchronous", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDrive_ST", "products/EMotion", "products/EthanA", "products/EthanD", "products/EthanI", "products/EthanL", "products/EthanO", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQF4A", "products_summary", "ref_channel", "ref_error", "ref_param", "ref_port"], "filenames": ["README.rst", "examples\\Console\\Asynchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_1axis_move.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_velocity_blending.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\EthanD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AHRS\\AHRS_read.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Synchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_1axis_move.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_velocity_blending.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\EthanD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AHRS\\AHRS_read.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\set_and_get_RTC.rst", "examples\\GUI\\Asynchronous\\AI\\AI_integrated_gui.rst", "examples\\GUI\\Asynchronous\\AO\\AO_gui.rst", "examples\\GUI\\Asynchronous\\DO\\DO_gui.rst", "examples\\GUI\\Asynchronous\\I2C\\I2C_gui.rst", "examples\\GUI\\Asynchronous\\SPI\\SPI_gui.rst", "examples\\GUI\\Asynchronous\\System\\find_all_devices_gui.rst", "examples\\GUI\\Asynchronous\\System\\get_device_info_gui.rst", "examples\\GUI\\Asynchronous\\Temperature_RTD\\RTD_gui.rst", "examples\\GUI\\Asynchronous\\Temperature_TC\\TC_gui.rst", "examples\\GUI\\Asynchronous\\UART\\UART_gui.rst", "examples\\GUI\\Synchronous\\AI\\AI_integrated_gui.rst", "examples\\GUI\\Synchronous\\AO\\AO_gui.rst", "examples\\GUI\\Synchronous\\DO\\DO_gui.rst", "examples\\GUI\\Synchronous\\I2C\\I2C_gui.rst", "examples\\GUI\\Synchronous\\SPI\\SPI_gui.rst", "examples\\GUI\\Synchronous\\System\\find_all_devices_gui.rst", "examples\\GUI\\Synchronous\\System\\get_device_info_gui.rst", "examples\\GUI\\Synchronous\\Temperature_RTD\\RTD_gui.rst", "examples\\GUI\\Synchronous\\Temperature_TC\\TC_gui.rst", "examples\\GUI\\Synchronous\\UART\\UART_gui.rst", "examples_GUI_Asynchronous.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products\\DeviceFinder.rst", "products\\EDrive_ST.rst", "products\\EMotion.rst", "products\\EthanA.rst", "products\\EthanD.rst", "products\\EthanI.rst", "products\\EthanL.rst", "products\\EthanO.rst", "products\\EthanT.rst", "products\\STEM.rst", "products\\USBDAQF1AD.rst", "products\\USBDAQF1AOD.rst", "products\\USBDAQF1CD.rst", "products\\USBDAQF1D.rst", "products\\USBDAQF1DSNK.rst", "products\\USBDAQF1RD.rst", "products\\USBDAQF1TD.rst", "products\\WifiDAQE3A.rst", "products\\WifiDAQF4A.rst", "products_summary.rst", "ref_channel.rst", "ref_error.rst", "ref_param.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive 1axis move", "Drive find limit", "Drive position blending", "Drive servo on", "Drive velocity blending", "Drive velocity blending acceleration", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AHRS read", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive 1axis move", "Drive find limit", "Drive position blending", "Drive servo on", "Drive velocity blending", "Drive velocity blending acceleration", "System get network info", "System hello world", "Set and get RTC", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Relay read counters", "Relay set channel", "System get network info", "System hello world", "Set and get RTC", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System hello world", "Set and get RTC", "System get network info", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AHRS read", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set and get RTC", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (async)", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-D", "Ethan-I", "Ethan-L", "Ethan-O", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-F4-A", "Products Feature", "I/O channel function table", "Error Code Table", "Setting Table", "I/O port function table"], "terms": {"welcom": [0, 593], "wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 614], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 618], "api": [0, 593, 594], "document": [0, 593], "It": [0, 57, 58, 113, 114, 118, 119, 137, 138, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 401, 402, 406, 407, 421, 422, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 593, 597, 599, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "i": [0, 9, 10, 12, 14, 22, 23, 24, 26, 27, 31, 39, 40, 42, 44, 45, 48, 51, 52, 54, 56, 59, 60, 61, 62, 65, 66, 68, 70, 73, 74, 76, 78, 80, 82, 83, 85, 87, 92, 93, 95, 97, 99, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 134, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 152, 154, 157, 160, 167, 170, 171, 172, 173, 174, 177, 178, 179, 181, 183, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 206, 209, 212, 213, 214, 215, 216, 218, 221, 222, 223, 225, 227, 230, 233, 234, 235, 236, 239, 240, 241, 243, 245, 246, 249, 250, 251, 252, 253, 255, 258, 259, 260, 265, 267, 270, 273, 274, 275, 276, 277, 279, 282, 283, 284, 289, 291, 294, 295, 298, 302, 303, 305, 307, 308, 311, 315, 316, 318, 320, 329, 330, 338, 339, 340, 342, 343, 347, 355, 356, 357, 360, 363, 364, 367, 368, 369, 370, 373, 374, 377, 378, 380, 382, 383, 388, 389, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 418, 420, 423, 424, 425, 426, 427, 429, 432, 433, 434, 437, 440, 447, 450, 451, 452, 453, 454, 457, 458, 459, 462, 464, 467, 468, 469, 470, 471, 473, 476, 477, 478, 481, 484, 485, 486, 487, 488, 490, 493, 494, 495, 498, 501, 502, 503, 504, 507, 508, 509, 510, 513, 514, 515, 516, 517, 519, 522, 523, 524, 530, 533, 534, 535, 536, 537, 539, 542, 543, 544, 550, 551, 554, 558, 559, 560, 563, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616], "an": [0, 575, 585, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "easi": [0, 593, 614], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 365, 366, 401, 402, 406, 407, 421, 422, 427, 442, 443, 448, 449, 454, 465, 466, 471, 482, 483, 488, 499, 500, 511, 512, 517, 531, 532, 537, 593, 596, 597, 598, 600, 602, 604, 605, 606, 607, 612, 613, 618], "open": [0, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 63, 71, 79, 80, 88, 89, 90, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 375, 379, 380, 384, 385, 386, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sourc": [0, 593, 614], "tool": [0, 593], "beginn": [0, 593], "we": [0, 143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 593], "provid": [0, 593], "excel": [0, 593], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 618], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "help": [0, 593], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 615], "quickli": [0, 593], "get": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 560, 561, 562, 563, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "our": [0, 593], "product": [0, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 593, 615, 618], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616], "real": [0, 593], "world": [0, 591, 592, 593], "usag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 598, 600, 602, 604, 605, 606, 607, 612, 613], "make": [0, 143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 593], "great": [0, 593], "wai": [0, 63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 593], "learn": [0, 593], "therefor": [0, 593], "highli": [0, 593], "recommend": [0, 593, 612, 613], "becaus": [0, 11, 12, 13, 14, 41, 42, 43, 44, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 127, 128, 129, 130, 151, 152, 153, 154, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 304, 305, 306, 307, 317, 318, 319, 320, 593], "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 144, 149, 150, 151, 152, 153, 154, 155, 158, 159, 164, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 217, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 254, 259, 260, 261, 262, 264, 265, 266, 267, 268, 273, 274, 275, 276, 278, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 296, 297, 302, 303, 304, 305, 306, 307, 309, 310, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 329, 330, 340, 343, 351, 352, 353, 355, 356, 358, 359, 363, 364, 367, 368, 369, 370, 371, 373, 374, 377, 378, 380, 382, 383, 384, 388, 389, 391, 392, 393, 394, 397, 398, 408, 409, 413, 414, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 438, 439, 444, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 501, 502, 503, 504, 505, 508, 509, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 528, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 552, 553, 558, 559, 561, 562, 567, 568, 569, 579, 593, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617], "simpl": [0, 593], "just": [0, 593], "read": [0, 4, 30, 45, 46, 47, 48, 49, 57, 58, 108, 109, 110, 111, 112, 113, 114, 118, 119, 131, 132, 133, 134, 135, 137, 138, 157, 158, 159, 160, 161, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 324, 344, 346, 357, 358, 359, 360, 361, 365, 366, 375, 396, 397, 398, 399, 400, 401, 402, 406, 407, 415, 416, 417, 418, 419, 421, 422, 437, 438, 439, 440, 441, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 572, 573, 576, 577, 578, 582, 583, 586, 587, 588, 591, 592, 593, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "write": [0, 47, 57, 58, 59, 60, 80, 88, 102, 110, 113, 114, 115, 118, 119, 120, 121, 133, 137, 138, 139, 140, 159, 162, 163, 164, 168, 169, 170, 171, 189, 190, 191, 192, 210, 211, 212, 213, 231, 232, 233, 234, 247, 248, 249, 250, 262, 271, 272, 273, 274, 286, 297, 310, 359, 365, 366, 367, 368, 380, 384, 394, 398, 401, 402, 403, 406, 407, 408, 409, 417, 421, 422, 423, 424, 439, 442, 443, 444, 448, 449, 450, 451, 465, 466, 467, 468, 482, 483, 484, 485, 499, 500, 501, 502, 511, 512, 513, 514, 526, 531, 532, 533, 534, 546, 553, 562, 570, 571, 572, 573, 578, 580, 581, 582, 583, 588, 591, 592, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "allow": [0, 593], "access": [0, 593], "updat": [0, 46, 47, 109, 110, 132, 133, 158, 159, 296, 297, 309, 310, 358, 359, 397, 398, 416, 417, 438, 439, 552, 553, 561, 562, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 593, 614], "data": [0, 12, 13, 14, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 68, 69, 70, 71, 76, 77, 78, 85, 86, 87, 89, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 128, 129, 130, 131, 132, 133, 134, 135, 143, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 174, 176, 181, 182, 183, 184, 185, 186, 187, 195, 197, 198, 199, 204, 205, 206, 207, 208, 216, 218, 219, 220, 225, 226, 227, 228, 229, 238, 243, 244, 245, 253, 255, 256, 257, 265, 266, 267, 268, 269, 277, 279, 280, 281, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 320, 357, 358, 359, 360, 361, 375, 385, 396, 397, 398, 399, 400, 401, 402, 404, 415, 416, 417, 418, 419, 427, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 454, 456, 460, 461, 462, 463, 471, 473, 474, 475, 479, 480, 488, 490, 491, 492, 496, 497, 506, 517, 519, 520, 521, 528, 529, 537, 539, 540, 541, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 569, 570, 572, 573, 576, 577, 578, 579, 580, 582, 583, 586, 587, 588, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "eas": [0, 593], "ad": [0, 593, 594, 615, 618], "your": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593], "toolkit": [0, 593], "onli": [0, 593, 598, 600, 602, 604, 605, 606, 612, 613], "simplifi": [0, 593], "task": [0, 593], "also": [0, 593], "practic": [0, 593], "experi": [0, 593], "bridg": [0, 593], "theori": [0, 593], "applic": [0, 593], "last": [0, 8, 38, 50, 64, 72, 81, 91, 98, 101, 102, 103, 124, 143, 145, 146, 147, 148, 155, 156, 174, 176, 177, 184, 185, 186, 187, 195, 197, 198, 199, 200, 207, 208, 216, 218, 219, 220, 221, 228, 229, 238, 239, 253, 255, 256, 257, 258, 261, 262, 263, 268, 269, 277, 279, 280, 281, 282, 285, 286, 287, 292, 293, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 393, 394, 395, 412, 427, 429, 430, 431, 432, 435, 436, 454, 456, 457, 460, 461, 462, 463, 471, 473, 474, 475, 476, 479, 480, 488, 490, 491, 492, 493, 496, 497, 506, 507, 517, 519, 520, 521, 522, 525, 526, 527, 528, 529, 537, 539, 540, 541, 542, 545, 546, 547, 548, 549, 557, 566, 593], "least": [0, 101, 102, 261, 262, 285, 286, 393, 394, 525, 526, 545, 546, 593], "valuabl": [0, 593], "resourc": [0, 593], "both": [0, 593], "work": [0, 593], "effici": [0, 593], "support": [0, 115, 385, 403, 404, 445, 593, 610, 614, 616], "synchron": [0, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 593], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616], "comput": [0, 593], "process": [0, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 71, 88, 89, 90, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 375, 384, 385, 386, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 593, 616], "thread": [0, 11, 13, 24, 27, 41, 43, 53, 55, 67, 69, 75, 77, 84, 86, 94, 96, 104, 106, 127, 129, 151, 153, 180, 182, 203, 205, 224, 226, 242, 244, 264, 266, 288, 290, 304, 306, 317, 319, 340, 343, 579, 591, 593], "mean": [0, 593, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "two": [0, 11, 12, 14, 41, 42, 44, 53, 54, 56, 67, 68, 70, 75, 76, 78, 84, 85, 87, 94, 95, 97, 104, 105, 107, 127, 128, 130, 143, 151, 152, 154, 174, 180, 181, 183, 195, 203, 204, 206, 216, 224, 225, 227, 242, 243, 245, 253, 261, 262, 263, 264, 265, 267, 277, 288, 289, 291, 304, 305, 307, 317, 318, 320, 427, 454, 471, 488, 517, 525, 526, 527, 537, 576, 586, 593, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 617], "more": [0, 593], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593, 602, 604, 606], "step": [0, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 88, 89, 90, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 384, 385, 386, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 593, 596, 597, 604, 614, 617], "manner": [0, 593], "one": [0, 591, 592, 593, 597, 598, 600, 603, 604, 605, 606, 610, 611, 612, 613], "after": [0, 101, 102, 285, 286, 393, 394, 545, 546, 593, 596, 597, 598, 604, 605, 606, 607, 612, 613], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "In": [0, 593, 605, 606, 607, 608, 610, 611, 618], "execut": [0, 11, 12, 13, 14, 41, 42, 43, 44, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 127, 128, 129, 130, 151, 152, 153, 154, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 304, 305, 306, 307, 317, 318, 319, 320, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "block": [0, 593], "until": [0, 593], "previou": [0, 593], "complet": [0, 22, 23, 24, 26, 27, 338, 339, 340, 341, 342, 343, 593, 596, 597, 604], "independ": [0, 593], "each": [0, 59, 60, 80, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 380, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534, 593, 595, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "don": [0, 593], "t": [0, 13, 43, 55, 69, 77, 86, 96, 101, 102, 106, 129, 153, 182, 205, 226, 244, 266, 285, 286, 290, 306, 319, 393, 394, 545, 546, 593, 594, 611, 614, 617, 618], "wait": [0, 3, 4, 5, 6, 7, 24, 27, 35, 46, 47, 59, 60, 61, 62, 80, 88, 101, 102, 109, 110, 120, 121, 132, 133, 139, 140, 141, 142, 155, 158, 159, 164, 170, 171, 172, 173, 184, 186, 187, 191, 192, 193, 194, 207, 212, 213, 214, 215, 228, 233, 234, 235, 236, 249, 250, 251, 252, 261, 262, 268, 273, 274, 275, 276, 285, 286, 292, 294, 296, 297, 309, 310, 323, 324, 325, 326, 327, 340, 343, 351, 352, 353, 358, 359, 367, 368, 369, 370, 380, 384, 393, 394, 397, 398, 408, 409, 416, 417, 423, 424, 425, 426, 435, 438, 439, 444, 450, 451, 452, 453, 460, 462, 463, 467, 468, 469, 470, 479, 484, 485, 486, 487, 496, 501, 502, 503, 504, 513, 514, 515, 516, 525, 526, 528, 533, 534, 535, 536, 545, 546, 548, 552, 553, 561, 562, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "instead": [0, 593, 616], "its": [0, 113, 114, 162, 163, 401, 402, 442, 443, 593, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "own": [0, 593], "without": [0, 593, 614], "gener": [0, 143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 294, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 550, 591, 592, 593, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 616], "easier": [0, 593], "understand": [0, 593], "debug": [0, 593], "while": [0, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 41, 42, 43, 44, 46, 47, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 109, 110, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 132, 133, 151, 152, 153, 154, 158, 159, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 296, 297, 304, 305, 306, 307, 309, 310, 317, 318, 319, 320, 322, 324, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 358, 359, 397, 398, 406, 407, 408, 409, 410, 411, 416, 417, 438, 439, 552, 553, 561, 562, 569, 579, 593, 618], "scalabl": [0, 593], "greater": [0, 593], "concurr": [0, 593], "sure": [0, 143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 593], "latest": [0, 593], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 575, 585, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "up": [0, 118, 119, 120, 121, 122, 123, 406, 407, 408, 409, 410, 411, 593], "date": [0, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pip": [0, 593], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593], "fast": [0, 593, 605, 606, 607, 608, 610, 611, 617], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pkg_name": [0, 593], "handle_list": [0, 593], "devicefind": [0, 1, 321, 574, 584, 593, 594, 595], "wifidaqe3a": [0, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 569, 575, 579, 585, 593, 594, 612, 614], "wifidaqf4a": [0, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593, 594, 613, 614], "stem": [0, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 385, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 445, 593, 594, 614, 616, 618], "emot": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 593, 594, 614, 618], "edrive_st": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 322, 323, 324, 325, 326, 327, 328, 329, 330, 593, 594, 596], "ethana": [0, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 357, 358, 359, 360, 361, 362, 363, 364, 569, 575, 579, 585, 593, 594, 598, 614], "ethand": [0, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 571, 575, 581, 585, 593, 594, 599, 614], "ethani": [0, 71, 72, 73, 74, 75, 76, 77, 78, 375, 376, 377, 378, 593, 594, 600, 614], "ethanl": [0, 79, 80, 81, 82, 83, 84, 85, 86, 87, 379, 380, 381, 382, 383, 593, 594, 601, 614], "ethano": [0, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 384, 385, 386, 387, 388, 389, 593, 594, 602, 614], "ethant": [0, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 390, 391, 392, 393, 394, 395, 593, 594, 603, 614], "usbdaqf1d": [0, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 571, 572, 573, 578, 581, 582, 583, 588, 593, 594, 608, 614], "usbdaqf1dsnk": [0, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 571, 581, 593, 594, 609, 614], "usbdaqf1ad": [0, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 569, 571, 572, 573, 578, 579, 581, 582, 583, 588, 593, 594, 605, 614], "usbdaqf1aod": [0, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 569, 570, 571, 572, 573, 578, 579, 580, 581, 582, 583, 588, 593, 594, 606, 614], "usbdaqf1td": [0, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 571, 572, 573, 577, 578, 581, 582, 583, 587, 588, 593, 594, 611, 614], "usbdaqf1rd": [0, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 571, 572, 573, 576, 578, 581, 582, 583, 586, 588, 593, 594, 610, 614], "usbdaqf1cd": [0, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 571, 572, 573, 578, 581, 582, 583, 588, 593, 594, 607, 614], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593], "conda": [0, 593], "command": [0, 593, 612, 613, 614], "consol": [0, 593], "how": [0, 1, 8, 10, 11, 12, 13, 14, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 241, 242, 243, 244, 245, 246, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 328, 330, 354, 356, 357, 358, 359, 360, 361, 362, 364, 371, 372, 374, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 412, 414, 415, 416, 417, 418, 419, 420, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 505, 506, 507, 509, 510, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "build": [0, 593], "ex": [0, 593], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 591, 592, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "miniconda": [0, 593], "virtual": [0, 593], "environ": [0, 593], "labview": [0, 593, 614], "time": [0, 11, 12, 13, 14, 24, 27, 41, 42, 43, 44, 48, 53, 54, 55, 56, 59, 60, 63, 67, 68, 69, 70, 75, 76, 77, 78, 80, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 111, 121, 127, 128, 129, 130, 134, 139, 140, 144, 147, 151, 152, 153, 154, 160, 170, 171, 175, 176, 180, 181, 182, 183, 186, 191, 192, 196, 199, 203, 204, 205, 206, 212, 213, 217, 220, 224, 225, 226, 227, 233, 234, 237, 238, 242, 243, 244, 245, 249, 250, 254, 257, 264, 265, 266, 267, 273, 274, 278, 281, 288, 289, 290, 291, 298, 304, 305, 306, 307, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 575, 579, 585, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616], "engin": [0, 593], "under": [0, 593], "mit": [0, 593], "style": [0, 593], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "incorpor": [0, 593], "project": [0, 11, 12, 13, 14, 41, 42, 43, 44, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 127, 128, 129, 130, 151, 152, 153, 154, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 304, 305, 306, 307, 317, 318, 319, 320, 593], "mai": [0, 593], "differ": [0, 59, 60, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 595, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "non": [0, 593], "commerci": [0, 593], "find_devic": [1, 321], "find_all_devic": [1, 321], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "demonstr": [1, 8, 10, 11, 12, 13, 14, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 328, 330, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568], "avail": [1, 321, 574, 584, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 618], "usb": [1, 321, 593, 614, 615, 616, 618], "ethernet": [1, 321, 574, 584, 593, 597, 614], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 575, 579, 581, 585, 605, 607, 608, 610, 611, 616], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 612, 613], "correct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 616], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 575, 585, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 575, 579, 585, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613, 616], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 596, 597, 604, 605, 606, 607, 608, 610, 611], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 575, 579, 581, 585, 597, 604, 605, 607, 608, 610, 611, 616], "http": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "com": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "system": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 378, 379, 380, 383, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 616], "ltd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "wpc_python_driver_releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "tree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "readm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "md": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "detail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "2023": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 605, 606, 607, 608, 610, 611], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "creat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 574, 579, 584], "handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "perform": [1, 12, 13, 14, 42, 43, 44, 54, 55, 56, 57, 58, 68, 69, 70, 76, 77, 78, 85, 86, 87, 95, 96, 97, 105, 106, 107, 118, 119, 128, 129, 130, 137, 138, 152, 153, 154, 168, 169, 181, 182, 183, 189, 190, 204, 205, 206, 210, 211, 225, 226, 227, 231, 232, 243, 244, 245, 247, 248, 265, 266, 267, 271, 272, 289, 290, 291, 305, 306, 307, 318, 319, 320, 321, 328, 354, 362, 365, 366, 372, 376, 381, 387, 390, 406, 407, 412, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 574, 584, 596, 597, 604], "inform": [1, 8, 38, 50, 64, 72, 81, 91, 98, 118, 119, 120, 121, 122, 123, 124, 147, 176, 199, 220, 238, 257, 281, 300, 301, 313, 314, 321, 328, 354, 362, 372, 376, 381, 387, 390, 406, 407, 408, 409, 410, 411, 412, 431, 456, 475, 492, 506, 521, 541, 556, 557, 565, 566, 569, 571, 574, 575, 579, 581, 584, 585, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "dev_list": [1, 321], "bcst_enumerateusbdevic": [1, 321, 594, 595], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "printgenericerror": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "network": [1, 9, 10, 39, 40, 51, 52, 65, 66, 73, 74, 82, 83, 92, 93, 99, 100, 125, 126, 147, 149, 150, 176, 178, 179, 199, 201, 202, 220, 222, 223, 238, 240, 241, 257, 259, 260, 281, 283, 284, 300, 302, 303, 313, 315, 316, 321, 329, 330, 355, 356, 363, 364, 373, 374, 377, 378, 382, 383, 388, 389, 391, 392, 413, 414, 431, 433, 434, 456, 458, 459, 475, 477, 478, 492, 494, 495, 506, 508, 509, 521, 523, 524, 541, 543, 544, 556, 558, 559, 565, 567, 568, 589, 590, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613, 616], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "bcst_enumeratenetworkdevices_async": [1, 574, 594, 595], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 614], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 340, 343, 569, 579], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534, 605, 606, 607, 608, 609, 610, 611], "els": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 338, 339, 342, 357, 380, 396, 415, 437, 462, 551, 560, 569, 571, 575, 579, 581, 585], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "ipythonspyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "drive_1axis_mov": [2, 322], "devicdepend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 607], "paramet": [2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 63, 71, 79, 80, 88, 89, 90, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 579, 581, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "set": [2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 63, 71, 79, 88, 89, 90, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 381, 382, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615], "target_posit": [2, 4, 322, 324], "10000": [2, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 34, 88, 164, 322, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 349, 350, 384, 444, 570, 580, 596, 597, 604], "relative_position_mod": [2, 4, 322, 324], "stop_decel": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 322, 323, 324, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 352, 353], "polar": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 322, 323, 324, 326, 327, 331, 332, 333, 334, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353, 596, 597, 604, 605, 607, 608, 610, 611, 616], "enabl": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 88, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 164, 322, 323, 324, 326, 327, 331, 332, 333, 334, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353, 384, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 411, 444, 596, 597, 598, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "active_low": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 322, 323, 324, 326, 327, 331, 332, 333, 334, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353], "active_high": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 322, 323, 324, 326, 327, 331, 332, 333, 334, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353], "en_forward": [2, 3, 4, 6, 7, 322, 323, 324, 326, 327, 596, 597, 604], "en_revers": [2, 3, 4, 6, 7, 322, 323, 324, 326, 327, 596, 597, 604], "orginal_direct": [2, 3, 322, 323], "model": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 574, 575, 584, 585, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "driver_info": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 575, 585, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_getdriverinfo_async": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 575, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "name": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 566, 568, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "edriv": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327, 594, 614, 618], "st": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327, 594, 614, 618], "drive_open_async": [2, 3, 4, 5, 6, 7, 594, 596], "drive_open": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327, 594, 596], "configur": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 45, 46, 47, 48, 49, 88, 101, 102, 108, 109, 110, 111, 112, 115, 131, 132, 133, 134, 135, 143, 145, 146, 155, 156, 157, 158, 159, 160, 161, 164, 174, 184, 185, 186, 187, 195, 197, 198, 207, 208, 216, 218, 219, 228, 229, 253, 255, 256, 268, 269, 277, 279, 280, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 322, 323, 324, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 357, 358, 359, 360, 361, 384, 393, 394, 396, 397, 398, 399, 400, 403, 415, 416, 417, 418, 419, 427, 429, 430, 435, 436, 437, 438, 439, 440, 441, 444, 454, 460, 461, 462, 463, 471, 473, 474, 479, 480, 488, 490, 491, 496, 497, 517, 519, 520, 528, 529, 537, 539, 540, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 596, 597, 598, 602, 604, 605, 606, 612, 613, 614], "drive_cfgaxismove_async": [2, 4, 6, 7, 594, 596], "drive_cfgaxismov": [2, 4, 6, 7, 322, 324, 326, 327, 594, 596], "drive_cfgaxisdirection_async": [2, 3, 594, 596], "drive_cfgaxisdirect": [2, 3, 322, 323, 594, 596], "drive_cfgencoderdirection_async": [2, 3, 594, 596], "drive_cfgencoderdirect": [2, 3, 322, 323, 594, 596], "drive_cfglimit_async": [2, 3, 4, 6, 7, 594, 596], "drive_cfglimit": [2, 3, 4, 6, 7, 322, 323, 324, 326, 327, 594, 596], "reset": [2, 3, 4, 6, 7, 322, 323, 324, 326, 327, 596, 597, 604, 605, 606, 607, 608, 610, 611, 612], "drive_rstencoderposi_async": [2, 3, 4, 6, 7, 594, 596], "edst_reset": [2, 3, 4, 6, 7, 322, 323, 324, 326, 327], "servo": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 29, 30, 33, 36, 37, 322, 323, 324, 326, 327, 331, 332, 333, 334, 335, 336, 337, 344, 345, 346, 349, 352, 353, 591, 592, 596, 597, 604, 614], "drive_enableservoon_async": [2, 3, 4, 5, 6, 7, 594, 596], "drive_enableservoon": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327, 594, 596], "start": [2, 4, 6, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 42, 44, 45, 46, 47, 54, 56, 63, 68, 70, 76, 78, 85, 87, 88, 95, 97, 105, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 128, 130, 131, 132, 133, 136, 144, 152, 154, 157, 158, 159, 164, 167, 175, 181, 183, 186, 187, 188, 196, 204, 206, 209, 217, 225, 227, 230, 237, 243, 245, 246, 254, 265, 267, 270, 278, 289, 291, 294, 295, 296, 297, 305, 307, 308, 309, 310, 318, 320, 322, 324, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 352, 353, 357, 358, 359, 371, 384, 396, 397, 398, 406, 407, 408, 409, 410, 411, 415, 416, 417, 420, 428, 437, 438, 439, 444, 447, 455, 462, 463, 464, 472, 481, 489, 498, 505, 510, 518, 530, 538, 550, 551, 552, 553, 560, 561, 562, 569, 579, 596, 597, 598, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "drive_start_async": [2, 4, 6, 7, 594, 596], "drive_start": [2, 4, 6, 7, 322, 324, 326, 327, 594, 596], "move_statu": [2, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 322, 324, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349], "drive_getmovestatus_async": [2, 4, 594, 596], "posi": [2, 4, 31, 322, 324, 347], "drive_readencoderposition_async": [2, 4, 594, 596], "encoder_posi": [2, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 36, 37, 322, 324, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 349, 352, 353, 596, 597, 604], "logical_posi": [2, 4, 15, 33, 322, 324, 331, 349], "stop": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 45, 46, 47, 63, 108, 109, 110, 131, 132, 133, 136, 144, 155, 156, 157, 158, 159, 167, 175, 184, 185, 186, 187, 188, 196, 207, 208, 209, 217, 228, 229, 230, 237, 246, 254, 268, 269, 270, 278, 292, 293, 294, 295, 296, 297, 308, 309, 310, 322, 323, 324, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 352, 353, 357, 358, 359, 371, 396, 397, 398, 415, 416, 417, 420, 428, 435, 436, 437, 438, 439, 447, 455, 460, 461, 462, 463, 464, 472, 479, 480, 481, 489, 496, 497, 498, 505, 510, 518, 528, 529, 530, 538, 548, 549, 550, 551, 552, 553, 560, 561, 562, 569, 578, 579, 588, 596, 597, 598, 599, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "drive_stop_async": [2, 3, 4, 6, 7, 594, 596], "drive_stop": [2, 3, 4, 6, 7, 322, 323, 324, 326, 327, 594, 596], "off": [2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 33, 35, 36, 37, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 344, 345, 346, 349, 351, 352, 353, 596, 597, 604, 607], "drive_enableservooff_async": [2, 3, 4, 5, 6, 7, 594, 596], "drive_enableservooff": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327, 594, 596], "drive_close_async": [2, 3, 4, 5, 6, 7, 594, 596], "drive_clos": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327, 594, 596], "drive_find_limit": [3, 323], "forward": [3, 6, 7, 28, 30, 323, 326, 327, 344, 346, 571, 581, 596, 597, 604, 617], "revers": [3, 6, 7, 28, 30, 323, 326, 327, 344, 346, 596, 597, 604, 617], "oper": [3, 6, 7, 57, 58, 118, 119, 137, 138, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 323, 326, 327, 365, 366, 406, 407, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 596, 597, 604, 614, 616], "drive_cfgfindref_async": [3, 594, 596], "drive_cfgfindref": [3, 323, 594, 596], "refer": [3, 28, 29, 30, 113, 114, 162, 163, 323, 344, 345, 346, 401, 402, 442, 443, 596, 597, 604], "drive_findreference_async": [3, 594, 596], "drive_findrefer": [3, 323, 594, 596], "statu": [3, 10, 28, 30, 40, 52, 59, 60, 61, 62, 66, 74, 83, 93, 100, 120, 121, 126, 139, 140, 141, 142, 150, 170, 171, 172, 173, 179, 191, 192, 193, 194, 202, 212, 213, 214, 215, 223, 233, 234, 235, 236, 241, 249, 250, 251, 252, 260, 273, 274, 275, 276, 284, 303, 316, 323, 330, 344, 346, 356, 364, 367, 368, 369, 370, 374, 378, 383, 389, 392, 408, 409, 414, 423, 424, 425, 426, 434, 450, 451, 452, 453, 459, 467, 468, 469, 470, 478, 484, 485, 486, 487, 495, 501, 502, 503, 504, 509, 513, 514, 515, 516, 524, 533, 534, 535, 536, 544, 559, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "limit_statu": [3, 323], "drive_getlimitstatus_async": [3, 594, 596], "reverse_hit": [3, 28, 30, 323, 344, 346], "forward_hit": [3, 28, 30, 323, 344, 346], "3": [3, 4, 6, 13, 36, 43, 55, 57, 59, 61, 62, 63, 69, 77, 86, 88, 89, 90, 96, 101, 102, 106, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 129, 137, 139, 141, 142, 144, 145, 146, 148, 153, 155, 156, 162, 163, 164, 165, 166, 168, 170, 172, 173, 175, 177, 182, 184, 185, 186, 187, 189, 191, 193, 194, 196, 197, 198, 200, 205, 207, 208, 210, 212, 214, 215, 217, 218, 219, 221, 226, 228, 229, 231, 233, 235, 236, 237, 239, 244, 247, 249, 251, 252, 254, 255, 256, 258, 266, 268, 269, 271, 273, 275, 276, 278, 279, 280, 282, 285, 286, 290, 292, 293, 306, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 578, 579, 581, 582, 583, 584, 588, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618], "second": [3, 4, 5, 6, 7, 9, 11, 24, 27, 39, 41, 45, 46, 47, 51, 53, 59, 60, 61, 62, 63, 65, 67, 73, 75, 80, 82, 84, 92, 94, 99, 101, 102, 103, 104, 108, 109, 110, 120, 121, 125, 127, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 175, 177, 178, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 228, 229, 233, 234, 235, 236, 237, 239, 240, 242, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 302, 304, 308, 309, 310, 315, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "move": [3, 4, 6, 7, 22, 23, 26, 323, 324, 326, 327, 338, 339, 341, 342, 352, 353, 591, 592, 596, 597, 604, 614], "sleep": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 144, 149, 150, 151, 152, 153, 154, 155, 158, 159, 164, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 217, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 254, 259, 260, 261, 262, 264, 265, 266, 267, 268, 273, 274, 275, 276, 278, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 296, 297, 302, 303, 304, 305, 306, 307, 309, 310, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 329, 330, 340, 343, 351, 352, 353, 355, 356, 358, 359, 363, 364, 367, 368, 369, 370, 371, 373, 374, 377, 378, 380, 382, 383, 384, 388, 389, 391, 392, 393, 394, 397, 398, 408, 409, 413, 414, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 438, 439, 444, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 501, 502, 503, 504, 505, 508, 509, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 528, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 552, 553, 558, 559, 561, 562, 567, 568, 569, 571, 572, 579], "delai": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 144, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 164, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 217, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 254, 259, 260, 261, 262, 264, 265, 266, 267, 268, 273, 274, 275, 276, 278, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 329, 330, 340, 343, 351, 352, 353, 355, 356, 357, 358, 359, 363, 364, 367, 368, 369, 370, 371, 373, 374, 377, 378, 380, 382, 383, 384, 388, 389, 391, 392, 393, 394, 396, 397, 398, 408, 409, 413, 414, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 438, 439, 444, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 501, 502, 503, 504, 505, 508, 509, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 528, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 558, 559, 560, 561, 562, 567, 568, 571, 572, 598, 604, 605, 606, 607, 608, 610, 611, 612, 613], "drive_position_blend": [4, 324], "30000": [4, 324], "new_posit": [4, 33, 324, 349, 596, 597, 604], "encod": [4, 15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 324, 331, 333, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353, 596, 597, 604, 614, 616, 617], "overwrit": [4, 324], "drive_overrideposition_async": [4, 594, 596], "drive_overrideposit": [4, 324, 594, 596], "drive_servo_on": [5, 325], "5": [5, 7, 10, 35, 37, 40, 45, 48, 52, 57, 59, 60, 63, 66, 74, 80, 83, 89, 90, 93, 100, 101, 102, 108, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 131, 134, 137, 139, 140, 144, 150, 155, 156, 157, 160, 162, 163, 165, 166, 168, 170, 171, 175, 179, 184, 185, 186, 189, 191, 192, 196, 202, 207, 208, 210, 212, 213, 217, 223, 228, 229, 231, 233, 234, 237, 241, 247, 249, 250, 254, 260, 268, 269, 271, 273, 274, 278, 284, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 327, 330, 351, 353, 356, 357, 360, 364, 365, 367, 368, 371, 374, 378, 380, 383, 385, 386, 389, 392, 393, 394, 396, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 418, 421, 423, 424, 428, 434, 435, 436, 437, 440, 442, 443, 445, 446, 448, 450, 451, 455, 459, 460, 461, 462, 465, 467, 468, 472, 478, 479, 480, 482, 484, 485, 489, 495, 496, 497, 499, 501, 502, 505, 509, 511, 513, 514, 518, 524, 528, 529, 531, 533, 534, 538, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 578, 579, 581, 582, 583, 584, 588, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617], "drive_velocity_blend": [6, 326], "velocity_mod": [6, 7, 36, 37, 326, 327, 352, 353], "2": [6, 7, 11, 24, 26, 27, 30, 36, 37, 41, 45, 46, 47, 53, 57, 61, 67, 75, 80, 84, 88, 89, 90, 94, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 127, 131, 132, 133, 137, 141, 145, 146, 151, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 168, 172, 180, 184, 185, 186, 187, 189, 193, 197, 198, 203, 207, 208, 210, 214, 218, 219, 224, 228, 229, 231, 235, 242, 247, 251, 255, 256, 264, 268, 269, 271, 275, 279, 280, 285, 286, 288, 292, 293, 294, 295, 296, 297, 304, 308, 309, 310, 317, 326, 327, 340, 342, 343, 346, 352, 353, 357, 358, 359, 365, 369, 380, 384, 385, 386, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 421, 425, 429, 430, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 452, 460, 461, 462, 463, 465, 469, 473, 474, 479, 480, 482, 486, 490, 491, 496, 497, 499, 503, 511, 515, 519, 520, 528, 529, 531, 535, 539, 540, 545, 546, 548, 549, 550, 551, 552, 553, 560, 561, 562, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618], "new_velo": [6, 7, 36, 37, 326, 327, 352, 353, 596, 597, 604], "5000": [6, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 326, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 349, 350, 352, 353], "drive_overridevelocity_async": [6, 7, 594, 596], "drive_overrideveloc": [6, 7, 326, 327, 594, 596], "3000": [6, 7, 36, 37, 326, 327, 352, 353], "drive_velocity_blending_acceler": [7, 327], "new_accel": [7, 37, 327, 353, 596, 597, 604], "100": [7, 18, 25, 31, 37, 46, 47, 63, 109, 110, 132, 133, 144, 158, 159, 175, 196, 217, 237, 254, 261, 262, 278, 296, 297, 309, 310, 327, 334, 341, 347, 353, 358, 359, 371, 397, 398, 416, 417, 428, 438, 439, 455, 472, 489, 505, 518, 525, 526, 538, 552, 553, 561, 562, 569, 579, 610, 614], "new_decel": [7, 37, 327, 353, 596, 597, 604], "drive_overrideaccel_async": [7, 594, 596], "drive_overrideaccel": [7, 327, 594, 596], "6000": [7, 37, 327, 353], "100000": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 37, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 349, 350, 352, 353, 596, 597, 604, 605, 606, 607, 608, 610, 611, 617], "system_eth": [8, 9, 10, 38, 39, 40, 50, 51, 52, 64, 65, 66, 72, 73, 74, 81, 82, 83, 91, 92, 93, 98, 99, 100, 124, 125, 126, 328, 329, 330, 354, 355, 356, 362, 363, 364, 372, 373, 374, 376, 377, 378, 381, 382, 383, 387, 388, 389, 390, 391, 392, 412, 413, 414], "get_network_info": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566], "hardwar": [8, 38, 50, 64, 72, 81, 91, 98, 124, 147, 176, 199, 220, 238, 257, 281, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 431, 456, 475, 492, 506, 521, 541, 557, 566, 596, 597, 604], "first": [8, 38, 50, 63, 64, 72, 81, 91, 98, 101, 102, 103, 124, 143, 144, 145, 146, 147, 148, 155, 156, 174, 175, 176, 177, 184, 185, 186, 187, 195, 196, 197, 198, 199, 200, 207, 208, 216, 217, 218, 219, 220, 221, 228, 229, 237, 238, 239, 253, 254, 255, 256, 257, 258, 261, 262, 263, 268, 269, 277, 278, 279, 280, 281, 282, 285, 286, 287, 292, 293, 301, 314, 328, 354, 362, 371, 372, 376, 381, 387, 390, 393, 394, 395, 412, 427, 428, 429, 430, 431, 432, 435, 436, 454, 455, 456, 457, 460, 461, 462, 463, 471, 472, 473, 474, 475, 476, 479, 480, 488, 489, 490, 491, 492, 493, 496, 497, 505, 506, 507, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 557, 566, 569, 571, 575, 579, 581, 585, 605, 607, 608, 610, 611, 616, 617], "submask": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566, 574, 575, 584, 585], "mac": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566, 574, 575, 584, 585, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "ip_addr": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "net_getipaddrandsubmask_async": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "net_getmacaddr_async": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "hello_world": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "public": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "domain": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "rang": [9, 10, 22, 31, 39, 40, 48, 51, 52, 59, 60, 65, 66, 73, 74, 80, 82, 83, 92, 93, 99, 100, 111, 120, 121, 125, 126, 134, 136, 139, 140, 148, 149, 150, 160, 167, 170, 171, 177, 178, 179, 186, 188, 191, 192, 200, 201, 202, 209, 212, 213, 221, 222, 223, 230, 233, 234, 239, 240, 241, 246, 249, 250, 258, 259, 260, 270, 273, 274, 282, 283, 284, 294, 298, 302, 303, 311, 315, 316, 329, 330, 338, 347, 355, 356, 360, 363, 364, 367, 368, 373, 374, 377, 378, 380, 382, 383, 388, 389, 391, 392, 399, 408, 409, 413, 414, 418, 420, 423, 424, 432, 433, 434, 440, 447, 450, 451, 457, 458, 459, 462, 464, 467, 468, 476, 477, 478, 481, 484, 485, 493, 494, 495, 498, 501, 502, 507, 508, 509, 510, 513, 514, 522, 523, 524, 530, 533, 534, 542, 543, 544, 550, 554, 558, 559, 563, 567, 568, 569, 570, 571, 574, 576, 577, 579, 580, 581, 584, 586, 587, 614, 616], "10": [9, 10, 39, 40, 51, 52, 59, 60, 65, 66, 73, 74, 80, 82, 83, 88, 92, 93, 99, 100, 120, 121, 125, 126, 136, 139, 140, 149, 150, 155, 164, 167, 170, 171, 178, 179, 184, 187, 188, 191, 192, 201, 202, 207, 209, 212, 213, 222, 223, 228, 230, 233, 234, 240, 241, 246, 249, 250, 259, 260, 268, 270, 273, 274, 283, 284, 292, 294, 302, 303, 315, 316, 329, 330, 355, 356, 363, 364, 367, 368, 373, 374, 377, 378, 380, 382, 383, 384, 388, 389, 391, 392, 408, 409, 413, 414, 420, 423, 424, 433, 434, 435, 444, 447, 450, 451, 458, 459, 460, 463, 464, 467, 468, 477, 478, 479, 481, 484, 485, 494, 495, 496, 498, 501, 502, 508, 509, 510, 513, 514, 523, 524, 528, 530, 533, 534, 543, 544, 548, 550, 558, 559, 567, 568, 569, 579, 605, 606, 607, 608, 610, 611, 614, 617], "restart": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "now": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "sys_reboot_async": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "set_and_get_rtc": [10, 40, 52, 66, 74, 83, 93, 100, 126, 150, 179, 202, 223, 241, 260, 284, 303, 316, 330, 356, 364, 374, 378, 383, 389, 392, 414, 434, 459, 478, 495, 509, 524, 544, 559, 568], "sys_setrtc_async": [10, 40, 52, 66, 74, 83, 93, 100, 126, 150, 179, 202, 223, 241, 260, 284, 303, 316, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "8": [10, 40, 45, 46, 47, 52, 66, 74, 83, 93, 100, 101, 102, 108, 109, 110, 126, 131, 132, 133, 143, 145, 146, 150, 155, 156, 157, 158, 159, 174, 179, 184, 185, 187, 195, 197, 198, 202, 207, 208, 216, 218, 219, 223, 228, 229, 241, 253, 255, 256, 260, 268, 269, 277, 279, 280, 284, 285, 286, 292, 293, 295, 296, 297, 303, 308, 309, 310, 316, 330, 356, 357, 358, 359, 364, 374, 378, 383, 389, 392, 393, 394, 396, 397, 398, 414, 415, 416, 417, 427, 429, 430, 434, 435, 436, 437, 438, 439, 454, 459, 460, 461, 463, 471, 473, 474, 478, 479, 480, 488, 490, 491, 495, 496, 497, 509, 517, 519, 520, 524, 528, 529, 537, 539, 540, 544, 545, 546, 548, 549, 551, 552, 553, 559, 560, 561, 562, 568, 569, 570, 571, 579, 580, 581, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617], "15": [10, 40, 52, 66, 74, 83, 93, 100, 126, 150, 179, 202, 223, 241, 260, 284, 303, 316, 330, 356, 364, 374, 378, 383, 389, 392, 414, 434, 459, 478, 495, 509, 524, 544, 559, 568], "sys_getrtc_async": [10, 11, 12, 13, 14, 40, 41, 42, 43, 44, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 100, 104, 105, 106, 107, 126, 127, 128, 129, 130, 147, 150, 151, 152, 153, 154, 176, 179, 180, 181, 182, 183, 199, 202, 203, 204, 205, 206, 220, 223, 224, 225, 226, 227, 238, 241, 242, 243, 244, 245, 257, 260, 264, 265, 266, 267, 281, 284, 288, 289, 290, 291, 303, 304, 305, 306, 307, 316, 317, 318, 319, 320, 575, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "multiple_loops_async": [11, 41, 53, 67, 75, 84, 94, 104, 127, 151, 180, 203, 224, 242, 264, 288, 304, 317], "rtc": [11, 12, 13, 14, 41, 42, 43, 44, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 127, 128, 129, 130, 147, 151, 152, 153, 154, 176, 180, 181, 182, 183, 199, 203, 204, 205, 206, 220, 224, 225, 226, 227, 238, 242, 243, 244, 245, 257, 264, 265, 266, 267, 281, 288, 289, 290, 291, 304, 305, 306, 307, 317, 318, 319, 320, 431, 456, 475, 492, 506, 521, 541, 575, 585, 591, 592, 616], "string": [11, 12, 41, 42, 53, 54, 67, 68, 75, 76, 84, 85, 94, 95, 104, 105, 127, 128, 151, 152, 156, 180, 181, 185, 203, 204, 208, 224, 225, 229, 242, 243, 264, 265, 269, 288, 289, 293, 304, 305, 317, 318, 436, 461, 480, 497, 529, 549, 572, 573, 582, 583, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "readrtc_loop": [11, 41, 53, 67, 75, 84, 94, 104, 127, 151, 180, 203, 224, 242, 264, 288, 304, 317], "true": [11, 12, 14, 18, 19, 41, 42, 44, 45, 53, 54, 56, 67, 68, 70, 75, 76, 78, 84, 85, 87, 94, 95, 97, 104, 105, 107, 108, 127, 128, 130, 131, 151, 152, 154, 157, 180, 181, 183, 187, 203, 204, 206, 224, 225, 227, 242, 243, 245, 264, 265, 267, 288, 289, 291, 295, 304, 305, 307, 308, 317, 318, 320, 334, 335, 357, 396, 415, 437, 463, 551, 560, 569, 571, 575, 579, 581, 585, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617], "printstring_loop": [11, 41, 53, 67, 75, 84, 94, 104, 127, 151, 180, 203, 224, 242, 264, 288, 304, 317], "gather": [11, 41, 53, 67, 75, 84, 94, 104, 127, 151, 180, 203, 224, 242, 264, 288, 304, 317], "part": [11, 12, 13, 14, 41, 42, 43, 44, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 127, 128, 129, 130, 151, 152, 153, 154, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 304, 305, 306, 307, 317, 318, 319, 320], "never": [11, 13, 41, 43, 53, 55, 67, 69, 75, 77, 84, 86, 94, 96, 104, 106, 127, 129, 151, 153, 180, 182, 203, 205, 224, 226, 242, 244, 264, 266, 288, 290, 304, 306, 317, 319], "multiple_loops_thread": [12, 42, 54, 68, 76, 85, 95, 105, 128, 152, 181, 204, 225, 243, 265, 289, 305, 318], "getrtc": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320], "str": [12, 13, 14, 42, 43, 44, 54, 55, 56, 68, 69, 70, 76, 77, 78, 85, 86, 87, 95, 96, 97, 105, 106, 107, 128, 129, 130, 152, 153, 154, 181, 182, 183, 204, 205, 206, 225, 226, 227, 243, 244, 245, 265, 266, 267, 289, 290, 291, 305, 306, 307, 318, 319, 320, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "printstr": [12, 42, 54, 68, 76, 85, 95, 105, 128, 152, 181, 204, 225, 243, 265, 289, 305, 318], "rtc_thread": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320], "print_thread": [12, 42, 54, 68, 76, 85, 95, 105, 128, 152, 181, 204, 225, 243, 265, 289, 305, 318], "sync": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320, 591, 614], "queri": [12, 13, 14, 42, 43, 44, 54, 55, 56, 68, 69, 70, 76, 77, 78, 85, 86, 87, 95, 96, 97, 105, 106, 107, 128, 129, 130, 152, 153, 154, 181, 182, 183, 204, 205, 206, 225, 226, 227, 243, 244, 245, 265, 266, 267, 289, 290, 291, 305, 306, 307, 318, 319, 320], "_threadprint": [12, 42, 54, 68, 76, 85, 95, 105, 128, 152, 181, 204, 225, 243, 265, 289, 305, 318], "target": [12, 14, 24, 27, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320, 340, 343, 579, 596, 597, 604], "_threadrtc": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320], "immedi": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320], "parallel": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320], "single_loop_async": [13, 43, 55, 69, 77, 86, 96, 106, 129, 153, 182, 205, 226, 244, 266, 290, 306, 319], "loop_func": [13, 43, 55, 69, 77, 86, 96, 106, 129, 153, 182, 205, 226, 244, 266, 290, 306, 319], "timeout": [13, 43, 55, 63, 69, 77, 86, 96, 106, 129, 144, 153, 175, 182, 196, 205, 217, 226, 237, 244, 254, 266, 278, 290, 306, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "single_loop_thread": [14, 44, 56, 70, 78, 87, 97, 107, 130, 154, 183, 206, 227, 245, 267, 291, 307, 320], "motion_1axis_mov": [15, 331], "axi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 294, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 550, 569, 579, 596, 597, 604, 612, 613, 616], "two_pulse_mod": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 331, 333, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353], "rel_posi_mod": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 349, 350], "axis_dir_cw": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 331, 333, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353], "encoder_dir_cw": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 331, 333, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353], "forward_enable_tru": [15, 16, 17, 21, 28, 29, 30, 33, 36, 37, 331, 332, 333, 337, 344, 345, 346, 349, 352, 353], "reverse_enable_tru": [15, 16, 17, 21, 28, 29, 30, 33, 36, 37, 331, 332, 333, 337, 344, 345, 346, 349, 352, 353], "home_enable_fals": [15, 28, 30, 33, 331, 344, 346, 349], "motion_open_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 594, 597, 604], "open_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "motion_opencfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 594, 597, 604], "user": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 598, 603, 604, 605, 606, 607, 610, 611, 612, 613], "desktop": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353], "3axisstage_2p": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353], "ini": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 597, 604, 616], "opencfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37], "load": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 352, 353, 591, 592, 596, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "motion_loadcfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 594, 597, 604], "loadcfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37], "motion_cfgaxis_async": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 594, 597, 604], "cfgaxis_async": [15, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37], "motion_cfglimit_async": [15, 16, 17, 21, 24, 27, 28, 29, 30, 33, 36, 37, 594, 597, 604], "cfglimit_async": [15, 16, 17, 21, 24, 27, 28, 29, 30, 33, 36, 37], "motion_cfghome_async": [15, 28, 30, 33, 594, 597, 604], "cfghome_async": [15, 28, 30, 33], "motion_cfgaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 594, 597, 604], "target_posi": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 349, 350, 352, 353, 596, 597, 604], "velo": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 349, 350, 352, 353, 596, 597, 604], "accel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 349, 350, 352, 353, 596, 597, 604], "decel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 33, 34, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 349, 350, 352, 353, 596, 597, 604], "cfgaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37], "motion_rstencoderposi_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 36, 37, 594, 597, 604], "rstencoderposi_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 36, 37], "motion_enableservoon_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 35, 36, 37, 594, 597, 604], "enableservoon_async": [15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 33, 35, 36, 37], "motion_startsingleaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 33, 36, 37, 594, 597, 604], "startsingleaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 33, 36, 37], "motion_getmovestatus_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 594, 597, 604], "motion_getlogicalposi_async": [15, 31, 33, 594, 597, 604], "motion_getencoderposi_async": [15, 33, 594, 597, 604], "motion_stop_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 594, 597, 604], "stop_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37], "motion_enableservooff_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 35, 36, 37, 594, 597, 604], "enableservooff_async": [15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 33, 35, 36, 37], "motion_close_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 594, 597, 604], "close_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "motion_1axis_move_with_s_curve_acceler": [16, 332], "jerk": [16, 22, 332, 338, 597, 604], "accelet": [16, 22, 332, 338], "motion_cfgjerkandaccelmode_async": [16, 22, 594, 597, 604], "cfgjerkandaccelmode_async": [16, 22], "getmovestatus_async": [16, 19, 20, 21, 25], "motion_1axis_move_with_alarm_in": [17, 333], "alarm_enable_fals": [17, 333], "cfgaxisparam_async": 17, "motion_cfgalarm_async": [17, 594, 597, 604], "cfgalarm_async": 17, "getmovestatu": [17, 18], "motion_1axis_move_with_breakpoint": [18, 334], "start_posit": [18, 334], "pulse_width": [18, 334, 597, 604], "pulse_period": [18, 334, 597, 604], "pulse_numb": [18, 334, 597, 604], "motion_cfgbreakpoint_async": [18, 594, 597, 604], "cfgbreakpoint_async": 18, "motion_enablebreakpoint_async": [18, 594, 597, 604], "int": [18, 19, 25, 334, 335, 341, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "enablebreakpoint_async": 18, "motion_1axis_move_with_captur": [19, 335], "rising_edg": [19, 335], "capture_logical_posit": [19, 335], "motion_cfgcapture_async": [19, 594, 597, 604], "cfgcapture_async": 19, "motion_enablecapture_async": [19, 594, 597, 604], "enablecapture_async": 19, "capture_point": [19, 335], "motion_readcapturepoint_async": [19, 594, 597, 604], "readcapturepoint_async": 19, "motion_1axis_move_with_configuration_fil": [20, 336], "motion_1axis_move_with_inposit": [21, 337], "inposi_enable_fals": [21, 337], "motion_cfginposi_async": [21, 594, 597, 604], "cfginposi_async": 21, "motion_2axis_circular_interpol": [22, 338], "interpol": [22, 23, 26, 338, 339, 342, 597, 604, 614], "x_axi": [22, 338, 597, 604], "y_axi": [22, 338, 597, 604], "center_point_x": [22, 338, 597, 604], "2000": [22, 23, 26, 338, 339, 342, 570, 576, 577, 578, 580, 586, 587, 588], "center_point_i": [22, 338, 597, 604], "finish_point_x": [22, 338, 597, 604], "finish_point_i": [22, 338, 597, 604], "circular_dir_cw": [22, 338], "scurv": [22, 338, 591, 592], "motion_cfgcircularinterpo_async": [22, 594, 597, 604], "speed": [22, 23, 25, 26, 186, 187, 338, 339, 341, 342, 462, 463, 597, 604, 605, 606, 607, 608, 610, 611, 612, 614, 616], "1000": [22, 24, 25, 27, 36, 45, 108, 131, 157, 186, 295, 308, 338, 340, 341, 343, 352, 357, 396, 415, 437, 462, 551, 560, 610, 614], "cfgcircularinterpo_async": 22, "motion_startcircularinterpo_async": [22, 594, 597, 604], "startcircularinterpo_async": 22, "4": [22, 57, 90, 101, 102, 114, 117, 118, 119, 120, 121, 122, 123, 137, 148, 156, 163, 166, 168, 177, 185, 189, 200, 208, 210, 221, 229, 231, 239, 247, 258, 269, 271, 282, 285, 286, 293, 338, 365, 386, 393, 394, 402, 405, 406, 407, 408, 409, 410, 411, 421, 432, 436, 443, 446, 448, 457, 461, 465, 476, 480, 482, 493, 497, 499, 507, 511, 522, 529, 531, 542, 545, 546, 549, 571, 572, 573, 574, 578, 581, 582, 583, 584, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618], "x_axis_move_statu": [22, 338], "y_axis_move_statu": [22, 338], "motion_2axis_linear_interpol": [23, 339], "axis1": [23, 24, 26, 27, 339, 340, 342, 343, 597, 604], "dest_posi1": [23, 26, 339, 342, 597, 604], "axis2": [23, 24, 26, 27, 339, 340, 342, 343, 597, 604], "dest_posi2": [23, 26, 339, 342, 597, 604], "motion_cfg2axislinearinterpo_async": [23, 594, 597, 604], "cfg2axislinearinterpo_async": 23, "motion_startlinearinterpo_async": [23, 26, 594, 597, 604], "startlinearinterpo_async": [23, 26], "axis1_move_statu": [23, 26, 339, 342], "axis2_move_statu": [23, 26, 339, 342], "motion_3axis_asynchronous_mov": 24, "getaxisstatu": [24, 27], "005": [24, 27, 155, 184, 186, 207, 228, 268, 292, 340, 343, 435, 460, 462, 479, 496, 528, 548, 569, 579, 598, 604, 605, 606, 607, 608, 610, 611, 612, 613], "axis1_thread": [24, 27, 340, 343], "axis2_thread": [24, 27, 340, 343], "axis3_thread": [24, 27, 340, 343], "axis3": [24, 26, 27, 340, 342, 343, 597, 604], "forward_enable_fals": [24, 27, 340, 343], "reverse_enable_fals": [24, 27, 340, 343], "defin": [24, 27, 340, 343, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "thread_1": [24, 27, 340, 343], "thread_2": [24, 27, 340, 343], "thread_3": [24, 27, 340, 343], "servoon": [24, 27], "join": [24, 27, 340, 343], "servooff_async": 24, "motion_3axis_helical_interpol": [25, 341], "center_x": [25, 341], "center_i": [25, 341], "finish_x": [25, 341], "finish_i": [25, 341], "pitch_axis3": [25, 341, 597, 604], "pitch_axis4": [25, 341, 597, 604], "rotation_num": [25, 341], "cal_timeout": [25, 341], "helical_dir_cw": [25, 341], "motion_cfghelicalinterpo_async": [25, 594, 597, 604], "fals": [25, 45, 108, 131, 157, 187, 295, 308, 341, 357, 396, 415, 437, 463, 551, 560, 569, 571, 575, 579, 581, 585, 596, 597, 604, 607, 617], "cfghelicalinterpo_async": 25, "motion_starthelicalinterpo_async": [25, 594, 597, 604], "starthelicalinterpo_async": 25, "motion_3axis_linear_interpol": [26, 342], "dest_posi3": [26, 342, 597, 604], "motion_cfg3axislinearinterpo_async": [26, 594, 597, 604], "cfg3axislinearinterpo_async": 26, "axis3_move_statu": [26, 342], "motion_3axis_synchronous_mov": [27, 343], "motion_startmultiaxismove_async": [27, 594, 597, 604], "startmultiaxismove_async": 27, "servooff": 27, "motion_find_hom": [28, 344], "find_hom": [28, 344], "dir_revers": [28, 29, 30, 344, 345, 346], "motion_cfgfindref_async": [28, 29, 30, 594, 597, 604], "search_velo": [28, 29, 30, 344, 345, 346, 596, 597, 604], "search_accl": [28, 29, 30, 344, 345, 346, 596, 597, 604], "approach_velo_perc": [28, 29, 30, 344, 345, 346, 596, 597, 604], "20": [28, 29, 30, 88, 155, 164, 184, 187, 207, 228, 268, 292, 344, 345, 346, 384, 435, 444, 460, 463, 479, 496, 528, 548, 596, 597, 604], "en_reset_posi": [28, 29, 30, 344, 345, 346, 596, 597, 604], "offset_posi": [28, 29, 30, 344, 345, 346, 596, 597, 604], "1500": [28, 29, 30, 344, 345, 346], "cfgfindref_async": [28, 29, 30], "motion_findref_async": [28, 29, 30, 594, 597, 604], "findref_async": [28, 29, 30], "home_statu": [28, 30, 344, 346], "limit": [28, 344, 569, 579, 591, 592, 596, 597, 604, 614, 617], "hit_statu": [28, 30, 344, 346], "motion_getlimitstatus_async": [28, 30, 594, 597, 604], "hit": [28, 30, 344, 346], "motion_gethomestatus_async": [28, 30, 594, 597, 604], "found": [28, 30, 344, 346, 597, 604, 616], "driving_statu": [28, 29, 30, 344, 345, 346], "motion_checkref_async": [28, 29, 30, 594, 597, 604], "motion_find_index": [29, 345], "one_pulse_mod": [29, 345], "find_index": [29, 345], "motion_cfgencoder_async": [29, 36, 37, 594, 597, 604], "cfgencoder_async": [29, 36, 37], "motion_find_limit": [30, 346], "find_limit": [30, 346], "home": [30, 346, 591, 592, 596, 597, 604, 614, 617], "motion_get_logical_posit": [31, 347], "motion_setlogicalposi_async": [31, 594, 597, 604], "setlogicalposi_async": 31, "getlogicalposi": 31, "motion_load_configuration_fil": [32, 348], "motion_position_blend": [33, 349], "motion_overrideaxisposi_async": [33, 594, 597, 604], "overrideaxisposi_async": 33, "motion_save_configuration_fil": [34, 350], "motion_savecfgfile_async": [34, 594, 597, 604], "savecfgfile_async": 34, "motion_servo_on": [35, 351], "motion_velocity_blend": [36, 352], "overrid": [36, 37, 352, 353, 596, 597, 604], "motion_overrideaxisvelocity_async": [36, 37, 594, 597, 604], "overrideaxisvelocity_async": [36, 37], "motion_velocity_blending_acceler": [37, 353], "veloc": [37, 353, 591, 592, 596, 597, 604, 612, 617], "motion_overrideaxisaccel_async": [37, 594, 597, 604], "overrideaxisaccel_async": 37, "ai_n_samples_onc": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560], "obtain": [45, 46, 47, 48, 49, 71, 108, 109, 110, 111, 112, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 375, 396, 397, 398, 399, 400, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "addition": [45, 48, 49, 71, 108, 111, 112, 131, 134, 135, 157, 160, 161, 295, 298, 299, 308, 311, 312, 357, 360, 361, 375, 396, 399, 400, 415, 418, 419, 437, 440, 441, 551, 554, 555, 560, 563, 564, 618], "point": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560, 569, 579, 597, 604, 614], "To": [45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "begin": [45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "next": [45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 88, 89, 90, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 384, 385, 386, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "outlin": [45, 46, 47, 48, 49, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 164, 165, 166, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 444, 445, 446, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "procedur": [45, 46, 47, 48, 49, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 164, 165, 166, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 444, 445, 446, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "stream": [45, 46, 47, 88, 108, 109, 110, 115, 131, 132, 133, 157, 158, 159, 164, 294, 295, 296, 297, 308, 309, 310, 357, 358, 359, 384, 396, 397, 398, 403, 415, 416, 417, 437, 438, 439, 444, 550, 551, 552, 553, 560, 561, 562, 569, 579, 598, 604, 605, 606, 607, 608, 610, 611, 612, 613], "final": [45, 46, 47, 48, 49, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 164, 165, 166, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 444, 445, 446, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 596, 597, 604], "conclud": [45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "explain": [45, 46, 47, 48, 49, 88, 89, 90, 108, 109, 110, 111, 112, 115, 116, 117, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 164, 165, 166, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 384, 385, 386, 396, 397, 398, 399, 400, 403, 404, 405, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 444, 445, 446, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564], "On": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562, 569, 579, 617], "demand": [45, 46, 47, 88, 108, 109, 110, 113, 114, 131, 132, 133, 157, 158, 159, 162, 163, 164, 295, 296, 297, 308, 309, 310, 357, 358, 359, 384, 396, 397, 398, 401, 402, 415, 416, 417, 437, 438, 439, 442, 443, 444, 551, 552, 553, 560, 561, 562, 569, 579, 591, 592, 598, 600, 602, 604, 605, 606, 612, 613, 614, 617], "continu": [45, 88, 108, 131, 157, 164, 295, 308, 357, 384, 396, 415, 437, 444, 551, 560, 569, 579, 591, 592, 598, 602, 604, 605, 606, 612, 613, 617], "sampling_r": [45, 46, 47, 88, 108, 109, 110, 131, 132, 133, 157, 158, 159, 164, 295, 296, 297, 308, 309, 310, 357, 358, 359, 384, 396, 397, 398, 415, 416, 417, 437, 438, 439, 444, 551, 552, 553, 560, 561, 562, 598, 602, 604, 605, 606, 612, 613], "200": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562, 614], "read_point": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562], "ai_open_async": [45, 46, 47, 48, 49, 71, 108, 109, 110, 111, 112, 113, 114, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 162, 163, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 569, 594, 598, 600, 604, 605, 606, 612, 613], "acquisit": [45, 46, 47, 48, 49, 71, 108, 109, 110, 111, 112, 113, 114, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 162, 163, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 375, 396, 397, 398, 399, 400, 401, 402, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 442, 443, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 569, 579, 598, 604, 605, 606, 612, 613, 616], "ai_setmode_async": [45, 46, 47, 48, 49, 108, 109, 110, 111, 112, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 569, 594, 598, 604, 605, 606, 612, 613], "rate": [45, 46, 47, 88, 108, 109, 110, 131, 132, 133, 143, 157, 158, 159, 164, 174, 195, 216, 253, 277, 295, 296, 297, 308, 309, 310, 357, 358, 359, 384, 396, 397, 398, 415, 416, 417, 427, 437, 438, 439, 444, 454, 471, 488, 517, 537, 551, 552, 553, 560, 561, 562, 569, 572, 579, 582, 597, 598, 602, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 616], "ai_setsamplingrate_async": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 569, 594, 598, 604, 605, 606, 612, 613], "ai_setnumsamples_async": [45, 108, 131, 157, 295, 308, 569, 594, 598, 604, 605, 606, 612, 613], "ai_start_async": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 569, 594, 598, 604, 605, 606, 612, 613], "ai_readstreaming_async": [45, 46, 47, 108, 109, 110, 111, 112, 113, 114, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 569, 594, 598, 604, 605, 606, 612, 613], "len": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 186, 295, 296, 297, 308, 309, 310, 357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 462, 551, 552, 553, 560, 561, 562, 569, 574, 579, 584, 598, 604, 605, 606, 612, 613], "ok": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560, 569, 571, 575, 579, 581, 585], "samp": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560], "enumer": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560, 569, 579], "ani": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560, 569, 579], "miss": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560], "ng": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560], "ai_stop_async": [45, 46, 47, 108, 109, 110, 131, 132, 133, 157, 158, 159, 295, 296, 297, 308, 309, 310, 569, 594, 598, 604, 605, 606, 612, 613], "ai_close_async": [45, 46, 47, 48, 49, 71, 108, 109, 110, 111, 112, 113, 114, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 162, 163, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 569, 594, 598, 600, 604, 605, 606, 612, 613], "ai_continu": [46, 109, 132, 158, 296, 309, 358, 397, 416, 438, 552, 561], "channel": [46, 47, 63, 88, 109, 110, 132, 133, 136, 144, 158, 159, 164, 167, 175, 188, 196, 209, 217, 230, 237, 246, 254, 270, 278, 296, 297, 309, 310, 358, 359, 371, 384, 397, 398, 416, 417, 420, 428, 438, 439, 444, 447, 455, 464, 472, 481, 489, 498, 505, 510, 518, 530, 538, 552, 553, 561, 562, 569, 576, 577, 579, 586, 587, 591, 592, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "n": [46, 47, 88, 101, 102, 109, 110, 132, 133, 158, 159, 164, 285, 286, 296, 297, 309, 310, 358, 359, 384, 393, 394, 397, 398, 416, 417, 438, 439, 444, 545, 546, 552, 553, 561, 562, 569, 579, 591, 592, 598, 602, 603, 604, 605, 606, 611, 612, 613, 614, 617], "sampl": [46, 47, 88, 101, 102, 109, 110, 132, 133, 158, 159, 164, 285, 286, 296, 297, 309, 310, 358, 359, 384, 393, 394, 397, 398, 416, 417, 438, 439, 444, 545, 546, 552, 553, 561, 562, 569, 577, 579, 587, 591, 592, 598, 600, 602, 603, 604, 605, 606, 611, 612, 613, 614, 616, 617], "data_len": [46, 47, 109, 110, 132, 133, 158, 159, 296, 297, 309, 310, 358, 359, 397, 398, 416, 417, 438, 439, 552, 553, 561, 562], "ai_continuous_with_logg": [47, 110, 133, 159, 297, 310, 359, 398, 417, 439, 553, 562], "Then": [47, 110, 133, 159, 297, 310, 359, 398, 417, 439, 553, 562], "save": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562, 591, 592, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 614], "csv": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "wpc_test": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562], "logger_openfil": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "header": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "logger_writehead": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "ch0": [47, 89, 90, 103, 108, 109, 110, 111, 112, 113, 114, 116, 117, 133, 159, 162, 163, 165, 166, 261, 262, 263, 287, 297, 310, 359, 385, 386, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 417, 439, 442, 443, 445, 446, 525, 526, 527, 547, 553, 562, 569, 579], "ch1": [47, 89, 90, 102, 103, 108, 109, 110, 111, 112, 113, 114, 116, 117, 133, 159, 162, 163, 165, 166, 261, 262, 263, 286, 287, 297, 310, 359, 385, 386, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 417, 439, 442, 443, 445, 446, 525, 526, 527, 546, 547, 553, 562, 569, 579], "ch2": [47, 89, 90, 108, 109, 110, 111, 112, 113, 114, 116, 117, 133, 159, 162, 163, 165, 166, 297, 310, 359, 385, 386, 396, 397, 398, 399, 400, 401, 402, 404, 405, 417, 439, 442, 443, 445, 446, 553, 562, 569, 579], "ch3": [47, 89, 90, 108, 109, 110, 111, 112, 113, 114, 116, 117, 133, 159, 162, 163, 165, 166, 297, 310, 359, 385, 386, 396, 397, 398, 399, 400, 401, 402, 404, 405, 417, 439, 442, 443, 445, 446, 553, 562, 569, 579], "ch4": [47, 89, 108, 109, 110, 111, 112, 113, 114, 116, 133, 159, 162, 165, 297, 310, 359, 385, 396, 397, 398, 399, 400, 401, 402, 404, 417, 439, 442, 445, 553, 562, 569, 579], "ch5": [47, 89, 108, 109, 110, 111, 112, 113, 114, 116, 133, 159, 162, 165, 297, 310, 359, 385, 396, 397, 398, 399, 400, 401, 402, 404, 417, 439, 442, 445, 553, 562, 569, 579], "ch6": [47, 89, 108, 109, 110, 111, 112, 113, 114, 116, 133, 159, 162, 165, 297, 310, 359, 385, 396, 397, 398, 399, 400, 401, 402, 404, 417, 439, 442, 445, 553, 562, 569, 579], "ch7": [47, 89, 108, 109, 110, 111, 112, 113, 114, 116, 133, 159, 162, 165, 297, 310, 359, 385, 396, 397, 398, 399, 400, 401, 402, 404, 417, 439, 442, 445, 553, 562, 569, 579], "logger_write2dlist": [47, 110, 133, 159, 297, 310, 359, 398, 417, 439, 553, 562, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "ai_on_demand_in_loop": [48, 111, 134, 160, 298, 311, 360, 399, 418, 440, 554, 563], "util": [48, 111, 134, 160, 298, 311, 360, 399, 418, 440, 554, 563], "retriev": [48, 49, 71, 111, 112, 134, 135, 160, 161, 298, 299, 311, 312, 360, 361, 375, 399, 400, 418, 419, 440, 441, 554, 555, 563, 564, 598, 604, 605, 606, 607, 612, 613], "chip_select": [48, 108, 109, 110, 111, 112, 113, 114, 134, 160, 162, 163, 298, 311, 396, 397, 398, 399, 400, 401, 402, 598, 604, 605, 606, 612, 613], "ai_readondemand_async": [48, 49, 71, 108, 109, 110, 111, 112, 113, 114, 134, 135, 160, 161, 162, 163, 298, 299, 311, 312, 569, 594, 598, 600, 604, 605, 606, 612, 613], "ai_on_demand_onc": [49, 71, 112, 135, 161, 299, 312, 361, 375, 400, 419, 441, 555, 564], "dio_loopback_pin": [57, 118, 137, 168, 189, 210, 231, 247, 271, 365, 406, 421, 448, 465, 482, 499, 511, 531], "involv": [57, 58, 113, 114, 118, 119, 137, 138, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 401, 402, 406, 407, 421, 422, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532], "do": [57, 58, 118, 119, 137, 138, 145, 146, 148, 168, 169, 177, 189, 190, 197, 198, 200, 210, 211, 218, 219, 221, 231, 232, 239, 247, 248, 255, 256, 258, 271, 272, 279, 280, 282, 365, 366, 406, 407, 421, 422, 429, 430, 432, 448, 449, 457, 465, 466, 473, 474, 476, 482, 483, 490, 491, 493, 499, 500, 507, 511, 512, 519, 520, 522, 531, 532, 539, 540, 542, 573, 583, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "send": [57, 58, 113, 114, 118, 119, 137, 138, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 401, 402, 406, 407, 421, 422, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 569, 579, 605, 606, 607, 608, 610, 611], "signal": [57, 58, 59, 60, 61, 62, 63, 88, 89, 90, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 144, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 189, 190, 191, 192, 193, 194, 196, 210, 211, 212, 213, 214, 215, 217, 231, 232, 233, 234, 235, 236, 237, 247, 248, 249, 250, 251, 252, 254, 271, 272, 273, 274, 275, 276, 278, 365, 366, 367, 368, 369, 370, 371, 384, 385, 386, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 428, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 465, 466, 467, 468, 469, 470, 472, 482, 483, 484, 485, 486, 487, 489, 499, 500, 501, 502, 503, 504, 505, 511, 512, 513, 514, 515, 516, 518, 531, 532, 533, 534, 535, 536, 538, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "di": [57, 58, 63, 118, 119, 137, 138, 144, 148, 168, 169, 175, 177, 189, 190, 196, 200, 210, 211, 217, 221, 231, 232, 237, 239, 247, 248, 254, 258, 271, 272, 278, 282, 365, 366, 371, 406, 407, 421, 422, 428, 432, 448, 449, 455, 457, 465, 466, 472, 476, 482, 483, 489, 493, 499, 500, 505, 507, 511, 512, 518, 522, 531, 532, 538, 542, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "receiv": [57, 58, 113, 114, 118, 119, 137, 138, 155, 162, 163, 168, 169, 184, 189, 190, 207, 210, 211, 228, 231, 232, 247, 248, 268, 271, 272, 292, 365, 366, 401, 402, 406, 407, 421, 422, 435, 442, 443, 448, 449, 460, 465, 466, 479, 482, 483, 496, 499, 500, 511, 512, 528, 531, 532, 548, 605, 606, 607, 608, 610, 611, 616], "singl": [57, 58, 113, 114, 118, 119, 137, 138, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 401, 402, 406, 407, 421, 422, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 591, 597, 604], "commonli": [57, 58, 113, 114, 118, 119, 137, 138, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 401, 402, 406, 407, 421, 422, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532], "known": [57, 58, 118, 119, 137, 138, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 406, 407, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532], "illustr": [57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 365, 366, 367, 368, 369, 370, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536], "requir": [57, 58, 59, 60, 61, 62, 113, 114, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 162, 163, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 365, 366, 367, 368, 369, 370, 401, 402, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 442, 443, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536, 614], "lastli": [57, 58, 59, 60, 61, 62, 113, 114, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 162, 163, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 210, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 271, 272, 273, 274, 275, 276, 365, 366, 367, 368, 369, 370, 401, 402, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 442, 443, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 482, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 536], "do_port": [57, 58, 80, 118, 119, 120, 121, 122, 123, 137, 138, 145, 146, 168, 169, 189, 190, 197, 198, 210, 211, 218, 219, 231, 232, 247, 248, 255, 256, 271, 272, 279, 280, 365, 366, 380, 406, 407, 408, 409, 410, 411, 421, 422, 429, 430, 448, 449, 465, 466, 473, 474, 482, 483, 490, 491, 499, 500, 511, 512, 519, 520, 531, 532, 539, 540, 573, 583, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_port": [57, 58, 118, 119, 137, 138, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 406, 407, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_pin": [57, 118, 137, 168, 189, 210, 231, 247, 271, 365, 406, 421, 448, 465, 482, 499, 511, 531], "di_pin": [57, 118, 137, 168, 189, 210, 231, 247, 271, 365, 406, 421, 448, 465, 482, 499, 511, 531], "6": [57, 101, 102, 118, 119, 120, 121, 122, 123, 137, 168, 189, 210, 231, 247, 271, 285, 286, 365, 393, 394, 406, 407, 408, 409, 410, 411, 421, 448, 465, 482, 499, 511, 531, 545, 546, 569, 571, 579, 581, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617], "digit": [57, 58, 59, 60, 61, 62, 80, 89, 90, 113, 114, 116, 117, 121, 137, 138, 139, 140, 141, 142, 145, 146, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 197, 198, 210, 211, 212, 213, 214, 215, 218, 219, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 255, 256, 271, 272, 273, 274, 275, 276, 279, 280, 365, 366, 367, 368, 369, 370, 380, 385, 386, 401, 402, 404, 405, 408, 409, 421, 422, 423, 424, 425, 426, 429, 430, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 473, 474, 482, 483, 484, 485, 486, 487, 490, 491, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 519, 520, 531, 532, 533, 534, 535, 536, 539, 540, 571, 573, 581, 583, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 614], "output": [57, 58, 59, 60, 61, 62, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 145, 146, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 197, 198, 210, 211, 212, 213, 214, 215, 218, 219, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 255, 256, 271, 272, 273, 274, 275, 276, 279, 280, 365, 366, 367, 368, 369, 370, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 429, 430, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 473, 474, 482, 483, 484, 485, 486, 487, 490, 491, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 519, 520, 531, 532, 533, 534, 535, 536, 539, 540, 570, 571, 573, 580, 581, 583, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 614, 616], "do_openpins_async": [57, 59, 61, 137, 139, 141, 145, 146, 168, 170, 172, 189, 191, 193, 197, 198, 210, 212, 214, 218, 219, 231, 233, 235, 247, 249, 251, 255, 256, 271, 273, 275, 279, 280, 573, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "high": [57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 145, 146, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 197, 198, 210, 211, 212, 213, 214, 215, 218, 219, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 255, 256, 271, 272, 273, 274, 275, 276, 279, 280, 365, 366, 367, 368, 369, 370, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 429, 430, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 473, 474, 482, 483, 484, 485, 486, 487, 490, 491, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 519, 520, 531, 532, 533, 534, 535, 536, 539, 540, 573, 583, 596, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 614, 617], "low": [57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 145, 146, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 197, 198, 210, 211, 212, 213, 214, 215, 218, 219, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 255, 256, 271, 272, 273, 274, 275, 276, 279, 280, 365, 366, 367, 368, 369, 370, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 429, 430, 448, 449, 450, 451, 452, 453, 465, 466, 467, 468, 469, 470, 473, 474, 482, 483, 484, 485, 486, 487, 490, 491, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 519, 520, 531, 532, 533, 534, 535, 536, 539, 540, 573, 583, 596, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 617], "do_writepins_async": [57, 61, 118, 122, 137, 141, 145, 146, 168, 172, 189, 193, 197, 198, 210, 214, 218, 219, 231, 235, 247, 251, 255, 256, 271, 275, 279, 280, 573, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "iutput": [57, 137, 168, 189, 210, 231, 247, 271, 365, 421, 448, 465, 482, 499, 511, 531], "di_openpins_async": [57, 137, 168, 189, 210, 231, 247, 271, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "state": [57, 58, 59, 60, 80, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 168, 169, 170, 171, 189, 190, 191, 192, 210, 211, 212, 213, 231, 232, 233, 234, 247, 248, 249, 250, 271, 272, 273, 274, 365, 366, 367, 368, 380, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 448, 449, 450, 451, 465, 466, 467, 468, 482, 483, 484, 485, 499, 500, 501, 502, 511, 512, 513, 514, 531, 532, 533, 534, 571, 581, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "state_list": [57, 58, 118, 119, 137, 138, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 406, 407, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_readpins_async": [57, 118, 137, 168, 189, 210, 231, 247, 271, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_closepins_async": [57, 59, 61, 137, 139, 141, 145, 146, 168, 170, 172, 189, 191, 193, 197, 198, 210, 212, 214, 218, 219, 231, 233, 235, 247, 249, 251, 255, 256, 271, 273, 275, 279, 280, 573, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "input": [57, 58, 137, 138, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616], "di_closepins_async": [57, 137, 168, 189, 210, 231, 247, 271, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_loopback_port": [58, 119, 138, 169, 190, 211, 232, 248, 272, 366, 407, 422, 449, 466, 483, 500, 512, 532], "pin": [58, 63, 89, 90, 113, 114, 116, 117, 119, 138, 144, 145, 146, 162, 163, 165, 166, 169, 175, 190, 196, 197, 198, 211, 217, 218, 219, 232, 237, 248, 254, 255, 256, 272, 278, 279, 280, 366, 371, 385, 386, 401, 402, 404, 405, 407, 422, 428, 429, 430, 442, 443, 445, 446, 449, 455, 466, 472, 473, 474, 483, 489, 490, 491, 500, 505, 512, 518, 519, 520, 532, 538, 539, 540, 573, 583, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "do_openport_async": [58, 60, 62, 138, 140, 142, 169, 171, 173, 190, 192, 194, 211, 213, 215, 232, 234, 236, 248, 250, 252, 272, 274, 276, 571, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_openport_async": [58, 138, 169, 190, 211, 232, 248, 272, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_writeport_async": [58, 62, 80, 119, 123, 138, 142, 169, 173, 190, 194, 211, 215, 232, 236, 248, 252, 272, 276, 571, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_readport_async": [58, 119, 138, 169, 190, 211, 232, 248, 272, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_closeport_async": [58, 60, 62, 138, 140, 142, 169, 171, 173, 190, 192, 194, 211, 213, 215, 232, 234, 236, 248, 250, 252, 272, 274, 276, 571, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_closeport_async": [58, 138, 169, 190, 211, 232, 248, 272, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio": [59, 60, 61, 62, 120, 121, 122, 123, 139, 140, 141, 142, 145, 146, 170, 171, 172, 173, 191, 192, 193, 194, 197, 198, 212, 213, 214, 215, 218, 219, 233, 234, 235, 236, 249, 250, 251, 252, 255, 256, 273, 274, 275, 276, 279, 280, 367, 368, 369, 370, 408, 409, 410, 411, 423, 424, 425, 426, 429, 430, 450, 451, 452, 453, 467, 468, 469, 470, 473, 474, 484, 485, 486, 487, 490, 491, 501, 502, 503, 504, 513, 514, 515, 516, 519, 520, 533, 534, 535, 536, 539, 540, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "do_blinky_pin": [59, 120, 139, 170, 191, 212, 233, 249, 273, 367, 408, 423, 450, 467, 484, 501, 513, 533], "loop": [59, 60, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 591, 592], "voltag": [59, 60, 61, 62, 88, 120, 121, 122, 123, 139, 140, 141, 142, 164, 170, 171, 172, 173, 191, 192, 193, 194, 212, 213, 214, 215, 233, 234, 235, 236, 249, 250, 251, 252, 273, 274, 275, 276, 367, 368, 369, 370, 384, 408, 409, 410, 411, 423, 424, 425, 426, 444, 450, 451, 452, 453, 467, 468, 469, 470, 484, 485, 486, 487, 501, 502, 503, 504, 513, 514, 515, 516, 533, 534, 535, 536, 569, 570, 579, 580, 598, 602, 604, 606, 614, 617], "appli": [59, 60, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534], "blink": [59, 60, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534], "effect": [59, 60, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534, 598, 602, 604, 605, 606, 612, 613], "pinindex": [59, 120, 139, 170, 191, 212, 233, 249, 273, 367, 408, 423, 450, 467, 484, 501, 513, 533], "toggl": [59, 60, 80, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 380, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_togglepins_async": [59, 120, 139, 170, 191, 212, 233, 249, 273, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "led": [59, 60, 61, 62, 120, 121, 139, 140, 141, 142, 170, 171, 172, 173, 191, 192, 193, 194, 212, 213, 214, 215, 233, 234, 235, 236, 249, 250, 251, 252, 273, 274, 275, 276, 367, 368, 369, 370, 408, 409, 423, 424, 425, 426, 450, 451, 452, 453, 467, 468, 469, 470, 484, 485, 486, 487, 501, 502, 503, 504, 513, 514, 515, 516, 533, 534, 535, 536, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "do_blinky_port": [60, 121, 140, 171, 192, 213, 234, 250, 274, 368, 409, 424, 451, 468, 485, 502, 514, 534], "do_toggleport_async": [60, 121, 140, 171, 192, 213, 234, 250, 274, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_write_pin": [61, 122, 141, 172, 193, 214, 235, 251, 275, 369, 410, 425, 452, 469, 486, 503, 515, 535], "written": [61, 62, 122, 123, 141, 142, 143, 145, 172, 173, 174, 193, 194, 195, 197, 214, 215, 216, 218, 235, 236, 251, 252, 253, 255, 275, 276, 277, 279, 369, 370, 410, 411, 425, 426, 427, 429, 452, 453, 454, 469, 470, 471, 473, 486, 487, 488, 490, 503, 504, 515, 516, 517, 519, 535, 536, 537, 539, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pin_index": [61, 122, 141, 172, 193, 214, 235, 251, 275, 369, 410, 425, 452, 469, 486, 503, 515, 535], "do_write_port": [62, 123, 142, 173, 194, 215, 236, 252, 276, 370, 411, 426, 453, 470, 487, 504, 516, 536], "pwm_gener": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538], "should": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 598, 600, 602, 604, 605, 606, 607, 612, 613], "frequenc": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611, 617], "duti": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611], "cycl": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611], "so": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538], "can": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "proper": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538], "By": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538], "want": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "could": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 603, 610, 611], "duty_cycl": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611], "50": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538], "sys_getdriverinfo": [63, 136, 144, 167, 175, 188, 196, 209, 217, 230, 237, 246, 254, 270, 278, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 585, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pwm_open_async": [63, 144, 175, 196, 217, 237, 254, 278, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_setfrequency_async": [63, 144, 175, 196, 217, 237, 254, 278, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_setdutycycle_async": [63, 144, 175, 196, 217, 237, 254, 278, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_start_async": [63, 144, 175, 196, 217, 237, 254, 278, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_stop_async": [63, 144, 175, 196, 217, 237, 254, 278, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_close_async": [63, 144, 175, 196, 217, 237, 254, 278, 594, 599, 605, 606, 607, 608, 609, 610, 611], "ai24bit": [71, 375], "relay_read_count": [79, 379], "index": [79, 379, 591, 592, 596, 597, 601, 604, 607, 616, 617], "relay_open_async": [79, 80, 594, 601], "relay_read_async": [79, 594, 601], "relay_close_async": [79, 80, 594, 601], "relay_set_channel": [80, 380], "valu": [80, 108, 109, 110, 111, 112, 113, 114, 143, 145, 162, 163, 174, 195, 197, 216, 218, 253, 255, 277, 279, 380, 396, 397, 398, 399, 400, 401, 402, 427, 429, 442, 443, 454, 471, 473, 488, 490, 517, 519, 537, 539, 569, 570, 573, 579, 580, 583, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618], "ao_waveform_gen": [88, 115, 164, 384, 403, 444], "number_of_sampl": [88, 164, 384, 444], "form_mod": [88, 164, 384, 444], "dc": [88, 164, 384, 444, 602, 604, 606, 617], "retangular": [88, 164, 384, 444, 602, 604, 606], "triangular": [88, 164, 384, 444, 602, 604, 606, 617], "sine": [88, 164, 384, 444, 602, 604, 606, 617], "amplitud": [88, 164, 384, 444, 602, 604, 606], "offset": [88, 164, 384, 444, 596, 597, 602, 604, 606, 612], "freq_0": [88, 164, 384, 444], "freq_1": [88, 164, 384, 444], "ao_open_async": [88, 89, 90, 113, 114, 116, 117, 162, 163, 164, 165, 166, 570, 594, 602, 604, 606], "ao_setmode_async": [88, 164, 594, 602, 604, 606], "10k": [88, 164, 384, 444], "hz": [88, 164, 384, 444, 598, 599, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "ao_setsamplingrate_async": [88, 164, 594, 602, 604, 606], "numsampl": [88, 164, 384, 444, 569, 579], "ao_setnumsamples_async": [88, 164, 594, 602, 604, 606], "ao_setnumsampl": [88, 164, 384, 444, 594, 602, 604, 606], "ao_setenablechannels_async": [88, 164, 594, 602, 604, 606], "form": [88, 164, 384, 444, 602, 604, 606, 614, 616], "ao_setform_async": [88, 164, 594, 602, 604, 606], "ao_setformparam_async": [88, 164, 594, 602, 604, 606], "info": [88, 118, 119, 120, 121, 122, 123, 164, 384, 406, 407, 408, 409, 410, 411, 444, 569, 579, 589, 590, 591, 592, 602, 604, 606], "ao_openstreaming_async": [88, 164, 594, 602, 604, 606], "ao_startstreaming_async": [88, 164, 594, 602, 604, 606], "ao_closestreaming_async": [88, 164, 594, 602, 604, 606], "ao_close_async": [88, 89, 90, 113, 114, 116, 117, 162, 163, 164, 165, 166, 570, 594, 602, 604, 606], "ao_write_all_channel": [89, 116, 165, 385, 404, 445], "simultan": [89, 113, 116, 162, 165, 385, 401, 404, 442, 445, 570, 580, 598, 602, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614], "5v": [89, 113, 116, 162, 165, 385, 401, 404, 442, 445, 604, 614], "3v": [89, 113, 116, 162, 165, 385, 401, 404, 442, 445, 605, 606, 607, 608, 610, 611, 614], "2v": [89, 113, 116, 162, 165, 385, 401, 404, 442, 445], "0v": [89, 113, 116, 162, 165, 385, 401, 404, 442, 445], "ao_writeallchannels_async": [89, 113, 116, 162, 165, 570, 580, 594, 602, 604, 606], "ao_write_one_channel": [90, 117, 166, 386, 405, 446], "v": [90, 114, 117, 163, 166, 386, 402, 405, 443, 446, 569, 579], "ao_writeonechannel_async": [90, 114, 117, 163, 166, 594, 602, 604, 606], "temperature_tc": [101, 102, 103, 285, 286, 287, 393, 394, 395, 545, 546, 547], "tc_read_channel_data": [101, 285, 393, 545], "thermocoupl": [101, 102, 285, 286, 393, 394, 545, 546, 577, 587, 603, 610, 611, 614, 618], "show": [101, 102, 103, 143, 145, 146, 148, 155, 156, 174, 177, 184, 185, 186, 187, 195, 197, 198, 200, 207, 208, 216, 218, 219, 221, 228, 229, 239, 253, 255, 256, 258, 261, 262, 263, 268, 269, 277, 279, 280, 282, 285, 286, 287, 292, 293, 393, 394, 395, 427, 429, 430, 432, 435, 436, 454, 457, 460, 461, 462, 463, 471, 473, 474, 476, 479, 480, 488, 490, 491, 493, 496, 497, 507, 517, 519, 520, 522, 525, 526, 527, 528, 529, 537, 539, 540, 542, 545, 546, 547, 548, 549, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "thermal": [101, 102, 103, 261, 262, 263, 285, 286, 287, 393, 394, 395, 525, 526, 527, 545, 546, 547, 603, 610, 611, 612, 613, 616], "ch": [101, 102, 285, 286, 393, 394, 545, 546], "over_sampling_mod": [101, 102, 285, 286, 393, 394, 545, 546], "16": [101, 102, 145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 285, 286, 393, 394, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 545, 546, 572, 573, 582, 583, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617], "thermo_typ": [101, 102, 285, 286, 393, 394, 545, 546], "b": [101, 102, 285, 286, 393, 394, 545, 546, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617], "type": [101, 102, 285, 286, 393, 394, 545, 546, 576, 577, 586, 587, 596, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 616], "e": [101, 102, 285, 286, 393, 394, 545, 546, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617], "j": [101, 102, 285, 286, 393, 394, 545, 546, 569, 579, 603, 611, 614, 617], "k": [101, 102, 285, 286, 393, 394, 545, 546, 569, 579, 603, 611, 614, 617], "r": [101, 102, 285, 286, 393, 394, 545, 546, 603, 611, 614, 617], "thermo": [101, 102, 103, 285, 286, 287, 300, 313, 393, 394, 395, 545, 546, 547, 556, 565, 577, 587, 612, 613], "thermal_open_async": [101, 102, 103, 261, 262, 263, 285, 286, 287, 576, 577, 594, 603, 610, 611], "over": [101, 102, 285, 286, 393, 394, 545, 546, 577, 587, 603, 611], "thermal_setoversampling_async": [101, 102, 285, 286, 577, 594, 603, 611], "thermal_settype_async": [101, 102, 285, 286, 576, 577, 586, 594, 603, 610, 611], "500": [101, 102, 186, 187, 285, 286, 393, 394, 462, 463, 545, 546, 607], "m": [101, 102, 261, 262, 285, 286, 393, 394, 525, 526, 545, 546, 569, 579, 612], "oversampl": [101, 102, 285, 286, 393, 394, 545, 546, 577, 587, 603, 611], "thermal_readsensor_async": [101, 102, 261, 262, 285, 286, 576, 577, 594, 603, 610, 611], "sensor": [101, 102, 143, 174, 195, 216, 253, 261, 262, 277, 285, 286, 393, 394, 427, 454, 471, 488, 517, 525, 526, 537, 545, 546, 576, 577, 586, 587, 603, 610, 611, 612, 613, 614], "thermal_close_async": [101, 102, 103, 261, 262, 263, 285, 286, 287, 576, 577, 594, 603, 610, 611], "tc_read_channel_data_with_logg": [102, 286, 394, 546], "them": [102, 262, 286, 394, 526, 546, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "logger_writevalu": [102, 286, 394, 546, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "tc_read_channel_statu": [103, 287, 395, 547], "thermal_getstatus_async": [103, 263, 287, 594, 603, 610, 611], "If": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 596, 597, 598, 601, 602, 604, 605, 606, 607, 612, 613, 615], "invok": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "function": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 594, 614, 616], "sys_setaiomode_async": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "ai_enablecs_async": [108, 109, 110, 111, 112, 113, 114, 594, 598, 604, 605, 606, 612, 613], "subsequ": [108, 109, 110, 111, 112, 113, 114, 396, 397, 398, 399, 400, 401, 402], "displai": [108, 109, 110, 111, 112, 113, 114, 162, 163, 396, 397, 398, 399, 400, 401, 402, 442, 443], "follow": [108, 109, 110, 111, 112, 113, 114, 162, 163, 396, 397, 398, 399, 400, 401, 402, 442, 443], "cs0": [108, 109, 110, 111, 112, 113, 114, 396, 397, 398, 399, 400, 401, 402], "cs2": [108, 109, 110, 111, 112, 113, 114, 396, 397, 398, 399, 400, 401, 402], "sample0": [108, 109, 110, 111, 112, 113, 114, 396, 397, 398, 399, 400, 401, 402], "sample1": [108, 109, 110, 111, 112, 113, 114, 396, 397, 398, 399, 400, 401, 402], "samplen": [108, 109, 110, 111, 112, 113, 114, 396, 397, 398, 399, 400, 401, 402], "slot": [108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 618], "aio": [108, 109, 110, 111, 112, 116, 117, 396, 397, 398, 399, 400, 404, 405, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 618], "modul": [108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 612, 613, 614, 615, 618], "slot_mod": [108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411], "sys_getmode_async": [108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "aio_all_channels_loopback": [113, 162, 401, 442], "across": [113, 162, 401, 442], "ao": [113, 114, 162, 163, 401, 402, 442, 443, 591, 592, 602, 604, 606, 616, 618], "ai": [113, 114, 162, 163, 401, 402, 442, 443, 591, 592, 598, 600, 604, 605, 606, 612, 613, 616, 618], "The": [113, 114, 118, 119, 120, 121, 122, 123, 143, 162, 163, 174, 195, 216, 253, 277, 401, 402, 406, 407, 408, 409, 410, 411, 427, 442, 443, 454, 471, 488, 517, 537, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "ar": [113, 114, 118, 119, 120, 121, 122, 123, 162, 163, 401, 402, 406, 407, 408, 409, 410, 411, 442, 443, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 618], "wire": [113, 114, 162, 163, 401, 402, 442, 443, 610, 614], "initi": [113, 114, 162, 163, 401, 402, 442, 443, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 597, 604], "correspond": [113, 114, 162, 163, 401, 402, 442, 443, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "onc": [113, 114, 162, 163, 401, 402, 442, 443, 591, 592], "again": [113, 114, 148, 162, 163, 177, 200, 221, 239, 258, 282, 401, 402, 432, 442, 443, 457, 476, 493, 507, 522, 542], "aio_one_channel_loopback": [114, 163, 402, 443], "specif": [114, 163, 402, 443, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "vaul": [114, 163, 402, 443], "ha": [115, 385, 403, 404, 445, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615], "yet": [115, 385, 403, 404, 445], "sys_setdiomode_async": [118, 119, 120, 121, 122, 123, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "assign": [118, 119, 120, 121, 122, 123, 406, 407, 408, 409, 410, 411, 618], "dio_loadstartup_async": [118, 119, 120, 121, 122, 123, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "direct": [118, 119, 120, 121, 122, 123, 406, 407, 408, 409, 410, 411, 596, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 614, 616], "state_list_async": 118, "default": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "counter_read": [136, 167, 188, 209, 230, 246, 270, 420, 447, 464, 481, 498, 510, 530, 594, 605, 606, 607, 608, 609, 610, 611], "counter_open_async": [136, 167, 188, 209, 230, 246, 270, 594, 605, 606, 607, 608, 609, 610, 611], "counter_start_async": [136, 167, 188, 209, 230, 246, 270, 594, 605, 606, 607, 608, 609, 610, 611], "counter_read_async": [136, 167, 188, 209, 230, 246, 270, 594, 605, 606, 607, 608, 609, 610, 611], "counter_stop_async": [136, 167, 188, 209, 230, 246, 270, 594, 605, 606, 607, 608, 609, 610, 611], "counter_close_async": [136, 167, 188, 209, 230, 246, 270, 594, 605, 606, 607, 608, 609, 610, 611], "i2c_write_read": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "commun": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 605, 606, 607, 608, 610, 611], "master": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540], "24c08c": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "slave": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 605, 606, 607, 608, 610, 611], "interfac": [143, 145, 146, 155, 156, 174, 184, 185, 186, 187, 195, 197, 198, 207, 208, 216, 218, 219, 228, 229, 253, 255, 256, 268, 269, 277, 279, 280, 292, 293, 427, 429, 430, 435, 436, 454, 460, 461, 462, 463, 471, 473, 474, 479, 480, 488, 490, 491, 496, 497, 517, 519, 520, 528, 529, 537, 539, 540, 548, 549, 614], "some": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540], "byte": [143, 145, 146, 155, 156, 174, 184, 185, 186, 187, 195, 197, 198, 207, 208, 216, 218, 219, 228, 229, 253, 255, 256, 268, 269, 277, 279, 280, 292, 293, 427, 429, 430, 435, 436, 454, 460, 461, 462, 463, 471, 473, 474, 479, 480, 488, 490, 491, 496, 497, 517, 519, 520, 528, 529, 537, 539, 540, 548, 549, 572, 573, 578, 582, 583, 588, 605, 606, 607, 608, 610, 611], "address": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 572, 582, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 616], "eeprom": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 616], "have": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 598, 602, 604, 605, 606, 612, 613], "howev": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539], "expeci": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "wore": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "device_address": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "0x50": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "01010000": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "random": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539], "numpi": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 569, 579], "np": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 569, 579], "word_address": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537], "randint": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539], "256": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 605, 607, 608, 610, 611, 617], "take": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 618], "i2c_open_async": [143, 174, 195, 216, 253, 277, 572, 594, 605, 606, 607, 608, 610, 611], "clock": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537, 572, 582, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "standard": [143, 174, 187, 195, 216, 253, 277, 427, 454, 463, 471, 488, 517, 537, 605, 606, 607, 608, 610, 611, 617], "i2c_setclockrate_async": [143, 174, 195, 216, 253, 277, 572, 594, 605, 606, 607, 608, 610, 611], "via": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 605, 606, 607, 608, 610, 611], "wren": [143, 145, 146, 174, 195, 197, 198, 216, 218, 219, 253, 255, 256, 277, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583], "i2c_write_async": [143, 174, 195, 216, 253, 277, 572, 594, 605, 606, 607, 608, 610, 611], "0x": [143, 174, 195, 216, 253, 277, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539], "02x": [143, 145, 174, 195, 197, 216, 218, 253, 255, 277, 279, 427, 429, 454, 471, 473, 488, 490, 517, 519, 537, 539, 573, 583], "i2c_read_async": [143, 174, 195, 216, 253, 277, 572, 594, 605, 606, 607, 608, 610, 611], "i2c_close_async": [143, 174, 195, 216, 253, 277, 572, 594, 605, 606, 607, 608, 610, 611], "spi_read_and_writ": [145, 197, 218, 255, 279, 429, 473, 490, 519, 539], "25lc640": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540], "datas": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540], "bit": [145, 146, 155, 156, 184, 185, 197, 198, 207, 208, 218, 219, 228, 229, 255, 256, 268, 269, 279, 280, 292, 293, 429, 430, 435, 436, 460, 461, 473, 474, 479, 480, 490, 491, 496, 497, 519, 520, 528, 529, 539, 540, 548, 549, 578, 588, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616], "first_bit": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540], "msb": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 605, 607, 608, 610, 611, 617], "lsb": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 617], "prescal": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583, 605, 607, 608, 610, 611, 616, 617], "64": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 605, 607, 608, 610, 611, 617], "cpol": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 605, 607, 608, 610, 611, 617], "cpha": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 605, 607, 608, 610, 611, 617], "do_index": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583], "elif": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 569, 571, 572, 573, 575, 578, 579, 581, 582, 583, 585, 588], "addr": [145, 197, 218, 255, 279, 429, 473, 490, 519, 539], "0x02": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583, 612], "dummi": [145, 197, 218, 255, 279, 429, 473, 490, 519, 539], "0x01": [145, 197, 218, 255, 279, 294, 429, 473, 490, 519, 539, 550, 612], "0x03": [145, 197, 218, 255, 279, 429, 473, 490, 519, 539], "0x06": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583], "pin0": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "spi_open_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 573, 594, 605, 607, 608, 610, 611], "spi_setdatasize_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 594, 605, 607, 608, 610, 611], "spi_setfirstbit_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 594, 605, 607, 608, 610, 611], "spi_setprescaler_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 573, 594, 605, 607, 608, 610, 611], "spi_setmode_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 573, 594, 605, 607, 608, 610, 611], "spi_write_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 573, 594, 605, 607, 608, 610, 611], "0x00": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 612], "spi_readandwrite_async": [145, 197, 218, 255, 279, 573, 594, 605, 607, 608, 610, 611], "format": [145, 156, 185, 197, 208, 218, 229, 255, 269, 279, 293, 429, 436, 461, 473, 480, 490, 497, 519, 529, 539, 549, 569, 573, 579, 583, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "spi_close_async": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 573, 594, 605, 607, 608, 610, 611], "spi_writ": [146, 198, 219, 256, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 583, 594, 605, 607, 608, 610, 611], "0x55": [146, 198, 219, 256, 280, 430, 474, 491, 520, 540], "0x0002": [146, 198, 219, 256, 280, 430, 474, 491, 520, 540], "system_usb": [147, 148, 149, 150, 176, 177, 178, 179, 199, 200, 201, 202, 220, 221, 222, 223, 238, 239, 240, 241, 257, 258, 259, 260, 281, 282, 283, 284, 431, 432, 433, 434, 456, 457, 458, 459, 475, 476, 477, 478, 492, 493, 494, 495, 506, 507, 508, 509, 521, 522, 523, 524, 541, 542, 543, 544], "get_usb_info": [147, 176, 199, 220, 238, 257, 281, 431, 456, 475, 492, 506, 521, 541], "serial_num": [147, 176, 199, 220, 238, 257, 281, 431, 456, 475, 492, 506, 521, 541, 605, 606, 607, 608, 609, 610, 611], "sys_getserialnumber_async": [147, 176, 199, 220, 238, 257, 281, 575, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "get_pin_mod": [148, 177, 200, 221, 239, 258, 282, 432, 457, 476, 493, 507, 522, 542], "idl": [148, 177, 200, 221, 239, 258, 282, 432, 457, 476, 493, 507, 522, 542, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pinmod": [148, 177, 200, 221, 239, 258, 282, 432, 457, 476, 493, 507, 522, 542, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pin_mod": [148, 177, 200, 221, 239, 258, 282, 432, 457, 476, 493, 507, 522, 542, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_getpinmodeinport_async": [148, 177, 200, 221, 239, 258, 282, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "uart_read": [155, 184, 207, 228, 268, 292, 435, 460, 479, 496, 528, 548, 588, 594, 605, 606, 607, 608, 610, 611], "anoth": [155, 156, 184, 185, 186, 187, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 462, 463, 479, 480, 496, 497, 528, 529, 548, 549], "baudrat": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 578, 588], "9600": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549], "data_bit_mod": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549], "9": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 294, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 550, 605, 606, 607, 608, 610, 611, 612, 617], "parity_mod": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549], "none": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 328, 330, 354, 356, 362, 364, 372, 374, 376, 378, 381, 383, 387, 389, 390, 392, 412, 414, 431, 432, 434, 435, 436, 456, 457, 459, 460, 461, 475, 476, 478, 479, 480, 492, 493, 495, 496, 497, 506, 507, 509, 521, 522, 524, 528, 529, 541, 542, 544, 548, 549, 556, 557, 559, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617], "even": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 605, 606, 607, 608, 610, 611, 617], "pariti": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 578, 588, 605, 606, 607, 608, 610, 611, 616], "odd": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 605, 606, 607, 608, 610, 611, 617], "stop_bit_mod": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549], "read_byt": [155, 184, 207, 228, 268, 292, 435, 460, 479, 496, 528, 548, 578, 588], "uart_open_async": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 578, 594, 605, 606, 607, 608, 610, 611], "uart_setbaudrate_async": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 578, 594, 605, 606, 607, 608, 610, 611], "uart_setdatabit_async": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 578, 594, 605, 606, 607, 608, 610, 611], "uart_setparity_async": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 578, 594, 605, 606, 607, 608, 610, 611], "uart_setnumstopbit_async": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 578, 594, 605, 606, 607, 608, 610, 611], "informaion": [155, 184, 207, 228, 268, 292, 435, 460, 479, 496, 528, 548], "uart_read_async": [155, 184, 207, 228, 268, 292, 578, 594, 605, 606, 607, 608, 610, 611], "uart_close_async": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 578, 594, 605, 606, 607, 608, 610, 611], "uart_writ": [156, 185, 208, 229, 269, 293, 436, 461, 480, 497, 529, 549, 588, 594, 605, 606, 607, 608, 610, 611], "12345": [156, 185, 208, 229, 269, 293, 436, 461, 480, 497, 529, 549], "uart_write_async": [156, 185, 208, 229, 269, 293, 578, 594, 605, 606, 607, 608, 610, 611], "chungle": [156, 185, 208, 229, 269, 293, 436, 461, 480, 497, 529, 549], "peopl": [156, 185, 208, 229, 269, 293, 436, 461, 480, 497, 529, 549], "list": [156, 185, 208, 229, 269, 293, 436, 461, 480, 497, 529, 549, 569, 572, 573, 574, 579, 582, 583, 584, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "can_read": [186, 462, 594, 607], "125": [186, 187, 462, 463, 607, 617], "khz": [186, 187, 462, 463, 607, 617], "250": [186, 187, 462, 463, 607], "mhz": [186, 187, 462, 463, 607, 617], "can_open_async": [186, 187, 594, 607], "can_setspeed_async": [186, 187, 594, 607], "can_start_async": [186, 187, 594, 607], "frame": [186, 462, 605, 607, 608, 610, 611], "frame_list": [186, 462, 607], "can_read_async": [186, 594, 607], "01": [186, 429, 430, 462, 473, 474, 490, 491, 519, 520, 539, 540], "can_stop_async": [186, 187, 594, 607], "can_close_async": [186, 187, 594, 607], "can_writ": [187, 463, 594, 607], "can_length": [187, 463], "extend": [187, 463, 569, 579, 607, 617], "can_typ": [187, 463], "remot": [187, 463, 607, 617], "id": [187, 463, 607], "can_write_async": [187, 594, 607], "33": [187, 463], "22": [187, 463], "11": [187, 463, 607, 614], "88": [187, 463], "77": [187, 463], "55": [187, 463], "66": [187, 463], "sec": [187, 463, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "less": [187, 463], "than": [187, 463, 598, 604, 605, 606, 612, 613, 616], "temperature_rtd": [261, 262, 263, 525, 526, 527], "rtd_read_channel_data": [261, 525], "data0": [261, 262, 525, 526], "data1": [261, 262, 525, 526], "rtd_read_channel_data_with_logg": [262, 526], "logger_writelist": [262, 526, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "rtd_read_channel_statu": [263, 527], "ahrs_read": [294, 550], "three": [294, 550, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "estim": [294, 550, 612], "38": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "mask": [294, 550, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 612, 613], "theo_grav": [294, 550], "81": [294, 550, 612], "dt": [294, 550, 612], "003": [294, 550], "offset_z": [294, 550], "05": [294, 427, 429, 430, 454, 471, 473, 474, 488, 490, 491, 517, 519, 520, 537, 539, 540, 550, 569, 579], "ahrs_open_async": [294, 594, 612], "ahrs_setgeneral_async": [294, 594, 612], "ahrs_setgener": [294, 550, 594, 612], "ahrs_start_async": [294, 594, 612], "ahrs_list": [294, 550], "ahrs_readstreaming_async": [294, 594, 612], "x_esti": [294, 550], "y_esti": [294, 550], "z_est": 294, "ahrs_stop_async": [294, 594, 612], "ahrs_close_async": [294, 594, 612], "system_wifi": [300, 301, 302, 303, 313, 314, 315, 316, 556, 557, 558, 559, 565, 566, 567, 568], "get_wifi_daq_statu": [300, 313, 556, 565], "basic": [300, 313, 328, 354, 362, 372, 376, 381, 387, 390, 412, 556, 565], "rssi": [300, 313, 556, 565, 612, 613], "batteri": [300, 313, 556, 565, 612, 613], "wifi_readrssi_async": [300, 313, 594, 612, 613], "wifi_readbattery_async": [300, 313, 594, 612, 613], "wifi_readthermo_async": [300, 313, 594, 612, 613], "dbm": [300, 313, 556, 565, 612, 613], "mv": [300, 313, 556, 565, 612, 613], "bcst_enumeratenetworkdevic": [321, 584, 594, 595], "drive_rstencoderposi": [322, 323, 324, 326, 327, 594, 596], "drive_getmovestatu": [322, 324, 594, 596], "drive_readencoderposit": [322, 324, 594, 596], "drive_getlimitstatu": [323, 594, 596], "daq": [328, 354, 362, 372, 376, 381, 387, 390, 412, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 598, 603, 604, 615, 616, 618], "net_getipaddrandsubmask": [328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "net_getmacaddr": [328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_reboot": [329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setrtc": [330, 356, 364, 374, 378, 383, 389, 392, 414, 434, 459, 478, 495, 509, 524, 544, 559, 568, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_getrtc": [330, 356, 364, 374, 378, 383, 389, 392, 414, 431, 434, 456, 459, 475, 478, 492, 495, 506, 509, 521, 524, 541, 544, 559, 568, 585, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "motion_open": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 594, 597, 604], "motion_opencfgfil": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 594, 597, 604], "opencfgfil": [331, 333, 337, 340, 343, 344, 345, 346, 349, 352, 353], "motion_loadcfgfil": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 594, 597, 604], "loadcfgfil": [331, 333, 337, 340, 343, 344, 345, 346, 349, 352, 353], "motion_cfgaxi": [331, 333, 337, 340, 343, 344, 345, 346, 349, 350, 352, 353, 594, 597, 604], "motion_cfglimit": [331, 332, 333, 337, 340, 343, 344, 345, 346, 349, 352, 353, 594, 597, 604], "motion_cfghom": [331, 344, 346, 349, 594, 597, 604], "motion_cfgaxismov": [331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 349, 350, 352, 353, 594, 597, 604], "motion_rstencoderposi": [331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 349, 352, 353, 594, 597, 604], "motion_enableservoon": [331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 349, 351, 352, 353, 594, 597, 604], "motion_startsingleaxismov": [331, 332, 333, 334, 335, 336, 337, 338, 340, 349, 352, 353, 594, 597, 604], "motion_getmovestatu": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 594, 597, 604], "motion_getlogicalposi": [331, 347, 349, 594, 597, 604], "motion_getencoderposi": [331, 349, 594, 597, 604], "motion_stop": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 352, 353, 594, 597, 604], "motion_enableservooff": [331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 349, 351, 352, 353, 594, 597, 604], "motion_clos": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 594, 597, 604], "motion_cfgjerkandaccelmod": [332, 338, 594, 597, 604], "motion_cfgalarm": [333, 594, 597, 604], "motion_cfgbreakpoint": [334, 594, 597, 604], "motion_enablebreakpoint": [334, 594, 597, 604], "motion_cfgcaptur": [335, 594, 597, 604], "motion_enablecaptur": [335, 594, 597, 604], "motion_readcapturepoint": [335, 594, 597, 604], "motion_cfginposi": [337, 594, 597, 604], "motion_cfgcircularinterpo": [338, 594, 597, 604], "motion_startcircularinterpo": [338, 594, 597, 604], "motion_cfg2axislinearinterpo": [339, 594, 597, 604], "motion_startlinearinterpo": [339, 342, 594, 597, 604], "motion_3axishronous_mov": 340, "motion_cfghelicalinterpo": [341, 594, 597, 604], "motion_starthelicalinterpo": [341, 594, 597, 604], "motion_cfg3axislinearinterpo": [342, 594, 597, 604], "cfglimit": 343, "motion_startmultiaxismov": [343, 594, 597, 604], "motion_cfgfindref": [344, 345, 346, 594, 597, 604], "motion_findref": [344, 345, 346, 594, 597, 604], "motion_getlimitstatu": [344, 346, 594, 597, 604], "motion_gethomestatu": [344, 346, 594, 597, 604], "motion_checkref": [344, 345, 346, 594, 597, 604], "motion_cfgencod": [345, 352, 353, 594, 597, 604], "motion_setlogicalposi": [347, 594, 597, 604], "motion_overrideaxisposi": [349, 594, 597, 604], "motion_savecfgfil": [350, 594, 597, 604], "motion_overrideaxisveloc": [352, 353, 594, 597, 604], "motion_overrideaxisaccel": [353, 594, 597, 604], "ai_open": [357, 358, 359, 360, 361, 375, 396, 397, 398, 399, 400, 401, 402, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 442, 443, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 579, 594, 598, 600, 604, 605, 606, 612, 613], "ai_setmod": [357, 358, 359, 360, 361, 396, 397, 398, 399, 400, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 579, 594, 598, 604, 605, 606, 612, 613], "ai_setsamplingr": [357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562, 579, 594, 598, 604, 605, 606, 612, 613], "ai_setnumsampl": [357, 396, 415, 437, 551, 560, 579, 594, 598, 604, 605, 606, 612, 613], "ai_start": [357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562, 579, 594, 598, 604, 605, 606, 612, 613], "ai_readstream": [357, 358, 359, 396, 397, 398, 399, 400, 401, 402, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562, 579, 594, 598, 604, 605, 606, 612, 613], "ai_stop": [357, 358, 359, 396, 397, 398, 415, 416, 417, 437, 438, 439, 551, 552, 553, 560, 561, 562, 579, 594, 598, 604, 605, 606, 612, 613], "ai_clos": [357, 358, 359, 360, 361, 375, 396, 397, 398, 399, 400, 401, 402, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 442, 443, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 579, 594, 598, 600, 604, 605, 606, 612, 613], "ai_readondemand": [360, 361, 375, 396, 397, 398, 399, 400, 401, 402, 418, 419, 440, 441, 442, 443, 554, 555, 563, 564, 579, 594, 598, 600, 604, 605, 606, 612, 613], "do_openpin": [365, 367, 369, 421, 423, 425, 429, 430, 448, 450, 452, 465, 467, 469, 473, 474, 482, 484, 486, 490, 491, 499, 501, 503, 511, 513, 515, 519, 520, 531, 533, 535, 539, 540, 583, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_writepin": [365, 369, 406, 410, 421, 425, 429, 430, 448, 452, 465, 469, 473, 474, 482, 486, 490, 491, 499, 503, 511, 515, 519, 520, 531, 535, 539, 540, 583, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_openpin": [365, 421, 448, 465, 482, 499, 511, 531, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_readpin": [365, 406, 421, 448, 465, 482, 499, 511, 531, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_closepin": [365, 367, 369, 421, 423, 425, 429, 430, 448, 450, 452, 465, 467, 469, 473, 474, 482, 484, 486, 490, 491, 499, 501, 503, 511, 513, 515, 519, 520, 531, 533, 535, 539, 540, 583, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_closepin": [365, 421, 448, 465, 482, 499, 511, 531, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_openport": [366, 368, 370, 422, 424, 426, 449, 451, 453, 466, 468, 470, 483, 485, 487, 500, 502, 504, 512, 514, 516, 532, 534, 536, 581, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_openport": [366, 422, 449, 466, 483, 500, 512, 532, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_writeport": [366, 370, 380, 407, 411, 422, 426, 449, 453, 466, 470, 483, 487, 500, 504, 512, 516, 532, 536, 581, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_readport": [366, 407, 422, 449, 466, 483, 500, 512, 532, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_closeport": [366, 368, 370, 422, 424, 426, 449, 451, 453, 466, 468, 470, 483, 485, 487, 500, 502, 504, 512, 514, 516, 532, 534, 536, 581, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_closeport": [366, 422, 449, 466, 483, 500, 512, 532, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_togglepin": [367, 408, 423, 450, 467, 484, 501, 513, 533, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_toggleport": [368, 409, 424, 451, 468, 485, 502, 514, 534, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "pwm_open": [371, 428, 455, 472, 489, 505, 518, 538, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_setfrequ": [371, 428, 455, 472, 489, 505, 518, 538, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_setdutycycl": [371, 428, 455, 472, 489, 505, 518, 538, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_start": [371, 428, 455, 472, 489, 505, 518, 538, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_stop": [371, 428, 455, 472, 489, 505, 518, 538, 594, 599, 605, 606, 607, 608, 609, 610, 611], "pwm_close": [371, 428, 455, 472, 489, 505, 518, 538, 594, 599, 605, 606, 607, 608, 609, 610, 611], "relay_open": [379, 380, 594, 601], "relay_read": [379, 594, 601], "relay_clos": [379, 380, 594, 601], "ao_open": [384, 385, 386, 401, 402, 404, 405, 442, 443, 444, 445, 446, 580, 594, 602, 604, 606], "ao_setmod": [384, 444, 594, 602, 604, 606], "ao_setsamplingr": [384, 444, 594, 602, 604, 606], "ao_setenablechannel": [384, 444, 594, 602, 604, 606], "ao_setform": [384, 444, 594, 602, 604, 606], "ao_setformparam": [384, 444, 594, 602, 604, 606], "ao_openstream": [384, 444, 594, 602, 604, 606], "ao_startstream": [384, 444, 594, 602, 604, 606], "ao_closestream": [384, 444, 594, 602, 604, 606], "ao_clos": [384, 385, 386, 401, 402, 404, 405, 442, 443, 444, 445, 446, 580, 594, 602, 604, 606], "ao_writeallchannel": [385, 401, 404, 442, 445, 580, 594, 602, 604, 606], "ao_writeonechannel": [386, 402, 405, 443, 446, 594, 602, 604, 606], "thermal_open": [393, 394, 395, 525, 526, 527, 545, 546, 547, 586, 587, 594, 603, 610, 611], "thermal_setoversampl": [393, 394, 545, 546, 587, 594, 603, 611], "thermal_settyp": [393, 394, 545, 546, 586, 587, 594, 603, 610, 611], "thermal_readsensor": [393, 394, 525, 526, 545, 546, 586, 587, 594, 603, 610, 611], "thermal_clos": [393, 394, 395, 525, 526, 527, 545, 546, 547, 577, 586, 587, 594, 603, 610, 611], "thermal_getstatu": [395, 527, 547, 594, 603, 610, 611], "sys_setaiomod": [396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "ai_enablec": [396, 397, 398, 399, 400, 401, 402, 594, 598, 604, 605, 606, 612, 613], "sys_getmod": [396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setdiomod": [406, 407, 408, 409, 410, 411, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "dio_loadstartup": [406, 407, 408, 409, 410, 411, 594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "counter_open": [420, 447, 464, 481, 498, 510, 530, 594, 605, 606, 607, 608, 609, 610, 611], "counter_start": [420, 447, 464, 481, 498, 510, 530, 594, 605, 606, 607, 608, 609, 610, 611], "counter_stop": [420, 447, 464, 481, 498, 510, 530, 594, 605, 606, 607, 608, 609, 610, 611], "counter_clos": [420, 447, 464, 481, 498, 510, 530, 594, 605, 606, 607, 608, 609, 610, 611], "i2c_open": [427, 454, 471, 488, 517, 537, 582, 594, 605, 606, 607, 608, 610, 611], "i2c_setclockr": [427, 454, 471, 488, 517, 537, 582, 594, 605, 606, 607, 608, 610, 611], "i2c_writ": [427, 454, 471, 488, 517, 537, 582, 594, 605, 606, 607, 608, 610, 611], "pointer": [427, 454, 471, 488, 517, 537], "i2c_read": [427, 454, 471, 488, 517, 537, 582, 594, 605, 606, 607, 608, 610, 611], "i2c_clos": [427, 454, 471, 488, 517, 537, 582, 594, 605, 606, 607, 608, 610, 611], "spi_open": [429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 583, 594, 605, 607, 608, 610, 611], "spi_setdatas": [429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 594, 605, 607, 608, 610, 611], "spi_setfirstbit": [429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 594, 605, 607, 608, 610, 611], "spi_setprescal": [429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 583, 594, 605, 607, 608, 610, 611], "spi_setmod": [429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 583, 594, 605, 607, 608, 610, 611], "spi_readandwrit": [429, 473, 490, 519, 539, 583, 594, 605, 607, 608, 610, 611], "spi_clos": [429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 583, 594, 605, 607, 608, 610, 611], "sys_getserialnumb": [431, 456, 475, 492, 506, 521, 541, 585, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_getpinmodeinport": [432, 457, 476, 493, 507, 522, 542, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "uart_open": [435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 588, 594, 605, 606, 607, 608, 610, 611], "uart_setbaudr": [435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 588, 594, 605, 606, 607, 608, 610, 611], "uart_setdatabit": [435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 588, 594, 605, 606, 607, 608, 610, 611], "uart_setpar": [435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 588, 594, 605, 606, 607, 608, 610, 611], "uart_setnumstopbit": [435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 588, 594, 605, 606, 607, 608, 610, 611], "uart_clos": [435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 588, 594, 605, 606, 607, 608, 610, 611], "can_open": [462, 463, 594, 607], "can_setspe": [462, 463, 594, 607], "can_start": [462, 463, 594, 607], "can_stop": [462, 463, 594, 607], "can_clos": [462, 463, 594, 607], "ahrs_open": [550, 594, 612], "ahrs_start": [550, 594, 612], "ahrs_readstream": [550, 594, 612], "z_esti": 550, "ahrs_stop": [550, 594, 612], "ahrs_clos": [550, 594, 612], "wifi_readrssi": [556, 565, 594, 612, 613], "wifi_readbatteri": [556, 565, 594, 612, 613], "wifi_readthermo": [556, 565, 594, 612, 613], "example_analog_input": [569, 579], "o": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 594], "qasync": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "qeventloop": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "asyncslot": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "third": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "parti": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "matplotlib": [569, 579], "anim": [569, 579], "pyqt5": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "qtwidget": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "qtgui": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "qwidget": [569, 579], "qmessagebox": [569, 571, 575, 579, 581, 585], "ui_design": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "ui_example_gui_ai": [569, 579], "ui_mainwindow": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "class": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "matplotlibwidget": [569, 579], "__init__": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "self": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "parent": [569, 579], "super": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "mainwindow": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "qmainwindow": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "ui": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "setupui": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "materi": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "path": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 616], "file_path": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "dirnam": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "__file__": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "trademark_path": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "trademark": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "jpg": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "blue_led_path": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "led_blu": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "png": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "red_led_path": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "led_r": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "green_led_path": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "led_green": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "gray_led_path": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "led_grai": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "lb_trademark": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "setpixmap": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "qpixmap": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "lb_led": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "flag": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "connect_flag": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "declar": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "plot": [569, 579], "plot_y_min": [569, 579], "plot_y_max": [569, 579], "channel_list": [569, 579, 602, 604, 606], "append": [569, 570, 572, 573, 574, 579, 580, 582, 583, 584], "plot_total_tim": [569, 579], "callback": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "event": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "btn_connect": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "click": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "connectev": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "btn_disconnect": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "disconnectev": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "btn_aistart": [569, 579], "startaiev": [569, 579], "btn_aistop": [569, 579], "stopaiev": [569, 579], "lineedit_samplingr": [569, 579], "returnpress": [569, 579], "setsamplingrateev": [569, 579], "lineedit_numsampl": [569, 579], "setnumofsampleev": [569, 579], "combobox_aimod": [569, 579], "currentindexchang": [569, 579], "chooseaimodeev": [569, 579], "lineedit_yscalemax": [569, 579], "setyscalemaxev": [569, 579], "lineedit_yscalemin": [569, 579], "setyscaleminev": [569, 579], "plotiniti": [569, 579], "plotanim": [569, 579], "closeev": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "kill": [569, 579], "selecthandl": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "handle_idx": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "combobox_handl": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "currentindex": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "updateparam": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "serial_numb": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "gui": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "lineedit_ip": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "text": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "combobox_port": [569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588], "ai_sampling_r": [569, 579], "float": [569, 570, 579, 580, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "ai_n_sampl": [569, 579], "select": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 597, 604, 616], "param": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588], "error": [569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "loop_fct": 569, "600": [569, 579], "setdisplayplotnum": [569, 579], "checkconnectionstatu": [569, 571, 575, 579, 581, 585], "checkboxstatu": [569, 579], "x": [569, 579, 597, 604, 612, 613], "mplwidget": [569, 579], "canva": [569, 579], "ax": [569, 579, 597, 604, 614], "alpha": [569, 579], "rearrag": [569, 579], "accord": [569, 579], "amount": [569, 579, 598, 599, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "funcanim": [569, 579], "plotchart": [569, 579], "plotgetaxisdata": [569, 579], "interv": [569, 579], "repeat": [569, 579], "draw": [569, 579], "checkbox": [569, 579], "mainui": [569, 579], "window": [569, 579], "list_ch": [569, 579], "cb_ch0": [569, 579], "cb_ch1": [569, 579], "cb_ch2": [569, 579], "cb_ch3": [569, 579], "cb_ch4": [569, 579], "cb_ch5": [569, 579], "cb_ch6": [569, 579], "cb_ch7": [569, 579], "ischeck": [569, 571, 579, 581], "xmin": [569, 579], "xmax": [569, 579], "x_max": [569, 579], "x_min": [569, 579], "max": [569, 579, 605, 614], "x_list": [569, 579], "xtick": [569, 579], "dx": [569, 579], "tick": [569, 579], "arang": [569, 579], "yield": [569, 579, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "clear": [569, 574, 579, 584, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "marker": [569, 579], "markers": [569, 579], "err_xlist": [569, 579], "err_ylist": [569, 579], "y": [569, 579, 597, 604, 612, 613], "set_ylim": [569, 579], "set_xlim": [569, 579], "xtickslabel": [569, 579], "set_xtick": [569, 579], "new_tick": [569, 579], "plotconvertxtick": [569, 579], "set_xticklabel": [569, 579], "label": [569, 579], "set_xlabel": [569, 579], "fontsiz": [569, 579], "12": [569, 579, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "set_ylabel": [569, 579], "legend": [569, 579], "loc": [569, 579], "center": [569, 579, 589, 590, 597, 604], "left": [569, 579], "shadow": [569, 579], "bbox_to_anchor": [569, 579], "75": [569, 579], "facecolor": [569, 579], "f0f0f0": [569, 579], "grid": [569, 579], "color": [569, 574, 579, 584], "bac3d1": [569, 579], "linestyl": [569, 579], "linewidth": [569, 579], "2f": [569, 579], "num": [569, 579], "arrai": [569, 579], "yscalemax": [569, 579], "yscalemin": [569, 579], "messag": [569, 571, 575, 579, 581, 585, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "server": [569, 571, 575, 579, 581, 585], "app": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "qapplic": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "set_event_loop": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "wpc_main_ui": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "run_forev": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "example_analog_output": [570, 580], "analog": [570, 580, 602, 612, 613, 614], "ui_example_gui_ao": [570, 580], "devid": [570, 576, 577, 578, 580, 586, 587, 588], "fct_list": [570, 580], "hrztslider_cb0": [570, 580], "hrztslider_cb1": [570, 580], "hrztslider_cb2": [570, 580], "hrztslider_cb3": [570, 580], "hrztslider_cb4": [570, 580], "hrztslider_cb5": [570, 580], "hrztslider_cb6": [570, 580], "hrztslider_cb7": [570, 580], "obj_hrztslid": [570, 580], "getattr": [570, 571, 580, 581], "horizontalslid": [570, 580], "d": [570, 571, 580, 581, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 615, 618], "setrang": [570, 580], "setsinglestep": [570, 580], "valuechang": [570, 580], "btn_updat": [570, 580], "writeaovalu": [570, 580], "btn_setal": [570, 580], "setlineeditvalueev": [570, 580], "scaledvalu": [570, 580], "lineedit0": [570, 580], "settext": [570, 572, 573, 575, 576, 577, 578, 580, 582, 583, 585, 586, 587, 588], "lineedit1": [570, 580], "lineedit2": [570, 580], "lineedit3": [570, 580], "lineedit4": [570, 580], "lineedit5": [570, 580], "lineedit6": [570, 580], "lineedit7": [570, 580], "voltage_list": [570, 580], "obj_lineedit": [570, 580], "lineedit": [570, 580], "lineedit_setal": [570, 580], "example_digital_output": [571, 581], "ui_example_gui_do": [571, 581], "state_c": [571, 581], "255": [571, 581, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "switch_blue_path": [571, 581], "switch_blu": [571, 581], "switch_gray_path": [571, 581], "switch_grai": [571, 581], "convert": [571, 572, 573, 581, 582, 583], "backward": [571, 581], "slash": [571, 581], "replac": [571, 572, 573, 581, 582, 583], "obj_chbox_st": [571, 581], "checkbox_st": [571, 581], "statechang": [571, 581], "statedoev": [571, 581], "setstylesheet": [571, 574, 581, 584], "qcheckbox": [571, 581], "indic": [571, 581, 596, 597, 598, 604, 605, 606, 607, 612, 613, 616], "width": [571, 581, 597, 604], "60px": [571, 581], "height": [571, 581], "uncheck": [571, 581], "imag": [571, 581], "url": [571, 581], "calcul": [571, 581, 597, 604], "mcu": [571, 581], "example_i2c": [572, 582], "ui_example_gui_i2c": [572, 582], "btn_write": [572, 573, 578, 582, 583, 588], "writeev": [572, 573, 578, 582, 583, 588], "btn_read": [572, 573, 578, 582, 583, 588], "readev": [572, 573, 578, 582, 583, 588], "btn_set": [572, 573, 576, 577, 582, 583, 586, 587], "setclockev": [572, 582], "clock_mod": [572, 582], "combobox_clockr": [572, 582], "hex": [572, 573, 582, 583], "write_addr": [572, 582], "lineedit_writeaddr": [572, 582], "lineedit_writ": [572, 573, 578, 582, 583, 588], "write_data": [572, 573, 578, 582, 583, 588, 605, 606, 607, 608, 610, 611], "converstrtointlist": [572, 573, 582, 583], "byte_read": [572, 582], "lineedit_byteread": [572, 578, 582, 588], "read_addr": [572, 582], "lineedit_readaddr": [572, 582], "lineedit_read": [572, 573, 578, 582, 583, 588], "str_": [572, 573, 582, 583, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "split": [572, 573, 574, 582, 583, 584], "comma": [572, 573, 582, 583], "write_data_strlist": [572, 573, 582, 583], "write_data_int": [572, 573, 582, 583], "item": [572, 573, 582, 583], "example_spi": [573, 583], "ui_example_gui_spi": [573, 583], "setev": [573, 576, 577, 583, 586, 587], "combobox_mod": [573, 583], "combobox_prescal": [573, 583], "example_find_all_devic": [574, 584], "find": [574, 584, 591, 592, 596, 597, 604], "qtablewidget": [574, 584], "qtcore": [574, 584], "qt": [574, 584], "ui_example_gui_find_all_devic": [574, 584], "column_width": [574, 584], "160": [574, 584], "getcwd": [574, 584], "tabl": [574, 584], "initibroadcastt": [574, 584], "button": [574, 584], "btn_broadcast": [574, 584], "broadcastnetworkev": [574, 584], "broadcast_list": [574, 584], "column": [574, 584], "tablewidget_brst": [574, 584], "setcolumnwidth": [574, 584], "background": [574, 584], "217536": [574, 584], "loaddata": [574, 584], "row": [574, 584], "setrowcount": [574, 584], "setitem": [574, 584], "qtablewidgetitem": [574, 584], "firmware_v": [574, 584], "restoreoverridecursor": [574, 584], "add": [574, 584], "waitcursor": [574, 584], "setoverridecursor": [574, 584], "broadcast": [574, 584, 595], "broadcast_info": [574, 584], "length": [574, 584, 616], "device_amount": [574, 584], "model_vers": [574, 584], "str_list": [574, 584], "_": [574, 584], "example_get_device_info": [575, 585], "ui_example_gui_get_device_info": [575, 585], "btn_deviceinfo": [575, 585], "getdeviceinfoev": [575, 585], "sys_getipaddrandsubmask_async": [575, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_getmacaddr_async": [575, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "lineedit_sbk": [575, 585], "lineedit_serialnum": [575, 585], "lineedit_mac": [575, 585], "lineedit_model": [575, 585], "lineedit_vers": [575, 585], "lineedit_rtc": [575, 585], "tcp": [575, 585, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613, 614, 616], "example_rtd": [576, 586], "ui_example_gui_rtd": [576, 586], "btn_rtd": [576, 586], "rtdevent": [576, 586], "combobox_typ": [576, 577, 586, 587], "noisereject": [576, 577, 586, 587], "combobox_noisereject": [576, 577, 586, 587], "lineedit_sensor0": [576, 577, 586, 587], "lineedit_sensor1": [576, 577, 586, 587], "nois": 576, "filter": [576, 607, 616], "thermal_setnoisefilter_async": 576, "example_thermo": [577, 587], "ui_example_gui_thermocoupl": [577, 587], "btn_temp": [577, 587], "tempev": [577, 587], "combobox_oversampl": [577, 587], "example_uart": [578, 588], "ui_example_gui_uart": [578, 588], "lb_ledport": [578, 588], "btn_open": [578, 588], "openportev": [578, 588], "btn_close": [578, 588], "closeportev": [578, 588], "combobox_baudr": [578, 588], "currenttext": [578, 588], "databit": [578, 588], "combobox_databit": [578, 588], "combobox_par": [578, 588], "stopbit": [578, 588], "combobox_stopbit": [578, 588], "sy": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "ai_lock": 579, "lock": 579, "acquir": [579, 598, 604, 605, 606, 612, 613], "ai_stream_thread": 579, "aistreamthread": 579, "exit": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "exec_": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "sys_getipaddrandsubmask": [585, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_getmacaddr": [585, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "test": [589, 590, 597, 604], "panel": [589, 590], "finder": [589, 590, 594], "logger": [591, 592], "waveform": [591, 592], "loopback": [591, 592], "blinki": [591, 592], "hello": [591, 592], "tutori": 591, "multipl": [591, 597, 604], "drive": [591, 592, 596, 616, 618], "1axi": [591, 592], "posit": [591, 592, 596, 597, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617], "blend": [591, 592], "acceler": [591, 592, 596, 597, 604, 612, 613, 614, 616], "motion": [591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "logic": [591, 592, 596, 597, 604, 617], "config": [591, 592], "alarm": [591, 592, 596, 597, 604], "breakpoint": [591, 592, 597, 604, 616], "captur": [591, 592, 597, 604, 614, 616], "inposit": [591, 592, 597, 604], "2axi": [591, 592], "circular": [591, 592, 597, 604, 614], "interpo": [591, 592], "linear": [591, 592, 597, 604, 614], "3axi": [591, 592], "helic": [591, 592, 597, 604, 614], "pwm": [591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616], "relai": [591, 592, 601, 614, 616], "counter": [591, 592, 597, 601, 604, 605, 606, 607, 608, 609, 610, 611, 615, 616], "tc": [591, 592, 603, 610, 611, 618], "i2c": [591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "spi": [591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618], "uart": [591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 618], "rtd": [591, 592, 603, 610, 611, 618], "ahr": [591, 592, 612, 616, 618], "control": [593, 597, 614], "motion card": 593, "wifi": [593, 614, 615, 618], "descript": 594, "bcst_checkmacandreboot": [594, 595], "bcst_checkmacandreboot_async": [594, 595], "bcst_checkmacandsetip": [594, 595], "bcst_checkmacandsetip_async": [594, 595], "e3": [594, 618], "A": [594, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 618], "pinout": 594, "ahrs_reset": [594, 612], "ahrs_reset_async": [594, 612], "ai_getport": [594, 598, 600, 604, 605, 606, 612, 613], "net_getgatewai": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "net_getgateway_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "net_setipaddrandsubmask": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "net_setipaddrandsubmask_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_getgatewai": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_getgateway_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_rebootonbootload": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_rebootonbootloader_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setdimod": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setdimode_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setdomod": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setdomode_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setipaddrandsubmask": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_setipaddrandsubmask_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "sys_setidlemod": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setidlemode_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setmotionmod": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setmotionmode_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setslotmod": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setslotmode_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setswitchmod": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "sys_setswitchmode_async": [594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "wifi_getwifibandwidth": [594, 612, 613], "wifi_getwifibandwidth_async": [594, 612, 613], "wifi_getwificonfigur": [594, 612, 613], "wifi_getwificonfiguration_async": [594, 612, 613], "wifi_readacceler": [594, 612, 613], "wifi_readaccleration_async": [594, 612, 613], "wifi_setap": [594, 612, 613], "wifi_setap_async": [594, 612, 613], "wifi_setbandwidth": [594, 612, 613], "wifi_setbandwidth_async": [594, 612, 613], "f4": [594, 618], "ao_getenablechannel": [594, 602, 604, 606], "ao_getmod": [594, 602, 604, 606], "ao_getmode_async": [594, 602, 604, 606], "ao_getport": [594, 602, 604, 606], "ao_getst": [594, 602, 604, 606], "ao_getvalu": [594, 602, 604, 606], "ao_getvalues_async": [594, 602, 604, 606], "ao_pushtobuff": [594, 602, 604, 606], "dio_savestartup": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_savestartup_async": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_setportdi": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_setportdi_async": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_setportdo": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_setportdo_async": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_setportidl": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "dio_setportidle_async": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "di_getpinmap": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "do_getpinmap": [594, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "motion_cfg4axislinearinterpo": [594, 597, 604], "motion_cfg4axislinearinterpo_async": [594, 597, 604], "drive_cfgencod": [594, 596], "drive_cfgencoder_async": [594, 596], "drive_getalarmstatu": [594, 596], "drive_getalarmstatus_async": [594, 596], "drive_readcurrentveloc": [594, 596], "drive_readcurrentvelocity_async": [594, 596], "ethan": [594, 615, 618], "l": [594, 618], "thermal_getpinmap": [594, 603, 610, 611], "f1": [594, 615, 618], "i2c_getpinmap": [594, 605, 606, 607, 608, 610, 611], "i2c_reset": [594, 605, 606, 607, 608, 610, 611], "i2c_reset_async": [594, 605, 606, 607, 608, 610, 611], "i2c_setaddresss": [594, 605, 606, 607, 608, 610, 611], "i2c_setaddresssize_async": [594, 605, 606, 607, 608, 610, 611], "spi_getpinmap": [594, 605, 607, 608, 610, 611], "spi_read": [594, 605, 607, 608, 610, 611], "spi_read_async": [594, 605, 607, 608, 610, 611], "spi_reset": [594, 605, 607, 608, 610, 611], "spi_reset_async": [594, 605, 607, 608, 610, 611], "uart_getpinmap": [594, 605, 606, 607, 608, 610, 611], "uart_reset": [594, 605, 606, 607, 608, 610, 611], "uart_reset_async": [594, 605, 606, 607, 608, 610, 611], "uart_stopread": [594, 605, 606, 607, 608, 610, 611], "uart_stopreading_async": [594, 605, 606, 607, 608, 610, 611], "snk": 594, "aod": [594, 615, 618], "td": [594, 615, 618], "rd": [594, 615, 618], "cd": [594, 615, 618], "can_getport": [594, 607], "can_setrxfilterormask": [594, 607], "can_setrxfilterormask_async": [594, 607], "can_setrxfilteringon": [594, 607], "can_setrxfilteringon_async": [594, 607], "verbos": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "mac_addr": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "reboot": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "separ": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "colon": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "successfulli": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "otherwis": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "here": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "subnet_mask": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "period": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "dev_info_list": 595, "element": [595, 598, 604, 605, 606, 607, 612, 613], "contain": 595, "subnet": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "bool": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "whether": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "out": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "disonnect": 595, "motor": [596, 614, 618], "phase": [596, 602, 604, 605, 606, 607, 608, 610, 611, 614], "stepper": [596, 614, 616], "axis_dir": [596, 597, 604], "dirction": 596, "origin": 596, "invers": 596, "specifi": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "addit": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "deceler": [596, 597, 604, 617], "absolut": [596, 597, 604, 617], "rel": [596, 597, 599, 604, 605, 606, 607, 608, 609, 610, 611, 617], "count": [596, 597, 604, 605, 606, 607, 608, 609, 610, 611], "s2": [596, 597, 604], "encoder_dir": [596, 597, 604], "search_dir": [596, 597, 604], "search_typ": [596, 597, 604], "search": [596, 597, 604, 616], "percent": [596, 597, 604], "given": [596, 597, 598, 600, 602, 604, 605, 606, 607, 612, 613], "adjust": [596, 597, 604, 614], "locat": [596, 597, 604], "current": [596, 597, 600, 602, 604, 606, 614], "distanc": [596, 597, 604], "request": [596, 597, 604, 605, 606, 607, 608, 610, 611], "limit_polar": [596, 597, 604], "activ": [596, 597, 599, 604, 605, 606, 607, 608, 609, 610, 611, 617], "singal": [596, 597, 604], "instantan": [596, 597, 604], "accerler": [596, 597, 604], "new": [596, 597, 604], "new_veloc": 596, "veloicti": 596, "halt": [596, 597, 604, 617], "edsi": 596, "getewai": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "web": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613, 614], "gatewai": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "network_info": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "deprec": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "v1": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "Will": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "remov": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "ref": [596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "mani": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pin1": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pin7": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "disabl": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "adc": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "repres": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 618], "year": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "month": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "dai": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "hour": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "minut": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "charact": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "bootload": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616], "ce": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "31": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "24": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "23": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "59": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "success": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "switch": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "base": [597, 614], "modular": [597, 614], "inter": [597, 614], "filenam": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "clear_old": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "old": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "alread": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "exist": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "value_mat": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "value_list": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "object": [597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "destin": [597, 604], "vector": [597, 604], "axis4": [597, 604], "dest_posi4": [597, 604], "four": [597, 604], "en_alarm": [597, 604], "alarm_polar": [597, 604], "selector": [597, 604], "stepper_output": [597, 604], "servo_on_polar": [597, 604], "puls": [597, 604, 614, 616, 617], "clockwis": [597, 604], "counterclockwis": [597, 604], "dir": [597, 604, 617], "One": [597, 604, 617], "cw": [597, 604, 614, 617], "ccw": [597, 604, 614, 617], "breakpoint_polar": [597, 604], "start_posi": [597, 604], "capture_typ": [597, 604], "rise": [597, 604, 617], "edg": [597, 604, 617], "fall": [597, 604, 617], "respect": [597, 604], "finish": [597, 604], "encoder_z_polar": [597, 604], "z": [597, 604, 612, 613], "en_axis3": [597, 604], "en_axis4": [597, 604], "rotation_numb": [597, 604], "calculation_timeout": [597, 604], "pitch": [597, 604], "en_hom": [597, 604], "home_polar": [597, 604], "en_inposi": [597, 604], "inposi_polar": [597, 604], "accel_mod": [597, 604], "increas": [597, 604], "decreas": [597, 604], "per": [597, 604, 605, 606, 607, 608, 610, 611], "unit": [597, 604], "acceleration_mod": [597, 604], "trapezoid": [597, 604], "curv": [597, 604, 614], "sequenc": [597, 604], "en_break": [597, 604], "en_captur": [597, 604], "emcod": [597, 604], "axis_list": [597, 604], "multi": [597, 604, 614], "8ch": [598, 599, 600, 602, 606, 612, 613, 614], "volt": [598, 602, 604, 605, 606, 612, 613], "measur": [598, 604, 605, 606, 612, 613], "num_sampl": [598, 602, 604, 605, 606, 612, 613], "pc": [598, 604, 605, 606, 607, 612, 613], "stock": [598, 604, 605, 606, 607, 612, 613], "queue": [598, 604, 605, 606, 607, 612, 613, 616], "call": [598, 604, 605, 606, 607, 612, 613], "fewer": [598, 604, 605, 606, 612, 613], "expect": [598, 604, 605, 606, 612, 613], "ones": [598, 604, 605, 606, 612, 613], "expir": [598, 604, 605, 606, 612, 613], "arriv": [598, 604, 605, 606, 607, 612, 613], "becom": [598, 604, 605, 606, 607, 612, 613], "ineffect": [598, 604, 605, 606, 607, 612, 613], "alreadi": [598, 604, 605, 606, 607, 612, 613, 616], "sample_list": [598, 604, 605, 606, 612, 613], "equal": [598, 604, 605, 606, 612, 613], "been": [598, 602, 604, 605, 606, 612, 613], "made": [598, 602, 604, 605, 606, 612, 613], "24v": [599, 604, 609, 614], "6ch": [599, 601, 614], "enable_list": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "about": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "direction_list": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "when": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "intput": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "associ": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "pinmap": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "dictionari": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "kei": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "Its": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "integ": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "thei": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "p0": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "p1": [599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611], "pin6": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "pin5": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "pin4": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "pin3": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "pin2": [599, 601, 604, 605, 606, 607, 608, 609, 610, 611], "qualiti": [601, 614], "mechan": [601, 614], "relay_count": 601, "10v": [602, 612, 613, 614], "stand": [602, 604, 606, 618], "where": [602, 604, 606], "num_of_v": [602, 604, 606], "push": [602, 604, 606], "buffer": [602, 604, 606, 607], "todo": [602, 604, 606], "which": [602, 604, 606, 610], "accordingli": [602, 604, 606], "averag": [602, 604, 606], "7ch": [603, 614], "tupl": [603, 605, 606, 607, 608, 610, 611], "constitut": [603, 605, 606, 607, 608, 610, 611], "physic": [603, 605, 606, 607, 608, 610, 611], "thermal1": [603, 610, 611], "five": [603, 610, 611], "p2": [603, 605, 606, 607, 608, 610, 611], "thermal_port": [603, 610, 611], "circuit": [603, 610, 611], "fault": [603, 610, 611], "manual": [603, 610, 611], "temperatur": [603, 610, 611, 612, 613], "celsiu": [603, 610, 611, 612, 613], "type_": [603, 610, 611], "24ch": [604, 614], "12ch": [604, 609, 614], "ttl": [604, 614], "26ch": [605, 608, 614], "16khz": 605, "i2c1": [605, 606, 607, 608, 610, 611], "i2c2": [605, 606, 607, 608, 610, 611], "p3": [605, 606, 607, 608, 610, 611], "i2c_port": [605, 606, 607, 608, 610, 611], "read_address": [605, 606, 607, 608, 610, 611], "bytes_to_read": [605, 606, 607, 608, 610, 611], "i2c_data": [605, 606, 607, 608, 610, 611], "size": [605, 606, 607, 608, 610, 611, 616], "desir": [605, 606, 607, 608, 610, 611], "400000": [605, 606, 607, 608, 610, 611, 617], "plu": [605, 606, 607, 608, 610, 611, 617], "1000000": [605, 606, 607, 608, 610, 611, 617], "3400000": [605, 606, 607, 608, 610, 611, 617], "write_address": [605, 606, 607, 608, 610, 611], "transfer": [605, 606, 607, 608, 610, 611, 616], "spi1": [605, 607, 608, 610, 611, 617], "spi2": [605, 607, 608, 610, 611, 617], "spi_port": [605, 607, 608, 610, 611], "spi_data": [605, 607, 608, 610, 611], "maximum": [605, 607, 608, 610, 611, 614, 616], "32": [605, 607, 608, 610, 611, 617], "128": [605, 607, 608, 610, 611, 617], "uart1": [605, 606, 607, 608, 610, 611], "uart2": [605, 606, 607, 608, 610, 611], "uart_port": [605, 606, 607, 608, 610, 611], "uart_data": [605, 606, 607, 608, 610, 611], "baud_rat": [605, 606, 607, 608, 610, 611], "baud": [605, 606, 607, 608, 610, 611, 616], "16ch": [606, 614], "20ch": [607, 614], "num_fram": 607, "millisecond": 607, "canfram": 607, "give": 607, "identifi": 607, "extended_id": 607, "tell": 607, "id_": 607, "recept": 607, "29": 607, "ignor": 607, "on_off": 607, "turn": 607, "speed_mod": 607, "dsnk": [609, 615, 618], "14ch": [609, 614], "2ch": [610, 611, 614], "pt": [610, 614], "21ch": [610, 611, 614], "built": [612, 614], "9dof": [612, 614], "imu": [612, 614], "postur": [612, 614], "est": [612, 614], "x1": 612, "y1": 612, "z1": 612, "graviti": 612, "z_offset": 612, "theoret": 612, "Near": 612, "surfac": 612, "earth": 612, "orient": 612, "rad": 612, "0x04": 612, "angular": 612, "0x08": 612, "0x0f": 612, "0b10101": 612, "bandwidth": [612, 613], "ht20": [612, 613], "ht40": [612, 613], "reconnect": [612, 613], "ap": [612, 613], "stai": [612, 613], "wifi_configur": [612, 613], "retri": [612, 613], "accleration_three_axi": [612, 613], "volatg": [612, 613], "level": [612, 613], "station": [612, 613], "port1": [612, 613], "port2": [612, 613], "1336": [612, 613], "photo": 614, "board": 614, "quick": 614, "amplifi": 614, "yaskawa": 614, "panason": 614, "mitsubishi": 614, "delta": 614, "etc": 614, "differenti": 614, "8mpp": 614, "abz": 614, "12mhz": 614, "break": 614, "microstep": 614, "resolut": 614, "51": 614, "revolut": 614, "power": 614, "suppli": 614, "36v": 614, "1a": 614, "peak": 614, "5a": 614, "fwd": 614, "rev": 614, "nomin": 614, "8mhz": 614, "stall": 614, "detect": 614, "intellig": 614, "energi": 614, "diagnost": 614, "ramp": 614, "smooth": 614, "idc": 614, "50p": 614, "multiplex": 614, "4x6": 614, "matrix": 614, "100m": 614, "cabl": 614, "20khz": 614, "npn": 614, "sink": 614, "20ma": 614, "1khz": 614, "4ch": 614, "NO": 614, "nc": 614, "2m": 614, "exclud": 614, "bounc": 614, "1m": [614, 617], "24vdc": 614, "settl": 614, "160m": 614, "1ch": 614, "400khz": 614, "full": 614, "bu": 614, "industri": 614, "isol": 614, "extern": [614, 616], "1mbp": 614, "v2": 614, "0b": 614, "10khz": 614, "802": 614, "g": 614, "ghz": 614, "ctr": 615, "seri": [615, 618], "570003": 616, "warn": 616, "occurr": 616, "overflow": 616, "570002": 616, "560001": 616, "520003": 616, "519000": 616, "librari": 616, "libusb": 616, "dll": 616, "look": 616, "7000": 616, "7001": 616, "7002": 616, "hal": 616, "7003": 616, "7004": 616, "7005": 616, "7006": 616, "7007": 616, "7008": 616, "7009": 616, "7010": 616, "7011": 616, "7012": 616, "7013": 616, "ol": 616, "7014": 616, "core": 616, "7015": 616, "7016": 616, "7017": 616, "7018": 616, "7019": 616, "7020": 616, "7021": 616, "7022": 616, "7023": 616, "7024": 616, "7025": 616, "udp": 616, "7026": 616, "7027": 616, "parser": 616, "7028": 616, "7601": 616, "occupi": 616, "7701": 616, "7702": 616, "7801": 616, "7901": 616, "ensur": 616, "restrict": 616, "8001": 616, "fail": 616, "plugin": 616, "8002": 616, "8007": 616, "lost": 616, "8008": 616, "packet": 616, "8009": 616, "invalid": 616, "8010": 616, "inconsist": 616, "between": 616, "8011": 616, "There": 616, "discrep": 616, "8012": 616, "incompat": 616, "8014": 616, "accept": 616, "8015": 616, "extens": 616, "8016": 616, "No": 616, "directori": 616, "8101": 616, "avali": 616, "8102": 616, "8201": 616, "8202": 616, "chip": 616, "8204": 616, "8206": 616, "8207": 616, "span": 616, "8208": 616, "8209": 616, "8210": 616, "8211": 616, "8212": 616, "8213": 616, "must": 616, "lower": 616, "13": 616, "8301": 616, "8304": 616, "8305": 616, "8306": 616, "8401": 616, "8403": 616, "8404": 616, "8501": 616, "8502": 616, "exce": 616, "8503": 616, "8504": 616, "8505": 616, "8506": 616, "8601": 616, "8602": 616, "8603": 616, "8604": 616, "8605": 616, "8606": 616, "8701": 616, "8702": 616, "8703": 616, "8793": 616, "tx": 616, "8794": 616, "prioriti": 616, "8803": 616, "8804": 616, "8805": 616, "8806": 616, "8807": 616, "8808": 616, "8809": 616, "8810": 616, "8811": 616, "8812": 616, "8813": 616, "8814": 616, "8815": 616, "8816": 616, "8904": 616, "rectangular": 617, "125k": 617, "250k": 617, "500k": 617, "bp": 617, "peripher": 617, "f_pclk2": 617, "72": 617, "f_pclk1": 617, "36": 617, "18": 617, "25": 617, "562": 617, "281": 617, "140": 617, "625": 617, "big": 617, "littl": 617, "remark": 618}, "objects": {"": [[593, 0, 0, "-", "pywpc"]], "pywpc": [[595, 1, 1, "", "DeviceFinder"], [596, 1, 1, "", "EDrive_ST"], [597, 1, 1, "", "EMotion"], [598, 1, 1, "", "EthanA"], [599, 1, 1, "", "EthanD"], [600, 1, 1, "", "EthanI"], [601, 1, 1, "", "EthanL"], [602, 1, 1, "", "EthanO"], [603, 1, 1, "", "EthanT"], [604, 1, 1, "", "STEM"], [605, 1, 1, "", "USBDAQF1AD"], [606, 1, 1, "", "USBDAQF1AOD"], [607, 1, 1, "", "USBDAQF1CD"], [608, 1, 1, "", "USBDAQF1D"], [609, 1, 1, "", "USBDAQF1DSNK"], [610, 1, 1, "", "USBDAQF1RD"], [611, 1, 1, "", "USBDAQF1TD"], [612, 1, 1, "", "WifiDAQE3A"], [613, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[595, 2, 1, "", "Bcst_checkMACAndReboot"], [595, 2, 1, "", "Bcst_checkMACAndReboot_async"], [595, 2, 1, "", "Bcst_checkMACAndSetIP"], [595, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [595, 2, 1, "", "Bcst_enumerateNetworkDevices"], [595, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [595, 2, 1, "", "Bcst_enumerateUSBDevices"], [595, 2, 1, "", "close"], [595, 2, 1, "", "connect"], [595, 2, 1, "", "disconnect"]], "pywpc.EDrive_ST": [[596, 2, 1, "", "Drive_cfgAxisDirection"], [596, 2, 1, "", "Drive_cfgAxisDirection_async"], [596, 2, 1, "", "Drive_cfgAxisMove"], [596, 2, 1, "", "Drive_cfgAxisMove_async"], [596, 2, 1, "", "Drive_cfgEncoder"], [596, 2, 1, "", "Drive_cfgEncoderDirection"], [596, 2, 1, "", "Drive_cfgEncoderDirection_async"], [596, 2, 1, "", "Drive_cfgEncoder_async"], [596, 2, 1, "", "Drive_cfgFindRef"], [596, 2, 1, "", "Drive_cfgFindRef_async"], [596, 2, 1, "", "Drive_cfgLimit"], [596, 2, 1, "", "Drive_cfgLimit_async"], [596, 2, 1, "", "Drive_close"], [596, 2, 1, "", "Drive_close_async"], [596, 2, 1, "", "Drive_enableServoOff"], [596, 2, 1, "", "Drive_enableServoOff_async"], [596, 2, 1, "", "Drive_enableServoOn"], [596, 2, 1, "", "Drive_enableServoOn_async"], [596, 2, 1, "", "Drive_findReference"], [596, 2, 1, "", "Drive_findReference_async"], [596, 2, 1, "", "Drive_getAlarmStatus"], [596, 2, 1, "", "Drive_getAlarmStatus_async"], [596, 2, 1, "", "Drive_getLimitStatus"], [596, 2, 1, "", "Drive_getLimitStatus_async"], [596, 2, 1, "", "Drive_getMoveStatus"], [596, 2, 1, "", "Drive_getMoveStatus_async"], [596, 2, 1, "", "Drive_open"], [596, 2, 1, "", "Drive_open_async"], [596, 2, 1, "", "Drive_overrideAccel"], [596, 2, 1, "", "Drive_overrideAccel_async"], [596, 2, 1, "", "Drive_overridePosition"], [596, 2, 1, "", "Drive_overridePosition_async"], [596, 2, 1, "", "Drive_overrideVelocity"], [596, 2, 1, "", "Drive_overrideVelocity_async"], [596, 2, 1, "", "Drive_readCurrentVelocity"], [596, 2, 1, "", "Drive_readCurrentVelocity_async"], [596, 2, 1, "", "Drive_readEncoderPosition"], [596, 2, 1, "", "Drive_readEncoderPosition_async"], [596, 2, 1, "", "Drive_rstEncoderPosi"], [596, 2, 1, "", "Drive_rstEncoderPosi_async"], [596, 2, 1, "", "Drive_start"], [596, 2, 1, "", "Drive_start_async"], [596, 2, 1, "", "Drive_stop"], [596, 2, 1, "", "Drive_stop_async"], [596, 2, 1, "", "Net_getGateway"], [596, 2, 1, "", "Net_getGateway_async"], [596, 2, 1, "", "Net_getIPAddrAndSubmask"], [596, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [596, 2, 1, "", "Net_getMACAddr"], [596, 2, 1, "", "Net_getMACAddr_async"], [596, 2, 1, "", "Net_setIPAddrAndSubmask"], [596, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [596, 2, 1, "", "Sys_getDriverInfo"], [596, 2, 1, "", "Sys_getDriverInfo_async"], [596, 2, 1, "", "Sys_getGateway"], [596, 2, 1, "", "Sys_getGateway_async"], [596, 2, 1, "", "Sys_getIPAddrAndSubmask"], [596, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [596, 2, 1, "", "Sys_getMACAddr"], [596, 2, 1, "", "Sys_getMACAddr_async"], [596, 2, 1, "", "Sys_getMode"], [596, 2, 1, "", "Sys_getMode_async"], [596, 2, 1, "", "Sys_getPinModeInPort"], [596, 2, 1, "", "Sys_getPinModeInPort_async"], [596, 2, 1, "", "Sys_getRTC"], [596, 2, 1, "", "Sys_getRTC_async"], [596, 2, 1, "", "Sys_getSerialNumber"], [596, 2, 1, "", "Sys_getSerialNumber_async"], [596, 2, 1, "", "Sys_reboot"], [596, 2, 1, "", "Sys_rebootOnBootloader"], [596, 2, 1, "", "Sys_rebootOnBootloader_async"], [596, 2, 1, "", "Sys_reboot_async"], [596, 2, 1, "", "Sys_setAIOMode"], [596, 2, 1, "", "Sys_setAIOMode_async"], [596, 2, 1, "", "Sys_setDIMode"], [596, 2, 1, "", "Sys_setDIMode_async"], [596, 2, 1, "", "Sys_setDIOMode"], [596, 2, 1, "", "Sys_setDIOMode_async"], [596, 2, 1, "", "Sys_setDOMode"], [596, 2, 1, "", "Sys_setDOMode_async"], [596, 2, 1, "", "Sys_setIPAddrAndSubmask"], [596, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [596, 2, 1, "", "Sys_setIdleMode"], [596, 2, 1, "", "Sys_setIdleMode_async"], [596, 2, 1, "", "Sys_setMotionMode"], [596, 2, 1, "", "Sys_setMotionMode_async"], [596, 2, 1, "", "Sys_setRTC"], [596, 2, 1, "", "Sys_setRTC_async"], [596, 2, 1, "", "Sys_setSlotMode"], [596, 2, 1, "", "Sys_setSlotMode_async"], [596, 2, 1, "", "Sys_setSwitchMode"], [596, 2, 1, "", "Sys_setSwitchMode_async"], [596, 2, 1, "", "close"], [596, 2, 1, "", "connect"], [596, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[597, 2, 1, "", "Logger_openFile"], [597, 2, 1, "", "Logger_write2DList"], [597, 2, 1, "", "Logger_writeHeader"], [597, 2, 1, "", "Logger_writeList"], [597, 2, 1, "", "Logger_writeValue"], [597, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [597, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [597, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [597, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [597, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [597, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [597, 2, 1, "", "Motion_cfgAlarm"], [597, 2, 1, "", "Motion_cfgAlarm_async"], [597, 2, 1, "", "Motion_cfgAxis"], [597, 2, 1, "", "Motion_cfgAxisMove"], [597, 2, 1, "", "Motion_cfgAxisMove_async"], [597, 2, 1, "", "Motion_cfgAxis_async"], [597, 2, 1, "", "Motion_cfgBreakPoint"], [597, 2, 1, "", "Motion_cfgBreakPoint_async"], [597, 2, 1, "", "Motion_cfgCapture"], [597, 2, 1, "", "Motion_cfgCapture_async"], [597, 2, 1, "", "Motion_cfgCircularInterpo"], [597, 2, 1, "", "Motion_cfgCircularInterpo_async"], [597, 2, 1, "", "Motion_cfgEncoder"], [597, 2, 1, "", "Motion_cfgEncoder_async"], [597, 2, 1, "", "Motion_cfgFindRef"], [597, 2, 1, "", "Motion_cfgFindRef_async"], [597, 2, 1, "", "Motion_cfgHelicalInterpo"], [597, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [597, 2, 1, "", "Motion_cfgHome"], [597, 2, 1, "", "Motion_cfgHome_async"], [597, 2, 1, "", "Motion_cfgInposi"], [597, 2, 1, "", "Motion_cfgInposi_async"], [597, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [597, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [597, 2, 1, "", "Motion_cfgLimit"], [597, 2, 1, "", "Motion_cfgLimit_async"], [597, 2, 1, "", "Motion_checkRef"], [597, 2, 1, "", "Motion_checkRef_async"], [597, 2, 1, "", "Motion_close"], [597, 2, 1, "", "Motion_close_async"], [597, 2, 1, "", "Motion_enableBreakPoint"], [597, 2, 1, "", "Motion_enableBreakPoint_async"], [597, 2, 1, "", "Motion_enableCapture"], [597, 2, 1, "", "Motion_enableCapture_async"], [597, 2, 1, "", "Motion_enableServoOff"], [597, 2, 1, "", "Motion_enableServoOff_async"], [597, 2, 1, "", "Motion_enableServoOn"], [597, 2, 1, "", "Motion_enableServoOn_async"], [597, 2, 1, "", "Motion_findRef"], [597, 2, 1, "", "Motion_findRef_async"], [597, 2, 1, "", "Motion_getEncoderPosi"], [597, 2, 1, "", "Motion_getEncoderPosi_async"], [597, 2, 1, "", "Motion_getHomeStatus"], [597, 2, 1, "", "Motion_getHomeStatus_async"], [597, 2, 1, "", "Motion_getLimitStatus"], [597, 2, 1, "", "Motion_getLimitStatus_async"], [597, 2, 1, "", "Motion_getLogicalPosi"], [597, 2, 1, "", "Motion_getLogicalPosi_async"], [597, 2, 1, "", "Motion_getMoveStatus"], [597, 2, 1, "", "Motion_getMoveStatus_async"], [597, 2, 1, "", "Motion_loadCfgFile"], [597, 2, 1, "", "Motion_loadCfgFile_async"], [597, 2, 1, "", "Motion_open"], [597, 2, 1, "", "Motion_openCfgFile"], [597, 2, 1, "", "Motion_openCfgFile_async"], [597, 2, 1, "", "Motion_open_async"], [597, 2, 1, "", "Motion_overrideAxisAccel"], [597, 2, 1, "", "Motion_overrideAxisAccel_async"], [597, 2, 1, "", "Motion_overrideAxisPosi"], [597, 2, 1, "", "Motion_overrideAxisPosi_async"], [597, 2, 1, "", "Motion_overrideAxisVelocity"], [597, 2, 1, "", "Motion_overrideAxisVelocity_async"], [597, 2, 1, "", "Motion_readCapturePoint"], [597, 2, 1, "", "Motion_readCapturePoint_async"], [597, 2, 1, "", "Motion_rstEncoderPosi"], [597, 2, 1, "", "Motion_rstEncoderPosi_async"], [597, 2, 1, "", "Motion_saveCfgFile"], [597, 2, 1, "", "Motion_saveCfgFile_async"], [597, 2, 1, "", "Motion_setLogicalPosi"], [597, 2, 1, "", "Motion_setLogicalPosi_async"], [597, 2, 1, "", "Motion_startCircularInterpo"], [597, 2, 1, "", "Motion_startCircularInterpo_async"], [597, 2, 1, "", "Motion_startHelicalInterpo"], [597, 2, 1, "", "Motion_startHelicalInterpo_async"], [597, 2, 1, "", "Motion_startLinearInterpo"], [597, 2, 1, "", "Motion_startLinearInterpo_async"], [597, 2, 1, "", "Motion_startMultiAxisMove"], [597, 2, 1, "", "Motion_startMultiAxisMove_async"], [597, 2, 1, "", "Motion_startSingleAxisMove"], [597, 2, 1, "", "Motion_startSingleAxisMove_async"], [597, 2, 1, "", "Motion_stop"], [597, 2, 1, "", "Motion_stop_async"], [597, 2, 1, "", "Net_getGateway"], [597, 2, 1, "", "Net_getGateway_async"], [597, 2, 1, "", "Net_getIPAddrAndSubmask"], [597, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [597, 2, 1, "", "Net_getMACAddr"], [597, 2, 1, "", "Net_getMACAddr_async"], [597, 2, 1, "", "Net_setIPAddrAndSubmask"], [597, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [597, 2, 1, "", "Sys_getDriverInfo"], [597, 2, 1, "", "Sys_getDriverInfo_async"], [597, 2, 1, "", "Sys_getGateway"], [597, 2, 1, "", "Sys_getGateway_async"], [597, 2, 1, "", "Sys_getIPAddrAndSubmask"], [597, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [597, 2, 1, "", "Sys_getMACAddr"], [597, 2, 1, "", "Sys_getMACAddr_async"], [597, 2, 1, "", "Sys_getMode"], [597, 2, 1, "", "Sys_getMode_async"], [597, 2, 1, "", "Sys_getPinModeInPort"], [597, 2, 1, "", "Sys_getPinModeInPort_async"], [597, 2, 1, "", "Sys_getRTC"], [597, 2, 1, "", "Sys_getRTC_async"], [597, 2, 1, "", "Sys_getSerialNumber"], [597, 2, 1, "", "Sys_getSerialNumber_async"], [597, 2, 1, "", "Sys_reboot"], [597, 2, 1, "", "Sys_rebootOnBootloader"], [597, 2, 1, "", "Sys_rebootOnBootloader_async"], [597, 2, 1, "", "Sys_reboot_async"], [597, 2, 1, "", "Sys_setAIOMode"], [597, 2, 1, "", "Sys_setAIOMode_async"], [597, 2, 1, "", "Sys_setDIMode"], [597, 2, 1, "", "Sys_setDIMode_async"], [597, 2, 1, "", "Sys_setDIOMode"], [597, 2, 1, "", "Sys_setDIOMode_async"], [597, 2, 1, "", "Sys_setDOMode"], [597, 2, 1, "", "Sys_setDOMode_async"], [597, 2, 1, "", "Sys_setIPAddrAndSubmask"], [597, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [597, 2, 1, "", "Sys_setIdleMode"], [597, 2, 1, "", "Sys_setIdleMode_async"], [597, 2, 1, "", "Sys_setMotionMode"], [597, 2, 1, "", "Sys_setMotionMode_async"], [597, 2, 1, "", "Sys_setRTC"], [597, 2, 1, "", "Sys_setRTC_async"], [597, 2, 1, "", "Sys_setSlotMode"], [597, 2, 1, "", "Sys_setSlotMode_async"], [597, 2, 1, "", "Sys_setSwitchMode"], [597, 2, 1, "", "Sys_setSwitchMode_async"], [597, 2, 1, "", "close"], [597, 2, 1, "", "connect"], [597, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[598, 2, 1, "", "AI_close"], [598, 2, 1, "", "AI_close_async"], [598, 2, 1, "", "AI_enableCS"], [598, 2, 1, "", "AI_enableCS_async"], [598, 2, 1, "", "AI_getPort"], [598, 2, 1, "", "AI_open"], [598, 2, 1, "", "AI_open_async"], [598, 2, 1, "", "AI_readOnDemand"], [598, 2, 1, "", "AI_readOnDemand_async"], [598, 2, 1, "", "AI_readStreaming"], [598, 2, 1, "", "AI_readStreaming_async"], [598, 2, 1, "", "AI_setMode"], [598, 2, 1, "", "AI_setMode_async"], [598, 2, 1, "", "AI_setNumSamples"], [598, 2, 1, "", "AI_setNumSamples_async"], [598, 2, 1, "", "AI_setSamplingRate"], [598, 2, 1, "", "AI_setSamplingRate_async"], [598, 2, 1, "", "AI_start"], [598, 2, 1, "", "AI_start_async"], [598, 2, 1, "", "AI_stop"], [598, 2, 1, "", "AI_stop_async"], [598, 2, 1, "", "Logger_openFile"], [598, 2, 1, "", "Logger_write2DList"], [598, 2, 1, "", "Logger_writeHeader"], [598, 2, 1, "", "Logger_writeList"], [598, 2, 1, "", "Logger_writeValue"], [598, 2, 1, "", "Net_getGateway"], [598, 2, 1, "", "Net_getGateway_async"], [598, 2, 1, "", "Net_getIPAddrAndSubmask"], [598, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [598, 2, 1, "", "Net_getMACAddr"], [598, 2, 1, "", "Net_getMACAddr_async"], [598, 2, 1, "", "Net_setIPAddrAndSubmask"], [598, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [598, 2, 1, "", "Sys_getDriverInfo"], [598, 2, 1, "", "Sys_getDriverInfo_async"], [598, 2, 1, "", "Sys_getGateway"], [598, 2, 1, "", "Sys_getGateway_async"], [598, 2, 1, "", "Sys_getIPAddrAndSubmask"], [598, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [598, 2, 1, "", "Sys_getMACAddr"], [598, 2, 1, "", "Sys_getMACAddr_async"], [598, 2, 1, "", "Sys_getMode"], [598, 2, 1, "", "Sys_getMode_async"], [598, 2, 1, "", "Sys_getPinModeInPort"], [598, 2, 1, "", "Sys_getPinModeInPort_async"], [598, 2, 1, "", "Sys_getRTC"], [598, 2, 1, "", "Sys_getRTC_async"], [598, 2, 1, "", "Sys_getSerialNumber"], [598, 2, 1, "", "Sys_getSerialNumber_async"], [598, 2, 1, "", "Sys_reboot"], [598, 2, 1, "", "Sys_rebootOnBootloader"], [598, 2, 1, "", "Sys_rebootOnBootloader_async"], [598, 2, 1, "", "Sys_reboot_async"], [598, 2, 1, "", "Sys_setAIOMode"], [598, 2, 1, "", "Sys_setAIOMode_async"], [598, 2, 1, "", "Sys_setDIMode"], [598, 2, 1, "", "Sys_setDIMode_async"], [598, 2, 1, "", "Sys_setDIOMode"], [598, 2, 1, "", "Sys_setDIOMode_async"], [598, 2, 1, "", "Sys_setDOMode"], [598, 2, 1, "", "Sys_setDOMode_async"], [598, 2, 1, "", "Sys_setIPAddrAndSubmask"], [598, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [598, 2, 1, "", "Sys_setIdleMode"], [598, 2, 1, "", "Sys_setIdleMode_async"], [598, 2, 1, "", "Sys_setMotionMode"], [598, 2, 1, "", "Sys_setMotionMode_async"], [598, 2, 1, "", "Sys_setRTC"], [598, 2, 1, "", "Sys_setRTC_async"], [598, 2, 1, "", "Sys_setSlotMode"], [598, 2, 1, "", "Sys_setSlotMode_async"], [598, 2, 1, "", "Sys_setSwitchMode"], [598, 2, 1, "", "Sys_setSwitchMode_async"], [598, 2, 1, "", "close"], [598, 2, 1, "", "connect"], [598, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[599, 2, 1, "", "DIO_loadStartup"], [599, 2, 1, "", "DIO_loadStartup_async"], [599, 2, 1, "", "DIO_saveStartup"], [599, 2, 1, "", "DIO_saveStartup_async"], [599, 2, 1, "", "DIO_setPortDI"], [599, 2, 1, "", "DIO_setPortDI_async"], [599, 2, 1, "", "DIO_setPortDO"], [599, 2, 1, "", "DIO_setPortDO_async"], [599, 2, 1, "", "DIO_setPortIdle"], [599, 2, 1, "", "DIO_setPortIdle_async"], [599, 2, 1, "", "DI_closePins"], [599, 2, 1, "", "DI_closePins_async"], [599, 2, 1, "", "DI_closePort"], [599, 2, 1, "", "DI_closePort_async"], [599, 2, 1, "", "DI_getPinMap"], [599, 2, 1, "", "DI_openPins"], [599, 2, 1, "", "DI_openPins_async"], [599, 2, 1, "", "DI_openPort"], [599, 2, 1, "", "DI_openPort_async"], [599, 2, 1, "", "DI_readPins"], [599, 2, 1, "", "DI_readPins_async"], [599, 2, 1, "", "DI_readPort"], [599, 2, 1, "", "DI_readPort_async"], [599, 2, 1, "", "DO_closePins"], [599, 2, 1, "", "DO_closePins_async"], [599, 2, 1, "", "DO_closePort"], [599, 2, 1, "", "DO_closePort_async"], [599, 2, 1, "", "DO_getPinMap"], [599, 2, 1, "", "DO_openPins"], [599, 2, 1, "", "DO_openPins_async"], [599, 2, 1, "", "DO_openPort"], [599, 2, 1, "", "DO_openPort_async"], [599, 2, 1, "", "DO_togglePins"], [599, 2, 1, "", "DO_togglePins_async"], [599, 2, 1, "", "DO_togglePort"], [599, 2, 1, "", "DO_togglePort_async"], [599, 2, 1, "", "DO_writePins"], [599, 2, 1, "", "DO_writePins_async"], [599, 2, 1, "", "DO_writePort"], [599, 2, 1, "", "DO_writePort_async"], [599, 2, 1, "", "Logger_openFile"], [599, 2, 1, "", "Logger_write2DList"], [599, 2, 1, "", "Logger_writeHeader"], [599, 2, 1, "", "Logger_writeList"], [599, 2, 1, "", "Logger_writeValue"], [599, 2, 1, "", "Net_getGateway"], [599, 2, 1, "", "Net_getGateway_async"], [599, 2, 1, "", "Net_getIPAddrAndSubmask"], [599, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [599, 2, 1, "", "Net_getMACAddr"], [599, 2, 1, "", "Net_getMACAddr_async"], [599, 2, 1, "", "Net_setIPAddrAndSubmask"], [599, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [599, 2, 1, "", "PWM_close"], [599, 2, 1, "", "PWM_close_async"], [599, 2, 1, "", "PWM_open"], [599, 2, 1, "", "PWM_open_async"], [599, 2, 1, "", "PWM_setDutyCycle"], [599, 2, 1, "", "PWM_setDutyCycle_async"], [599, 2, 1, "", "PWM_setFrequency"], [599, 2, 1, "", "PWM_setFrequency_async"], [599, 2, 1, "", "PWM_start"], [599, 2, 1, "", "PWM_start_async"], [599, 2, 1, "", "PWM_stop"], [599, 2, 1, "", "PWM_stop_async"], [599, 2, 1, "", "Sys_getDriverInfo"], [599, 2, 1, "", "Sys_getDriverInfo_async"], [599, 2, 1, "", "Sys_getGateway"], [599, 2, 1, "", "Sys_getGateway_async"], [599, 2, 1, "", "Sys_getIPAddrAndSubmask"], [599, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [599, 2, 1, "", "Sys_getMACAddr"], [599, 2, 1, "", "Sys_getMACAddr_async"], [599, 2, 1, "", "Sys_getMode"], [599, 2, 1, "", "Sys_getMode_async"], [599, 2, 1, "", "Sys_getPinModeInPort"], [599, 2, 1, "", "Sys_getPinModeInPort_async"], [599, 2, 1, "", "Sys_getRTC"], [599, 2, 1, "", "Sys_getRTC_async"], [599, 2, 1, "", "Sys_getSerialNumber"], [599, 2, 1, "", "Sys_getSerialNumber_async"], [599, 2, 1, "", "Sys_reboot"], [599, 2, 1, "", "Sys_rebootOnBootloader"], [599, 2, 1, "", "Sys_rebootOnBootloader_async"], [599, 2, 1, "", "Sys_reboot_async"], [599, 2, 1, "", "Sys_setAIOMode"], [599, 2, 1, "", "Sys_setAIOMode_async"], [599, 2, 1, "", "Sys_setDIMode"], [599, 2, 1, "", "Sys_setDIMode_async"], [599, 2, 1, "", "Sys_setDIOMode"], [599, 2, 1, "", "Sys_setDIOMode_async"], [599, 2, 1, "", "Sys_setDOMode"], [599, 2, 1, "", "Sys_setDOMode_async"], [599, 2, 1, "", "Sys_setIPAddrAndSubmask"], [599, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [599, 2, 1, "", "Sys_setIdleMode"], [599, 2, 1, "", "Sys_setIdleMode_async"], [599, 2, 1, "", "Sys_setMotionMode"], [599, 2, 1, "", "Sys_setMotionMode_async"], [599, 2, 1, "", "Sys_setRTC"], [599, 2, 1, "", "Sys_setRTC_async"], [599, 2, 1, "", "Sys_setSlotMode"], [599, 2, 1, "", "Sys_setSlotMode_async"], [599, 2, 1, "", "Sys_setSwitchMode"], [599, 2, 1, "", "Sys_setSwitchMode_async"], [599, 2, 1, "", "close"], [599, 2, 1, "", "connect"], [599, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[600, 2, 1, "", "AI_close"], [600, 2, 1, "", "AI_close_async"], [600, 2, 1, "", "AI_getPort"], [600, 2, 1, "", "AI_open"], [600, 2, 1, "", "AI_open_async"], [600, 2, 1, "", "AI_readOnDemand"], [600, 2, 1, "", "AI_readOnDemand_async"], [600, 2, 1, "", "Logger_openFile"], [600, 2, 1, "", "Logger_write2DList"], [600, 2, 1, "", "Logger_writeHeader"], [600, 2, 1, "", "Logger_writeList"], [600, 2, 1, "", "Logger_writeValue"], [600, 2, 1, "", "Net_getGateway"], [600, 2, 1, "", "Net_getGateway_async"], [600, 2, 1, "", "Net_getIPAddrAndSubmask"], [600, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [600, 2, 1, "", "Net_getMACAddr"], [600, 2, 1, "", "Net_getMACAddr_async"], [600, 2, 1, "", "Net_setIPAddrAndSubmask"], [600, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [600, 2, 1, "", "Sys_getDriverInfo"], [600, 2, 1, "", "Sys_getDriverInfo_async"], [600, 2, 1, "", "Sys_getGateway"], [600, 2, 1, "", "Sys_getGateway_async"], [600, 2, 1, "", "Sys_getIPAddrAndSubmask"], [600, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [600, 2, 1, "", "Sys_getMACAddr"], [600, 2, 1, "", "Sys_getMACAddr_async"], [600, 2, 1, "", "Sys_getMode"], [600, 2, 1, "", "Sys_getMode_async"], [600, 2, 1, "", "Sys_getPinModeInPort"], [600, 2, 1, "", "Sys_getPinModeInPort_async"], [600, 2, 1, "", "Sys_getRTC"], [600, 2, 1, "", "Sys_getRTC_async"], [600, 2, 1, "", "Sys_getSerialNumber"], [600, 2, 1, "", "Sys_getSerialNumber_async"], [600, 2, 1, "", "Sys_reboot"], [600, 2, 1, "", "Sys_rebootOnBootloader"], [600, 2, 1, "", "Sys_rebootOnBootloader_async"], [600, 2, 1, "", "Sys_reboot_async"], [600, 2, 1, "", "Sys_setAIOMode"], [600, 2, 1, "", "Sys_setAIOMode_async"], [600, 2, 1, "", "Sys_setDIMode"], [600, 2, 1, "", "Sys_setDIMode_async"], [600, 2, 1, "", "Sys_setDIOMode"], [600, 2, 1, "", "Sys_setDIOMode_async"], [600, 2, 1, "", "Sys_setDOMode"], [600, 2, 1, "", "Sys_setDOMode_async"], [600, 2, 1, "", "Sys_setIPAddrAndSubmask"], [600, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [600, 2, 1, "", "Sys_setIdleMode"], [600, 2, 1, "", "Sys_setIdleMode_async"], [600, 2, 1, "", "Sys_setMotionMode"], [600, 2, 1, "", "Sys_setMotionMode_async"], [600, 2, 1, "", "Sys_setRTC"], [600, 2, 1, "", "Sys_setRTC_async"], [600, 2, 1, "", "Sys_setSlotMode"], [600, 2, 1, "", "Sys_setSlotMode_async"], [600, 2, 1, "", "Sys_setSwitchMode"], [600, 2, 1, "", "Sys_setSwitchMode_async"], [600, 2, 1, "", "close"], [600, 2, 1, "", "connect"], [600, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[601, 2, 1, "", "DIO_loadStartup"], [601, 2, 1, "", "DIO_loadStartup_async"], [601, 2, 1, "", "DIO_saveStartup"], [601, 2, 1, "", "DIO_saveStartup_async"], [601, 2, 1, "", "DIO_setPortDI"], [601, 2, 1, "", "DIO_setPortDI_async"], [601, 2, 1, "", "DIO_setPortDO"], [601, 2, 1, "", "DIO_setPortDO_async"], [601, 2, 1, "", "DIO_setPortIdle"], [601, 2, 1, "", "DIO_setPortIdle_async"], [601, 2, 1, "", "DI_closePins"], [601, 2, 1, "", "DI_closePins_async"], [601, 2, 1, "", "DI_closePort"], [601, 2, 1, "", "DI_closePort_async"], [601, 2, 1, "", "DI_getPinMap"], [601, 2, 1, "", "DI_openPins"], [601, 2, 1, "", "DI_openPins_async"], [601, 2, 1, "", "DI_openPort"], [601, 2, 1, "", "DI_openPort_async"], [601, 2, 1, "", "DI_readPins"], [601, 2, 1, "", "DI_readPins_async"], [601, 2, 1, "", "DI_readPort"], [601, 2, 1, "", "DI_readPort_async"], [601, 2, 1, "", "DO_closePins"], [601, 2, 1, "", "DO_closePins_async"], [601, 2, 1, "", "DO_closePort"], [601, 2, 1, "", "DO_closePort_async"], [601, 2, 1, "", "DO_getPinMap"], [601, 2, 1, "", "DO_openPins"], [601, 2, 1, "", "DO_openPins_async"], [601, 2, 1, "", "DO_openPort"], [601, 2, 1, "", "DO_openPort_async"], [601, 2, 1, "", "DO_togglePins"], [601, 2, 1, "", "DO_togglePins_async"], [601, 2, 1, "", "DO_togglePort"], [601, 2, 1, "", "DO_togglePort_async"], [601, 2, 1, "", "DO_writePins"], [601, 2, 1, "", "DO_writePins_async"], [601, 2, 1, "", "DO_writePort"], [601, 2, 1, "", "DO_writePort_async"], [601, 2, 1, "", "Logger_openFile"], [601, 2, 1, "", "Logger_write2DList"], [601, 2, 1, "", "Logger_writeHeader"], [601, 2, 1, "", "Logger_writeList"], [601, 2, 1, "", "Logger_writeValue"], [601, 2, 1, "", "Net_getGateway"], [601, 2, 1, "", "Net_getGateway_async"], [601, 2, 1, "", "Net_getIPAddrAndSubmask"], [601, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [601, 2, 1, "", "Net_getMACAddr"], [601, 2, 1, "", "Net_getMACAddr_async"], [601, 2, 1, "", "Net_setIPAddrAndSubmask"], [601, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [601, 2, 1, "", "Relay_close"], [601, 2, 1, "", "Relay_close_async"], [601, 2, 1, "", "Relay_open"], [601, 2, 1, "", "Relay_open_async"], [601, 2, 1, "", "Relay_read"], [601, 2, 1, "", "Relay_read_async"], [601, 2, 1, "", "Sys_getDriverInfo"], [601, 2, 1, "", "Sys_getDriverInfo_async"], [601, 2, 1, "", "Sys_getGateway"], [601, 2, 1, "", "Sys_getGateway_async"], [601, 2, 1, "", "Sys_getIPAddrAndSubmask"], [601, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [601, 2, 1, "", "Sys_getMACAddr"], [601, 2, 1, "", "Sys_getMACAddr_async"], [601, 2, 1, "", "Sys_getMode"], [601, 2, 1, "", "Sys_getMode_async"], [601, 2, 1, "", "Sys_getPinModeInPort"], [601, 2, 1, "", "Sys_getPinModeInPort_async"], [601, 2, 1, "", "Sys_getRTC"], [601, 2, 1, "", "Sys_getRTC_async"], [601, 2, 1, "", "Sys_getSerialNumber"], [601, 2, 1, "", "Sys_getSerialNumber_async"], [601, 2, 1, "", "Sys_reboot"], [601, 2, 1, "", "Sys_rebootOnBootloader"], [601, 2, 1, "", "Sys_rebootOnBootloader_async"], [601, 2, 1, "", "Sys_reboot_async"], [601, 2, 1, "", "Sys_setAIOMode"], [601, 2, 1, "", "Sys_setAIOMode_async"], [601, 2, 1, "", "Sys_setDIMode"], [601, 2, 1, "", "Sys_setDIMode_async"], [601, 2, 1, "", "Sys_setDIOMode"], [601, 2, 1, "", "Sys_setDIOMode_async"], [601, 2, 1, "", "Sys_setDOMode"], [601, 2, 1, "", "Sys_setDOMode_async"], [601, 2, 1, "", "Sys_setIPAddrAndSubmask"], [601, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [601, 2, 1, "", "Sys_setIdleMode"], [601, 2, 1, "", "Sys_setIdleMode_async"], [601, 2, 1, "", "Sys_setMotionMode"], [601, 2, 1, "", "Sys_setMotionMode_async"], [601, 2, 1, "", "Sys_setRTC"], [601, 2, 1, "", "Sys_setRTC_async"], [601, 2, 1, "", "Sys_setSlotMode"], [601, 2, 1, "", "Sys_setSlotMode_async"], [601, 2, 1, "", "Sys_setSwitchMode"], [601, 2, 1, "", "Sys_setSwitchMode_async"], [601, 2, 1, "", "close"], [601, 2, 1, "", "connect"], [601, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[602, 2, 1, "", "AO_close"], [602, 2, 1, "", "AO_closeStreaming"], [602, 2, 1, "", "AO_closeStreaming_async"], [602, 2, 1, "", "AO_close_async"], [602, 2, 1, "", "AO_getEnableChannels"], [602, 2, 1, "", "AO_getMode"], [602, 2, 1, "", "AO_getMode_async"], [602, 2, 1, "", "AO_getPort"], [602, 2, 1, "", "AO_getState"], [602, 2, 1, "", "AO_getValues"], [602, 2, 1, "", "AO_getValues_async"], [602, 2, 1, "", "AO_open"], [602, 2, 1, "", "AO_openStreaming"], [602, 2, 1, "", "AO_openStreaming_async"], [602, 2, 1, "", "AO_open_async"], [602, 2, 1, "", "AO_pushToBuffer"], [602, 2, 1, "", "AO_setEnableChannels"], [602, 2, 1, "", "AO_setEnableChannels_async"], [602, 2, 1, "", "AO_setForm"], [602, 2, 1, "", "AO_setFormParam"], [602, 2, 1, "", "AO_setFormParam_async"], [602, 2, 1, "", "AO_setForm_async"], [602, 2, 1, "", "AO_setMode"], [602, 2, 1, "", "AO_setMode_async"], [602, 2, 1, "", "AO_setNumSamples"], [602, 2, 1, "", "AO_setNumSamples_async"], [602, 2, 1, "", "AO_setSamplingRate"], [602, 2, 1, "", "AO_setSamplingRate_async"], [602, 2, 1, "", "AO_startStreaming"], [602, 2, 1, "", "AO_startStreaming_async"], [602, 2, 1, "", "AO_writeAllChannels"], [602, 2, 1, "", "AO_writeAllChannels_async"], [602, 2, 1, "", "AO_writeOneChannel"], [602, 2, 1, "", "AO_writeOneChannel_async"], [602, 2, 1, "", "Logger_openFile"], [602, 2, 1, "", "Logger_write2DList"], [602, 2, 1, "", "Logger_writeHeader"], [602, 2, 1, "", "Logger_writeList"], [602, 2, 1, "", "Logger_writeValue"], [602, 2, 1, "", "Net_getGateway"], [602, 2, 1, "", "Net_getGateway_async"], [602, 2, 1, "", "Net_getIPAddrAndSubmask"], [602, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [602, 2, 1, "", "Net_getMACAddr"], [602, 2, 1, "", "Net_getMACAddr_async"], [602, 2, 1, "", "Net_setIPAddrAndSubmask"], [602, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [602, 2, 1, "", "Sys_getDriverInfo"], [602, 2, 1, "", "Sys_getDriverInfo_async"], [602, 2, 1, "", "Sys_getGateway"], [602, 2, 1, "", "Sys_getGateway_async"], [602, 2, 1, "", "Sys_getIPAddrAndSubmask"], [602, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [602, 2, 1, "", "Sys_getMACAddr"], [602, 2, 1, "", "Sys_getMACAddr_async"], [602, 2, 1, "", "Sys_getMode"], [602, 2, 1, "", "Sys_getMode_async"], [602, 2, 1, "", "Sys_getPinModeInPort"], [602, 2, 1, "", "Sys_getPinModeInPort_async"], [602, 2, 1, "", "Sys_getRTC"], [602, 2, 1, "", "Sys_getRTC_async"], [602, 2, 1, "", "Sys_getSerialNumber"], [602, 2, 1, "", "Sys_getSerialNumber_async"], [602, 2, 1, "", "Sys_reboot"], [602, 2, 1, "", "Sys_rebootOnBootloader"], [602, 2, 1, "", "Sys_rebootOnBootloader_async"], [602, 2, 1, "", "Sys_reboot_async"], [602, 2, 1, "", "Sys_setAIOMode"], [602, 2, 1, "", "Sys_setAIOMode_async"], [602, 2, 1, "", "Sys_setDIMode"], [602, 2, 1, "", "Sys_setDIMode_async"], [602, 2, 1, "", "Sys_setDIOMode"], [602, 2, 1, "", "Sys_setDIOMode_async"], [602, 2, 1, "", "Sys_setDOMode"], [602, 2, 1, "", "Sys_setDOMode_async"], [602, 2, 1, "", "Sys_setIPAddrAndSubmask"], [602, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [602, 2, 1, "", "Sys_setIdleMode"], [602, 2, 1, "", "Sys_setIdleMode_async"], [602, 2, 1, "", "Sys_setMotionMode"], [602, 2, 1, "", "Sys_setMotionMode_async"], [602, 2, 1, "", "Sys_setRTC"], [602, 2, 1, "", "Sys_setRTC_async"], [602, 2, 1, "", "Sys_setSlotMode"], [602, 2, 1, "", "Sys_setSlotMode_async"], [602, 2, 1, "", "Sys_setSwitchMode"], [602, 2, 1, "", "Sys_setSwitchMode_async"], [602, 2, 1, "", "close"], [602, 2, 1, "", "connect"], [602, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[603, 2, 1, "", "Logger_openFile"], [603, 2, 1, "", "Logger_write2DList"], [603, 2, 1, "", "Logger_writeHeader"], [603, 2, 1, "", "Logger_writeList"], [603, 2, 1, "", "Logger_writeValue"], [603, 2, 1, "", "Net_getGateway"], [603, 2, 1, "", "Net_getGateway_async"], [603, 2, 1, "", "Net_getIPAddrAndSubmask"], [603, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [603, 2, 1, "", "Net_getMACAddr"], [603, 2, 1, "", "Net_getMACAddr_async"], [603, 2, 1, "", "Net_setIPAddrAndSubmask"], [603, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [603, 2, 1, "", "Sys_getDriverInfo"], [603, 2, 1, "", "Sys_getDriverInfo_async"], [603, 2, 1, "", "Sys_getGateway"], [603, 2, 1, "", "Sys_getGateway_async"], [603, 2, 1, "", "Sys_getIPAddrAndSubmask"], [603, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [603, 2, 1, "", "Sys_getMACAddr"], [603, 2, 1, "", "Sys_getMACAddr_async"], [603, 2, 1, "", "Sys_getMode"], [603, 2, 1, "", "Sys_getMode_async"], [603, 2, 1, "", "Sys_getPinModeInPort"], [603, 2, 1, "", "Sys_getPinModeInPort_async"], [603, 2, 1, "", "Sys_getRTC"], [603, 2, 1, "", "Sys_getRTC_async"], [603, 2, 1, "", "Sys_getSerialNumber"], [603, 2, 1, "", "Sys_getSerialNumber_async"], [603, 2, 1, "", "Sys_reboot"], [603, 2, 1, "", "Sys_rebootOnBootloader"], [603, 2, 1, "", "Sys_rebootOnBootloader_async"], [603, 2, 1, "", "Sys_reboot_async"], [603, 2, 1, "", "Sys_setAIOMode"], [603, 2, 1, "", "Sys_setAIOMode_async"], [603, 2, 1, "", "Sys_setDIMode"], [603, 2, 1, "", "Sys_setDIMode_async"], [603, 2, 1, "", "Sys_setDIOMode"], [603, 2, 1, "", "Sys_setDIOMode_async"], [603, 2, 1, "", "Sys_setDOMode"], [603, 2, 1, "", "Sys_setDOMode_async"], [603, 2, 1, "", "Sys_setIPAddrAndSubmask"], [603, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [603, 2, 1, "", "Sys_setIdleMode"], [603, 2, 1, "", "Sys_setIdleMode_async"], [603, 2, 1, "", "Sys_setMotionMode"], [603, 2, 1, "", "Sys_setMotionMode_async"], [603, 2, 1, "", "Sys_setRTC"], [603, 2, 1, "", "Sys_setRTC_async"], [603, 2, 1, "", "Sys_setSlotMode"], [603, 2, 1, "", "Sys_setSlotMode_async"], [603, 2, 1, "", "Sys_setSwitchMode"], [603, 2, 1, "", "Sys_setSwitchMode_async"], [603, 2, 1, "", "Thermal_close"], [603, 2, 1, "", "Thermal_close_async"], [603, 2, 1, "", "Thermal_getPinMap"], [603, 2, 1, "", "Thermal_getStatus"], [603, 2, 1, "", "Thermal_getStatus_async"], [603, 2, 1, "", "Thermal_open"], [603, 2, 1, "", "Thermal_open_async"], [603, 2, 1, "", "Thermal_readSensor"], [603, 2, 1, "", "Thermal_readSensor_async"], [603, 2, 1, "", "Thermal_setOverSampling"], [603, 2, 1, "", "Thermal_setOverSampling_async"], [603, 2, 1, "", "Thermal_setType"], [603, 2, 1, "", "Thermal_setType_async"], [603, 2, 1, "", "close"], [603, 2, 1, "", "connect"], [603, 2, 1, "", "disconnect"]], "pywpc.STEM": [[604, 2, 1, "", "AI_close"], [604, 2, 1, "", "AI_close_async"], [604, 2, 1, "", "AI_enableCS"], [604, 2, 1, "", "AI_enableCS_async"], [604, 2, 1, "", "AI_getPort"], [604, 2, 1, "", "AI_open"], [604, 2, 1, "", "AI_open_async"], [604, 2, 1, "", "AI_readOnDemand"], [604, 2, 1, "", "AI_readOnDemand_async"], [604, 2, 1, "", "AI_readStreaming"], [604, 2, 1, "", "AI_readStreaming_async"], [604, 2, 1, "", "AI_setMode"], [604, 2, 1, "", "AI_setMode_async"], [604, 2, 1, "", "AI_setNumSamples"], [604, 2, 1, "", "AI_setNumSamples_async"], [604, 2, 1, "", "AI_setSamplingRate"], [604, 2, 1, "", "AI_setSamplingRate_async"], [604, 2, 1, "", "AI_start"], [604, 2, 1, "", "AI_start_async"], [604, 2, 1, "", "AI_stop"], [604, 2, 1, "", "AI_stop_async"], [604, 2, 1, "", "AO_close"], [604, 2, 1, "", "AO_closeStreaming"], [604, 2, 1, "", "AO_closeStreaming_async"], [604, 2, 1, "", "AO_close_async"], [604, 2, 1, "", "AO_getEnableChannels"], [604, 2, 1, "", "AO_getMode"], [604, 2, 1, "", "AO_getMode_async"], [604, 2, 1, "", "AO_getPort"], [604, 2, 1, "", "AO_getState"], [604, 2, 1, "", "AO_getValues"], [604, 2, 1, "", "AO_getValues_async"], [604, 2, 1, "", "AO_open"], [604, 2, 1, "", "AO_openStreaming"], [604, 2, 1, "", "AO_openStreaming_async"], [604, 2, 1, "", "AO_open_async"], [604, 2, 1, "", "AO_pushToBuffer"], [604, 2, 1, "", "AO_setEnableChannels"], [604, 2, 1, "", "AO_setEnableChannels_async"], [604, 2, 1, "", "AO_setForm"], [604, 2, 1, "", "AO_setFormParam"], [604, 2, 1, "", "AO_setFormParam_async"], [604, 2, 1, "", "AO_setForm_async"], [604, 2, 1, "", "AO_setMode"], [604, 2, 1, "", "AO_setMode_async"], [604, 2, 1, "", "AO_setNumSamples"], [604, 2, 1, "", "AO_setNumSamples_async"], [604, 2, 1, "", "AO_setSamplingRate"], [604, 2, 1, "", "AO_setSamplingRate_async"], [604, 2, 1, "", "AO_startStreaming"], [604, 2, 1, "", "AO_startStreaming_async"], [604, 2, 1, "", "AO_writeAllChannels"], [604, 2, 1, "", "AO_writeAllChannels_async"], [604, 2, 1, "", "AO_writeOneChannel"], [604, 2, 1, "", "AO_writeOneChannel_async"], [604, 2, 1, "", "DIO_loadStartup"], [604, 2, 1, "", "DIO_loadStartup_async"], [604, 2, 1, "", "DIO_saveStartup"], [604, 2, 1, "", "DIO_saveStartup_async"], [604, 2, 1, "", "DIO_setPortDI"], [604, 2, 1, "", "DIO_setPortDI_async"], [604, 2, 1, "", "DIO_setPortDO"], [604, 2, 1, "", "DIO_setPortDO_async"], [604, 2, 1, "", "DIO_setPortIdle"], [604, 2, 1, "", "DIO_setPortIdle_async"], [604, 2, 1, "", "DI_closePins"], [604, 2, 1, "", "DI_closePins_async"], [604, 2, 1, "", "DI_closePort"], [604, 2, 1, "", "DI_closePort_async"], [604, 2, 1, "", "DI_getPinMap"], [604, 2, 1, "", "DI_openPins"], [604, 2, 1, "", "DI_openPins_async"], [604, 2, 1, "", "DI_openPort"], [604, 2, 1, "", "DI_openPort_async"], [604, 2, 1, "", "DI_readPins"], [604, 2, 1, "", "DI_readPins_async"], [604, 2, 1, "", "DI_readPort"], [604, 2, 1, "", "DI_readPort_async"], [604, 2, 1, "", "DO_closePins"], [604, 2, 1, "", "DO_closePins_async"], [604, 2, 1, "", "DO_closePort"], [604, 2, 1, "", "DO_closePort_async"], [604, 2, 1, "", "DO_getPinMap"], [604, 2, 1, "", "DO_openPins"], [604, 2, 1, "", "DO_openPins_async"], [604, 2, 1, "", "DO_openPort"], [604, 2, 1, "", "DO_openPort_async"], [604, 2, 1, "", "DO_togglePins"], [604, 2, 1, "", "DO_togglePins_async"], [604, 2, 1, "", "DO_togglePort"], [604, 2, 1, "", "DO_togglePort_async"], [604, 2, 1, "", "DO_writePins"], [604, 2, 1, "", "DO_writePins_async"], [604, 2, 1, "", "DO_writePort"], [604, 2, 1, "", "DO_writePort_async"], [604, 2, 1, "", "Logger_openFile"], [604, 2, 1, "", "Logger_write2DList"], [604, 2, 1, "", "Logger_writeHeader"], [604, 2, 1, "", "Logger_writeList"], [604, 2, 1, "", "Logger_writeValue"], [604, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [604, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [604, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [604, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [604, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [604, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [604, 2, 1, "", "Motion_cfgAlarm"], [604, 2, 1, "", "Motion_cfgAlarm_async"], [604, 2, 1, "", "Motion_cfgAxis"], [604, 2, 1, "", "Motion_cfgAxisMove"], [604, 2, 1, "", "Motion_cfgAxisMove_async"], [604, 2, 1, "", "Motion_cfgAxis_async"], [604, 2, 1, "", "Motion_cfgBreakPoint"], [604, 2, 1, "", "Motion_cfgBreakPoint_async"], [604, 2, 1, "", "Motion_cfgCapture"], [604, 2, 1, "", "Motion_cfgCapture_async"], [604, 2, 1, "", "Motion_cfgCircularInterpo"], [604, 2, 1, "", "Motion_cfgCircularInterpo_async"], [604, 2, 1, "", "Motion_cfgEncoder"], [604, 2, 1, "", "Motion_cfgEncoder_async"], [604, 2, 1, "", "Motion_cfgFindRef"], [604, 2, 1, "", "Motion_cfgFindRef_async"], [604, 2, 1, "", "Motion_cfgHelicalInterpo"], [604, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [604, 2, 1, "", "Motion_cfgHome"], [604, 2, 1, "", "Motion_cfgHome_async"], [604, 2, 1, "", "Motion_cfgInposi"], [604, 2, 1, "", "Motion_cfgInposi_async"], [604, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [604, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [604, 2, 1, "", "Motion_cfgLimit"], [604, 2, 1, "", "Motion_cfgLimit_async"], [604, 2, 1, "", "Motion_checkRef"], [604, 2, 1, "", "Motion_checkRef_async"], [604, 2, 1, "", "Motion_close"], [604, 2, 1, "", "Motion_close_async"], [604, 2, 1, "", "Motion_enableBreakPoint"], [604, 2, 1, "", "Motion_enableBreakPoint_async"], [604, 2, 1, "", "Motion_enableCapture"], [604, 2, 1, "", "Motion_enableCapture_async"], [604, 2, 1, "", "Motion_enableServoOff"], [604, 2, 1, "", "Motion_enableServoOff_async"], [604, 2, 1, "", "Motion_enableServoOn"], [604, 2, 1, "", "Motion_enableServoOn_async"], [604, 2, 1, "", "Motion_findRef"], [604, 2, 1, "", "Motion_findRef_async"], [604, 2, 1, "", "Motion_getEncoderPosi"], [604, 2, 1, "", "Motion_getEncoderPosi_async"], [604, 2, 1, "", "Motion_getHomeStatus"], [604, 2, 1, "", "Motion_getHomeStatus_async"], [604, 2, 1, "", "Motion_getLimitStatus"], [604, 2, 1, "", "Motion_getLimitStatus_async"], [604, 2, 1, "", "Motion_getLogicalPosi"], [604, 2, 1, "", "Motion_getLogicalPosi_async"], [604, 2, 1, "", "Motion_getMoveStatus"], [604, 2, 1, "", "Motion_getMoveStatus_async"], [604, 2, 1, "", "Motion_loadCfgFile"], [604, 2, 1, "", "Motion_loadCfgFile_async"], [604, 2, 1, "", "Motion_open"], [604, 2, 1, "", "Motion_openCfgFile"], [604, 2, 1, "", "Motion_openCfgFile_async"], [604, 2, 1, "", "Motion_open_async"], [604, 2, 1, "", "Motion_overrideAxisAccel"], [604, 2, 1, "", "Motion_overrideAxisAccel_async"], [604, 2, 1, "", "Motion_overrideAxisPosi"], [604, 2, 1, "", "Motion_overrideAxisPosi_async"], [604, 2, 1, "", "Motion_overrideAxisVelocity"], [604, 2, 1, "", "Motion_overrideAxisVelocity_async"], [604, 2, 1, "", "Motion_readCapturePoint"], [604, 2, 1, "", "Motion_readCapturePoint_async"], [604, 2, 1, "", "Motion_rstEncoderPosi"], [604, 2, 1, "", "Motion_rstEncoderPosi_async"], [604, 2, 1, "", "Motion_saveCfgFile"], [604, 2, 1, "", "Motion_saveCfgFile_async"], [604, 2, 1, "", "Motion_setLogicalPosi"], [604, 2, 1, "", "Motion_setLogicalPosi_async"], [604, 2, 1, "", "Motion_startCircularInterpo"], [604, 2, 1, "", "Motion_startCircularInterpo_async"], [604, 2, 1, "", "Motion_startHelicalInterpo"], [604, 2, 1, "", "Motion_startHelicalInterpo_async"], [604, 2, 1, "", "Motion_startLinearInterpo"], [604, 2, 1, "", "Motion_startLinearInterpo_async"], [604, 2, 1, "", "Motion_startMultiAxisMove"], [604, 2, 1, "", "Motion_startMultiAxisMove_async"], [604, 2, 1, "", "Motion_startSingleAxisMove"], [604, 2, 1, "", "Motion_startSingleAxisMove_async"], [604, 2, 1, "", "Motion_stop"], [604, 2, 1, "", "Motion_stop_async"], [604, 2, 1, "", "Net_getGateway"], [604, 2, 1, "", "Net_getGateway_async"], [604, 2, 1, "", "Net_getIPAddrAndSubmask"], [604, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [604, 2, 1, "", "Net_getMACAddr"], [604, 2, 1, "", "Net_getMACAddr_async"], [604, 2, 1, "", "Net_setIPAddrAndSubmask"], [604, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [604, 2, 1, "", "Sys_getDriverInfo"], [604, 2, 1, "", "Sys_getDriverInfo_async"], [604, 2, 1, "", "Sys_getGateway"], [604, 2, 1, "", "Sys_getGateway_async"], [604, 2, 1, "", "Sys_getIPAddrAndSubmask"], [604, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [604, 2, 1, "", "Sys_getMACAddr"], [604, 2, 1, "", "Sys_getMACAddr_async"], [604, 2, 1, "", "Sys_getMode"], [604, 2, 1, "", "Sys_getMode_async"], [604, 2, 1, "", "Sys_getPinModeInPort"], [604, 2, 1, "", "Sys_getPinModeInPort_async"], [604, 2, 1, "", "Sys_getRTC"], [604, 2, 1, "", "Sys_getRTC_async"], [604, 2, 1, "", "Sys_getSerialNumber"], [604, 2, 1, "", "Sys_getSerialNumber_async"], [604, 2, 1, "", "Sys_reboot"], [604, 2, 1, "", "Sys_rebootOnBootloader"], [604, 2, 1, "", "Sys_rebootOnBootloader_async"], [604, 2, 1, "", "Sys_reboot_async"], [604, 2, 1, "", "Sys_setAIOMode"], [604, 2, 1, "", "Sys_setAIOMode_async"], [604, 2, 1, "", "Sys_setDIMode"], [604, 2, 1, "", "Sys_setDIMode_async"], [604, 2, 1, "", "Sys_setDIOMode"], [604, 2, 1, "", "Sys_setDIOMode_async"], [604, 2, 1, "", "Sys_setDOMode"], [604, 2, 1, "", "Sys_setDOMode_async"], [604, 2, 1, "", "Sys_setIPAddrAndSubmask"], [604, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [604, 2, 1, "", "Sys_setIdleMode"], [604, 2, 1, "", "Sys_setIdleMode_async"], [604, 2, 1, "", "Sys_setMotionMode"], [604, 2, 1, "", "Sys_setMotionMode_async"], [604, 2, 1, "", "Sys_setRTC"], [604, 2, 1, "", "Sys_setRTC_async"], [604, 2, 1, "", "Sys_setSlotMode"], [604, 2, 1, "", "Sys_setSlotMode_async"], [604, 2, 1, "", "Sys_setSwitchMode"], [604, 2, 1, "", "Sys_setSwitchMode_async"], [604, 2, 1, "", "close"], [604, 2, 1, "", "connect"], [604, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[605, 2, 1, "", "AI_close"], [605, 2, 1, "", "AI_close_async"], [605, 2, 1, "", "AI_enableCS"], [605, 2, 1, "", "AI_enableCS_async"], [605, 2, 1, "", "AI_getPort"], [605, 2, 1, "", "AI_open"], [605, 2, 1, "", "AI_open_async"], [605, 2, 1, "", "AI_readOnDemand"], [605, 2, 1, "", "AI_readOnDemand_async"], [605, 2, 1, "", "AI_readStreaming"], [605, 2, 1, "", "AI_readStreaming_async"], [605, 2, 1, "", "AI_setMode"], [605, 2, 1, "", "AI_setMode_async"], [605, 2, 1, "", "AI_setNumSamples"], [605, 2, 1, "", "AI_setNumSamples_async"], [605, 2, 1, "", "AI_setSamplingRate"], [605, 2, 1, "", "AI_setSamplingRate_async"], [605, 2, 1, "", "AI_start"], [605, 2, 1, "", "AI_start_async"], [605, 2, 1, "", "AI_stop"], [605, 2, 1, "", "AI_stop_async"], [605, 2, 1, "", "Counter_close"], [605, 2, 1, "", "Counter_close_async"], [605, 2, 1, "", "Counter_open"], [605, 2, 1, "", "Counter_open_async"], [605, 2, 1, "", "Counter_read"], [605, 2, 1, "", "Counter_read_async"], [605, 2, 1, "", "Counter_start"], [605, 2, 1, "", "Counter_start_async"], [605, 2, 1, "", "Counter_stop"], [605, 2, 1, "", "Counter_stop_async"], [605, 2, 1, "", "DIO_loadStartup"], [605, 2, 1, "", "DIO_loadStartup_async"], [605, 2, 1, "", "DIO_saveStartup"], [605, 2, 1, "", "DIO_saveStartup_async"], [605, 2, 1, "", "DIO_setPortDI"], [605, 2, 1, "", "DIO_setPortDI_async"], [605, 2, 1, "", "DIO_setPortDO"], [605, 2, 1, "", "DIO_setPortDO_async"], [605, 2, 1, "", "DIO_setPortIdle"], [605, 2, 1, "", "DIO_setPortIdle_async"], [605, 2, 1, "", "DI_closePins"], [605, 2, 1, "", "DI_closePins_async"], [605, 2, 1, "", "DI_closePort"], [605, 2, 1, "", "DI_closePort_async"], [605, 2, 1, "", "DI_getPinMap"], [605, 2, 1, "", "DI_openPins"], [605, 2, 1, "", "DI_openPins_async"], [605, 2, 1, "", "DI_openPort"], [605, 2, 1, "", "DI_openPort_async"], [605, 2, 1, "", "DI_readPins"], [605, 2, 1, "", "DI_readPins_async"], [605, 2, 1, "", "DI_readPort"], [605, 2, 1, "", "DI_readPort_async"], [605, 2, 1, "", "DO_closePins"], [605, 2, 1, "", "DO_closePins_async"], [605, 2, 1, "", "DO_closePort"], [605, 2, 1, "", "DO_closePort_async"], [605, 2, 1, "", "DO_getPinMap"], [605, 2, 1, "", "DO_openPins"], [605, 2, 1, "", "DO_openPins_async"], [605, 2, 1, "", "DO_openPort"], [605, 2, 1, "", "DO_openPort_async"], [605, 2, 1, "", "DO_togglePins"], [605, 2, 1, "", "DO_togglePins_async"], [605, 2, 1, "", "DO_togglePort"], [605, 2, 1, "", "DO_togglePort_async"], [605, 2, 1, "", "DO_writePins"], [605, 2, 1, "", "DO_writePins_async"], [605, 2, 1, "", "DO_writePort"], [605, 2, 1, "", "DO_writePort_async"], [605, 2, 1, "", "I2C_close"], [605, 2, 1, "", "I2C_close_async"], [605, 2, 1, "", "I2C_getPinMap"], [605, 2, 1, "", "I2C_open"], [605, 2, 1, "", "I2C_open_async"], [605, 2, 1, "", "I2C_read"], [605, 2, 1, "", "I2C_read_async"], [605, 2, 1, "", "I2C_reset"], [605, 2, 1, "", "I2C_reset_async"], [605, 2, 1, "", "I2C_setAddressSize"], [605, 2, 1, "", "I2C_setAddressSize_async"], [605, 2, 1, "", "I2C_setClockRate"], [605, 2, 1, "", "I2C_setClockRate_async"], [605, 2, 1, "", "I2C_write"], [605, 2, 1, "", "I2C_write_async"], [605, 2, 1, "", "Logger_openFile"], [605, 2, 1, "", "Logger_write2DList"], [605, 2, 1, "", "Logger_writeHeader"], [605, 2, 1, "", "Logger_writeList"], [605, 2, 1, "", "Logger_writeValue"], [605, 2, 1, "", "PWM_close"], [605, 2, 1, "", "PWM_close_async"], [605, 2, 1, "", "PWM_open"], [605, 2, 1, "", "PWM_open_async"], [605, 2, 1, "", "PWM_setDutyCycle"], [605, 2, 1, "", "PWM_setDutyCycle_async"], [605, 2, 1, "", "PWM_setFrequency"], [605, 2, 1, "", "PWM_setFrequency_async"], [605, 2, 1, "", "PWM_start"], [605, 2, 1, "", "PWM_start_async"], [605, 2, 1, "", "PWM_stop"], [605, 2, 1, "", "PWM_stop_async"], [605, 2, 1, "", "SPI_close"], [605, 2, 1, "", "SPI_close_async"], [605, 2, 1, "", "SPI_getPinMap"], [605, 2, 1, "", "SPI_open"], [605, 2, 1, "", "SPI_open_async"], [605, 2, 1, "", "SPI_read"], [605, 2, 1, "", "SPI_readAndWrite"], [605, 2, 1, "", "SPI_readAndWrite_async"], [605, 2, 1, "", "SPI_read_async"], [605, 2, 1, "", "SPI_reset"], [605, 2, 1, "", "SPI_reset_async"], [605, 2, 1, "", "SPI_setDataSize"], [605, 2, 1, "", "SPI_setDataSize_async"], [605, 2, 1, "", "SPI_setFirstBit"], [605, 2, 1, "", "SPI_setFirstBit_async"], [605, 2, 1, "", "SPI_setMode"], [605, 2, 1, "", "SPI_setMode_async"], [605, 2, 1, "", "SPI_setPrescaler"], [605, 2, 1, "", "SPI_setPrescaler_async"], [605, 2, 1, "", "SPI_write"], [605, 2, 1, "", "SPI_write_async"], [605, 2, 1, "", "Sys_getDriverInfo"], [605, 2, 1, "", "Sys_getDriverInfo_async"], [605, 2, 1, "", "Sys_getMode"], [605, 2, 1, "", "Sys_getMode_async"], [605, 2, 1, "", "Sys_getPinModeInPort"], [605, 2, 1, "", "Sys_getPinModeInPort_async"], [605, 2, 1, "", "Sys_getRTC"], [605, 2, 1, "", "Sys_getRTC_async"], [605, 2, 1, "", "Sys_getSerialNumber"], [605, 2, 1, "", "Sys_getSerialNumber_async"], [605, 2, 1, "", "Sys_reboot"], [605, 2, 1, "", "Sys_rebootOnBootloader"], [605, 2, 1, "", "Sys_rebootOnBootloader_async"], [605, 2, 1, "", "Sys_reboot_async"], [605, 2, 1, "", "Sys_setAIOMode"], [605, 2, 1, "", "Sys_setAIOMode_async"], [605, 2, 1, "", "Sys_setDIMode"], [605, 2, 1, "", "Sys_setDIMode_async"], [605, 2, 1, "", "Sys_setDIOMode"], [605, 2, 1, "", "Sys_setDIOMode_async"], [605, 2, 1, "", "Sys_setDOMode"], [605, 2, 1, "", "Sys_setDOMode_async"], [605, 2, 1, "", "Sys_setIdleMode"], [605, 2, 1, "", "Sys_setIdleMode_async"], [605, 2, 1, "", "Sys_setMotionMode"], [605, 2, 1, "", "Sys_setMotionMode_async"], [605, 2, 1, "", "Sys_setRTC"], [605, 2, 1, "", "Sys_setRTC_async"], [605, 2, 1, "", "Sys_setSlotMode"], [605, 2, 1, "", "Sys_setSlotMode_async"], [605, 2, 1, "", "Sys_setSwitchMode"], [605, 2, 1, "", "Sys_setSwitchMode_async"], [605, 2, 1, "", "UART_close"], [605, 2, 1, "", "UART_close_async"], [605, 2, 1, "", "UART_getPinMap"], [605, 2, 1, "", "UART_open"], [605, 2, 1, "", "UART_open_async"], [605, 2, 1, "", "UART_read"], [605, 2, 1, "", "UART_read_async"], [605, 2, 1, "", "UART_reset"], [605, 2, 1, "", "UART_reset_async"], [605, 2, 1, "", "UART_setBaudRate"], [605, 2, 1, "", "UART_setBaudRate_async"], [605, 2, 1, "", "UART_setDataBit"], [605, 2, 1, "", "UART_setDataBit_async"], [605, 2, 1, "", "UART_setNumStopBit"], [605, 2, 1, "", "UART_setNumStopBit_async"], [605, 2, 1, "", "UART_setParity"], [605, 2, 1, "", "UART_setParity_async"], [605, 2, 1, "", "UART_stopReading"], [605, 2, 1, "", "UART_stopReading_async"], [605, 2, 1, "", "UART_write"], [605, 2, 1, "", "UART_write_async"], [605, 2, 1, "", "close"], [605, 2, 1, "", "connect"], [605, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[606, 2, 1, "", "AI_close"], [606, 2, 1, "", "AI_close_async"], [606, 2, 1, "", "AI_enableCS"], [606, 2, 1, "", "AI_enableCS_async"], [606, 2, 1, "", "AI_getPort"], [606, 2, 1, "", "AI_open"], [606, 2, 1, "", "AI_open_async"], [606, 2, 1, "", "AI_readOnDemand"], [606, 2, 1, "", "AI_readOnDemand_async"], [606, 2, 1, "", "AI_readStreaming"], [606, 2, 1, "", "AI_readStreaming_async"], [606, 2, 1, "", "AI_setMode"], [606, 2, 1, "", "AI_setMode_async"], [606, 2, 1, "", "AI_setNumSamples"], [606, 2, 1, "", "AI_setNumSamples_async"], [606, 2, 1, "", "AI_setSamplingRate"], [606, 2, 1, "", "AI_setSamplingRate_async"], [606, 2, 1, "", "AI_start"], [606, 2, 1, "", "AI_start_async"], [606, 2, 1, "", "AI_stop"], [606, 2, 1, "", "AI_stop_async"], [606, 2, 1, "", "AO_close"], [606, 2, 1, "", "AO_closeStreaming"], [606, 2, 1, "", "AO_closeStreaming_async"], [606, 2, 1, "", "AO_close_async"], [606, 2, 1, "", "AO_getEnableChannels"], [606, 2, 1, "", "AO_getMode"], [606, 2, 1, "", "AO_getMode_async"], [606, 2, 1, "", "AO_getPort"], [606, 2, 1, "", "AO_getState"], [606, 2, 1, "", "AO_getValues"], [606, 2, 1, "", "AO_getValues_async"], [606, 2, 1, "", "AO_open"], [606, 2, 1, "", "AO_openStreaming"], [606, 2, 1, "", "AO_openStreaming_async"], [606, 2, 1, "", "AO_open_async"], [606, 2, 1, "", "AO_pushToBuffer"], [606, 2, 1, "", "AO_setEnableChannels"], [606, 2, 1, "", "AO_setEnableChannels_async"], [606, 2, 1, "", "AO_setForm"], [606, 2, 1, "", "AO_setFormParam"], [606, 2, 1, "", "AO_setFormParam_async"], [606, 2, 1, "", "AO_setForm_async"], [606, 2, 1, "", "AO_setMode"], [606, 2, 1, "", "AO_setMode_async"], [606, 2, 1, "", "AO_setNumSamples"], [606, 2, 1, "", "AO_setNumSamples_async"], [606, 2, 1, "", "AO_setSamplingRate"], [606, 2, 1, "", "AO_setSamplingRate_async"], [606, 2, 1, "", "AO_startStreaming"], [606, 2, 1, "", "AO_startStreaming_async"], [606, 2, 1, "", "AO_writeAllChannels"], [606, 2, 1, "", "AO_writeAllChannels_async"], [606, 2, 1, "", "AO_writeOneChannel"], [606, 2, 1, "", "AO_writeOneChannel_async"], [606, 2, 1, "", "Counter_close"], [606, 2, 1, "", "Counter_close_async"], [606, 2, 1, "", "Counter_open"], [606, 2, 1, "", "Counter_open_async"], [606, 2, 1, "", "Counter_read"], [606, 2, 1, "", "Counter_read_async"], [606, 2, 1, "", "Counter_start"], [606, 2, 1, "", "Counter_start_async"], [606, 2, 1, "", "Counter_stop"], [606, 2, 1, "", "Counter_stop_async"], [606, 2, 1, "", "DIO_loadStartup"], [606, 2, 1, "", "DIO_loadStartup_async"], [606, 2, 1, "", "DIO_saveStartup"], [606, 2, 1, "", "DIO_saveStartup_async"], [606, 2, 1, "", "DIO_setPortDI"], [606, 2, 1, "", "DIO_setPortDI_async"], [606, 2, 1, "", "DIO_setPortDO"], [606, 2, 1, "", "DIO_setPortDO_async"], [606, 2, 1, "", "DIO_setPortIdle"], [606, 2, 1, "", "DIO_setPortIdle_async"], [606, 2, 1, "", "DI_closePins"], [606, 2, 1, "", "DI_closePins_async"], [606, 2, 1, "", "DI_closePort"], [606, 2, 1, "", "DI_closePort_async"], [606, 2, 1, "", "DI_getPinMap"], [606, 2, 1, "", "DI_openPins"], [606, 2, 1, "", "DI_openPins_async"], [606, 2, 1, "", "DI_openPort"], [606, 2, 1, "", "DI_openPort_async"], [606, 2, 1, "", "DI_readPins"], [606, 2, 1, "", "DI_readPins_async"], [606, 2, 1, "", "DI_readPort"], [606, 2, 1, "", "DI_readPort_async"], [606, 2, 1, "", "DO_closePins"], [606, 2, 1, "", "DO_closePins_async"], [606, 2, 1, "", "DO_closePort"], [606, 2, 1, "", "DO_closePort_async"], [606, 2, 1, "", "DO_getPinMap"], [606, 2, 1, "", "DO_openPins"], [606, 2, 1, "", "DO_openPins_async"], [606, 2, 1, "", "DO_openPort"], [606, 2, 1, "", "DO_openPort_async"], [606, 2, 1, "", "DO_togglePins"], [606, 2, 1, "", "DO_togglePins_async"], [606, 2, 1, "", "DO_togglePort"], [606, 2, 1, "", "DO_togglePort_async"], [606, 2, 1, "", "DO_writePins"], [606, 2, 1, "", "DO_writePins_async"], [606, 2, 1, "", "DO_writePort"], [606, 2, 1, "", "DO_writePort_async"], [606, 2, 1, "", "I2C_close"], [606, 2, 1, "", "I2C_close_async"], [606, 2, 1, "", "I2C_getPinMap"], [606, 2, 1, "", "I2C_open"], [606, 2, 1, "", "I2C_open_async"], [606, 2, 1, "", "I2C_read"], [606, 2, 1, "", "I2C_read_async"], [606, 2, 1, "", "I2C_reset"], [606, 2, 1, "", "I2C_reset_async"], [606, 2, 1, "", "I2C_setAddressSize"], [606, 2, 1, "", "I2C_setAddressSize_async"], [606, 2, 1, "", "I2C_setClockRate"], [606, 2, 1, "", "I2C_setClockRate_async"], [606, 2, 1, "", "I2C_write"], [606, 2, 1, "", "I2C_write_async"], [606, 2, 1, "", "Logger_openFile"], [606, 2, 1, "", "Logger_write2DList"], [606, 2, 1, "", "Logger_writeHeader"], [606, 2, 1, "", "Logger_writeList"], [606, 2, 1, "", "Logger_writeValue"], [606, 2, 1, "", "PWM_close"], [606, 2, 1, "", "PWM_close_async"], [606, 2, 1, "", "PWM_open"], [606, 2, 1, "", "PWM_open_async"], [606, 2, 1, "", "PWM_setDutyCycle"], [606, 2, 1, "", "PWM_setDutyCycle_async"], [606, 2, 1, "", "PWM_setFrequency"], [606, 2, 1, "", "PWM_setFrequency_async"], [606, 2, 1, "", "PWM_start"], [606, 2, 1, "", "PWM_start_async"], [606, 2, 1, "", "PWM_stop"], [606, 2, 1, "", "PWM_stop_async"], [606, 2, 1, "", "Sys_getDriverInfo"], [606, 2, 1, "", "Sys_getDriverInfo_async"], [606, 2, 1, "", "Sys_getMode"], [606, 2, 1, "", "Sys_getMode_async"], [606, 2, 1, "", "Sys_getPinModeInPort"], [606, 2, 1, "", "Sys_getPinModeInPort_async"], [606, 2, 1, "", "Sys_getRTC"], [606, 2, 1, "", "Sys_getRTC_async"], [606, 2, 1, "", "Sys_getSerialNumber"], [606, 2, 1, "", "Sys_getSerialNumber_async"], [606, 2, 1, "", "Sys_reboot"], [606, 2, 1, "", "Sys_rebootOnBootloader"], [606, 2, 1, "", "Sys_rebootOnBootloader_async"], [606, 2, 1, "", "Sys_reboot_async"], [606, 2, 1, "", "Sys_setAIOMode"], [606, 2, 1, "", "Sys_setAIOMode_async"], [606, 2, 1, "", "Sys_setDIMode"], [606, 2, 1, "", "Sys_setDIMode_async"], [606, 2, 1, "", "Sys_setDIOMode"], [606, 2, 1, "", "Sys_setDIOMode_async"], [606, 2, 1, "", "Sys_setDOMode"], [606, 2, 1, "", "Sys_setDOMode_async"], [606, 2, 1, "", "Sys_setIdleMode"], [606, 2, 1, "", "Sys_setIdleMode_async"], [606, 2, 1, "", "Sys_setMotionMode"], [606, 2, 1, "", "Sys_setMotionMode_async"], [606, 2, 1, "", "Sys_setRTC"], [606, 2, 1, "", "Sys_setRTC_async"], [606, 2, 1, "", "Sys_setSlotMode"], [606, 2, 1, "", "Sys_setSlotMode_async"], [606, 2, 1, "", "Sys_setSwitchMode"], [606, 2, 1, "", "Sys_setSwitchMode_async"], [606, 2, 1, "", "UART_close"], [606, 2, 1, "", "UART_close_async"], [606, 2, 1, "", "UART_getPinMap"], [606, 2, 1, "", "UART_open"], [606, 2, 1, "", "UART_open_async"], [606, 2, 1, "", "UART_read"], [606, 2, 1, "", "UART_read_async"], [606, 2, 1, "", "UART_reset"], [606, 2, 1, "", "UART_reset_async"], [606, 2, 1, "", "UART_setBaudRate"], [606, 2, 1, "", "UART_setBaudRate_async"], [606, 2, 1, "", "UART_setDataBit"], [606, 2, 1, "", "UART_setDataBit_async"], [606, 2, 1, "", "UART_setNumStopBit"], [606, 2, 1, "", "UART_setNumStopBit_async"], [606, 2, 1, "", "UART_setParity"], [606, 2, 1, "", "UART_setParity_async"], [606, 2, 1, "", "UART_stopReading"], [606, 2, 1, "", "UART_stopReading_async"], [606, 2, 1, "", "UART_write"], [606, 2, 1, "", "UART_write_async"], [606, 2, 1, "", "close"], [606, 2, 1, "", "connect"], [606, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[607, 2, 1, "", "CAN_close"], [607, 2, 1, "", "CAN_close_async"], [607, 2, 1, "", "CAN_getPort"], [607, 2, 1, "", "CAN_open"], [607, 2, 1, "", "CAN_open_async"], [607, 2, 1, "", "CAN_read"], [607, 2, 1, "", "CAN_read_async"], [607, 2, 1, "", "CAN_setRXFilterOrMask"], [607, 2, 1, "", "CAN_setRXFilterOrMask_async"], [607, 2, 1, "", "CAN_setRXFilteringOn"], [607, 2, 1, "", "CAN_setRXFilteringOn_async"], [607, 2, 1, "", "CAN_setSpeed"], [607, 2, 1, "", "CAN_setSpeed_async"], [607, 2, 1, "", "CAN_start"], [607, 2, 1, "", "CAN_start_async"], [607, 2, 1, "", "CAN_stop"], [607, 2, 1, "", "CAN_stop_async"], [607, 2, 1, "", "CAN_write"], [607, 2, 1, "", "CAN_write_async"], [607, 2, 1, "", "Counter_close"], [607, 2, 1, "", "Counter_close_async"], [607, 2, 1, "", "Counter_open"], [607, 2, 1, "", "Counter_open_async"], [607, 2, 1, "", "Counter_read"], [607, 2, 1, "", "Counter_read_async"], [607, 2, 1, "", "Counter_start"], [607, 2, 1, "", "Counter_start_async"], [607, 2, 1, "", "Counter_stop"], [607, 2, 1, "", "Counter_stop_async"], [607, 2, 1, "", "DIO_loadStartup"], [607, 2, 1, "", "DIO_loadStartup_async"], [607, 2, 1, "", "DIO_saveStartup"], [607, 2, 1, "", "DIO_saveStartup_async"], [607, 2, 1, "", "DIO_setPortDI"], [607, 2, 1, "", "DIO_setPortDI_async"], [607, 2, 1, "", "DIO_setPortDO"], [607, 2, 1, "", "DIO_setPortDO_async"], [607, 2, 1, "", "DIO_setPortIdle"], [607, 2, 1, "", "DIO_setPortIdle_async"], [607, 2, 1, "", "DI_closePins"], [607, 2, 1, "", "DI_closePins_async"], [607, 2, 1, "", "DI_closePort"], [607, 2, 1, "", "DI_closePort_async"], [607, 2, 1, "", "DI_getPinMap"], [607, 2, 1, "", "DI_openPins"], [607, 2, 1, "", "DI_openPins_async"], [607, 2, 1, "", "DI_openPort"], [607, 2, 1, "", "DI_openPort_async"], [607, 2, 1, "", "DI_readPins"], [607, 2, 1, "", "DI_readPins_async"], [607, 2, 1, "", "DI_readPort"], [607, 2, 1, "", "DI_readPort_async"], [607, 2, 1, "", "DO_closePins"], [607, 2, 1, "", "DO_closePins_async"], [607, 2, 1, "", "DO_closePort"], [607, 2, 1, "", "DO_closePort_async"], [607, 2, 1, "", "DO_getPinMap"], [607, 2, 1, "", "DO_openPins"], [607, 2, 1, "", "DO_openPins_async"], [607, 2, 1, "", "DO_openPort"], [607, 2, 1, "", "DO_openPort_async"], [607, 2, 1, "", "DO_togglePins"], [607, 2, 1, "", "DO_togglePins_async"], [607, 2, 1, "", "DO_togglePort"], [607, 2, 1, "", "DO_togglePort_async"], [607, 2, 1, "", "DO_writePins"], [607, 2, 1, "", "DO_writePins_async"], [607, 2, 1, "", "DO_writePort"], [607, 2, 1, "", "DO_writePort_async"], [607, 2, 1, "", "I2C_close"], [607, 2, 1, "", "I2C_close_async"], [607, 2, 1, "", "I2C_getPinMap"], [607, 2, 1, "", "I2C_open"], [607, 2, 1, "", "I2C_open_async"], [607, 2, 1, "", "I2C_read"], [607, 2, 1, "", "I2C_read_async"], [607, 2, 1, "", "I2C_reset"], [607, 2, 1, "", "I2C_reset_async"], [607, 2, 1, "", "I2C_setAddressSize"], [607, 2, 1, "", "I2C_setAddressSize_async"], [607, 2, 1, "", "I2C_setClockRate"], [607, 2, 1, "", "I2C_setClockRate_async"], [607, 2, 1, "", "I2C_write"], [607, 2, 1, "", "I2C_write_async"], [607, 2, 1, "", "Logger_openFile"], [607, 2, 1, "", "Logger_write2DList"], [607, 2, 1, "", "Logger_writeHeader"], [607, 2, 1, "", "Logger_writeList"], [607, 2, 1, "", "Logger_writeValue"], [607, 2, 1, "", "PWM_close"], [607, 2, 1, "", "PWM_close_async"], [607, 2, 1, "", "PWM_open"], [607, 2, 1, "", "PWM_open_async"], [607, 2, 1, "", "PWM_setDutyCycle"], [607, 2, 1, "", "PWM_setDutyCycle_async"], [607, 2, 1, "", "PWM_setFrequency"], [607, 2, 1, "", "PWM_setFrequency_async"], [607, 2, 1, "", "PWM_start"], [607, 2, 1, "", "PWM_start_async"], [607, 2, 1, "", "PWM_stop"], [607, 2, 1, "", "PWM_stop_async"], [607, 2, 1, "", "SPI_close"], [607, 2, 1, "", "SPI_close_async"], [607, 2, 1, "", "SPI_getPinMap"], [607, 2, 1, "", "SPI_open"], [607, 2, 1, "", "SPI_open_async"], [607, 2, 1, "", "SPI_read"], [607, 2, 1, "", "SPI_readAndWrite"], [607, 2, 1, "", "SPI_readAndWrite_async"], [607, 2, 1, "", "SPI_read_async"], [607, 2, 1, "", "SPI_reset"], [607, 2, 1, "", "SPI_reset_async"], [607, 2, 1, "", "SPI_setDataSize"], [607, 2, 1, "", "SPI_setDataSize_async"], [607, 2, 1, "", "SPI_setFirstBit"], [607, 2, 1, "", "SPI_setFirstBit_async"], [607, 2, 1, "", "SPI_setMode"], [607, 2, 1, "", "SPI_setMode_async"], [607, 2, 1, "", "SPI_setPrescaler"], [607, 2, 1, "", "SPI_setPrescaler_async"], [607, 2, 1, "", "SPI_write"], [607, 2, 1, "", "SPI_write_async"], [607, 2, 1, "", "Sys_getDriverInfo"], [607, 2, 1, "", "Sys_getDriverInfo_async"], [607, 2, 1, "", "Sys_getMode"], [607, 2, 1, "", "Sys_getMode_async"], [607, 2, 1, "", "Sys_getPinModeInPort"], [607, 2, 1, "", "Sys_getPinModeInPort_async"], [607, 2, 1, "", "Sys_getRTC"], [607, 2, 1, "", "Sys_getRTC_async"], [607, 2, 1, "", "Sys_getSerialNumber"], [607, 2, 1, "", "Sys_getSerialNumber_async"], [607, 2, 1, "", "Sys_reboot"], [607, 2, 1, "", "Sys_rebootOnBootloader"], [607, 2, 1, "", "Sys_rebootOnBootloader_async"], [607, 2, 1, "", "Sys_reboot_async"], [607, 2, 1, "", "Sys_setAIOMode"], [607, 2, 1, "", "Sys_setAIOMode_async"], [607, 2, 1, "", "Sys_setDIMode"], [607, 2, 1, "", "Sys_setDIMode_async"], [607, 2, 1, "", "Sys_setDIOMode"], [607, 2, 1, "", "Sys_setDIOMode_async"], [607, 2, 1, "", "Sys_setDOMode"], [607, 2, 1, "", "Sys_setDOMode_async"], [607, 2, 1, "", "Sys_setIdleMode"], [607, 2, 1, "", "Sys_setIdleMode_async"], [607, 2, 1, "", "Sys_setMotionMode"], [607, 2, 1, "", "Sys_setMotionMode_async"], [607, 2, 1, "", "Sys_setRTC"], [607, 2, 1, "", "Sys_setRTC_async"], [607, 2, 1, "", "Sys_setSlotMode"], [607, 2, 1, "", "Sys_setSlotMode_async"], [607, 2, 1, "", "Sys_setSwitchMode"], [607, 2, 1, "", "Sys_setSwitchMode_async"], [607, 2, 1, "", "UART_close"], [607, 2, 1, "", "UART_close_async"], [607, 2, 1, "", "UART_getPinMap"], [607, 2, 1, "", "UART_open"], [607, 2, 1, "", "UART_open_async"], [607, 2, 1, "", "UART_read"], [607, 2, 1, "", "UART_read_async"], [607, 2, 1, "", "UART_reset"], [607, 2, 1, "", "UART_reset_async"], [607, 2, 1, "", "UART_setBaudRate"], [607, 2, 1, "", "UART_setBaudRate_async"], [607, 2, 1, "", "UART_setDataBit"], [607, 2, 1, "", "UART_setDataBit_async"], [607, 2, 1, "", "UART_setNumStopBit"], [607, 2, 1, "", "UART_setNumStopBit_async"], [607, 2, 1, "", "UART_setParity"], [607, 2, 1, "", "UART_setParity_async"], [607, 2, 1, "", "UART_stopReading"], [607, 2, 1, "", "UART_stopReading_async"], [607, 2, 1, "", "UART_write"], [607, 2, 1, "", "UART_write_async"], [607, 2, 1, "", "close"], [607, 2, 1, "", "connect"], [607, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[608, 2, 1, "", "Counter_close"], [608, 2, 1, "", "Counter_close_async"], [608, 2, 1, "", "Counter_open"], [608, 2, 1, "", "Counter_open_async"], [608, 2, 1, "", "Counter_read"], [608, 2, 1, "", "Counter_read_async"], [608, 2, 1, "", "Counter_start"], [608, 2, 1, "", "Counter_start_async"], [608, 2, 1, "", "Counter_stop"], [608, 2, 1, "", "Counter_stop_async"], [608, 2, 1, "", "DIO_loadStartup"], [608, 2, 1, "", "DIO_loadStartup_async"], [608, 2, 1, "", "DIO_saveStartup"], [608, 2, 1, "", "DIO_saveStartup_async"], [608, 2, 1, "", "DIO_setPortDI"], [608, 2, 1, "", "DIO_setPortDI_async"], [608, 2, 1, "", "DIO_setPortDO"], [608, 2, 1, "", "DIO_setPortDO_async"], [608, 2, 1, "", "DIO_setPortIdle"], [608, 2, 1, "", "DIO_setPortIdle_async"], [608, 2, 1, "", "DI_closePins"], [608, 2, 1, "", "DI_closePins_async"], [608, 2, 1, "", "DI_closePort"], [608, 2, 1, "", "DI_closePort_async"], [608, 2, 1, "", "DI_getPinMap"], [608, 2, 1, "", "DI_openPins"], [608, 2, 1, "", "DI_openPins_async"], [608, 2, 1, "", "DI_openPort"], [608, 2, 1, "", "DI_openPort_async"], [608, 2, 1, "", "DI_readPins"], [608, 2, 1, "", "DI_readPins_async"], [608, 2, 1, "", "DI_readPort"], [608, 2, 1, "", "DI_readPort_async"], [608, 2, 1, "", "DO_closePins"], [608, 2, 1, "", "DO_closePins_async"], [608, 2, 1, "", "DO_closePort"], [608, 2, 1, "", "DO_closePort_async"], [608, 2, 1, "", "DO_getPinMap"], [608, 2, 1, "", "DO_openPins"], [608, 2, 1, "", "DO_openPins_async"], [608, 2, 1, "", "DO_openPort"], [608, 2, 1, "", "DO_openPort_async"], [608, 2, 1, "", "DO_togglePins"], [608, 2, 1, "", "DO_togglePins_async"], [608, 2, 1, "", "DO_togglePort"], [608, 2, 1, "", "DO_togglePort_async"], [608, 2, 1, "", "DO_writePins"], [608, 2, 1, "", "DO_writePins_async"], [608, 2, 1, "", "DO_writePort"], [608, 2, 1, "", "DO_writePort_async"], [608, 2, 1, "", "I2C_close"], [608, 2, 1, "", "I2C_close_async"], [608, 2, 1, "", "I2C_getPinMap"], [608, 2, 1, "", "I2C_open"], [608, 2, 1, "", "I2C_open_async"], [608, 2, 1, "", "I2C_read"], [608, 2, 1, "", "I2C_read_async"], [608, 2, 1, "", "I2C_reset"], [608, 2, 1, "", "I2C_reset_async"], [608, 2, 1, "", "I2C_setAddressSize"], [608, 2, 1, "", "I2C_setAddressSize_async"], [608, 2, 1, "", "I2C_setClockRate"], [608, 2, 1, "", "I2C_setClockRate_async"], [608, 2, 1, "", "I2C_write"], [608, 2, 1, "", "I2C_write_async"], [608, 2, 1, "", "Logger_openFile"], [608, 2, 1, "", "Logger_write2DList"], [608, 2, 1, "", "Logger_writeHeader"], [608, 2, 1, "", "Logger_writeList"], [608, 2, 1, "", "Logger_writeValue"], [608, 2, 1, "", "PWM_close"], [608, 2, 1, "", "PWM_close_async"], [608, 2, 1, "", "PWM_open"], [608, 2, 1, "", "PWM_open_async"], [608, 2, 1, "", "PWM_setDutyCycle"], [608, 2, 1, "", "PWM_setDutyCycle_async"], [608, 2, 1, "", "PWM_setFrequency"], [608, 2, 1, "", "PWM_setFrequency_async"], [608, 2, 1, "", "PWM_start"], [608, 2, 1, "", "PWM_start_async"], [608, 2, 1, "", "PWM_stop"], [608, 2, 1, "", "PWM_stop_async"], [608, 2, 1, "", "SPI_close"], [608, 2, 1, "", "SPI_close_async"], [608, 2, 1, "", "SPI_getPinMap"], [608, 2, 1, "", "SPI_open"], [608, 2, 1, "", "SPI_open_async"], [608, 2, 1, "", "SPI_read"], [608, 2, 1, "", "SPI_readAndWrite"], [608, 2, 1, "", "SPI_readAndWrite_async"], [608, 2, 1, "", "SPI_read_async"], [608, 2, 1, "", "SPI_reset"], [608, 2, 1, "", "SPI_reset_async"], [608, 2, 1, "", "SPI_setDataSize"], [608, 2, 1, "", "SPI_setDataSize_async"], [608, 2, 1, "", "SPI_setFirstBit"], [608, 2, 1, "", "SPI_setFirstBit_async"], [608, 2, 1, "", "SPI_setMode"], [608, 2, 1, "", "SPI_setMode_async"], [608, 2, 1, "", "SPI_setPrescaler"], [608, 2, 1, "", "SPI_setPrescaler_async"], [608, 2, 1, "", "SPI_write"], [608, 2, 1, "", "SPI_write_async"], [608, 2, 1, "", "Sys_getDriverInfo"], [608, 2, 1, "", "Sys_getDriverInfo_async"], [608, 2, 1, "", "Sys_getMode"], [608, 2, 1, "", "Sys_getMode_async"], [608, 2, 1, "", "Sys_getPinModeInPort"], [608, 2, 1, "", "Sys_getPinModeInPort_async"], [608, 2, 1, "", "Sys_getRTC"], [608, 2, 1, "", "Sys_getRTC_async"], [608, 2, 1, "", "Sys_getSerialNumber"], [608, 2, 1, "", "Sys_getSerialNumber_async"], [608, 2, 1, "", "Sys_reboot"], [608, 2, 1, "", "Sys_rebootOnBootloader"], [608, 2, 1, "", "Sys_rebootOnBootloader_async"], [608, 2, 1, "", "Sys_reboot_async"], [608, 2, 1, "", "Sys_setAIOMode"], [608, 2, 1, "", "Sys_setAIOMode_async"], [608, 2, 1, "", "Sys_setDIMode"], [608, 2, 1, "", "Sys_setDIMode_async"], [608, 2, 1, "", "Sys_setDIOMode"], [608, 2, 1, "", "Sys_setDIOMode_async"], [608, 2, 1, "", "Sys_setDOMode"], [608, 2, 1, "", "Sys_setDOMode_async"], [608, 2, 1, "", "Sys_setIdleMode"], [608, 2, 1, "", "Sys_setIdleMode_async"], [608, 2, 1, "", "Sys_setMotionMode"], [608, 2, 1, "", "Sys_setMotionMode_async"], [608, 2, 1, "", "Sys_setRTC"], [608, 2, 1, "", "Sys_setRTC_async"], [608, 2, 1, "", "Sys_setSlotMode"], [608, 2, 1, "", "Sys_setSlotMode_async"], [608, 2, 1, "", "Sys_setSwitchMode"], [608, 2, 1, "", "Sys_setSwitchMode_async"], [608, 2, 1, "", "UART_close"], [608, 2, 1, "", "UART_close_async"], [608, 2, 1, "", "UART_getPinMap"], [608, 2, 1, "", "UART_open"], [608, 2, 1, "", "UART_open_async"], [608, 2, 1, "", "UART_read"], [608, 2, 1, "", "UART_read_async"], [608, 2, 1, "", "UART_reset"], [608, 2, 1, "", "UART_reset_async"], [608, 2, 1, "", "UART_setBaudRate"], [608, 2, 1, "", "UART_setBaudRate_async"], [608, 2, 1, "", "UART_setDataBit"], [608, 2, 1, "", "UART_setDataBit_async"], [608, 2, 1, "", "UART_setNumStopBit"], [608, 2, 1, "", "UART_setNumStopBit_async"], [608, 2, 1, "", "UART_setParity"], [608, 2, 1, "", "UART_setParity_async"], [608, 2, 1, "", "UART_stopReading"], [608, 2, 1, "", "UART_stopReading_async"], [608, 2, 1, "", "UART_write"], [608, 2, 1, "", "UART_write_async"], [608, 2, 1, "", "close"], [608, 2, 1, "", "connect"], [608, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[609, 2, 1, "", "Counter_close"], [609, 2, 1, "", "Counter_close_async"], [609, 2, 1, "", "Counter_open"], [609, 2, 1, "", "Counter_open_async"], [609, 2, 1, "", "Counter_read"], [609, 2, 1, "", "Counter_read_async"], [609, 2, 1, "", "Counter_start"], [609, 2, 1, "", "Counter_start_async"], [609, 2, 1, "", "Counter_stop"], [609, 2, 1, "", "Counter_stop_async"], [609, 2, 1, "", "DIO_loadStartup"], [609, 2, 1, "", "DIO_loadStartup_async"], [609, 2, 1, "", "DIO_saveStartup"], [609, 2, 1, "", "DIO_saveStartup_async"], [609, 2, 1, "", "DIO_setPortDI"], [609, 2, 1, "", "DIO_setPortDI_async"], [609, 2, 1, "", "DIO_setPortDO"], [609, 2, 1, "", "DIO_setPortDO_async"], [609, 2, 1, "", "DIO_setPortIdle"], [609, 2, 1, "", "DIO_setPortIdle_async"], [609, 2, 1, "", "DI_closePins"], [609, 2, 1, "", "DI_closePins_async"], [609, 2, 1, "", "DI_closePort"], [609, 2, 1, "", "DI_closePort_async"], [609, 2, 1, "", "DI_getPinMap"], [609, 2, 1, "", "DI_openPins"], [609, 2, 1, "", "DI_openPins_async"], [609, 2, 1, "", "DI_openPort"], [609, 2, 1, "", "DI_openPort_async"], [609, 2, 1, "", "DI_readPins"], [609, 2, 1, "", "DI_readPins_async"], [609, 2, 1, "", "DI_readPort"], [609, 2, 1, "", "DI_readPort_async"], [609, 2, 1, "", "DO_closePins"], [609, 2, 1, "", "DO_closePins_async"], [609, 2, 1, "", "DO_closePort"], [609, 2, 1, "", "DO_closePort_async"], [609, 2, 1, "", "DO_getPinMap"], [609, 2, 1, "", "DO_openPins"], [609, 2, 1, "", "DO_openPins_async"], [609, 2, 1, "", "DO_openPort"], [609, 2, 1, "", "DO_openPort_async"], [609, 2, 1, "", "DO_togglePins"], [609, 2, 1, "", "DO_togglePins_async"], [609, 2, 1, "", "DO_togglePort"], [609, 2, 1, "", "DO_togglePort_async"], [609, 2, 1, "", "DO_writePins"], [609, 2, 1, "", "DO_writePins_async"], [609, 2, 1, "", "DO_writePort"], [609, 2, 1, "", "DO_writePort_async"], [609, 2, 1, "", "Logger_openFile"], [609, 2, 1, "", "Logger_write2DList"], [609, 2, 1, "", "Logger_writeHeader"], [609, 2, 1, "", "Logger_writeList"], [609, 2, 1, "", "Logger_writeValue"], [609, 2, 1, "", "PWM_close"], [609, 2, 1, "", "PWM_close_async"], [609, 2, 1, "", "PWM_open"], [609, 2, 1, "", "PWM_open_async"], [609, 2, 1, "", "PWM_setDutyCycle"], [609, 2, 1, "", "PWM_setDutyCycle_async"], [609, 2, 1, "", "PWM_setFrequency"], [609, 2, 1, "", "PWM_setFrequency_async"], [609, 2, 1, "", "PWM_start"], [609, 2, 1, "", "PWM_start_async"], [609, 2, 1, "", "PWM_stop"], [609, 2, 1, "", "PWM_stop_async"], [609, 2, 1, "", "Sys_getDriverInfo"], [609, 2, 1, "", "Sys_getDriverInfo_async"], [609, 2, 1, "", "Sys_getMode"], [609, 2, 1, "", "Sys_getMode_async"], [609, 2, 1, "", "Sys_getPinModeInPort"], [609, 2, 1, "", "Sys_getPinModeInPort_async"], [609, 2, 1, "", "Sys_getRTC"], [609, 2, 1, "", "Sys_getRTC_async"], [609, 2, 1, "", "Sys_getSerialNumber"], [609, 2, 1, "", "Sys_getSerialNumber_async"], [609, 2, 1, "", "Sys_reboot"], [609, 2, 1, "", "Sys_rebootOnBootloader"], [609, 2, 1, "", "Sys_rebootOnBootloader_async"], [609, 2, 1, "", "Sys_reboot_async"], [609, 2, 1, "", "Sys_setAIOMode"], [609, 2, 1, "", "Sys_setAIOMode_async"], [609, 2, 1, "", "Sys_setDIMode"], [609, 2, 1, "", "Sys_setDIMode_async"], [609, 2, 1, "", "Sys_setDIOMode"], [609, 2, 1, "", "Sys_setDIOMode_async"], [609, 2, 1, "", "Sys_setDOMode"], [609, 2, 1, "", "Sys_setDOMode_async"], [609, 2, 1, "", "Sys_setIdleMode"], [609, 2, 1, "", "Sys_setIdleMode_async"], [609, 2, 1, "", "Sys_setMotionMode"], [609, 2, 1, "", "Sys_setMotionMode_async"], [609, 2, 1, "", "Sys_setRTC"], [609, 2, 1, "", "Sys_setRTC_async"], [609, 2, 1, "", "Sys_setSlotMode"], [609, 2, 1, "", "Sys_setSlotMode_async"], [609, 2, 1, "", "Sys_setSwitchMode"], [609, 2, 1, "", "Sys_setSwitchMode_async"], [609, 2, 1, "", "close"], [609, 2, 1, "", "connect"], [609, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[610, 2, 1, "", "Counter_close"], [610, 2, 1, "", "Counter_close_async"], [610, 2, 1, "", "Counter_open"], [610, 2, 1, "", "Counter_open_async"], [610, 2, 1, "", "Counter_read"], [610, 2, 1, "", "Counter_read_async"], [610, 2, 1, "", "Counter_start"], [610, 2, 1, "", "Counter_start_async"], [610, 2, 1, "", "Counter_stop"], [610, 2, 1, "", "Counter_stop_async"], [610, 2, 1, "", "DIO_loadStartup"], [610, 2, 1, "", "DIO_loadStartup_async"], [610, 2, 1, "", "DIO_saveStartup"], [610, 2, 1, "", "DIO_saveStartup_async"], [610, 2, 1, "", "DIO_setPortDI"], [610, 2, 1, "", "DIO_setPortDI_async"], [610, 2, 1, "", "DIO_setPortDO"], [610, 2, 1, "", "DIO_setPortDO_async"], [610, 2, 1, "", "DIO_setPortIdle"], [610, 2, 1, "", "DIO_setPortIdle_async"], [610, 2, 1, "", "DI_closePins"], [610, 2, 1, "", "DI_closePins_async"], [610, 2, 1, "", "DI_closePort"], [610, 2, 1, "", "DI_closePort_async"], [610, 2, 1, "", "DI_getPinMap"], [610, 2, 1, "", "DI_openPins"], [610, 2, 1, "", "DI_openPins_async"], [610, 2, 1, "", "DI_openPort"], [610, 2, 1, "", "DI_openPort_async"], [610, 2, 1, "", "DI_readPins"], [610, 2, 1, "", "DI_readPins_async"], [610, 2, 1, "", "DI_readPort"], [610, 2, 1, "", "DI_readPort_async"], [610, 2, 1, "", "DO_closePins"], [610, 2, 1, "", "DO_closePins_async"], [610, 2, 1, "", "DO_closePort"], [610, 2, 1, "", "DO_closePort_async"], [610, 2, 1, "", "DO_getPinMap"], [610, 2, 1, "", "DO_openPins"], [610, 2, 1, "", "DO_openPins_async"], [610, 2, 1, "", "DO_openPort"], [610, 2, 1, "", "DO_openPort_async"], [610, 2, 1, "", "DO_togglePins"], [610, 2, 1, "", "DO_togglePins_async"], [610, 2, 1, "", "DO_togglePort"], [610, 2, 1, "", "DO_togglePort_async"], [610, 2, 1, "", "DO_writePins"], [610, 2, 1, "", "DO_writePins_async"], [610, 2, 1, "", "DO_writePort"], [610, 2, 1, "", "DO_writePort_async"], [610, 2, 1, "", "I2C_close"], [610, 2, 1, "", "I2C_close_async"], [610, 2, 1, "", "I2C_getPinMap"], [610, 2, 1, "", "I2C_open"], [610, 2, 1, "", "I2C_open_async"], [610, 2, 1, "", "I2C_read"], [610, 2, 1, "", "I2C_read_async"], [610, 2, 1, "", "I2C_reset"], [610, 2, 1, "", "I2C_reset_async"], [610, 2, 1, "", "I2C_setAddressSize"], [610, 2, 1, "", "I2C_setAddressSize_async"], [610, 2, 1, "", "I2C_setClockRate"], [610, 2, 1, "", "I2C_setClockRate_async"], [610, 2, 1, "", "I2C_write"], [610, 2, 1, "", "I2C_write_async"], [610, 2, 1, "", "Logger_openFile"], [610, 2, 1, "", "Logger_write2DList"], [610, 2, 1, "", "Logger_writeHeader"], [610, 2, 1, "", "Logger_writeList"], [610, 2, 1, "", "Logger_writeValue"], [610, 2, 1, "", "PWM_close"], [610, 2, 1, "", "PWM_close_async"], [610, 2, 1, "", "PWM_open"], [610, 2, 1, "", "PWM_open_async"], [610, 2, 1, "", "PWM_setDutyCycle"], [610, 2, 1, "", "PWM_setDutyCycle_async"], [610, 2, 1, "", "PWM_setFrequency"], [610, 2, 1, "", "PWM_setFrequency_async"], [610, 2, 1, "", "PWM_start"], [610, 2, 1, "", "PWM_start_async"], [610, 2, 1, "", "PWM_stop"], [610, 2, 1, "", "PWM_stop_async"], [610, 2, 1, "", "SPI_close"], [610, 2, 1, "", "SPI_close_async"], [610, 2, 1, "", "SPI_getPinMap"], [610, 2, 1, "", "SPI_open"], [610, 2, 1, "", "SPI_open_async"], [610, 2, 1, "", "SPI_read"], [610, 2, 1, "", "SPI_readAndWrite"], [610, 2, 1, "", "SPI_readAndWrite_async"], [610, 2, 1, "", "SPI_read_async"], [610, 2, 1, "", "SPI_reset"], [610, 2, 1, "", "SPI_reset_async"], [610, 2, 1, "", "SPI_setDataSize"], [610, 2, 1, "", "SPI_setDataSize_async"], [610, 2, 1, "", "SPI_setFirstBit"], [610, 2, 1, "", "SPI_setFirstBit_async"], [610, 2, 1, "", "SPI_setMode"], [610, 2, 1, "", "SPI_setMode_async"], [610, 2, 1, "", "SPI_setPrescaler"], [610, 2, 1, "", "SPI_setPrescaler_async"], [610, 2, 1, "", "SPI_write"], [610, 2, 1, "", "SPI_write_async"], [610, 2, 1, "", "Sys_getDriverInfo"], [610, 2, 1, "", "Sys_getDriverInfo_async"], [610, 2, 1, "", "Sys_getMode"], [610, 2, 1, "", "Sys_getMode_async"], [610, 2, 1, "", "Sys_getPinModeInPort"], [610, 2, 1, "", "Sys_getPinModeInPort_async"], [610, 2, 1, "", "Sys_getRTC"], [610, 2, 1, "", "Sys_getRTC_async"], [610, 2, 1, "", "Sys_getSerialNumber"], [610, 2, 1, "", "Sys_getSerialNumber_async"], [610, 2, 1, "", "Sys_reboot"], [610, 2, 1, "", "Sys_rebootOnBootloader"], [610, 2, 1, "", "Sys_rebootOnBootloader_async"], [610, 2, 1, "", "Sys_reboot_async"], [610, 2, 1, "", "Sys_setAIOMode"], [610, 2, 1, "", "Sys_setAIOMode_async"], [610, 2, 1, "", "Sys_setDIMode"], [610, 2, 1, "", "Sys_setDIMode_async"], [610, 2, 1, "", "Sys_setDIOMode"], [610, 2, 1, "", "Sys_setDIOMode_async"], [610, 2, 1, "", "Sys_setDOMode"], [610, 2, 1, "", "Sys_setDOMode_async"], [610, 2, 1, "", "Sys_setIdleMode"], [610, 2, 1, "", "Sys_setIdleMode_async"], [610, 2, 1, "", "Sys_setMotionMode"], [610, 2, 1, "", "Sys_setMotionMode_async"], [610, 2, 1, "", "Sys_setRTC"], [610, 2, 1, "", "Sys_setRTC_async"], [610, 2, 1, "", "Sys_setSlotMode"], [610, 2, 1, "", "Sys_setSlotMode_async"], [610, 2, 1, "", "Sys_setSwitchMode"], [610, 2, 1, "", "Sys_setSwitchMode_async"], [610, 2, 1, "", "Thermal_close"], [610, 2, 1, "", "Thermal_close_async"], [610, 2, 1, "", "Thermal_getPinMap"], [610, 2, 1, "", "Thermal_getStatus"], [610, 2, 1, "", "Thermal_getStatus_async"], [610, 2, 1, "", "Thermal_open"], [610, 2, 1, "", "Thermal_open_async"], [610, 2, 1, "", "Thermal_readSensor"], [610, 2, 1, "", "Thermal_readSensor_async"], [610, 2, 1, "", "Thermal_setType"], [610, 2, 1, "", "Thermal_setType_async"], [610, 2, 1, "", "UART_close"], [610, 2, 1, "", "UART_close_async"], [610, 2, 1, "", "UART_getPinMap"], [610, 2, 1, "", "UART_open"], [610, 2, 1, "", "UART_open_async"], [610, 2, 1, "", "UART_read"], [610, 2, 1, "", "UART_read_async"], [610, 2, 1, "", "UART_reset"], [610, 2, 1, "", "UART_reset_async"], [610, 2, 1, "", "UART_setBaudRate"], [610, 2, 1, "", "UART_setBaudRate_async"], [610, 2, 1, "", "UART_setDataBit"], [610, 2, 1, "", "UART_setDataBit_async"], [610, 2, 1, "", "UART_setNumStopBit"], [610, 2, 1, "", "UART_setNumStopBit_async"], [610, 2, 1, "", "UART_setParity"], [610, 2, 1, "", "UART_setParity_async"], [610, 2, 1, "", "UART_stopReading"], [610, 2, 1, "", "UART_stopReading_async"], [610, 2, 1, "", "UART_write"], [610, 2, 1, "", "UART_write_async"], [610, 2, 1, "", "close"], [610, 2, 1, "", "connect"], [610, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[611, 2, 1, "", "Counter_close"], [611, 2, 1, "", "Counter_close_async"], [611, 2, 1, "", "Counter_open"], [611, 2, 1, "", "Counter_open_async"], [611, 2, 1, "", "Counter_read"], [611, 2, 1, "", "Counter_read_async"], [611, 2, 1, "", "Counter_start"], [611, 2, 1, "", "Counter_start_async"], [611, 2, 1, "", "Counter_stop"], [611, 2, 1, "", "Counter_stop_async"], [611, 2, 1, "", "DIO_loadStartup"], [611, 2, 1, "", "DIO_loadStartup_async"], [611, 2, 1, "", "DIO_saveStartup"], [611, 2, 1, "", "DIO_saveStartup_async"], [611, 2, 1, "", "DIO_setPortDI"], [611, 2, 1, "", "DIO_setPortDI_async"], [611, 2, 1, "", "DIO_setPortDO"], [611, 2, 1, "", "DIO_setPortDO_async"], [611, 2, 1, "", "DIO_setPortIdle"], [611, 2, 1, "", "DIO_setPortIdle_async"], [611, 2, 1, "", "DI_closePins"], [611, 2, 1, "", "DI_closePins_async"], [611, 2, 1, "", "DI_closePort"], [611, 2, 1, "", "DI_closePort_async"], [611, 2, 1, "", "DI_getPinMap"], [611, 2, 1, "", "DI_openPins"], [611, 2, 1, "", "DI_openPins_async"], [611, 2, 1, "", "DI_openPort"], [611, 2, 1, "", "DI_openPort_async"], [611, 2, 1, "", "DI_readPins"], [611, 2, 1, "", "DI_readPins_async"], [611, 2, 1, "", "DI_readPort"], [611, 2, 1, "", "DI_readPort_async"], [611, 2, 1, "", "DO_closePins"], [611, 2, 1, "", "DO_closePins_async"], [611, 2, 1, "", "DO_closePort"], [611, 2, 1, "", "DO_closePort_async"], [611, 2, 1, "", "DO_getPinMap"], [611, 2, 1, "", "DO_openPins"], [611, 2, 1, "", "DO_openPins_async"], [611, 2, 1, "", "DO_openPort"], [611, 2, 1, "", "DO_openPort_async"], [611, 2, 1, "", "DO_togglePins"], [611, 2, 1, "", "DO_togglePins_async"], [611, 2, 1, "", "DO_togglePort"], [611, 2, 1, "", "DO_togglePort_async"], [611, 2, 1, "", "DO_writePins"], [611, 2, 1, "", "DO_writePins_async"], [611, 2, 1, "", "DO_writePort"], [611, 2, 1, "", "DO_writePort_async"], [611, 2, 1, "", "I2C_close"], [611, 2, 1, "", "I2C_close_async"], [611, 2, 1, "", "I2C_getPinMap"], [611, 2, 1, "", "I2C_open"], [611, 2, 1, "", "I2C_open_async"], [611, 2, 1, "", "I2C_read"], [611, 2, 1, "", "I2C_read_async"], [611, 2, 1, "", "I2C_reset"], [611, 2, 1, "", "I2C_reset_async"], [611, 2, 1, "", "I2C_setAddressSize"], [611, 2, 1, "", "I2C_setAddressSize_async"], [611, 2, 1, "", "I2C_setClockRate"], [611, 2, 1, "", "I2C_setClockRate_async"], [611, 2, 1, "", "I2C_write"], [611, 2, 1, "", "I2C_write_async"], [611, 2, 1, "", "Logger_openFile"], [611, 2, 1, "", "Logger_write2DList"], [611, 2, 1, "", "Logger_writeHeader"], [611, 2, 1, "", "Logger_writeList"], [611, 2, 1, "", "Logger_writeValue"], [611, 2, 1, "", "PWM_close"], [611, 2, 1, "", "PWM_close_async"], [611, 2, 1, "", "PWM_open"], [611, 2, 1, "", "PWM_open_async"], [611, 2, 1, "", "PWM_setDutyCycle"], [611, 2, 1, "", "PWM_setDutyCycle_async"], [611, 2, 1, "", "PWM_setFrequency"], [611, 2, 1, "", "PWM_setFrequency_async"], [611, 2, 1, "", "PWM_start"], [611, 2, 1, "", "PWM_start_async"], [611, 2, 1, "", "PWM_stop"], [611, 2, 1, "", "PWM_stop_async"], [611, 2, 1, "", "SPI_close"], [611, 2, 1, "", "SPI_close_async"], [611, 2, 1, "", "SPI_getPinMap"], [611, 2, 1, "", "SPI_open"], [611, 2, 1, "", "SPI_open_async"], [611, 2, 1, "", "SPI_read"], [611, 2, 1, "", "SPI_readAndWrite"], [611, 2, 1, "", "SPI_readAndWrite_async"], [611, 2, 1, "", "SPI_read_async"], [611, 2, 1, "", "SPI_reset"], [611, 2, 1, "", "SPI_reset_async"], [611, 2, 1, "", "SPI_setDataSize"], [611, 2, 1, "", "SPI_setDataSize_async"], [611, 2, 1, "", "SPI_setFirstBit"], [611, 2, 1, "", "SPI_setFirstBit_async"], [611, 2, 1, "", "SPI_setMode"], [611, 2, 1, "", "SPI_setMode_async"], [611, 2, 1, "", "SPI_setPrescaler"], [611, 2, 1, "", "SPI_setPrescaler_async"], [611, 2, 1, "", "SPI_write"], [611, 2, 1, "", "SPI_write_async"], [611, 2, 1, "", "Sys_getDriverInfo"], [611, 2, 1, "", "Sys_getDriverInfo_async"], [611, 2, 1, "", "Sys_getMode"], [611, 2, 1, "", "Sys_getMode_async"], [611, 2, 1, "", "Sys_getPinModeInPort"], [611, 2, 1, "", "Sys_getPinModeInPort_async"], [611, 2, 1, "", "Sys_getRTC"], [611, 2, 1, "", "Sys_getRTC_async"], [611, 2, 1, "", "Sys_getSerialNumber"], [611, 2, 1, "", "Sys_getSerialNumber_async"], [611, 2, 1, "", "Sys_reboot"], [611, 2, 1, "", "Sys_rebootOnBootloader"], [611, 2, 1, "", "Sys_rebootOnBootloader_async"], [611, 2, 1, "", "Sys_reboot_async"], [611, 2, 1, "", "Sys_setAIOMode"], [611, 2, 1, "", "Sys_setAIOMode_async"], [611, 2, 1, "", "Sys_setDIMode"], [611, 2, 1, "", "Sys_setDIMode_async"], [611, 2, 1, "", "Sys_setDIOMode"], [611, 2, 1, "", "Sys_setDIOMode_async"], [611, 2, 1, "", "Sys_setDOMode"], [611, 2, 1, "", "Sys_setDOMode_async"], [611, 2, 1, "", "Sys_setIdleMode"], [611, 2, 1, "", "Sys_setIdleMode_async"], [611, 2, 1, "", "Sys_setMotionMode"], [611, 2, 1, "", "Sys_setMotionMode_async"], [611, 2, 1, "", "Sys_setRTC"], [611, 2, 1, "", "Sys_setRTC_async"], [611, 2, 1, "", "Sys_setSlotMode"], [611, 2, 1, "", "Sys_setSlotMode_async"], [611, 2, 1, "", "Sys_setSwitchMode"], [611, 2, 1, "", "Sys_setSwitchMode_async"], [611, 2, 1, "", "Thermal_close"], [611, 2, 1, "", "Thermal_close_async"], [611, 2, 1, "", "Thermal_getPinMap"], [611, 2, 1, "", "Thermal_getStatus"], [611, 2, 1, "", "Thermal_getStatus_async"], [611, 2, 1, "", "Thermal_open"], [611, 2, 1, "", "Thermal_open_async"], [611, 2, 1, "", "Thermal_readSensor"], [611, 2, 1, "", "Thermal_readSensor_async"], [611, 2, 1, "", "Thermal_setOverSampling"], [611, 2, 1, "", "Thermal_setOverSampling_async"], [611, 2, 1, "", "Thermal_setType"], [611, 2, 1, "", "Thermal_setType_async"], [611, 2, 1, "", "UART_close"], [611, 2, 1, "", "UART_close_async"], [611, 2, 1, "", "UART_getPinMap"], [611, 2, 1, "", "UART_open"], [611, 2, 1, "", "UART_open_async"], [611, 2, 1, "", "UART_read"], [611, 2, 1, "", "UART_read_async"], [611, 2, 1, "", "UART_reset"], [611, 2, 1, "", "UART_reset_async"], [611, 2, 1, "", "UART_setBaudRate"], [611, 2, 1, "", "UART_setBaudRate_async"], [611, 2, 1, "", "UART_setDataBit"], [611, 2, 1, "", "UART_setDataBit_async"], [611, 2, 1, "", "UART_setNumStopBit"], [611, 2, 1, "", "UART_setNumStopBit_async"], [611, 2, 1, "", "UART_setParity"], [611, 2, 1, "", "UART_setParity_async"], [611, 2, 1, "", "UART_stopReading"], [611, 2, 1, "", "UART_stopReading_async"], [611, 2, 1, "", "UART_write"], [611, 2, 1, "", "UART_write_async"], [611, 2, 1, "", "close"], [611, 2, 1, "", "connect"], [611, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[612, 2, 1, "", "AHRS_close"], [612, 2, 1, "", "AHRS_close_async"], [612, 2, 1, "", "AHRS_open"], [612, 2, 1, "", "AHRS_open_async"], [612, 2, 1, "", "AHRS_readStreaming"], [612, 2, 1, "", "AHRS_readStreaming_async"], [612, 2, 1, "", "AHRS_reset"], [612, 2, 1, "", "AHRS_reset_async"], [612, 2, 1, "", "AHRS_setGeneral"], [612, 2, 1, "", "AHRS_setGeneral_async"], [612, 2, 1, "", "AHRS_start"], [612, 2, 1, "", "AHRS_start_async"], [612, 2, 1, "", "AHRS_stop"], [612, 2, 1, "", "AHRS_stop_async"], [612, 2, 1, "", "AI_close"], [612, 2, 1, "", "AI_close_async"], [612, 2, 1, "", "AI_enableCS"], [612, 2, 1, "", "AI_enableCS_async"], [612, 2, 1, "", "AI_getPort"], [612, 2, 1, "", "AI_open"], [612, 2, 1, "", "AI_open_async"], [612, 2, 1, "", "AI_readOnDemand"], [612, 2, 1, "", "AI_readOnDemand_async"], [612, 2, 1, "", "AI_readStreaming"], [612, 2, 1, "", "AI_readStreaming_async"], [612, 2, 1, "", "AI_setMode"], [612, 2, 1, "", "AI_setMode_async"], [612, 2, 1, "", "AI_setNumSamples"], [612, 2, 1, "", "AI_setNumSamples_async"], [612, 2, 1, "", "AI_setSamplingRate"], [612, 2, 1, "", "AI_setSamplingRate_async"], [612, 2, 1, "", "AI_start"], [612, 2, 1, "", "AI_start_async"], [612, 2, 1, "", "AI_stop"], [612, 2, 1, "", "AI_stop_async"], [612, 2, 1, "", "Logger_openFile"], [612, 2, 1, "", "Logger_write2DList"], [612, 2, 1, "", "Logger_writeHeader"], [612, 2, 1, "", "Logger_writeList"], [612, 2, 1, "", "Logger_writeValue"], [612, 2, 1, "", "Net_getGateway"], [612, 2, 1, "", "Net_getGateway_async"], [612, 2, 1, "", "Net_getIPAddrAndSubmask"], [612, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [612, 2, 1, "", "Net_getMACAddr"], [612, 2, 1, "", "Net_getMACAddr_async"], [612, 2, 1, "", "Net_setIPAddrAndSubmask"], [612, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [612, 2, 1, "", "Sys_getDriverInfo"], [612, 2, 1, "", "Sys_getDriverInfo_async"], [612, 2, 1, "", "Sys_getGateway"], [612, 2, 1, "", "Sys_getGateway_async"], [612, 2, 1, "", "Sys_getIPAddrAndSubmask"], [612, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [612, 2, 1, "", "Sys_getMACAddr"], [612, 2, 1, "", "Sys_getMACAddr_async"], [612, 2, 1, "", "Sys_getMode"], [612, 2, 1, "", "Sys_getMode_async"], [612, 2, 1, "", "Sys_getPinModeInPort"], [612, 2, 1, "", "Sys_getPinModeInPort_async"], [612, 2, 1, "", "Sys_getRTC"], [612, 2, 1, "", "Sys_getRTC_async"], [612, 2, 1, "", "Sys_getSerialNumber"], [612, 2, 1, "", "Sys_getSerialNumber_async"], [612, 2, 1, "", "Sys_reboot"], [612, 2, 1, "", "Sys_rebootOnBootloader"], [612, 2, 1, "", "Sys_rebootOnBootloader_async"], [612, 2, 1, "", "Sys_reboot_async"], [612, 2, 1, "", "Sys_setAIOMode"], [612, 2, 1, "", "Sys_setAIOMode_async"], [612, 2, 1, "", "Sys_setDIMode"], [612, 2, 1, "", "Sys_setDIMode_async"], [612, 2, 1, "", "Sys_setDIOMode"], [612, 2, 1, "", "Sys_setDIOMode_async"], [612, 2, 1, "", "Sys_setDOMode"], [612, 2, 1, "", "Sys_setDOMode_async"], [612, 2, 1, "", "Sys_setIPAddrAndSubmask"], [612, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [612, 2, 1, "", "Sys_setIdleMode"], [612, 2, 1, "", "Sys_setIdleMode_async"], [612, 2, 1, "", "Sys_setMotionMode"], [612, 2, 1, "", "Sys_setMotionMode_async"], [612, 2, 1, "", "Sys_setRTC"], [612, 2, 1, "", "Sys_setRTC_async"], [612, 2, 1, "", "Sys_setSlotMode"], [612, 2, 1, "", "Sys_setSlotMode_async"], [612, 2, 1, "", "Sys_setSwitchMode"], [612, 2, 1, "", "Sys_setSwitchMode_async"], [612, 2, 1, "", "Wifi_getWifiBandWidth"], [612, 2, 1, "", "Wifi_getWifiBandWidth_async"], [612, 2, 1, "", "Wifi_getWifiConfiguration"], [612, 2, 1, "", "Wifi_getWifiConfiguration_async"], [612, 2, 1, "", "Wifi_readAcceleration"], [612, 2, 1, "", "Wifi_readAccleration_async"], [612, 2, 1, "", "Wifi_readBattery"], [612, 2, 1, "", "Wifi_readBattery_async"], [612, 2, 1, "", "Wifi_readRSSI"], [612, 2, 1, "", "Wifi_readRSSI_async"], [612, 2, 1, "", "Wifi_readThermo"], [612, 2, 1, "", "Wifi_readThermo_async"], [612, 2, 1, "", "Wifi_setAP"], [612, 2, 1, "", "Wifi_setAP_async"], [612, 2, 1, "", "Wifi_setBandwidth"], [612, 2, 1, "", "Wifi_setBandwidth_async"], [612, 2, 1, "", "close"], [612, 2, 1, "", "connect"], [612, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[613, 2, 1, "", "AI_close"], [613, 2, 1, "", "AI_close_async"], [613, 2, 1, "", "AI_enableCS"], [613, 2, 1, "", "AI_enableCS_async"], [613, 2, 1, "", "AI_getPort"], [613, 2, 1, "", "AI_open"], [613, 2, 1, "", "AI_open_async"], [613, 2, 1, "", "AI_readOnDemand"], [613, 2, 1, "", "AI_readOnDemand_async"], [613, 2, 1, "", "AI_readStreaming"], [613, 2, 1, "", "AI_readStreaming_async"], [613, 2, 1, "", "AI_setMode"], [613, 2, 1, "", "AI_setMode_async"], [613, 2, 1, "", "AI_setNumSamples"], [613, 2, 1, "", "AI_setNumSamples_async"], [613, 2, 1, "", "AI_setSamplingRate"], [613, 2, 1, "", "AI_setSamplingRate_async"], [613, 2, 1, "", "AI_start"], [613, 2, 1, "", "AI_start_async"], [613, 2, 1, "", "AI_stop"], [613, 2, 1, "", "AI_stop_async"], [613, 2, 1, "", "Logger_openFile"], [613, 2, 1, "", "Logger_write2DList"], [613, 2, 1, "", "Logger_writeHeader"], [613, 2, 1, "", "Logger_writeList"], [613, 2, 1, "", "Logger_writeValue"], [613, 2, 1, "", "Net_getGateway"], [613, 2, 1, "", "Net_getGateway_async"], [613, 2, 1, "", "Net_getIPAddrAndSubmask"], [613, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [613, 2, 1, "", "Net_getMACAddr"], [613, 2, 1, "", "Net_getMACAddr_async"], [613, 2, 1, "", "Net_setIPAddrAndSubmask"], [613, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [613, 2, 1, "", "Sys_getDriverInfo"], [613, 2, 1, "", "Sys_getDriverInfo_async"], [613, 2, 1, "", "Sys_getGateway"], [613, 2, 1, "", "Sys_getGateway_async"], [613, 2, 1, "", "Sys_getIPAddrAndSubmask"], [613, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [613, 2, 1, "", "Sys_getMACAddr"], [613, 2, 1, "", "Sys_getMACAddr_async"], [613, 2, 1, "", "Sys_getMode"], [613, 2, 1, "", "Sys_getMode_async"], [613, 2, 1, "", "Sys_getPinModeInPort"], [613, 2, 1, "", "Sys_getPinModeInPort_async"], [613, 2, 1, "", "Sys_getRTC"], [613, 2, 1, "", "Sys_getRTC_async"], [613, 2, 1, "", "Sys_getSerialNumber"], [613, 2, 1, "", "Sys_getSerialNumber_async"], [613, 2, 1, "", "Sys_reboot"], [613, 2, 1, "", "Sys_rebootOnBootloader"], [613, 2, 1, "", "Sys_rebootOnBootloader_async"], [613, 2, 1, "", "Sys_reboot_async"], [613, 2, 1, "", "Sys_setAIOMode"], [613, 2, 1, "", "Sys_setAIOMode_async"], [613, 2, 1, "", "Sys_setDIMode"], [613, 2, 1, "", "Sys_setDIMode_async"], [613, 2, 1, "", "Sys_setDIOMode"], [613, 2, 1, "", "Sys_setDIOMode_async"], [613, 2, 1, "", "Sys_setDOMode"], [613, 2, 1, "", "Sys_setDOMode_async"], [613, 2, 1, "", "Sys_setIPAddrAndSubmask"], [613, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [613, 2, 1, "", "Sys_setIdleMode"], [613, 2, 1, "", "Sys_setIdleMode_async"], [613, 2, 1, "", "Sys_setMotionMode"], [613, 2, 1, "", "Sys_setMotionMode_async"], [613, 2, 1, "", "Sys_setRTC"], [613, 2, 1, "", "Sys_setRTC_async"], [613, 2, 1, "", "Sys_setSlotMode"], [613, 2, 1, "", "Sys_setSlotMode_async"], [613, 2, 1, "", "Sys_setSwitchMode"], [613, 2, 1, "", "Sys_setSwitchMode_async"], [613, 2, 1, "", "Wifi_getWifiBandWidth"], [613, 2, 1, "", "Wifi_getWifiBandWidth_async"], [613, 2, 1, "", "Wifi_getWifiConfiguration"], [613, 2, 1, "", "Wifi_getWifiConfiguration_async"], [613, 2, 1, "", "Wifi_readAcceleration"], [613, 2, 1, "", "Wifi_readAccleration_async"], [613, 2, 1, "", "Wifi_readBattery"], [613, 2, 1, "", "Wifi_readBattery_async"], [613, 2, 1, "", "Wifi_readRSSI"], [613, 2, 1, "", "Wifi_readRSSI_async"], [613, 2, 1, "", "Wifi_readThermo"], [613, 2, 1, "", "Wifi_readThermo_async"], [613, 2, 1, "", "Wifi_setAP"], [613, 2, 1, "", "Wifi_setAP_async"], [613, 2, 1, "", "Wifi_setBandwidth"], [613, 2, 1, "", "Wifi_setBandwidth_async"], [613, 2, 1, "", "close"], [613, 2, 1, "", "connect"], [613, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 593], "architectur": [0, 593], "instal": [0, 593], "upgrad": [0, 593], "quick": [0, 593], "start": [0, 593], "refer": [0, 593, 617], "licens": [0, 593], "find": [1, 3, 28, 29, 30, 321, 323, 344, 345, 346, 617], "all": [1, 89, 113, 116, 162, 165, 321, 385, 401, 404, 442, 445], "devic": [1, 321, 574, 575, 584, 585, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "drive": [2, 3, 4, 5, 6, 7, 322, 323, 324, 325, 326, 327], "1axi": [2, 15, 16, 17, 18, 19, 20, 21, 322, 331, 332, 333, 334, 335, 336, 337], "move": [2, 15, 16, 17, 18, 19, 20, 21, 24, 27, 322, 331, 332, 333, 334, 335, 336, 337, 340, 343], "limit": [3, 30, 323, 346], "posit": [4, 31, 33, 324, 347, 349], "blend": [4, 6, 7, 33, 36, 37, 324, 326, 327, 349, 352, 353], "servo": [5, 35, 325, 351], "veloc": [6, 7, 36, 326, 327, 352], "acceler": [7, 37, 327, 353], "system": [8, 9, 38, 39, 50, 51, 64, 65, 72, 73, 81, 82, 91, 92, 98, 99, 124, 125, 147, 148, 149, 176, 177, 178, 199, 200, 201, 220, 221, 222, 238, 239, 240, 257, 258, 259, 281, 282, 283, 300, 301, 302, 313, 314, 315, 328, 329, 354, 355, 362, 363, 372, 373, 376, 377, 381, 382, 387, 388, 390, 391, 412, 413, 431, 432, 433, 456, 457, 458, 475, 476, 477, 492, 493, 494, 506, 507, 508, 521, 522, 523, 541, 542, 543, 556, 557, 558, 565, 566, 567, 589, 590], "get": [8, 10, 31, 38, 40, 50, 52, 64, 66, 72, 74, 81, 83, 91, 93, 98, 100, 124, 126, 147, 148, 150, 176, 177, 179, 199, 200, 202, 220, 221, 223, 238, 239, 241, 257, 258, 260, 281, 282, 284, 300, 301, 303, 313, 314, 316, 328, 330, 347, 354, 356, 362, 364, 372, 374, 376, 378, 381, 383, 387, 389, 390, 392, 412, 414, 431, 432, 434, 456, 457, 459, 475, 476, 478, 492, 493, 495, 506, 507, 509, 521, 522, 524, 541, 542, 544, 556, 557, 559, 565, 566, 568], "network": [8, 38, 50, 64, 72, 81, 91, 98, 124, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 557, 566, 574, 575, 584, 585], "info": [8, 38, 50, 64, 72, 81, 91, 98, 124, 147, 176, 199, 220, 238, 257, 281, 301, 314, 328, 354, 362, 372, 376, 381, 387, 390, 412, 431, 456, 475, 492, 506, 521, 541, 557, 566, 575, 585], "hello": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "world": [9, 39, 51, 65, 73, 82, 92, 99, 125, 149, 178, 201, 222, 240, 259, 283, 302, 315, 329, 355, 363, 373, 377, 382, 388, 391, 413, 433, 458, 477, 494, 508, 523, 543, 558, 567], "set": [10, 40, 52, 66, 74, 80, 83, 93, 100, 126, 150, 179, 202, 223, 241, 260, 284, 303, 316, 330, 356, 364, 374, 378, 380, 383, 389, 392, 414, 434, 459, 478, 495, 509, 524, 544, 559, 568, 617], "rtc": [10, 40, 52, 66, 74, 83, 93, 100, 126, 150, 179, 202, 223, 241, 260, 284, 303, 316, 330, 356, 364, 374, 378, 383, 389, 392, 414, 434, 459, 478, 495, 509, 524, 544, 559, 568], "tutori": [11, 12, 13, 14, 41, 42, 43, 44, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 127, 128, 129, 130, 151, 152, 153, 154, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 304, 305, 306, 307, 317, 318, 319, 320], "multipl": [11, 12, 41, 42, 53, 54, 67, 68, 75, 76, 84, 85, 94, 95, 104, 105, 127, 128, 151, 152, 180, 181, 203, 204, 224, 225, 242, 243, 264, 265, 288, 289, 304, 305, 317, 318], "loop": [11, 12, 13, 14, 41, 42, 43, 44, 48, 53, 54, 55, 56, 67, 68, 69, 70, 75, 76, 77, 78, 84, 85, 86, 87, 94, 95, 96, 97, 104, 105, 106, 107, 111, 127, 128, 129, 130, 134, 151, 152, 153, 154, 160, 180, 181, 182, 183, 203, 204, 205, 206, 224, 225, 226, 227, 242, 243, 244, 245, 264, 265, 266, 267, 288, 289, 290, 291, 298, 304, 305, 306, 307, 311, 317, 318, 319, 320, 360, 399, 418, 440, 554, 563], "async": [11, 13, 24, 41, 43, 53, 55, 67, 69, 75, 77, 84, 86, 94, 96, 104, 106, 127, 129, 151, 153, 180, 182, 203, 205, 224, 226, 242, 244, 264, 266, 288, 290, 304, 306, 317, 319, 340, 589, 591], "thread": [12, 14, 42, 44, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 128, 130, 152, 154, 181, 183, 204, 206, 225, 227, 243, 245, 265, 267, 289, 291, 305, 307, 318, 320], "singl": [13, 14, 43, 44, 55, 56, 69, 70, 77, 78, 86, 87, 96, 97, 106, 107, 129, 130, 153, 154, 182, 183, 205, 206, 226, 227, 244, 245, 266, 267, 290, 291, 306, 307, 319, 320], "motion": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 617], "scurv": [16, 332], "alarm": [17, 333], "breakpoint": [18, 334], "captur": [19, 335, 617], "config": [20, 32, 34, 336, 348, 350], "file": [20, 32, 34, 336, 348, 350], "inposit": [21, 337], "2axi": [22, 23, 338, 339], "circular": [22, 338], "interpo": [22, 23, 25, 26, 338, 339, 341, 342], "linear": [23, 26, 339, 342], "3axi": [24, 25, 26, 27, 340, 341, 342, 343], "helic": [25, 341], "sync": [27, 343, 590, 592], "home": [28, 344], "index": [29, 345], "logic": [31, 347], "load": [32, 348], "save": [34, 350], "ai": [45, 46, 47, 48, 49, 71, 108, 109, 110, 111, 112, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 357, 358, 359, 360, 361, 375, 396, 397, 398, 399, 400, 415, 416, 417, 418, 419, 437, 438, 439, 440, 441, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 569, 579, 589, 590, 617], "n": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560], "sampl": [45, 108, 131, 157, 295, 308, 357, 396, 415, 437, 551, 560], "onc": [45, 49, 71, 108, 112, 131, 135, 157, 161, 295, 299, 308, 312, 357, 361, 375, 396, 400, 415, 419, 437, 441, 551, 555, 560, 564], "continu": [46, 47, 109, 110, 132, 133, 158, 159, 296, 297, 309, 310, 358, 359, 397, 398, 416, 417, 438, 439, 552, 553, 561, 562], "logger": [47, 102, 110, 133, 159, 262, 286, 297, 310, 359, 394, 398, 417, 439, 526, 546, 553, 562], "demand": [48, 49, 71, 111, 112, 134, 135, 160, 161, 298, 299, 311, 312, 360, 361, 375, 399, 400, 418, 419, 440, 441, 554, 555, 563, 564], "dio": [57, 58, 118, 119, 137, 138, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 406, 407, 421, 422, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532], "loopback": [57, 58, 113, 114, 118, 119, 137, 138, 162, 163, 168, 169, 189, 190, 210, 211, 231, 232, 247, 248, 271, 272, 365, 366, 401, 402, 406, 407, 421, 422, 442, 443, 448, 449, 465, 466, 482, 483, 499, 500, 511, 512, 531, 532], "pin": [57, 59, 61, 118, 120, 122, 137, 139, 141, 148, 168, 170, 172, 177, 189, 191, 193, 200, 210, 212, 214, 221, 231, 233, 235, 239, 247, 249, 251, 258, 271, 273, 275, 282, 365, 367, 369, 406, 408, 410, 421, 423, 425, 432, 448, 450, 452, 457, 465, 467, 469, 476, 482, 484, 486, 493, 499, 501, 503, 507, 511, 513, 515, 522, 531, 533, 535, 542], "port": [58, 60, 62, 119, 121, 123, 138, 140, 142, 169, 171, 173, 190, 192, 194, 211, 213, 215, 232, 234, 236, 248, 250, 252, 272, 274, 276, 366, 368, 370, 407, 409, 411, 422, 424, 426, 449, 451, 453, 466, 468, 470, 483, 485, 487, 500, 502, 504, 512, 514, 516, 532, 534, 536, 618], "do": [59, 60, 61, 62, 120, 121, 122, 123, 139, 140, 141, 142, 170, 171, 172, 173, 191, 192, 193, 194, 212, 213, 214, 215, 233, 234, 235, 236, 249, 250, 251, 252, 273, 274, 275, 276, 367, 368, 369, 370, 408, 409, 410, 411, 423, 424, 425, 426, 450, 451, 452, 453, 467, 468, 469, 470, 484, 485, 486, 487, 501, 502, 503, 504, 513, 514, 515, 516, 533, 534, 535, 536, 571, 581, 589, 590], "blinki": [59, 60, 120, 121, 139, 140, 170, 171, 191, 192, 212, 213, 233, 234, 249, 250, 273, 274, 367, 368, 408, 409, 423, 424, 450, 451, 467, 468, 484, 485, 501, 502, 513, 514, 533, 534], "write": [61, 62, 89, 90, 116, 117, 122, 123, 141, 142, 143, 145, 146, 156, 165, 166, 172, 173, 174, 185, 187, 193, 194, 195, 197, 198, 208, 214, 215, 216, 218, 219, 229, 235, 236, 251, 252, 253, 255, 256, 269, 275, 276, 277, 279, 280, 293, 369, 370, 385, 386, 404, 405, 410, 411, 425, 426, 427, 429, 430, 436, 445, 446, 452, 453, 454, 461, 463, 469, 470, 471, 473, 474, 480, 486, 487, 488, 490, 491, 497, 503, 504, 515, 516, 517, 519, 520, 529, 535, 536, 537, 539, 540, 549], "pwm": [63, 144, 175, 196, 217, 237, 254, 278, 371, 428, 455, 472, 489, 505, 518, 538], "gener": [63, 88, 115, 144, 164, 175, 196, 217, 237, 254, 278, 371, 384, 403, 428, 444, 455, 472, 489, 505, 518, 538], "relai": [79, 80, 379, 380], "read": [79, 101, 102, 103, 136, 143, 145, 155, 167, 174, 184, 186, 188, 195, 197, 207, 209, 216, 218, 228, 230, 246, 253, 255, 261, 262, 263, 268, 270, 277, 279, 285, 286, 287, 292, 294, 379, 393, 394, 395, 420, 427, 429, 435, 447, 454, 460, 462, 464, 471, 473, 479, 481, 488, 490, 496, 498, 510, 517, 519, 525, 526, 527, 528, 530, 537, 539, 545, 546, 547, 548, 550], "counter": [79, 136, 167, 188, 209, 230, 246, 270, 379, 420, 447, 464, 481, 498, 510, 530], "channel": [80, 89, 90, 101, 102, 103, 113, 114, 116, 117, 162, 163, 165, 166, 261, 262, 263, 285, 286, 287, 380, 385, 386, 393, 394, 395, 401, 402, 404, 405, 442, 443, 445, 446, 525, 526, 527, 545, 546, 547, 615, 617], "ao": [88, 89, 90, 115, 116, 117, 164, 165, 166, 384, 385, 386, 403, 404, 405, 444, 445, 446, 570, 580, 589, 590, 617], "waveform": [88, 115, 164, 384, 403, 444], "one": [90, 114, 117, 163, 166, 386, 402, 405, 443, 446], "tc": [101, 102, 103, 285, 286, 287, 393, 394, 395, 545, 546, 547, 577, 587, 589, 590], "data": [101, 102, 261, 262, 285, 286, 393, 394, 525, 526, 545, 546, 617], "statu": [103, 263, 287, 300, 313, 395, 527, 547, 556, 565], "aio": [113, 114, 162, 163, 401, 402, 442, 443], "i2c": [143, 174, 195, 216, 253, 277, 427, 454, 471, 488, 517, 537, 572, 582, 589, 590, 617], "spi": [145, 146, 197, 198, 218, 219, 255, 256, 279, 280, 429, 430, 473, 474, 490, 491, 519, 520, 539, 540, 573, 583, 589, 590, 617], "usb": [147, 176, 199, 220, 238, 257, 281, 431, 456, 475, 492, 506, 521, 541, 591, 592, 594, 605, 606, 607, 608, 609, 610, 611], "mode": [148, 177, 200, 221, 239, 258, 282, 432, 457, 476, 493, 507, 522, 542, 617], "uart": [155, 156, 184, 185, 207, 208, 228, 229, 268, 269, 292, 293, 435, 436, 460, 461, 479, 480, 496, 497, 528, 529, 548, 549, 578, 588, 589, 590, 617], "can": [186, 187, 462, 463, 617], "rtd": [261, 262, 263, 525, 526, 527, 576, 586, 589, 590], "ahr": [294, 550], "wifi": [300, 313, 556, 565, 591, 592, 594, 612, 613], "daq": [300, 313, 556, 565, 591, 592, 605, 606, 607, 608, 609, 610, 611, 612, 613], "test": [569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588], "panel": [569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588], "finder": [574, 584, 591, 592, 595], "center": [575, 585], "exampl": [589, 590, 591, 592], "code": [589, 590, 591, 592, 616], "gui": [589, 590], "temperatur": [589, 590], "consol": [591, 592], "stem": [591, 592, 604], "edriv": [591, 592, 596], "st": [591, 592, 596], "emot": [591, 592, 597], "ethan": [591, 592, 598, 599, 600, 601, 602, 603], "A": [591, 592, 598, 612, 613], "d": [591, 592, 599, 608, 609], "i": [591, 592, 600, 615, 618], "l": [591, 592, 601], "o": [591, 592, 602, 615, 618], "t": [591, 592, 603], "f1": [591, 592, 605, 606, 607, 608, 609, 610, 611], "ad": [591, 592, 605], "aod": [591, 592, 606], "cd": [591, 592, 607], "snk": [591, 592, 609], "rd": [591, 592, 610], "td": [591, 592, 611], "e3": [591, 592, 612], "f4": [591, 592, 613], "product": [594, 614], "usag": 594, "util": 594, "ethernet": 594, "api": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "function": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 618], "descript": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "pinout": [596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "featur": 614, "tabl": [615, 616, 617, 618], "error": 616, "form": 617, "speed": 617, "type": 617, "address": 617, "direct": 617, "enabl": 617, "oper": 617, "polar": 617, "search": 617, "stepper": 617, "output": 617, "stop": 617, "clock": 617, "size": 617, "endian": 617, "thermal": 617, "oversampl": 617, "pariti": 617, "bit": 617}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Overview": [[0, "overview"], [593, "overview"]], "Architecture": [[0, "architecture"], [593, "architecture"]], "Install and Upgrade": [[0, "install-and-upgrade"], [593, "install-and-upgrade"]], "Quick Start": [[0, "quick-start"], [593, "quick-start"]], "References": [[0, "references"], [593, "references"]], "License": [[0, "license"], [593, "license"]], "Find all devices": [[1, "find-all-devices"], [321, "find-all-devices"]], "Drive 1axis move": [[2, "drive-1axis-move"], [322, "drive-1axis-move"]], "Drive find limit": [[3, "drive-find-limit"], [323, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [324, "drive-position-blending"]], "Drive servo on": [[5, "drive-servo-on"], [325, "drive-servo-on"]], "Drive velocity blending": [[6, "drive-velocity-blending"], [326, "drive-velocity-blending"]], "Drive velocity blending acceleration": [[7, "drive-velocity-blending-acceleration"], [327, "drive-velocity-blending-acceleration"]], "System get network info": [[8, "system-get-network-info"], [38, "system-get-network-info"], [50, "system-get-network-info"], [64, "system-get-network-info"], [72, "system-get-network-info"], [81, "system-get-network-info"], [91, "system-get-network-info"], [98, "system-get-network-info"], [124, "system-get-network-info"], [301, "system-get-network-info"], [314, "system-get-network-info"], [328, "system-get-network-info"], [354, "system-get-network-info"], [362, "system-get-network-info"], [372, "system-get-network-info"], [376, "system-get-network-info"], [381, "system-get-network-info"], [387, "system-get-network-info"], [390, "system-get-network-info"], [412, "system-get-network-info"], [557, "system-get-network-info"], [566, "system-get-network-info"]], "System hello world": [[9, "system-hello-world"], [39, "system-hello-world"], [51, "system-hello-world"], [65, "system-hello-world"], [73, "system-hello-world"], [82, "system-hello-world"], [92, "system-hello-world"], [99, "system-hello-world"], [125, "system-hello-world"], [149, "system-hello-world"], [178, "system-hello-world"], [201, "system-hello-world"], [222, "system-hello-world"], [240, "system-hello-world"], [259, "system-hello-world"], [283, "system-hello-world"], [302, "system-hello-world"], [315, "system-hello-world"], [329, "system-hello-world"], [355, "system-hello-world"], [363, "system-hello-world"], [373, "system-hello-world"], [377, "system-hello-world"], [382, "system-hello-world"], [388, "system-hello-world"], [391, "system-hello-world"], [413, "system-hello-world"], [433, "system-hello-world"], [458, "system-hello-world"], [477, "system-hello-world"], [494, "system-hello-world"], [508, "system-hello-world"], [523, "system-hello-world"], [543, "system-hello-world"], [558, "system-hello-world"], [567, "system-hello-world"]], "Set and get RTC": [[10, "set-and-get-rtc"], [40, "set-and-get-rtc"], [52, "set-and-get-rtc"], [66, "set-and-get-rtc"], [74, "set-and-get-rtc"], [83, "set-and-get-rtc"], [93, "set-and-get-rtc"], [100, "set-and-get-rtc"], [126, "set-and-get-rtc"], [150, "set-and-get-rtc"], [179, "set-and-get-rtc"], [202, "set-and-get-rtc"], [223, "set-and-get-rtc"], [241, "set-and-get-rtc"], [260, "set-and-get-rtc"], [284, "set-and-get-rtc"], [303, "set-and-get-rtc"], [316, "set-and-get-rtc"], [330, "set-and-get-rtc"], [356, "set-and-get-rtc"], [364, "set-and-get-rtc"], [374, "set-and-get-rtc"], [378, "set-and-get-rtc"], [383, "set-and-get-rtc"], [389, "set-and-get-rtc"], [392, "set-and-get-rtc"], [414, "set-and-get-rtc"], [434, "set-and-get-rtc"], [459, "set-and-get-rtc"], [478, "set-and-get-rtc"], [495, "set-and-get-rtc"], [509, "set-and-get-rtc"], [524, "set-and-get-rtc"], [544, "set-and-get-rtc"], [559, "set-and-get-rtc"], [568, "set-and-get-rtc"]], "Tutorial multiple loops async": [[11, "tutorial-multiple-loops-async"], [41, "tutorial-multiple-loops-async"], [53, "tutorial-multiple-loops-async"], [67, "tutorial-multiple-loops-async"], [75, "tutorial-multiple-loops-async"], [84, "tutorial-multiple-loops-async"], [94, "tutorial-multiple-loops-async"], [104, "tutorial-multiple-loops-async"], [127, "tutorial-multiple-loops-async"], [151, "tutorial-multiple-loops-async"], [180, "tutorial-multiple-loops-async"], [203, "tutorial-multiple-loops-async"], [224, "tutorial-multiple-loops-async"], [242, "tutorial-multiple-loops-async"], [264, "tutorial-multiple-loops-async"], [288, "tutorial-multiple-loops-async"], [304, "tutorial-multiple-loops-async"], [317, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[12, "tutorial-multiple-loops-thread"], [42, "tutorial-multiple-loops-thread"], [54, "tutorial-multiple-loops-thread"], [68, "tutorial-multiple-loops-thread"], [76, "tutorial-multiple-loops-thread"], [85, "tutorial-multiple-loops-thread"], [95, "tutorial-multiple-loops-thread"], [105, "tutorial-multiple-loops-thread"], [128, "tutorial-multiple-loops-thread"], [152, "tutorial-multiple-loops-thread"], [181, "tutorial-multiple-loops-thread"], [204, "tutorial-multiple-loops-thread"], [225, "tutorial-multiple-loops-thread"], [243, "tutorial-multiple-loops-thread"], [265, "tutorial-multiple-loops-thread"], [289, "tutorial-multiple-loops-thread"], [305, "tutorial-multiple-loops-thread"], [318, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[13, "tutorial-single-loop-async"], [43, "tutorial-single-loop-async"], [55, "tutorial-single-loop-async"], [69, "tutorial-single-loop-async"], [77, "tutorial-single-loop-async"], [86, "tutorial-single-loop-async"], [96, "tutorial-single-loop-async"], [106, "tutorial-single-loop-async"], [129, "tutorial-single-loop-async"], [153, "tutorial-single-loop-async"], [182, "tutorial-single-loop-async"], [205, "tutorial-single-loop-async"], [226, "tutorial-single-loop-async"], [244, "tutorial-single-loop-async"], [266, "tutorial-single-loop-async"], [290, "tutorial-single-loop-async"], [306, "tutorial-single-loop-async"], [319, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[14, "tutorial-single-loop-thread"], [44, "tutorial-single-loop-thread"], [56, "tutorial-single-loop-thread"], [70, "tutorial-single-loop-thread"], [78, "tutorial-single-loop-thread"], [87, "tutorial-single-loop-thread"], [97, "tutorial-single-loop-thread"], [107, "tutorial-single-loop-thread"], [130, "tutorial-single-loop-thread"], [154, "tutorial-single-loop-thread"], [183, "tutorial-single-loop-thread"], [206, "tutorial-single-loop-thread"], [227, "tutorial-single-loop-thread"], [245, "tutorial-single-loop-thread"], [267, "tutorial-single-loop-thread"], [291, "tutorial-single-loop-thread"], [307, "tutorial-single-loop-thread"], [320, "tutorial-single-loop-thread"]], "Motion 1axis move": [[15, "motion-1axis-move"], [331, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[16, "motion-1axis-move-with-scurve"], [332, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[17, "motion-1axis-move-with-alarm-in"], [333, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[18, "motion-1axis-move-with-breakpoint"], [334, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[19, "motion-1axis-move-with-capture"], [335, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[20, "motion-1axis-move-with-config-file"], [336, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[21, "motion-1axis-move-with-inposition"], [337, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[22, "motion-2axis-circular-interpo"], [338, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[23, "motion-2axis-linear-interpo"], [339, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[24, "motion-3axis-async-move"], [340, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[25, "motion-3axis-helical-interpo"], [341, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[26, "motion-3axis-linear-interpo"], [342, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[27, "motion-3axis-sync-move"], [343, "motion-3axis-sync-move"]], "Motion find home": [[28, "motion-find-home"], [344, "motion-find-home"]], "Motion find index": [[29, "motion-find-index"], [345, "motion-find-index"]], "Motion find limit": [[30, "motion-find-limit"], [346, "motion-find-limit"]], "Motion get logical position": [[31, "motion-get-logical-position"], [347, "motion-get-logical-position"]], "Motion load config file": [[32, "motion-load-config-file"], [348, "motion-load-config-file"]], "Motion position blending": [[33, "motion-position-blending"], [349, "motion-position-blending"]], "Motion save config file": [[34, "motion-save-config-file"], [350, "motion-save-config-file"]], "Motion servo on": [[35, "motion-servo-on"], [351, "motion-servo-on"]], "Motion velocity blending": [[36, "motion-velocity-blending"], [352, "motion-velocity-blending"]], "Motion acceleration blending": [[37, "motion-acceleration-blending"], [353, "motion-acceleration-blending"]], "AI N samples once": [[45, "ai-n-samples-once"], [108, "ai-n-samples-once"], [131, "ai-n-samples-once"], [157, "ai-n-samples-once"], [295, "ai-n-samples-once"], [308, "ai-n-samples-once"], [357, "ai-n-samples-once"], [396, "ai-n-samples-once"], [415, "ai-n-samples-once"], [437, "ai-n-samples-once"], [551, "ai-n-samples-once"], [560, "ai-n-samples-once"]], "AI continuous": [[46, "ai-continuous"], [109, "ai-continuous"], [132, "ai-continuous"], [158, "ai-continuous"], [296, "ai-continuous"], [309, "ai-continuous"], [358, "ai-continuous"], [397, "ai-continuous"], [416, "ai-continuous"], [438, "ai-continuous"], [552, "ai-continuous"], [561, "ai-continuous"]], "AI continuous with logger": [[47, "ai-continuous-with-logger"], [110, "ai-continuous-with-logger"], [133, "ai-continuous-with-logger"], [159, "ai-continuous-with-logger"], [297, "ai-continuous-with-logger"], [310, "ai-continuous-with-logger"], [359, "ai-continuous-with-logger"], [398, "ai-continuous-with-logger"], [417, "ai-continuous-with-logger"], [439, "ai-continuous-with-logger"], [553, "ai-continuous-with-logger"], [562, "ai-continuous-with-logger"]], "AI on demand in loop": [[48, "ai-on-demand-in-loop"], [111, "ai-on-demand-in-loop"], [134, "ai-on-demand-in-loop"], [160, "ai-on-demand-in-loop"], [298, "ai-on-demand-in-loop"], [311, "ai-on-demand-in-loop"], [360, "ai-on-demand-in-loop"], [399, "ai-on-demand-in-loop"], [418, "ai-on-demand-in-loop"], [440, "ai-on-demand-in-loop"], [554, "ai-on-demand-in-loop"], [563, "ai-on-demand-in-loop"]], "AI on demand once": [[49, "ai-on-demand-once"], [71, "ai-on-demand-once"], [112, "ai-on-demand-once"], [135, "ai-on-demand-once"], [161, "ai-on-demand-once"], [299, "ai-on-demand-once"], [312, "ai-on-demand-once"], [361, "ai-on-demand-once"], [375, "ai-on-demand-once"], [400, "ai-on-demand-once"], [419, "ai-on-demand-once"], [441, "ai-on-demand-once"], [555, "ai-on-demand-once"], [564, "ai-on-demand-once"]], "DIO loopback pins": [[57, "dio-loopback-pins"], [118, "dio-loopback-pins"], [137, "dio-loopback-pins"], [168, "dio-loopback-pins"], [189, "dio-loopback-pins"], [210, "dio-loopback-pins"], [231, "dio-loopback-pins"], [247, "dio-loopback-pins"], [271, "dio-loopback-pins"], [365, "dio-loopback-pins"], [406, "dio-loopback-pins"], [421, "dio-loopback-pins"], [448, "dio-loopback-pins"], [465, "dio-loopback-pins"], [482, "dio-loopback-pins"], [499, "dio-loopback-pins"], [511, "dio-loopback-pins"], [531, "dio-loopback-pins"]], "DIO loopback port": [[58, "dio-loopback-port"], [119, "dio-loopback-port"], [138, "dio-loopback-port"], [169, "dio-loopback-port"], [190, "dio-loopback-port"], [211, "dio-loopback-port"], [232, "dio-loopback-port"], [248, "dio-loopback-port"], [272, "dio-loopback-port"], [366, "dio-loopback-port"], [407, "dio-loopback-port"], [422, "dio-loopback-port"], [449, "dio-loopback-port"], [466, "dio-loopback-port"], [483, "dio-loopback-port"], [500, "dio-loopback-port"], [512, "dio-loopback-port"], [532, "dio-loopback-port"]], "DO blinky pins": [[59, "do-blinky-pins"], [120, "do-blinky-pins"], [139, "do-blinky-pins"], [170, "do-blinky-pins"], [191, "do-blinky-pins"], [212, "do-blinky-pins"], [233, "do-blinky-pins"], [249, "do-blinky-pins"], [273, "do-blinky-pins"], [367, "do-blinky-pins"], [408, "do-blinky-pins"], [423, "do-blinky-pins"], [450, "do-blinky-pins"], [467, "do-blinky-pins"], [484, "do-blinky-pins"], [501, "do-blinky-pins"], [513, "do-blinky-pins"], [533, "do-blinky-pins"]], "DO blinky port": [[60, "do-blinky-port"], [121, "do-blinky-port"], [140, "do-blinky-port"], [171, "do-blinky-port"], [192, "do-blinky-port"], [213, "do-blinky-port"], [234, "do-blinky-port"], [250, "do-blinky-port"], [274, "do-blinky-port"], [368, "do-blinky-port"], [409, "do-blinky-port"], [424, "do-blinky-port"], [451, "do-blinky-port"], [468, "do-blinky-port"], [485, "do-blinky-port"], [502, "do-blinky-port"], [514, "do-blinky-port"], [534, "do-blinky-port"]], "DO write pins": [[61, "do-write-pins"], [122, "do-write-pins"], [141, "do-write-pins"], [172, "do-write-pins"], [193, "do-write-pins"], [214, "do-write-pins"], [235, "do-write-pins"], [251, "do-write-pins"], [275, "do-write-pins"], [369, "do-write-pins"], [410, "do-write-pins"], [425, "do-write-pins"], [452, "do-write-pins"], [469, "do-write-pins"], [486, "do-write-pins"], [503, "do-write-pins"], [515, "do-write-pins"], [535, "do-write-pins"]], "DO write port": [[62, "do-write-port"], [123, "do-write-port"], [142, "do-write-port"], [173, "do-write-port"], [194, "do-write-port"], [215, "do-write-port"], [236, "do-write-port"], [252, "do-write-port"], [276, "do-write-port"], [370, "do-write-port"], [411, "do-write-port"], [426, "do-write-port"], [453, "do-write-port"], [470, "do-write-port"], [487, "do-write-port"], [504, "do-write-port"], [516, "do-write-port"], [536, "do-write-port"]], "PWM generate": [[63, "pwm-generate"], [144, "pwm-generate"], [175, "pwm-generate"], [196, "pwm-generate"], [217, "pwm-generate"], [237, "pwm-generate"], [254, "pwm-generate"], [278, "pwm-generate"], [371, "pwm-generate"], [428, "pwm-generate"], [455, "pwm-generate"], [472, "pwm-generate"], [489, "pwm-generate"], [505, "pwm-generate"], [518, "pwm-generate"], [538, "pwm-generate"]], "Relay read counters": [[79, "relay-read-counters"], [379, "relay-read-counters"]], "Relay set channel": [[80, "relay-set-channel"], [380, "relay-set-channel"]], "AO waveform generation": [[88, "ao-waveform-generation"], [115, "ao-waveform-generation"], [164, "ao-waveform-generation"], [384, "ao-waveform-generation"], [403, "ao-waveform-generation"], [444, "ao-waveform-generation"]], "AO write all channels": [[89, "ao-write-all-channels"], [116, "ao-write-all-channels"], [165, "ao-write-all-channels"], [385, "ao-write-all-channels"], [404, "ao-write-all-channels"], [445, "ao-write-all-channels"]], "AO write one channel": [[90, "ao-write-one-channel"], [117, "ao-write-one-channel"], [166, "ao-write-one-channel"], [386, "ao-write-one-channel"], [405, "ao-write-one-channel"], [446, "ao-write-one-channel"]], "TC read channel data": [[101, "tc-read-channel-data"], [285, "tc-read-channel-data"], [393, "tc-read-channel-data"], [545, "tc-read-channel-data"]], "TC read channel data with logger": [[102, "tc-read-channel-data-with-logger"], [286, "tc-read-channel-data-with-logger"], [394, "tc-read-channel-data-with-logger"], [546, "tc-read-channel-data-with-logger"]], "TC read channel status": [[103, "tc-read-channel-status"], [287, "tc-read-channel-status"], [395, "tc-read-channel-status"], [547, "tc-read-channel-status"]], "AIO all channels loopback": [[113, "aio-all-channels-loopback"], [162, "aio-all-channels-loopback"], [401, "aio-all-channels-loopback"], [442, "aio-all-channels-loopback"]], "AIO one channel loopback": [[114, "aio-one-channel-loopback"], [163, "aio-one-channel-loopback"], [402, "aio-one-channel-loopback"], [443, "aio-one-channel-loopback"]], "Counter read": [[136, "counter-read"], [167, "counter-read"], [188, "counter-read"], [209, "counter-read"], [230, "counter-read"], [246, "counter-read"], [270, "counter-read"], [420, "counter-read"], [447, "counter-read"], [464, "counter-read"], [481, "counter-read"], [498, "counter-read"], [510, "counter-read"], [530, "counter-read"]], "I2C write and read": [[143, "i2c-write-and-read"], [174, "i2c-write-and-read"], [195, "i2c-write-and-read"], [216, "i2c-write-and-read"], [253, "i2c-write-and-read"], [277, "i2c-write-and-read"], [427, "i2c-write-and-read"], [454, "i2c-write-and-read"], [471, "i2c-write-and-read"], [488, "i2c-write-and-read"], [517, "i2c-write-and-read"], [537, "i2c-write-and-read"]], "SPI read and write": [[145, "spi-read-and-write"], [197, "spi-read-and-write"], [218, "spi-read-and-write"], [255, "spi-read-and-write"], [279, "spi-read-and-write"], [429, "spi-read-and-write"], [473, "spi-read-and-write"], [490, "spi-read-and-write"], [519, "spi-read-and-write"], [539, "spi-read-and-write"]], "SPI write": [[146, "spi-write"], [198, "spi-write"], [219, "spi-write"], [256, "spi-write"], [280, "spi-write"], [430, "spi-write"], [474, "spi-write"], [491, "spi-write"], [520, "spi-write"], [540, "spi-write"]], "System get USB info": [[147, "system-get-usb-info"], [176, "system-get-usb-info"], [199, "system-get-usb-info"], [220, "system-get-usb-info"], [238, "system-get-usb-info"], [257, "system-get-usb-info"], [281, "system-get-usb-info"], [431, "system-get-usb-info"], [456, "system-get-usb-info"], [475, "system-get-usb-info"], [492, "system-get-usb-info"], [506, "system-get-usb-info"], [521, "system-get-usb-info"], [541, "system-get-usb-info"]], "System get pin mode": [[148, "system-get-pin-mode"], [177, "system-get-pin-mode"], [200, "system-get-pin-mode"], [221, "system-get-pin-mode"], [239, "system-get-pin-mode"], [258, "system-get-pin-mode"], [282, "system-get-pin-mode"], [432, "system-get-pin-mode"], [457, "system-get-pin-mode"], [476, "system-get-pin-mode"], [493, "system-get-pin-mode"], [507, "system-get-pin-mode"], [522, "system-get-pin-mode"], [542, "system-get-pin-mode"]], "UART read": [[155, "uart-read"], [184, "uart-read"], [207, "uart-read"], [228, "uart-read"], [268, "uart-read"], [292, "uart-read"], [435, "uart-read"], [460, "uart-read"], [479, "uart-read"], [496, "uart-read"], [528, "uart-read"], [548, "uart-read"]], "UART write": [[156, "uart-write"], [185, "uart-write"], [208, "uart-write"], [229, "uart-write"], [269, "uart-write"], [293, "uart-write"], [436, "uart-write"], [461, "uart-write"], [480, "uart-write"], [497, "uart-write"], [529, "uart-write"], [549, "uart-write"]], "CAN read": [[186, "can-read"], [462, "can-read"]], "CAN write": [[187, "can-write"], [463, "can-write"]], "RTD read channel data": [[261, "rtd-read-channel-data"], [525, "rtd-read-channel-data"]], "RTD read channel data with logger": [[262, "rtd-read-channel-data-with-logger"], [526, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[263, "rtd-read-channel-status"], [527, "rtd-read-channel-status"]], "AHRS read": [[294, "ahrs-read"], [550, "ahrs-read"]], "System get Wifi DAQ status": [[300, "system-get-wifi-daq-status"], [313, "system-get-wifi-daq-status"], [556, "system-get-wifi-daq-status"], [565, "system-get-wifi-daq-status"]], "AI test panel": [[569, "ai-test-panel"], [579, "ai-test-panel"]], "AO test panel": [[570, "ao-test-panel"], [580, "ao-test-panel"]], "DO test panel": [[571, "do-test-panel"], [581, "do-test-panel"]], "I2C test panel": [[572, "i2c-test-panel"], [582, "i2c-test-panel"]], "SPI test panel": [[573, "spi-test-panel"], [583, "spi-test-panel"]], "Network device finder": [[574, "network-device-finder"], [584, "network-device-finder"]], "Device network info center": [[575, "device-network-info-center"], [585, "device-network-info-center"]], "RTD test panel": [[576, "rtd-test-panel"], [586, "rtd-test-panel"]], "TC test panel": [[577, "tc-test-panel"], [587, "tc-test-panel"]], "UART test panel": [[578, "uart-test-panel"], [588, "uart-test-panel"]], "Example Codes - GUI (async)": [[589, "example-codes-gui-async"]], "AI": [[589, "ai"], [590, "ai"]], "AO": [[589, "ao"], [590, "ao"]], "DO": [[589, "do"], [590, "do"]], "I2C": [[589, "i2c"], [590, "i2c"]], "SPI": [[589, "spi"], [590, "spi"]], "System": [[589, "system"], [590, "system"]], "Temperature-RTD": [[589, "temperature-rtd"], [590, "temperature-rtd"]], "Temperature-TC": [[589, "temperature-tc"], [590, "temperature-tc"]], "UART": [[589, "uart"], [590, "uart"]], "Example Codes - GUI (sync)": [[590, "example-codes-gui-sync"]], "Example Codes - Console (async)": [[591, "example-codes-console-async"]], "Device finder": [[591, "device-finder"], [592, "device-finder"], [595, "device-finder"]], "STEM": [[591, "stem"], [592, "stem"], [604, "stem"]], "EDrive-ST": [[591, "edrive-st"], [592, "edrive-st"], [596, "edrive-st"]], "EMotion": [[591, "emotion"], [592, "emotion"], [597, "emotion"]], "Ethan-A": [[591, "ethan-a"], [592, "ethan-a"], [598, "ethan-a"]], "Ethan-D": [[591, "ethan-d"], [592, "ethan-d"], [599, "ethan-d"]], "Ethan-I": [[591, "ethan-i"], [592, "ethan-i"], [600, "ethan-i"]], "Ethan-L": [[591, "ethan-l"], [592, "ethan-l"], [601, "ethan-l"]], "Ethan-O": [[591, "ethan-o"], [592, "ethan-o"], [602, "ethan-o"]], "Ethan-T": [[591, "ethan-t"], [592, "ethan-t"], [603, "ethan-t"]], "USB-DAQ-F1-AD": [[591, "usb-daq-f1-ad"], [592, "usb-daq-f1-ad"], [605, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[591, "usb-daq-f1-aod"], [592, "usb-daq-f1-aod"], [606, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[591, "usb-daq-f1-cd"], [592, "usb-daq-f1-cd"], [607, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[591, "usb-daq-f1-d"], [592, "usb-daq-f1-d"], [608, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[591, "usb-daq-f1-d-snk"], [592, "usb-daq-f1-d-snk"], [609, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[591, "usb-daq-f1-rd"], [592, "usb-daq-f1-rd"], [610, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[591, "usb-daq-f1-td"], [592, "usb-daq-f1-td"], [611, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[591, "wifi-daq-e3-a"], [592, "wifi-daq-e3-a"], [612, "wifi-daq-e3-a"]], "Wifi-DAQ-F4-A": [[591, "wifi-daq-f4-a"], [592, "wifi-daq-f4-a"], [613, "wifi-daq-f4-a"]], "Example Codes - Console (sync)": [[592, "example-codes-console-sync"]], "Products Usage": [[594, "products-usage"]], "Utilities": [[594, "utilities"]], "Wifi devices": [[594, "wifi-devices"]], "Ethernet devices": [[594, "ethernet-devices"]], "USB devices": [[594, "usb-devices"]], "API function description": [[595, "api-function-description"], [596, "api-function-description"], [597, "api-function-description"], [598, "api-function-description"], [599, "api-function-description"], [600, "api-function-description"], [601, "api-function-description"], [602, "api-function-description"], [603, "api-function-description"], [604, "api-function-description"], [605, "api-function-description"], [606, "api-function-description"], [607, "api-function-description"], [608, "api-function-description"], [609, "api-function-description"], [610, "api-function-description"], [611, "api-function-description"], [612, "api-function-description"], [613, "api-function-description"]], "Device pinout": [[596, "device-pinout"], [597, "device-pinout"], [598, "device-pinout"], [599, "device-pinout"], [600, "device-pinout"], [601, "device-pinout"], [602, "device-pinout"], [603, "device-pinout"], [604, "device-pinout"], [605, "device-pinout"], [606, "device-pinout"], [607, "device-pinout"], [608, "device-pinout"], [609, "device-pinout"], [610, "device-pinout"], [611, "device-pinout"], [612, "device-pinout"], [613, "device-pinout"]], "Products Feature": [[614, "products-feature"]], "I/O channel function table": [[615, "i-o-channel-function-table"]], "Error Code Table": [[616, "error-code-table"]], "Setting Table": [[617, "setting-table"]], "AI Mode": [[617, "ai-mode"]], "AO Form": [[617, "ao-form"]], "AO Mode": [[617, "ao-mode"]], "CAN Speed": [[617, "can-speed"]], "CAN Type": [[617, "can-type"]], "I2C Address": [[617, "i2c-address"]], "I2C Speed": [[617, "i2c-speed"]], "Motion Capture Mode": [[617, "motion-capture-mode"]], "Motion Capture Type": [[617, "motion-capture-type"]], "Motion Direction": [[617, "motion-direction"]], "Motion Enable": [[617, "motion-enable"]], "Motion Find Reference Type": [[617, "motion-find-reference-type"]], "Motion Operation Mode": [[617, "motion-operation-mode"]], "Motion Polarity": [[617, "motion-polarity"]], "Motion Search Direction": [[617, "motion-search-direction"]], "Motion Stepper Output": [[617, "motion-stepper-output"]], "Motion Stop Type": [[617, "motion-stop-type"]], "SPI Clock": [[617, "spi-clock"]], "SPI Data Size": [[617, "spi-data-size"]], "SPI Endianness": [[617, "spi-endianness"]], "SPI Mode": [[617, "spi-mode"]], "Thermal Channel": [[617, "thermal-channel"]], "Thermal OverSampling": [[617, "thermal-oversampling"]], "Thermal Type": [[617, "thermal-type"]], "UART Data Size": [[617, "uart-data-size"]], "UART Parity": [[617, "uart-parity"]], "UART Stop Bit": [[617, "uart-stop-bit"]], "I/O port function table": [[618, "i-o-port-function-table"]]}, "indexentries": {"module": [[593, "module-pywpc"]], "pywpc": [[593, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[595, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[595, "pywpc.DeviceFinder.disconnect"]], "drive_cfgaxisdirection() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgAxisDirection"]], "drive_cfgaxisdirection_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgAxisDirection_async"]], "drive_cfgaxismove() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgAxisMove"]], "drive_cfgaxismove_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgAxisMove_async"]], "drive_cfgencoder() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgEncoder"]], "drive_cfgencoderdirection() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgEncoderDirection"]], "drive_cfgencoderdirection_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgEncoderDirection_async"]], "drive_cfgencoder_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgEncoder_async"]], "drive_cfgfindref() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgFindRef"]], "drive_cfgfindref_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgFindRef_async"]], "drive_cfglimit() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgLimit"]], "drive_cfglimit_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_cfgLimit_async"]], "drive_close() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_close"]], "drive_close_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_close_async"]], "drive_enableservooff() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_enableServoOff"]], "drive_enableservooff_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_enableServoOff_async"]], "drive_enableservoon() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_enableServoOn"]], "drive_enableservoon_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_enableServoOn_async"]], "drive_findreference() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_findReference"]], "drive_findreference_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_findReference_async"]], "drive_getalarmstatus() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_getAlarmStatus"]], "drive_getalarmstatus_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_getAlarmStatus_async"]], "drive_getlimitstatus() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_getLimitStatus"]], "drive_getlimitstatus_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_getLimitStatus_async"]], "drive_getmovestatus() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_getMoveStatus"]], "drive_getmovestatus_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_getMoveStatus_async"]], "drive_open() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_open"]], "drive_open_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_open_async"]], "drive_overrideaccel() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_overrideAccel"]], "drive_overrideaccel_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_overrideAccel_async"]], "drive_overrideposition() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_overridePosition"]], "drive_overrideposition_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_overridePosition_async"]], "drive_overridevelocity() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_overrideVelocity"]], "drive_overridevelocity_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_overrideVelocity_async"]], "drive_readcurrentvelocity() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_readCurrentVelocity"]], "drive_readcurrentvelocity_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_readCurrentVelocity_async"]], "drive_readencoderposition() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_readEncoderPosition"]], "drive_readencoderposition_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_readEncoderPosition_async"]], "drive_rstencoderposi() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_rstEncoderPosi"]], "drive_rstencoderposi_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_rstEncoderPosi_async"]], "drive_start() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_start"]], "drive_start_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_start_async"]], "drive_stop() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_stop"]], "drive_stop_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Drive_stop_async"]], "edrive_st (class in pywpc)": [[596, "pywpc.EDrive_ST"]], "net_getgateway() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.Sys_setSwitchMode_async"]], "close() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.close"]], "connect() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.connect"]], "disconnect() (pywpc.edrive_st method)": [[596, "pywpc.EDrive_ST.disconnect"]], "emotion (class in pywpc)": [[597, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[597, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[597, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[597, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[597, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[597, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[597, "pywpc.EMotion.Sys_setSwitchMode_async"]], "close() (pywpc.emotion method)": [[597, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[597, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[597, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_enableCS_async"]], "ai_getport() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_getPort"]], "ai_open() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[598, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[598, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[598, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[598, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[598, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[598, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[598, "pywpc.EthanA.Sys_setSwitchMode_async"]], "close() (pywpc.ethana method)": [[598, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[598, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[598, "pywpc.EthanA.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[599, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[599, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[599, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[599, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[599, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[599, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "pwm_close() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_close"]], "pwm_close_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_close_async"]], "pwm_open() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_open"]], "pwm_open_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_setFrequency_async"]], "pwm_start() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_start"]], "pwm_start_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_start_async"]], "pwm_stop() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_stop"]], "pwm_stop_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[599, "pywpc.EthanD.Sys_setSwitchMode_async"]], "close() (pywpc.ethand method)": [[599, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[599, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[599, "pywpc.EthanD.disconnect"]], "ai_close() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_close_async"]], "ai_getport() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_getPort"]], "ai_open() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[600, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[600, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[600, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[600, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[600, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[600, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[600, "pywpc.EthanI.Sys_setSwitchMode_async"]], "close() (pywpc.ethani method)": [[600, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[600, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[600, "pywpc.EthanI.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[601, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[601, "pywpc.EthanL.Sys_setSwitchMode_async"]], "close() (pywpc.ethanl method)": [[601, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[601, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[601, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_close_async"]], "ao_getenablechannels() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getEnableChannels"]], "ao_getmode() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getMode"]], "ao_getmode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getMode_async"]], "ao_getport() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getPort"]], "ao_getstate() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getState"]], "ao_getvalues() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_open_async"]], "ao_pushtobuffer() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_pushToBuffer"]], "ao_setenablechannels() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[602, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[602, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[602, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[602, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[602, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[602, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[602, "pywpc.EthanO.Sys_setSwitchMode_async"]], "close() (pywpc.ethano method)": [[602, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[602, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[602, "pywpc.EthanO.disconnect"]], "ethant (class in pywpc)": [[603, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[603, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[603, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[603, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[603, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[603, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[603, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[603, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[603, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[603, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[604, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[604, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_enableCS_async"]], "ai_getport() (pywpc.stem method)": [[604, "pywpc.STEM.AI_getPort"]], "ai_open() (pywpc.stem method)": [[604, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[604, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[604, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[604, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[604, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[604, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[604, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[604, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[604, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[604, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[604, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_close_async"]], "ao_getenablechannels() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getEnableChannels"]], "ao_getmode() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getMode"]], "ao_getmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getMode_async"]], "ao_getport() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getPort"]], "ao_getstate() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getState"]], "ao_getvalues() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[604, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[604, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_open_async"]], "ao_pushtobuffer() (pywpc.stem method)": [[604, "pywpc.STEM.AO_pushToBuffer"]], "ao_setenablechannels() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[604, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[604, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[604, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[604, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.stem method)": [[604, "pywpc.STEM.DIO_setPortIdle_async"]], "di_closepins() (pywpc.stem method)": [[604, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[604, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[604, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[604, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[604, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[604, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[604, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[604, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[604, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[604, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[604, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[604, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[604, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[604, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[604, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[604, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[604, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[604, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[604, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[604, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[604, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[604, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[604, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[604, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[604, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[604, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[604, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[604, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[604, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[604, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[604, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[604, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[604, "pywpc.STEM.Sys_setSwitchMode_async"]], "close() (pywpc.stem method)": [[604, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[604, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[604, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_getport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.AI_stop_async"]], "counter_close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[605, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[605, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_getport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getenablechannels() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getEnableChannels"]], "ao_getmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getMode"]], "ao_getmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getMode_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getstate() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getState"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_pushtobuffer() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_pushToBuffer"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "counter_close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[606, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[606, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.CAN_write_async"]], "counter_close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[607, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[607, "pywpc.USBDAQF1CD.disconnect"]], "counter_close() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[608, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[608, "pywpc.USBDAQF1D.disconnect"]], "counter_close() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "usbdaqf1dsnk (class in pywpc)": [[609, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[609, "pywpc.USBDAQF1DSNK.disconnect"]], "counter_close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[610, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[610, "pywpc.USBDAQF1RD.disconnect"]], "counter_close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[611, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[611, "pywpc.USBDAQF1TD.disconnect"]], "ahrs_close() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_close"]], "ahrs_close_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_close_async"]], "ahrs_open() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_open"]], "ahrs_open_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_open_async"]], "ahrs_readstreaming() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_readStreaming"]], "ahrs_readstreaming_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_readStreaming_async"]], "ahrs_reset() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_reset"]], "ahrs_reset_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_reset_async"]], "ahrs_setgeneral() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_setGeneral"]], "ahrs_setgeneral_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_setGeneral_async"]], "ahrs_start() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_start"]], "ahrs_start_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_start_async"]], "ahrs_stop() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_stop"]], "ahrs_stop_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AHRS_stop_async"]], "ai_close() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_getport() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_getPort"]], "ai_open() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "wifidaqe3a (class in pywpc)": [[612, "pywpc.WifiDAQE3A"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_readThermo_async"]], "wifi_setap() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.Wifi_setBandwidth_async"]], "close() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[612, "pywpc.WifiDAQE3A.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_getport() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_getPort"]], "ai_open() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "wifidaqf4a (class in pywpc)": [[613, "pywpc.WifiDAQF4A"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_readThermo_async"]], "wifi_setap() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.Wifi_setBandwidth_async"]], "close() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[613, "pywpc.WifiDAQF4A.disconnect"]]}})