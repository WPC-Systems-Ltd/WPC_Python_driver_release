Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_1axis_move", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_velocity_blending", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDrive_ST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDrive_ST/System_ETH/hello_world", "examples/Console/Asynchronous/EDrive_ST/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EDrive_ST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDrive_ST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDrive_ST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDrive_ST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/System_ETH/hello_world", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AHRS/AHRS_read", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_1axis_move", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_velocity_blending", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDrive_ST/System_ETH/get_network_info", "examples/Console/Synchronous/EDrive_ST/System_ETH/hello_world", "examples/Console/Synchronous/EDrive_ST/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/System_ETH/hello_world", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/System_ETH/hello_world", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/PWM/PWM_generate", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/System_ETH/hello_world", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/System_ETH/hello_world", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/System_ETH/hello_world", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/System_ETH/hello_world", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/hello_world", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/STEM/System_ETH/hello_world", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AHRS/AHRS_read", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDrive_ST", "products/EMotion", "products/EthanA", "products/EthanD", "products/EthanI", "products/EthanL", "products/EthanO", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQF4A", "products_summary", "ref_AIO", "ref_channel", "ref_error", "ref_param", "ref_port"], "filenames": ["README.rst", "examples\\Console\\Asynchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_1axis_move.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_velocity_blending.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\EthanD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AHRS\\AHRS_read.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Synchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_1axis_move.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_velocity_blending.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\EthanD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AHRS\\AHRS_read.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\set_and_get_RTC.rst", "examples\\GUI\\Synchronous\\AI\\AI_integrated_gui.rst", "examples\\GUI\\Synchronous\\AO\\AO_gui.rst", "examples\\GUI\\Synchronous\\DO\\DO_gui.rst", "examples\\GUI\\Synchronous\\I2C\\I2C_gui.rst", "examples\\GUI\\Synchronous\\SPI\\SPI_gui.rst", "examples\\GUI\\Synchronous\\System\\find_all_devices_gui.rst", "examples\\GUI\\Synchronous\\System\\get_device_info_gui.rst", "examples\\GUI\\Synchronous\\Temperature_RTD\\RTD_gui.rst", "examples\\GUI\\Synchronous\\Temperature_TC\\TC_gui.rst", "examples\\GUI\\Synchronous\\UART\\UART_gui.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products\\DeviceFinder.rst", "products\\EDrive_ST.rst", "products\\EMotion.rst", "products\\EthanA.rst", "products\\EthanD.rst", "products\\EthanI.rst", "products\\EthanL.rst", "products\\EthanO.rst", "products\\EthanT.rst", "products\\STEM.rst", "products\\USBDAQF1AD.rst", "products\\USBDAQF1AOD.rst", "products\\USBDAQF1CD.rst", "products\\USBDAQF1D.rst", "products\\USBDAQF1DSNK.rst", "products\\USBDAQF1RD.rst", "products\\USBDAQF1TD.rst", "products\\WifiDAQE3A.rst", "products\\WifiDAQF4A.rst", "products_summary.rst", "ref_AIO.rst", "ref_channel.rst", "ref_error.rst", "ref_param.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive 1axis move", "Drive find limit", "Drive position blending", "Drive servo on", "Drive velocity blending", "Drive velocity blending acceleration", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AHRS read", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive 1axis move", "Drive find limit", "Drive position blending", "Drive servo on", "Drive velocity blending", "Drive velocity blending acceleration", "System get network info", "System hello world", "Set and get RTC", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Relay read counters", "Relay set channel", "System get network info", "System hello world", "Set and get RTC", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System hello world", "Set and get RTC", "System get network info", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AHRS read", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-D", "Ethan-I", "Ethan-L", "Ethan-O", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-F4-A", "Products Feature", "AI Max Sampling Rate Table", "I/O Channel Function Table", "Error Code Table", "Setting Table", "I/O Port Function Table"], "terms": {"welcom": [0, 602], "wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 628], "api": [0, 602, 603, 626], "document": [0, 602], "It": [0, 58, 59, 115, 116, 121, 122, 141, 142, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 413, 414, 419, 420, 435, 436, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 602, 606, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "i": [0, 9, 10, 12, 14, 22, 23, 24, 26, 27, 31, 39, 40, 42, 44, 45, 49, 52, 53, 55, 57, 60, 61, 62, 63, 66, 67, 69, 71, 74, 75, 77, 79, 81, 83, 84, 86, 88, 90, 91, 93, 94, 96, 98, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 138, 140, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 158, 161, 165, 167, 168, 171, 172, 173, 176, 177, 178, 179, 180, 183, 184, 185, 187, 189, 192, 194, 197, 198, 199, 200, 201, 203, 206, 207, 208, 210, 212, 215, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 233, 236, 239, 240, 241, 242, 245, 246, 247, 249, 251, 252, 255, 256, 257, 258, 259, 261, 264, 265, 266, 271, 273, 276, 279, 280, 281, 282, 283, 285, 288, 289, 290, 295, 297, 300, 301, 305, 309, 310, 311, 313, 315, 316, 320, 324, 325, 326, 328, 330, 339, 340, 348, 349, 350, 352, 353, 357, 365, 366, 367, 371, 374, 375, 378, 379, 380, 381, 384, 385, 388, 389, 391, 393, 394, 396, 397, 399, 400, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 432, 434, 437, 438, 439, 440, 441, 443, 446, 447, 448, 451, 455, 457, 458, 461, 462, 463, 466, 467, 468, 469, 470, 473, 474, 475, 478, 480, 483, 484, 485, 486, 487, 489, 492, 493, 494, 497, 500, 501, 502, 503, 504, 506, 509, 510, 511, 514, 517, 518, 519, 520, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 538, 539, 540, 546, 549, 550, 551, 552, 553, 555, 558, 559, 560, 566, 567, 571, 575, 576, 577, 578, 582, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626], "an": [0, 595, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "easi": [0, 602, 623], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 376, 377, 413, 414, 419, 420, 435, 436, 441, 457, 458, 464, 465, 470, 481, 482, 487, 498, 499, 504, 515, 516, 527, 528, 533, 547, 548, 553, 602, 605, 606, 607, 609, 611, 613, 614, 615, 616, 621, 622, 628], "open": [0, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 72, 80, 81, 89, 90, 91, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 298, 299, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 386, 390, 391, 395, 396, 397, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 590, 591, 592, 593, 596, 597, 598, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sourc": [0, 602, 623], "tool": [0, 602], "beginn": [0, 602], "we": [0, 147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 602], "provid": [0, 602], "excel": [0, 602], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 628], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "help": [0, 602], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602, 607, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625], "quickli": [0, 602], "get": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 367, 368, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 384, 386, 388, 390, 391, 393, 395, 396, 397, 399, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 575, 576, 578, 579, 581, 582, 583, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "our": [0, 602], "product": [0, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 602, 624, 625, 626, 628], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626], "real": [0, 602], "world": [0, 600, 601, 602], "usag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 607, 609, 611, 613, 614, 615, 616, 621, 622, 624, 626], "make": [0, 147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 602], "great": [0, 602], "wai": [0, 64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 602], "learn": [0, 602], "therefor": [0, 602], "highli": [0, 602], "recommend": [0, 602, 621, 622], "becaus": [0, 11, 12, 13, 14, 41, 42, 43, 44, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 130, 131, 132, 133, 155, 156, 157, 158, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 312, 313, 314, 315, 327, 328, 329, 330, 602], "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 123, 124, 128, 129, 130, 131, 132, 133, 135, 137, 143, 144, 145, 146, 148, 153, 154, 155, 156, 157, 158, 159, 162, 164, 170, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 202, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 223, 228, 229, 230, 231, 232, 233, 234, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 260, 265, 266, 267, 268, 270, 271, 272, 273, 274, 279, 280, 281, 282, 284, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 302, 304, 309, 310, 311, 312, 313, 314, 315, 317, 319, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 350, 353, 361, 362, 363, 365, 366, 368, 370, 374, 375, 378, 379, 380, 381, 382, 384, 385, 388, 389, 391, 393, 394, 395, 399, 400, 402, 403, 404, 405, 408, 410, 421, 422, 426, 427, 429, 431, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 452, 454, 460, 466, 467, 468, 469, 470, 471, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 517, 518, 519, 520, 521, 524, 525, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 544, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 568, 570, 575, 576, 577, 579, 581, 586, 587, 588, 589, 602, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627], "simpl": [0, 602], "just": [0, 602], "read": [0, 4, 30, 45, 46, 48, 49, 50, 58, 59, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 134, 135, 137, 138, 139, 141, 142, 161, 162, 164, 165, 166, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 334, 354, 356, 367, 368, 370, 371, 372, 376, 377, 386, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 428, 429, 431, 432, 433, 435, 436, 451, 452, 454, 455, 456, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 592, 593, 596, 597, 598, 600, 601, 602, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "write": [0, 48, 58, 59, 60, 61, 81, 89, 103, 112, 115, 116, 117, 121, 122, 123, 124, 137, 141, 142, 143, 144, 164, 167, 168, 170, 174, 175, 176, 177, 195, 196, 197, 198, 216, 217, 218, 219, 237, 238, 239, 240, 253, 254, 255, 256, 268, 277, 278, 279, 280, 292, 304, 319, 370, 376, 377, 378, 379, 391, 395, 405, 410, 413, 414, 415, 419, 420, 421, 422, 431, 435, 436, 437, 438, 454, 457, 458, 460, 464, 465, 466, 467, 481, 482, 483, 484, 498, 499, 500, 501, 515, 516, 517, 518, 527, 528, 529, 530, 542, 547, 548, 549, 550, 562, 570, 581, 590, 591, 592, 593, 598, 600, 601, 602, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "allow": [0, 602, 624], "access": [0, 602], "updat": [0, 46, 48, 110, 111, 112, 117, 135, 137, 162, 164, 302, 304, 317, 319, 368, 370, 408, 409, 410, 415, 429, 431, 452, 454, 568, 570, 579, 581, 589, 590, 591, 592, 593, 595, 596, 597, 598, 602, 623], "data": [0, 12, 13, 14, 42, 43, 44, 45, 46, 48, 49, 50, 55, 56, 57, 69, 70, 71, 72, 77, 78, 79, 86, 87, 88, 96, 97, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 137, 138, 139, 147, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 180, 182, 187, 188, 189, 190, 191, 192, 193, 201, 203, 204, 205, 210, 211, 212, 213, 214, 222, 224, 225, 226, 231, 232, 233, 234, 235, 244, 249, 250, 251, 259, 261, 262, 263, 271, 272, 273, 274, 275, 283, 285, 286, 287, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 313, 314, 315, 316, 317, 319, 320, 321, 328, 329, 330, 367, 368, 370, 371, 372, 386, 407, 408, 409, 410, 411, 412, 413, 414, 415, 428, 429, 431, 432, 433, 441, 443, 444, 445, 449, 450, 451, 452, 454, 455, 456, 457, 458, 470, 472, 476, 477, 478, 479, 487, 489, 490, 491, 495, 496, 504, 506, 507, 508, 512, 513, 522, 533, 535, 536, 537, 544, 545, 553, 555, 556, 557, 564, 565, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 590, 592, 593, 596, 597, 598, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "eas": [0, 602], "ad": [0, 602, 603, 624, 625, 628], "your": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602], "toolkit": [0, 602], "onli": [0, 602, 607, 609, 611, 613, 614, 615, 621, 622], "simplifi": [0, 602], "task": [0, 602], "also": [0, 602], "practic": [0, 602], "experi": [0, 602], "bridg": [0, 602], "theori": [0, 602], "applic": [0, 602], "last": [0, 8, 38, 51, 65, 73, 82, 92, 99, 102, 103, 104, 127, 147, 149, 150, 151, 152, 159, 160, 180, 182, 183, 190, 191, 192, 193, 201, 203, 204, 205, 206, 213, 214, 222, 224, 225, 226, 227, 234, 235, 244, 245, 259, 261, 262, 263, 264, 267, 268, 269, 274, 275, 283, 285, 286, 287, 288, 291, 292, 293, 298, 299, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 404, 405, 406, 425, 441, 443, 444, 445, 446, 449, 450, 470, 472, 473, 476, 477, 478, 479, 487, 489, 490, 491, 492, 495, 496, 504, 506, 507, 508, 509, 512, 513, 522, 523, 533, 535, 536, 537, 538, 541, 542, 543, 544, 545, 553, 555, 556, 557, 558, 561, 562, 563, 564, 565, 574, 585, 602], "least": [0, 102, 103, 267, 268, 291, 292, 404, 405, 541, 542, 561, 562, 602], "valuabl": [0, 602], "resourc": [0, 602], "both": [0, 602], "work": [0, 602], "effici": [0, 602], "support": [0, 47, 118, 136, 163, 169, 303, 318, 369, 396, 416, 417, 430, 453, 459, 461, 569, 580, 602, 619, 623, 626], "synchron": [0, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 415, 602], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626], "comput": [0, 602], "process": [0, 45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 72, 89, 90, 91, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 386, 395, 396, 397, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 602, 626], "thread": [0, 11, 13, 24, 27, 41, 43, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 130, 132, 155, 157, 186, 188, 209, 211, 230, 232, 248, 250, 270, 272, 294, 296, 312, 314, 327, 329, 350, 353, 589, 600, 602], "mean": [0, 602, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "two": [0, 11, 12, 14, 41, 42, 44, 54, 55, 57, 68, 69, 71, 76, 77, 79, 85, 86, 88, 95, 96, 98, 105, 106, 108, 130, 131, 133, 147, 155, 156, 158, 180, 186, 187, 189, 201, 209, 210, 212, 222, 230, 231, 233, 248, 249, 251, 259, 267, 268, 269, 270, 271, 273, 283, 294, 295, 297, 312, 313, 315, 327, 328, 330, 441, 470, 487, 504, 533, 541, 542, 543, 553, 596, 602, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 627], "more": [0, 602], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602, 611, 613, 615], "step": [0, 45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 89, 90, 91, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 395, 396, 397, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 602, 605, 606, 613, 623, 627], "manner": [0, 602], "one": [0, 600, 601, 602, 606, 607, 609, 612, 613, 614, 615, 619, 620, 621, 622], "after": [0, 102, 103, 291, 292, 404, 405, 561, 562, 602, 605, 606, 607, 613, 614, 615, 616, 621, 622], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "In": [0, 90, 91, 115, 116, 117, 119, 120, 167, 168, 171, 172, 396, 397, 413, 414, 415, 417, 418, 457, 458, 461, 462, 602, 614, 615, 616, 617, 619, 620, 626, 628], "execut": [0, 11, 12, 13, 14, 41, 42, 43, 44, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 130, 131, 132, 133, 155, 156, 157, 158, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 312, 313, 314, 315, 327, 328, 329, 330, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "block": [0, 602], "until": [0, 602], "previou": [0, 602], "complet": [0, 22, 23, 24, 26, 27, 348, 349, 350, 351, 352, 353, 602, 605, 606, 613], "independ": [0, 602], "each": [0, 60, 61, 81, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 391, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550, 602, 604, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "don": [0, 602], "t": [0, 13, 43, 56, 70, 78, 87, 97, 102, 103, 107, 132, 157, 188, 211, 232, 250, 272, 291, 292, 296, 314, 329, 404, 405, 561, 562, 602, 603, 620, 623, 627, 628], "wait": [0, 3, 4, 5, 6, 7, 24, 27, 35, 46, 48, 60, 61, 62, 63, 81, 89, 102, 103, 110, 111, 112, 123, 124, 135, 137, 143, 144, 145, 146, 159, 162, 164, 170, 176, 177, 178, 179, 190, 192, 193, 197, 198, 199, 200, 213, 218, 219, 220, 221, 234, 239, 240, 241, 242, 255, 256, 257, 258, 267, 268, 274, 279, 280, 281, 282, 291, 292, 298, 300, 302, 304, 317, 319, 333, 334, 335, 336, 337, 350, 353, 361, 362, 363, 368, 370, 378, 379, 380, 381, 391, 395, 404, 405, 408, 410, 421, 422, 429, 431, 437, 438, 439, 440, 449, 452, 454, 460, 466, 467, 468, 469, 476, 478, 479, 483, 484, 485, 486, 495, 500, 501, 502, 503, 512, 517, 518, 519, 520, 529, 530, 531, 532, 541, 542, 544, 549, 550, 551, 552, 561, 562, 564, 568, 570, 579, 581, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "instead": [0, 602, 626], "its": [0, 115, 116, 167, 168, 413, 414, 457, 458, 602, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "own": [0, 602], "without": [0, 602, 623], "gener": [0, 147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 300, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 566, 600, 601, 602, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 626], "easier": [0, 602], "understand": [0, 602], "debug": [0, 602], "while": [0, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 41, 42, 43, 44, 46, 48, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 110, 111, 112, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 135, 137, 155, 156, 157, 158, 162, 164, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 302, 304, 312, 313, 314, 315, 317, 319, 327, 328, 329, 330, 332, 334, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 368, 370, 408, 409, 410, 419, 420, 421, 422, 423, 424, 429, 431, 452, 454, 568, 570, 579, 581, 589, 600, 601, 602, 624, 628], "scalabl": [0, 602], "greater": [0, 602], "concurr": [0, 602], "sure": [0, 147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 602], "latest": [0, 602], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 595, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "up": [0, 121, 122, 123, 124, 125, 126, 419, 420, 421, 422, 423, 424, 602], "date": [0, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pip": [0, 602], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602], "fast": [0, 602, 614, 615, 616, 617, 619, 620, 627], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pkg_name": [0, 602], "handle_list": [0, 602], "devicefind": [0, 1, 331, 594, 602, 603, 604], "wifidaqe3a": [0, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 589, 595, 602, 603, 621, 623], "wifidaqf4a": [0, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 602, 603, 622, 623], "stem": [0, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 461, 589, 602, 603, 607, 614, 615, 621, 622, 623, 624, 626, 628], "emot": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 602, 603, 623, 628], "edrive_st": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 332, 333, 334, 335, 336, 337, 338, 339, 340, 602, 603, 605], "ethana": [0, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 367, 368, 369, 370, 371, 372, 373, 374, 375, 589, 595, 602, 603, 607, 623], "ethand": [0, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 591, 595, 602, 603, 608, 623], "ethani": [0, 72, 73, 74, 75, 76, 77, 78, 79, 386, 387, 388, 389, 602, 603, 609, 623], "ethanl": [0, 80, 81, 82, 83, 84, 85, 86, 87, 88, 390, 391, 392, 393, 394, 602, 603, 610, 623], "ethano": [0, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 395, 396, 397, 398, 399, 400, 602, 603, 611, 623], "ethant": [0, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 401, 402, 403, 404, 405, 406, 602, 603, 612, 623], "usbdaqf1d": [0, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 591, 592, 593, 598, 602, 603, 617, 623], "usbdaqf1dsnk": [0, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 591, 602, 603, 618, 623], "usbdaqf1ad": [0, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 589, 591, 592, 593, 598, 602, 603, 607, 613, 614, 615, 621, 622, 623], "usbdaqf1aod": [0, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 589, 590, 591, 592, 593, 598, 602, 603, 607, 613, 614, 615, 621, 622, 623], "usbdaqf1td": [0, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 591, 592, 593, 597, 598, 602, 603, 620, 623], "usbdaqf1rd": [0, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 591, 592, 593, 596, 598, 602, 603, 619, 623], "usbdaqf1cd": [0, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 591, 592, 593, 598, 602, 603, 616, 623], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602], "conda": [0, 602], "command": [0, 602, 621, 622, 623], "consol": [0, 602], "how": [0, 1, 8, 10, 11, 12, 13, 14, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 338, 340, 364, 366, 367, 368, 370, 371, 372, 373, 375, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 418, 425, 427, 428, 429, 431, 432, 433, 434, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 460, 461, 462, 463, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 521, 522, 523, 525, 526, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "build": [0, 602], "ex": [0, 602], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 600, 601, 602, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "miniconda": [0, 602], "virtual": [0, 602], "environ": [0, 602], "labview": [0, 602, 623], "time": [0, 11, 12, 13, 14, 24, 27, 41, 42, 43, 44, 49, 54, 55, 56, 57, 60, 61, 64, 68, 69, 70, 71, 76, 77, 78, 79, 81, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 124, 130, 131, 132, 133, 138, 143, 144, 148, 151, 155, 156, 157, 158, 165, 176, 177, 181, 182, 186, 187, 188, 189, 192, 197, 198, 202, 205, 209, 210, 211, 212, 218, 219, 223, 226, 230, 231, 232, 233, 239, 240, 243, 244, 248, 249, 250, 251, 255, 256, 260, 263, 270, 271, 272, 273, 279, 280, 284, 287, 294, 295, 296, 297, 305, 312, 313, 314, 315, 320, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 595, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626], "engin": [0, 602], "under": [0, 602, 624], "mit": [0, 602], "style": [0, 602], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "incorpor": [0, 602], "project": [0, 11, 12, 13, 14, 41, 42, 43, 44, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 130, 131, 132, 133, 155, 156, 157, 158, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 312, 313, 314, 315, 327, 328, 329, 330, 602], "mai": [0, 602], "differ": [0, 60, 61, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "non": [0, 602], "commerci": [0, 602], "find_devic": [1, 331], "find_all_devic": [1, 331], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "demonstr": [1, 8, 10, 11, 12, 13, 14, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 338, 340, 364, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588], "avail": [1, 331, 594, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 628], "usb": [1, 331, 602, 623, 624, 625, 626, 628], "ethernet": [1, 331, 594, 602, 606, 623], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 595, 614, 616, 617, 619, 620, 626], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 621, 622], "correct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 626], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 595, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 595, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622, 626], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 521, 522, 523, 524, 525, 526, 527, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 605, 606, 613, 614, 615, 616, 617, 619, 620], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 595, 606, 613, 614, 616, 617, 619, 620, 626], "http": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "com": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "system": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 389, 390, 391, 394, 395, 396, 397, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 576, 577, 578, 579, 581, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601], "ltd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "wpc_python_driver_releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "tree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "readm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "md": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "detail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624], "2023": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 614, 615, 616, 617, 619, 620], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "creat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 594], "handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "perform": [1, 12, 13, 14, 42, 43, 44, 55, 56, 57, 58, 59, 69, 70, 71, 77, 78, 79, 86, 87, 88, 96, 97, 98, 106, 107, 108, 121, 122, 131, 132, 133, 141, 142, 156, 157, 158, 174, 175, 187, 188, 189, 195, 196, 210, 211, 212, 216, 217, 231, 232, 233, 237, 238, 249, 250, 251, 253, 254, 271, 272, 273, 277, 278, 295, 296, 297, 313, 314, 315, 328, 329, 330, 331, 338, 364, 373, 376, 377, 383, 387, 392, 398, 401, 419, 420, 425, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 594, 605, 606, 613], "inform": [1, 8, 38, 51, 65, 73, 82, 92, 99, 121, 122, 123, 124, 125, 126, 127, 151, 182, 205, 226, 244, 263, 287, 307, 308, 322, 323, 331, 338, 364, 373, 383, 387, 392, 398, 401, 419, 420, 421, 422, 423, 424, 425, 445, 472, 491, 508, 522, 537, 557, 573, 574, 584, 585, 589, 591, 594, 595, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598], "dev_list": [1, 331], "bcst_enumerateusbdevic": [1, 331, 603, 604], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598], "printgenericerror": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "network": [1, 9, 10, 39, 40, 52, 53, 66, 67, 74, 75, 83, 84, 93, 94, 100, 101, 128, 129, 151, 153, 154, 182, 184, 185, 205, 207, 208, 226, 228, 229, 244, 246, 247, 263, 265, 266, 287, 289, 290, 307, 309, 310, 311, 322, 324, 325, 326, 331, 339, 340, 365, 366, 374, 375, 384, 385, 388, 389, 393, 394, 399, 400, 402, 403, 426, 427, 445, 447, 448, 472, 474, 475, 491, 493, 494, 508, 510, 511, 522, 524, 525, 537, 539, 540, 557, 559, 560, 573, 575, 576, 577, 584, 586, 587, 588, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622, 626], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "bcst_enumeratenetworkdevices_async": [1, 603, 604], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 623], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 350, 353, 589], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550, 614, 615, 616, 617, 618, 619, 620], "els": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 348, 349, 352, 367, 391, 407, 428, 451, 478, 567, 578, 589, 591, 595], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "ipythonspyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "drive_1axis_mov": [2, 332], "devicdepend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 616, 624], "paramet": [2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 72, 80, 81, 89, 90, 91, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 298, 299, 300, 301, 302, 304, 305, 306, 310, 316, 317, 319, 320, 321, 325, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "set": [2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 72, 80, 89, 90, 91, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 298, 299, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 392, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 578, 579, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "target_posit": [2, 4, 332, 334], "10000": [2, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 34, 89, 170, 332, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 359, 360, 395, 460, 590, 605, 606, 613], "relative_position_mod": [2, 4, 332, 334], "stop_decel": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 332, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363], "polar": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 332, 333, 334, 336, 337, 341, 342, 343, 344, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363, 605, 606, 613, 614, 616, 617, 619, 620, 626], "enabl": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 89, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 170, 332, 333, 334, 336, 337, 341, 342, 343, 344, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 460, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626], "active_low": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 332, 333, 334, 336, 337, 341, 342, 343, 344, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363], "active_high": [2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 332, 333, 334, 336, 337, 341, 342, 343, 344, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363], "en_forward": [2, 3, 4, 6, 7, 332, 333, 334, 336, 337, 605, 606, 613], "en_revers": [2, 3, 4, 6, 7, 332, 333, 334, 336, 337, 605, 606, 613], "orginal_direct": [2, 3, 332, 333], "model": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 594, 595, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "driver_info": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 595, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_getdriverinfo_async": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "name": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 574, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "edriv": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337, 603, 623, 628], "st": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337, 603, 623, 628], "drive_open_async": [2, 3, 4, 5, 6, 7, 603, 605], "drive_open": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337, 603, 605], "configur": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 45, 46, 48, 49, 50, 89, 102, 103, 109, 110, 111, 112, 113, 114, 134, 135, 137, 138, 139, 147, 149, 150, 159, 160, 161, 162, 164, 165, 166, 170, 180, 190, 191, 192, 193, 201, 203, 204, 213, 214, 222, 224, 225, 234, 235, 259, 261, 262, 274, 275, 283, 285, 286, 291, 292, 298, 299, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 332, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 367, 368, 370, 371, 372, 395, 404, 405, 407, 408, 409, 410, 411, 412, 428, 429, 431, 432, 433, 441, 443, 444, 449, 450, 451, 452, 454, 455, 456, 460, 470, 476, 477, 478, 479, 487, 489, 490, 495, 496, 504, 506, 507, 512, 513, 533, 535, 536, 544, 545, 553, 555, 556, 561, 562, 564, 565, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 605, 606, 607, 611, 613, 614, 615, 621, 622, 623], "drive_cfgaxismove_async": [2, 4, 6, 7, 603, 605], "drive_cfgaxismov": [2, 4, 6, 7, 332, 334, 336, 337, 603, 605], "drive_cfgaxisdirection_async": [2, 3, 603, 605], "drive_cfgaxisdirect": [2, 3, 332, 333, 603, 605], "drive_cfgencoderdirection_async": [2, 3, 603, 605], "drive_cfgencoderdirect": [2, 3, 332, 333, 603, 605], "drive_cfglimit_async": [2, 3, 4, 6, 7, 603, 605], "drive_cfglimit": [2, 3, 4, 6, 7, 332, 333, 334, 336, 337, 603, 605], "reset": [2, 3, 4, 6, 7, 310, 325, 332, 333, 334, 336, 337, 576, 587, 605, 606, 613, 614, 615, 616, 617, 619, 620, 621, 622], "drive_rstencoderposi_async": [2, 3, 4, 6, 7, 603, 605], "edst_reset": [2, 3, 4, 6, 7, 332, 333, 334, 336, 337], "servo": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 29, 30, 33, 36, 37, 332, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 359, 362, 363, 600, 601, 605, 606, 613, 623], "drive_enableservoon_async": [2, 3, 4, 5, 6, 7, 603, 605], "drive_enableservoon": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337, 603, 605], "start": [2, 4, 6, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 42, 44, 45, 46, 48, 55, 57, 64, 69, 71, 77, 79, 86, 88, 89, 96, 98, 106, 108, 109, 110, 111, 112, 117, 121, 122, 123, 124, 125, 126, 131, 133, 134, 135, 137, 140, 148, 156, 158, 161, 162, 164, 170, 173, 181, 187, 189, 192, 193, 194, 202, 210, 212, 215, 223, 231, 233, 236, 243, 249, 251, 252, 260, 271, 273, 276, 284, 295, 297, 300, 301, 302, 304, 313, 315, 316, 317, 319, 328, 330, 332, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 359, 362, 363, 367, 368, 370, 382, 395, 407, 408, 409, 410, 415, 419, 420, 421, 422, 423, 424, 428, 429, 431, 434, 442, 451, 452, 454, 460, 463, 471, 478, 479, 480, 488, 497, 505, 514, 521, 526, 534, 546, 554, 566, 567, 568, 570, 578, 579, 581, 589, 605, 606, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "drive_start_async": [2, 4, 6, 7, 603, 605], "drive_start": [2, 4, 6, 7, 332, 334, 336, 337, 603, 605], "move_statu": [2, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 332, 334, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 359], "drive_getmovestatus_async": [2, 4, 603, 605], "posi": [2, 4, 31, 332, 334, 357], "drive_readencoderposition_async": [2, 4, 603, 605], "encoder_posi": [2, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 36, 37, 332, 334, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 359, 362, 363, 605, 606, 613], "logical_posi": [2, 4, 15, 33, 332, 334, 341, 359], "stop": [2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 45, 46, 48, 64, 109, 110, 111, 112, 117, 134, 135, 137, 140, 148, 159, 160, 161, 162, 164, 173, 181, 190, 191, 192, 193, 194, 202, 213, 214, 215, 223, 234, 235, 236, 243, 252, 260, 274, 275, 276, 284, 298, 299, 300, 301, 302, 304, 316, 317, 319, 332, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 367, 368, 370, 382, 407, 408, 409, 410, 415, 428, 429, 431, 434, 442, 449, 450, 451, 452, 454, 463, 471, 476, 477, 478, 479, 480, 488, 495, 496, 497, 505, 512, 513, 514, 521, 526, 534, 544, 545, 546, 554, 564, 565, 566, 567, 568, 570, 578, 579, 581, 589, 598, 605, 606, 607, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "drive_stop_async": [2, 3, 4, 6, 7, 603, 605], "drive_stop": [2, 3, 4, 6, 7, 332, 333, 334, 336, 337, 603, 605], "off": [2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 33, 35, 36, 37, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 359, 361, 362, 363, 605, 606, 613, 616], "drive_enableservooff_async": [2, 3, 4, 5, 6, 7, 603, 605], "drive_enableservooff": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337, 603, 605], "drive_close_async": [2, 3, 4, 5, 6, 7, 603, 605], "drive_clos": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337, 603, 605], "drive_find_limit": [3, 333], "forward": [3, 6, 7, 28, 30, 333, 336, 337, 354, 356, 591, 605, 606, 613, 627], "revers": [3, 6, 7, 28, 30, 333, 336, 337, 354, 356, 605, 606, 613, 627], "oper": [3, 6, 7, 58, 59, 121, 122, 141, 142, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 333, 336, 337, 376, 377, 419, 420, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 605, 606, 613, 623, 626], "drive_cfgfindref_async": [3, 603, 605], "drive_cfgfindref": [3, 333, 603, 605], "refer": [3, 28, 29, 30, 115, 116, 167, 168, 333, 354, 355, 356, 413, 414, 457, 458, 605, 606, 613], "drive_findreference_async": [3, 603, 605], "drive_findrefer": [3, 333, 603, 605], "statu": [3, 10, 28, 30, 40, 53, 60, 61, 62, 63, 67, 75, 84, 94, 101, 123, 124, 129, 143, 144, 145, 146, 154, 176, 177, 178, 179, 185, 197, 198, 199, 200, 208, 218, 219, 220, 221, 229, 239, 240, 241, 242, 247, 255, 256, 257, 258, 266, 279, 280, 281, 282, 290, 311, 326, 333, 340, 354, 356, 366, 375, 378, 379, 380, 381, 385, 389, 394, 400, 403, 421, 422, 427, 437, 438, 439, 440, 448, 466, 467, 468, 469, 475, 483, 484, 485, 486, 494, 500, 501, 502, 503, 511, 517, 518, 519, 520, 525, 529, 530, 531, 532, 540, 549, 550, 551, 552, 560, 577, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "limit_statu": [3, 333], "drive_getlimitstatus_async": [3, 603, 605], "reverse_hit": [3, 28, 30, 333, 354, 356], "forward_hit": [3, 28, 30, 333, 354, 356], "3": [3, 4, 6, 13, 36, 43, 56, 58, 60, 62, 63, 70, 78, 87, 89, 90, 91, 97, 102, 103, 107, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 132, 141, 143, 145, 146, 149, 150, 152, 157, 159, 160, 167, 168, 170, 171, 172, 174, 176, 178, 179, 183, 188, 190, 191, 192, 193, 195, 197, 199, 200, 203, 204, 206, 211, 213, 214, 216, 218, 220, 221, 224, 225, 227, 232, 234, 235, 237, 239, 241, 242, 245, 250, 253, 255, 257, 258, 261, 262, 264, 272, 274, 275, 277, 279, 281, 282, 285, 286, 288, 291, 292, 296, 298, 299, 310, 314, 325, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 598, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628], "second": [3, 4, 5, 6, 7, 9, 11, 24, 27, 39, 41, 45, 46, 48, 52, 54, 60, 61, 62, 63, 64, 66, 68, 74, 76, 81, 83, 85, 93, 95, 100, 102, 103, 104, 105, 109, 110, 111, 112, 117, 123, 124, 128, 130, 134, 135, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 159, 160, 161, 162, 164, 176, 177, 178, 179, 180, 181, 183, 184, 186, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 234, 235, 239, 240, 241, 242, 243, 245, 246, 248, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 298, 299, 300, 301, 302, 304, 309, 312, 316, 317, 319, 324, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "move": [3, 4, 6, 7, 22, 23, 26, 333, 334, 336, 337, 348, 349, 351, 352, 362, 363, 600, 601, 605, 606, 613, 623], "sleepdelai": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 117, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 143, 144, 145, 146, 148, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 170, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 202, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 223, 228, 229, 230, 231, 232, 233, 234, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 260, 265, 266, 267, 268, 270, 271, 272, 273, 274, 279, 280, 281, 282, 284, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 350, 353, 361, 362, 363, 365, 366, 367, 368, 370, 374, 375, 378, 379, 380, 381, 382, 384, 385, 388, 389, 391, 393, 394, 395, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 415, 421, 422, 426, 427, 428, 429, 431, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 454, 460, 466, 467, 468, 469, 470, 471, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 517, 518, 519, 520, 521, 524, 525, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 544, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 566, 567, 568, 570, 575, 576, 577, 578, 579, 581, 586, 587, 588, 607, 613, 614, 615, 616, 617, 619, 620, 621, 622], "drive_position_blend": [4, 334], "30000": [4, 334], "new_posit": [4, 33, 334, 359, 605, 606, 613], "encod": [4, 15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 334, 341, 343, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363, 605, 606, 613, 623, 626, 627], "overwrit": [4, 334], "drive_overrideposition_async": [4, 603, 605], "drive_overrideposit": [4, 334, 603, 605], "drive_servo_on": [5, 335], "5": [5, 7, 10, 35, 37, 40, 45, 49, 53, 58, 60, 61, 64, 67, 75, 81, 84, 90, 91, 94, 101, 102, 103, 109, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 134, 138, 141, 143, 144, 148, 154, 159, 160, 161, 165, 167, 168, 171, 172, 174, 176, 177, 181, 185, 190, 191, 192, 195, 197, 198, 202, 208, 213, 214, 216, 218, 219, 223, 229, 234, 235, 237, 239, 240, 243, 247, 253, 255, 256, 260, 266, 274, 275, 277, 279, 280, 284, 290, 291, 292, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 337, 340, 361, 363, 366, 367, 371, 375, 376, 378, 379, 382, 385, 389, 391, 394, 396, 397, 400, 403, 404, 405, 407, 411, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 432, 435, 437, 438, 442, 448, 449, 450, 451, 455, 457, 458, 461, 462, 464, 466, 467, 471, 475, 476, 477, 478, 481, 483, 484, 488, 494, 495, 496, 498, 500, 501, 505, 511, 512, 513, 515, 517, 518, 521, 525, 527, 529, 530, 534, 540, 544, 545, 547, 549, 550, 554, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 598, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627], "drive_velocity_blend": [6, 336], "velocity_mod": [6, 7, 36, 37, 336, 337, 362, 363], "2": [6, 7, 11, 24, 26, 27, 30, 36, 37, 41, 45, 46, 48, 54, 58, 62, 68, 76, 81, 85, 89, 90, 91, 95, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 130, 134, 135, 137, 141, 145, 149, 150, 155, 159, 160, 161, 162, 164, 167, 168, 170, 171, 172, 174, 178, 186, 190, 191, 192, 193, 195, 199, 203, 204, 209, 213, 214, 216, 220, 224, 225, 230, 234, 235, 237, 241, 248, 253, 257, 261, 262, 270, 274, 275, 277, 281, 285, 286, 291, 292, 294, 298, 299, 300, 301, 302, 304, 312, 316, 317, 319, 327, 336, 337, 350, 352, 353, 356, 362, 363, 367, 368, 370, 376, 380, 391, 395, 396, 397, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 435, 439, 443, 444, 449, 450, 451, 452, 454, 457, 458, 460, 461, 462, 464, 468, 476, 477, 478, 479, 481, 485, 489, 490, 495, 496, 498, 502, 506, 507, 512, 513, 515, 519, 527, 531, 535, 536, 544, 545, 547, 551, 555, 556, 561, 562, 564, 565, 566, 567, 568, 570, 578, 579, 581, 589, 591, 592, 593, 594, 595, 596, 597, 598, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628], "new_velo": [6, 7, 36, 37, 336, 337, 362, 363, 605, 606, 613], "5000": [6, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 336, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 359, 360, 362, 363], "drive_overridevelocity_async": [6, 7, 603, 605], "drive_overrideveloc": [6, 7, 336, 337, 603, 605], "3000": [6, 7, 36, 37, 117, 336, 337, 362, 363, 415], "drive_velocity_blending_acceler": [7, 337], "new_accel": [7, 37, 337, 363, 605, 606, 613], "100": [7, 18, 25, 31, 37, 64, 148, 181, 202, 223, 243, 260, 267, 268, 284, 337, 344, 351, 357, 363, 382, 442, 471, 488, 505, 521, 534, 541, 542, 554, 589, 619, 623], "new_decel": [7, 37, 337, 363, 605, 606, 613], "drive_overrideaccel_async": [7, 603, 605], "drive_overrideaccel": [7, 337, 603, 605], "6000": [7, 37, 337, 363], "100000": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 37, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 359, 360, 362, 363, 605, 606, 613, 614, 615, 616, 617, 619, 620, 627], "system_eth": [8, 9, 10, 38, 39, 40, 51, 52, 53, 65, 66, 67, 73, 74, 75, 82, 83, 84, 92, 93, 94, 99, 100, 101, 127, 128, 129, 338, 339, 340, 364, 365, 366, 373, 374, 375, 383, 384, 385, 387, 388, 389, 392, 393, 394, 398, 399, 400, 401, 402, 403, 425, 426, 427], "get_network_info": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585], "hardwar": [8, 38, 51, 65, 73, 82, 92, 99, 127, 151, 182, 205, 226, 244, 263, 287, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 445, 472, 491, 508, 522, 537, 557, 574, 585, 605, 606, 613], "first": [8, 38, 51, 64, 65, 73, 82, 92, 99, 102, 103, 104, 127, 147, 148, 149, 150, 151, 152, 159, 160, 180, 181, 182, 183, 190, 191, 192, 193, 201, 202, 203, 204, 205, 206, 213, 214, 222, 223, 224, 225, 226, 227, 234, 235, 243, 244, 245, 259, 260, 261, 262, 263, 264, 267, 268, 269, 274, 275, 283, 284, 285, 286, 287, 288, 291, 292, 293, 298, 299, 308, 323, 338, 364, 373, 382, 383, 387, 392, 398, 401, 404, 405, 406, 425, 441, 442, 443, 444, 445, 446, 449, 450, 470, 471, 472, 473, 476, 477, 478, 479, 487, 488, 489, 490, 491, 492, 495, 496, 504, 505, 506, 507, 508, 509, 512, 513, 521, 522, 523, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 574, 585, 589, 591, 595, 614, 616, 617, 619, 620, 626, 627], "submask": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585, 594, 595], "mac": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585, 594, 595, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "ip_addr": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "net_getipaddrandsubmask_async": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "net_getmacaddr_async": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "hello_world": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "public": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "domain": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "rang": [9, 10, 22, 31, 39, 40, 49, 52, 53, 60, 61, 66, 67, 74, 75, 81, 83, 84, 93, 94, 100, 101, 113, 123, 124, 128, 129, 138, 140, 143, 144, 152, 153, 154, 165, 173, 176, 177, 183, 184, 185, 192, 194, 197, 198, 206, 207, 208, 215, 218, 219, 227, 228, 229, 236, 239, 240, 245, 246, 247, 252, 255, 256, 264, 265, 266, 276, 279, 280, 288, 289, 290, 300, 305, 309, 310, 311, 320, 324, 325, 326, 339, 340, 348, 357, 365, 366, 371, 374, 375, 378, 379, 384, 385, 388, 389, 391, 393, 394, 399, 400, 402, 403, 411, 421, 422, 426, 427, 432, 434, 437, 438, 446, 447, 448, 455, 463, 466, 467, 473, 474, 475, 478, 480, 483, 484, 492, 493, 494, 497, 500, 501, 509, 510, 511, 514, 517, 518, 523, 524, 525, 526, 529, 530, 538, 539, 540, 546, 549, 550, 558, 559, 560, 566, 571, 575, 576, 577, 582, 586, 587, 588, 589, 590, 591, 594, 596, 597, 623, 626], "10": [9, 10, 39, 40, 52, 53, 60, 61, 66, 67, 74, 75, 81, 83, 84, 89, 93, 94, 100, 101, 117, 123, 124, 128, 129, 140, 143, 144, 153, 154, 159, 170, 173, 176, 177, 184, 185, 190, 193, 194, 197, 198, 207, 208, 213, 215, 218, 219, 228, 229, 234, 236, 239, 240, 246, 247, 252, 255, 256, 265, 266, 274, 276, 279, 280, 289, 290, 298, 300, 309, 311, 324, 326, 339, 340, 365, 366, 374, 375, 378, 379, 384, 385, 388, 389, 391, 393, 394, 395, 399, 400, 402, 403, 415, 421, 422, 426, 427, 434, 437, 438, 447, 448, 449, 460, 463, 466, 467, 474, 475, 476, 479, 480, 483, 484, 493, 494, 495, 497, 500, 501, 510, 511, 512, 514, 517, 518, 524, 525, 526, 529, 530, 539, 540, 544, 546, 549, 550, 559, 560, 564, 566, 575, 577, 586, 588, 589, 614, 615, 616, 617, 619, 620, 623, 627], "restart": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "now": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "sys_reboot_async": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "set_and_get_rtc": [10, 40, 53, 67, 75, 84, 94, 101, 129, 154, 185, 208, 229, 247, 266, 290, 311, 326, 340, 366, 375, 385, 389, 394, 400, 403, 427, 448, 475, 494, 511, 525, 540, 560, 577, 588], "sys_setrtc_async": [10, 40, 53, 67, 75, 84, 94, 101, 129, 154, 185, 208, 229, 247, 266, 290, 311, 326, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "8": [10, 40, 45, 46, 48, 49, 50, 53, 67, 75, 84, 94, 101, 102, 103, 109, 110, 112, 117, 129, 134, 135, 137, 138, 139, 147, 149, 150, 154, 159, 160, 161, 162, 164, 165, 166, 167, 168, 180, 185, 190, 191, 193, 201, 203, 204, 208, 213, 214, 222, 224, 225, 229, 234, 235, 247, 259, 261, 262, 266, 274, 275, 283, 285, 286, 290, 291, 292, 298, 299, 301, 302, 304, 305, 306, 311, 316, 317, 319, 320, 321, 326, 340, 366, 367, 368, 370, 371, 372, 375, 385, 389, 394, 400, 403, 404, 405, 407, 408, 410, 415, 427, 428, 429, 431, 432, 433, 441, 443, 444, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 470, 475, 476, 477, 479, 487, 489, 490, 494, 495, 496, 504, 506, 507, 511, 512, 513, 525, 533, 535, 536, 540, 544, 545, 553, 555, 556, 560, 561, 562, 564, 565, 567, 568, 570, 571, 572, 577, 578, 579, 581, 582, 583, 588, 589, 590, 591, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627], "15": [10, 40, 53, 67, 75, 84, 94, 101, 129, 154, 185, 208, 229, 247, 266, 290, 311, 326, 340, 366, 375, 385, 389, 394, 400, 403, 427, 448, 475, 494, 511, 525, 540, 560, 577, 588], "sys_getrtc_async": [10, 11, 12, 13, 14, 40, 41, 42, 43, 44, 53, 54, 55, 56, 57, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 105, 106, 107, 108, 129, 130, 131, 132, 133, 151, 154, 155, 156, 157, 158, 182, 185, 186, 187, 188, 189, 205, 208, 209, 210, 211, 212, 226, 229, 230, 231, 232, 233, 244, 247, 248, 249, 250, 251, 263, 266, 270, 271, 272, 273, 287, 290, 294, 295, 296, 297, 311, 312, 313, 314, 315, 326, 327, 328, 329, 330, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "multiple_loops_async": [11, 41, 54, 68, 76, 85, 95, 105, 130, 155, 186, 209, 230, 248, 270, 294, 312, 327], "rtc": [11, 12, 13, 14, 41, 42, 43, 44, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 130, 131, 132, 133, 151, 155, 156, 157, 158, 182, 186, 187, 188, 189, 205, 209, 210, 211, 212, 226, 230, 231, 232, 233, 244, 248, 249, 250, 251, 263, 270, 271, 272, 273, 287, 294, 295, 296, 297, 312, 313, 314, 315, 327, 328, 329, 330, 445, 472, 491, 508, 522, 537, 557, 595, 600, 601, 626], "string": [11, 12, 41, 42, 54, 55, 68, 69, 76, 77, 85, 86, 95, 96, 105, 106, 130, 131, 155, 156, 160, 186, 187, 191, 209, 210, 214, 230, 231, 235, 248, 249, 270, 271, 275, 294, 295, 299, 312, 313, 327, 328, 450, 477, 496, 513, 545, 565, 592, 593, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "readrtc_loop": [11, 41, 54, 68, 76, 85, 95, 105, 130, 155, 186, 209, 230, 248, 270, 294, 312, 327], "true": [11, 12, 14, 18, 19, 41, 42, 44, 45, 54, 55, 57, 68, 69, 71, 76, 77, 79, 85, 86, 88, 95, 96, 98, 105, 106, 108, 109, 130, 131, 133, 134, 155, 156, 158, 161, 186, 187, 189, 193, 209, 210, 212, 230, 231, 233, 248, 249, 251, 270, 271, 273, 294, 295, 297, 301, 312, 313, 315, 316, 327, 328, 330, 344, 345, 367, 407, 428, 451, 479, 567, 578, 589, 591, 595, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 627], "printstring_loop": [11, 41, 54, 68, 76, 85, 95, 105, 130, 155, 186, 209, 230, 248, 270, 294, 312, 327], "gather": [11, 41, 54, 68, 76, 85, 95, 105, 130, 155, 186, 209, 230, 248, 270, 294, 312, 327], "part": [11, 12, 13, 14, 41, 42, 43, 44, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 130, 131, 132, 133, 155, 156, 157, 158, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 312, 313, 314, 315, 327, 328, 329, 330], "never": [11, 13, 41, 43, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 130, 132, 155, 157, 186, 188, 209, 211, 230, 232, 248, 250, 270, 272, 294, 296, 312, 314, 327, 329], "multiple_loops_thread": [12, 42, 55, 69, 77, 86, 96, 106, 131, 156, 187, 210, 231, 249, 271, 295, 313, 328], "getrtc": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330], "str": [12, 13, 14, 42, 43, 44, 55, 56, 57, 69, 70, 71, 77, 78, 79, 86, 87, 88, 96, 97, 98, 106, 107, 108, 131, 132, 133, 156, 157, 158, 187, 188, 189, 210, 211, 212, 231, 232, 233, 249, 250, 251, 271, 272, 273, 295, 296, 297, 313, 314, 315, 328, 329, 330, 589, 590, 591, 592, 593, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "printstr": [12, 42, 55, 69, 77, 86, 96, 106, 131, 156, 187, 210, 231, 249, 271, 295, 313, 328], "rtc_thread": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330], "print_thread": [12, 42, 55, 69, 77, 86, 96, 106, 131, 156, 187, 210, 231, 249, 271, 295, 313, 328], "sync": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330, 600, 623], "queri": [12, 13, 14, 42, 43, 44, 55, 56, 57, 69, 70, 71, 77, 78, 79, 86, 87, 88, 96, 97, 98, 106, 107, 108, 131, 132, 133, 156, 157, 158, 187, 188, 189, 210, 211, 212, 231, 232, 233, 249, 250, 251, 271, 272, 273, 295, 296, 297, 313, 314, 315, 328, 329, 330], "_threadprint": [12, 42, 55, 69, 77, 86, 96, 106, 131, 156, 187, 210, 231, 249, 271, 295, 313, 328], "target": [12, 14, 24, 27, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330, 350, 353, 589, 605, 606, 613], "_threadrtc": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330], "immedi": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330], "parallel": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330], "single_loop_async": [13, 43, 56, 70, 78, 87, 97, 107, 132, 157, 188, 211, 232, 250, 272, 296, 314, 329], "loop_func": [13, 43, 56, 70, 78, 87, 97, 107, 132, 157, 188, 211, 232, 250, 272, 296, 314, 329], "timeout": [13, 43, 56, 70, 78, 87, 97, 107, 132, 157, 188, 211, 232, 250, 272, 296, 314, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "single_loop_thread": [14, 44, 57, 71, 79, 88, 98, 108, 133, 158, 189, 212, 233, 251, 273, 297, 315, 330], "motion_1axis_mov": [15, 341], "axi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 300, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 566, 589, 605, 606, 613, 621, 622, 626], "two_pulse_mod": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 341, 343, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363], "rel_posi_mod": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 359, 360], "axis_dir_cw": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 341, 343, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363], "encoder_dir_cw": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 341, 343, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363], "forward_enable_tru": [15, 16, 17, 21, 28, 29, 30, 33, 36, 37, 341, 342, 343, 347, 354, 355, 356, 359, 362, 363], "reverse_enable_tru": [15, 16, 17, 21, 28, 29, 30, 33, 36, 37, 341, 342, 343, 347, 354, 355, 356, 359, 362, 363], "home_enable_fals": [15, 28, 30, 33, 341, 354, 356, 359], "motion_open_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 603, 606, 613], "open_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "motion_opencfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 603, 606, 613], "user": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 607, 612, 613, 614, 615, 616, 619, 620, 621, 622], "desktop": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363], "3axisstage_2p": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363], "ini": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 606, 613, 626], "opencfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37], "load": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 600, 601, 605, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "motion_loadcfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 603, 606, 613], "loadcfgfile_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37], "motion_cfgaxis_async": [15, 17, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 603, 606, 613], "cfgaxis_async": [15, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37], "motion_cfglimit_async": [15, 16, 17, 21, 24, 27, 28, 29, 30, 33, 36, 37, 603, 606, 613], "cfglimit_async": [15, 16, 17, 21, 24, 27, 28, 29, 30, 33, 36, 37], "motion_cfghome_async": [15, 28, 30, 33, 603, 606, 613], "cfghome_async": [15, 28, 30, 33], "motion_cfgaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 603, 606, 613], "target_posi": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 359, 360, 362, 363, 605, 606, 613], "velo": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 359, 360, 362, 363, 605, 606, 613], "accel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 359, 360, 362, 363, 605, 606, 613], "decel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 33, 34, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 359, 360, 362, 363, 605, 606, 613], "cfgaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 33, 34, 36, 37], "motion_rstencoderposi_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 36, 37, 603, 606, 613], "rstencoderposi_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 36, 37], "motion_enableservoon_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 35, 36, 37, 603, 606, 613], "enableservoon_async": [15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 33, 35, 36, 37], "motion_startsingleaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 33, 36, 37, 603, 606, 613], "startsingleaxismove_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 33, 36, 37], "motion_getmovestatus_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 603, 606, 613], "motion_getlogicalposi_async": [15, 31, 33, 603, 606, 613], "motion_getencoderposi_async": [15, 33, 603, 606, 613], "motion_stop_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 603, 606, 613], "stop_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37], "motion_enableservooff_async": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 33, 35, 36, 37, 603, 606, 613], "enableservooff_async": [15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 33, 35, 36, 37], "motion_close_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 603, 606, 613], "close_async": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "motion_1axis_move_with_s_curve_acceler": [16, 342], "jerk": [16, 22, 342, 348, 606, 613], "accelet": [16, 22, 342, 348], "motion_cfgjerkandaccelmode_async": [16, 22, 603, 606, 613], "cfgjerkandaccelmode_async": [16, 22], "getmovestatus_async": [16, 19, 20, 21, 25], "motion_1axis_move_with_alarm_in": [17, 343], "alarm_enable_fals": [17, 343], "cfgaxisparam_async": 17, "motion_cfgalarm_async": [17, 603, 606, 613], "cfgalarm_async": 17, "getmovestatu": [17, 18], "motion_1axis_move_with_breakpoint": [18, 344], "start_posit": [18, 344], "pulse_width": [18, 344, 606, 613], "pulse_period": [18, 344, 606, 613], "pulse_numb": [18, 344, 606, 613], "motion_cfgbreakpoint_async": [18, 603, 606, 613], "cfgbreakpoint_async": 18, "motion_enablebreakpoint_async": [18, 603, 606, 613], "int": [18, 19, 25, 344, 345, 351, 589, 590, 591, 592, 593, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "enablebreakpoint_async": 18, "motion_1axis_move_with_captur": [19, 345], "rising_edg": [19, 345], "capture_logical_posit": [19, 345], "motion_cfgcapture_async": [19, 603, 606, 613], "cfgcapture_async": 19, "motion_enablecapture_async": [19, 603, 606, 613], "enablecapture_async": 19, "capture_point": [19, 345], "motion_readcapturepoint_async": [19, 603, 606, 613], "readcapturepoint_async": 19, "motion_1axis_move_with_configuration_fil": [20, 346], "motion_1axis_move_with_inposit": [21, 347], "inposi_enable_fals": [21, 347], "motion_cfginposi_async": [21, 603, 606, 613], "cfginposi_async": 21, "motion_2axis_circular_interpol": [22, 348], "interpol": [22, 23, 26, 348, 349, 352, 606, 613, 623], "x_axi": [22, 348, 606, 613], "y_axi": [22, 348, 606, 613], "center_point_x": [22, 348, 606, 613], "2000": [22, 23, 26, 348, 349, 352, 590, 596, 597, 598], "center_point_i": [22, 348, 606, 613], "finish_point_x": [22, 348, 606, 613], "finish_point_i": [22, 348, 606, 613], "circular_dir_cw": [22, 348], "scurv": [22, 348, 600, 601], "motion_cfgcircularinterpo_async": [22, 603, 606, 613], "speed": [22, 23, 25, 26, 192, 193, 348, 349, 351, 352, 478, 479, 606, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 626], "1000": [22, 24, 25, 27, 36, 45, 109, 134, 161, 192, 301, 316, 348, 350, 351, 353, 362, 367, 407, 428, 451, 478, 567, 578, 619, 623], "cfgcircularinterpo_async": 22, "motion_startcircularinterpo_async": [22, 603, 606, 613], "startcircularinterpo_async": 22, "4": [22, 58, 102, 103, 117, 121, 122, 123, 124, 125, 126, 141, 152, 160, 174, 183, 191, 195, 206, 214, 216, 227, 235, 237, 245, 253, 264, 275, 277, 288, 291, 292, 299, 348, 376, 404, 405, 415, 419, 420, 421, 422, 423, 424, 435, 446, 450, 464, 473, 477, 481, 492, 496, 498, 509, 513, 515, 523, 527, 538, 545, 547, 558, 561, 562, 565, 589, 591, 592, 593, 594, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628], "x_axis_move_statu": [22, 348], "y_axis_move_statu": [22, 348], "motion_2axis_linear_interpol": [23, 349], "axis1": [23, 24, 26, 27, 349, 350, 352, 353, 606, 613], "dest_posi1": [23, 26, 349, 352, 606, 613], "axis2": [23, 24, 26, 27, 349, 350, 352, 353, 606, 613], "dest_posi2": [23, 26, 349, 352, 606, 613], "motion_cfg2axislinearinterpo_async": [23, 603, 606, 613], "cfg2axislinearinterpo_async": 23, "motion_startlinearinterpo_async": [23, 26, 603, 606, 613], "startlinearinterpo_async": [23, 26], "axis1_move_statu": [23, 26, 349, 352], "axis2_move_statu": [23, 26, 349, 352], "motion_3axis_asynchronous_mov": 24, "getaxisstatu": [24, 27], "005": [24, 27, 159, 190, 192, 213, 234, 274, 298, 350, 353, 449, 476, 478, 495, 512, 544, 564, 607, 613, 614, 615, 616, 617, 619, 620, 621, 622], "axis1_thread": [24, 27, 350, 353], "axis2_thread": [24, 27, 350, 353], "axis3_thread": [24, 27, 350, 353], "axis3": [24, 26, 27, 350, 352, 353, 606, 613], "forward_enable_fals": [24, 27, 350, 353], "reverse_enable_fals": [24, 27, 350, 353], "defin": [24, 27, 350, 353, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "thread_1": [24, 27, 350, 353], "thread_2": [24, 27, 350, 353], "thread_3": [24, 27, 350, 353], "servoon": [24, 27], "join": [24, 27, 350, 353], "servooff_async": 24, "motion_3axis_helical_interpol": [25, 351], "center_x": [25, 351], "center_i": [25, 351], "finish_x": [25, 351], "finish_i": [25, 351], "pitch_axis3": [25, 351, 606, 613], "pitch_axis4": [25, 351, 606, 613], "rotation_num": [25, 351], "cal_timeout": [25, 351], "helical_dir_cw": [25, 351], "motion_cfghelicalinterpo_async": [25, 603, 606, 613], "fals": [25, 45, 109, 134, 161, 193, 301, 316, 351, 367, 407, 428, 451, 479, 567, 578, 589, 591, 595, 605, 606, 613, 616, 627], "cfghelicalinterpo_async": 25, "motion_starthelicalinterpo_async": [25, 603, 606, 613], "starthelicalinterpo_async": 25, "motion_3axis_linear_interpol": [26, 352], "dest_posi3": [26, 352, 606, 613], "motion_cfg3axislinearinterpo_async": [26, 603, 606, 613], "cfg3axislinearinterpo_async": 26, "axis3_move_statu": [26, 352], "motion_3axis_synchronous_mov": [27, 353], "motion_startmultiaxismove_async": [27, 603, 606, 613], "startmultiaxismove_async": 27, "servooff": 27, "motion_find_hom": [28, 354], "find_hom": [28, 354], "dir_revers": [28, 29, 30, 354, 355, 356], "motion_cfgfindref_async": [28, 29, 30, 603, 606, 613], "search_velo": [28, 29, 30, 354, 355, 356, 605, 606, 613], "search_accl": [28, 29, 30, 354, 355, 356, 605, 606, 613], "approach_velo_perc": [28, 29, 30, 354, 355, 356, 605, 606, 613], "20": [28, 29, 30, 89, 159, 170, 190, 193, 213, 234, 274, 298, 354, 355, 356, 395, 449, 460, 476, 479, 495, 512, 544, 564, 605, 606, 613], "en_reset_posi": [28, 29, 30, 354, 355, 356, 605, 606, 613], "offset_posi": [28, 29, 30, 354, 355, 356, 605, 606, 613], "1500": [28, 29, 30, 354, 355, 356], "cfgfindref_async": [28, 29, 30], "motion_findref_async": [28, 29, 30, 603, 606, 613], "findref_async": [28, 29, 30], "home_statu": [28, 30, 354, 356], "limit": [28, 117, 354, 415, 589, 600, 601, 605, 606, 613, 623, 627], "hit_statu": [28, 30, 354, 356], "motion_getlimitstatus_async": [28, 30, 603, 606, 613], "hit": [28, 30, 354, 356], "motion_gethomestatus_async": [28, 30, 603, 606, 613], "found": [28, 30, 354, 356, 606, 613, 626], "driving_statu": [28, 29, 30, 354, 355, 356], "motion_checkref_async": [28, 29, 30, 603, 606, 613], "motion_find_index": [29, 355], "one_pulse_mod": [29, 355], "find_index": [29, 355], "motion_cfgencoder_async": [29, 36, 37, 603, 606, 613], "cfgencoder_async": [29, 36, 37], "motion_find_limit": [30, 356], "find_limit": [30, 356], "home": [30, 356, 600, 601, 605, 606, 613, 623, 627], "motion_get_logical_posit": [31, 357], "motion_setlogicalposi_async": [31, 603, 606, 613], "setlogicalposi_async": 31, "getlogicalposi": 31, "motion_load_configuration_fil": [32, 358], "motion_position_blend": [33, 359], "motion_overrideaxisposi_async": [33, 603, 606, 613], "overrideaxisposi_async": 33, "motion_save_configuration_fil": [34, 360], "motion_savecfgfile_async": [34, 603, 606, 613], "savecfgfile_async": 34, "motion_servo_on": [35, 361], "motion_velocity_blend": [36, 362], "overrid": [36, 37, 362, 363, 605, 606, 613], "motion_overrideaxisvelocity_async": [36, 37, 603, 606, 613], "overrideaxisvelocity_async": [36, 37], "motion_velocity_blending_acceler": [37, 363], "veloc": [37, 363, 600, 601, 605, 606, 613, 621, 627], "motion_overrideaxisaccel_async": [37, 603, 606, 613], "overrideaxisaccel_async": 37, "ai_n_samples_onc": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578], "obtain": [45, 46, 48, 49, 50, 72, 109, 110, 111, 112, 113, 114, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 386, 407, 408, 409, 410, 411, 412, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "addition": [45, 49, 50, 72, 109, 113, 114, 134, 138, 139, 161, 165, 166, 301, 305, 306, 316, 320, 321, 367, 371, 372, 386, 407, 411, 412, 428, 432, 433, 451, 455, 456, 567, 571, 572, 578, 582, 583, 628], "point": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578, 606, 613, 623], "To": [45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 89, 90, 91, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 161, 162, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 395, 396, 397, 407, 408, 409, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 451, 452, 454, 455, 456, 460, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "begin": [45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 89, 90, 91, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 161, 162, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 395, 396, 397, 407, 408, 409, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 451, 452, 454, 455, 456, 460, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "next": [45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 89, 90, 91, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 395, 396, 397, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "outlin": [45, 46, 48, 49, 50, 89, 90, 91, 109, 110, 111, 112, 113, 114, 119, 120, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 170, 171, 172, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 395, 396, 397, 407, 408, 409, 410, 411, 412, 417, 418, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 460, 461, 462, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "procedur": [45, 46, 48, 49, 50, 89, 90, 91, 109, 110, 111, 112, 113, 114, 119, 120, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 170, 171, 172, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 395, 396, 397, 407, 408, 409, 410, 411, 412, 417, 418, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 460, 461, 462, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "stream": [45, 46, 48, 89, 109, 110, 111, 112, 134, 135, 137, 161, 162, 164, 170, 300, 301, 302, 304, 316, 317, 319, 367, 368, 370, 395, 407, 408, 409, 410, 428, 429, 431, 451, 452, 454, 460, 566, 567, 568, 570, 578, 579, 581, 589, 600, 601, 607, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624], "final": [45, 46, 48, 49, 50, 89, 90, 91, 109, 110, 111, 112, 113, 114, 117, 119, 120, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 170, 171, 172, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 395, 396, 397, 407, 408, 409, 410, 411, 412, 415, 417, 418, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 460, 461, 462, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 605, 606, 613], "conclud": [45, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 89, 90, 91, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 161, 162, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 395, 396, 397, 407, 408, 409, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 451, 452, 454, 455, 456, 460, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "explain": [45, 46, 48, 49, 50, 89, 90, 91, 109, 110, 111, 112, 113, 114, 119, 120, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 170, 171, 172, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 395, 396, 397, 407, 408, 409, 410, 411, 412, 417, 418, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 460, 461, 462, 566, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583], "channel": [45, 46, 48, 49, 50, 64, 89, 110, 112, 117, 134, 135, 137, 138, 139, 140, 148, 161, 162, 164, 165, 166, 170, 173, 181, 194, 202, 215, 223, 236, 243, 252, 260, 276, 284, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 382, 395, 408, 410, 415, 428, 429, 431, 432, 433, 434, 442, 451, 452, 454, 455, 456, 460, 463, 471, 480, 488, 497, 505, 514, 521, 526, 534, 546, 554, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 596, 597, 600, 601, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626], "On": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581, 589, 627], "demand": [45, 46, 48, 89, 109, 110, 111, 112, 115, 116, 117, 134, 135, 137, 161, 162, 164, 167, 168, 170, 301, 302, 304, 316, 317, 319, 367, 368, 370, 395, 407, 408, 409, 410, 413, 414, 415, 428, 429, 431, 451, 452, 454, 457, 458, 460, 567, 568, 570, 578, 579, 581, 589, 600, 601, 607, 609, 611, 613, 614, 615, 621, 622, 623, 627], "continu": [45, 89, 109, 117, 134, 161, 170, 301, 316, 367, 395, 407, 415, 428, 451, 460, 567, 578, 589, 600, 601, 607, 611, 613, 614, 615, 621, 622, 627], "sampling_r": [45, 46, 48, 89, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 170, 301, 302, 304, 316, 317, 319, 367, 368, 370, 395, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 460, 567, 568, 570, 578, 579, 581, 607, 611, 613, 614, 615, 621, 622], "200": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581, 589, 623], "read_point": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581], "ai_open_async": [45, 46, 48, 49, 50, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 167, 168, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 603, 607, 609, 613, 614, 615, 621, 622], "acquisit": [45, 46, 48, 49, 50, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 167, 168, 300, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 367, 368, 370, 371, 372, 386, 407, 408, 409, 410, 411, 412, 413, 414, 415, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 457, 458, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 607, 613, 614, 615, 621, 622], "ai_setmode_async": [45, 46, 48, 49, 50, 109, 110, 111, 112, 113, 114, 117, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 603, 607, 613, 614, 615, 621, 622], "rate": [45, 46, 48, 89, 109, 110, 111, 112, 117, 134, 135, 137, 147, 161, 162, 164, 170, 180, 201, 222, 259, 283, 301, 302, 304, 316, 317, 319, 367, 368, 370, 395, 407, 408, 409, 410, 415, 428, 429, 431, 441, 451, 452, 454, 460, 470, 487, 504, 533, 553, 567, 568, 570, 578, 579, 581, 589, 592, 606, 607, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 626], "ai_setsamplingrate_async": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 603, 607, 613, 614, 615, 621, 622], "ai_setnumsamples_async": [45, 109, 134, 161, 301, 316, 603, 607, 613, 614, 615, 621, 622], "ai_start_async": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 603, 607, 613, 614, 615, 621, 622], "ai_2dlist": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581], "ai_readstreaming_async": [45, 46, 48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 409, 415, 603, 607, 613, 614, 615, 621, 622], "len": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 192, 301, 302, 304, 316, 317, 319, 367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 478, 567, 568, 570, 578, 579, 581, 589, 594, 607, 613, 614, 615, 621, 622], "ok": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578, 589, 591, 595], "ai_list": [45, 49, 50, 109, 113, 114, 115, 116, 134, 138, 139, 161, 165, 166, 167, 168, 301, 305, 306, 316, 320, 321, 367, 371, 372, 407, 411, 412, 413, 414, 428, 432, 433, 451, 455, 456, 457, 458, 567, 571, 572, 578, 582, 583], "enumer": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578, 589], "ani": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578, 589], "miss": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578], "ng": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578], "ai_stop_async": [45, 46, 48, 109, 110, 111, 112, 117, 134, 135, 137, 161, 162, 164, 301, 302, 304, 316, 317, 319, 603, 607, 613, 614, 615, 621, 622], "ai_close_async": [45, 46, 48, 49, 50, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 167, 168, 301, 302, 304, 305, 306, 316, 317, 319, 320, 321, 603, 607, 609, 613, 614, 615, 621, 622], "ai_continu": [46, 110, 135, 162, 302, 317, 368, 408, 429, 452, 568, 579], "n": [46, 48, 89, 102, 103, 110, 111, 112, 117, 135, 137, 162, 164, 170, 291, 292, 302, 304, 317, 319, 368, 370, 395, 404, 405, 408, 409, 410, 415, 429, 431, 452, 454, 460, 561, 562, 568, 570, 579, 581, 589, 600, 601, 607, 611, 612, 613, 614, 615, 620, 621, 622, 623, 627], "sampl": [46, 48, 89, 102, 103, 110, 111, 112, 117, 135, 137, 162, 164, 170, 291, 292, 302, 304, 317, 319, 368, 370, 395, 404, 405, 408, 409, 410, 415, 429, 431, 452, 454, 460, 561, 562, 568, 570, 579, 581, 589, 597, 600, 601, 607, 609, 611, 612, 613, 614, 615, 620, 621, 622, 623, 626, 627], "data_len": [46, 48, 110, 111, 112, 117, 135, 137, 162, 164, 302, 304, 317, 319, 368, 370, 408, 409, 410, 415, 429, 431, 452, 454, 568, 570, 579, 581], "did": [47, 136, 163, 169, 303, 318, 369, 430, 453, 459, 569, 580], "ai_continuous_with_logg": [48, 112, 137, 164, 304, 319, 370, 410, 431, 454, 570, 581], "Then": [48, 112, 137, 164, 304, 319, 370, 410, 431, 454, 570, 581], "save": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581, 600, 601, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 623], "csv": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "wpc_test": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581], "logger_openfil": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "header": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "logger_writehead": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ch0": [48, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 267, 268, 269, 293, 304, 319, 370, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 541, 542, 543, 563, 570, 581, 589], "ch1": [48, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 267, 268, 269, 292, 293, 304, 319, 370, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 541, 542, 543, 562, 563, 570, 581, 589], "ch2": [48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 304, 319, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 570, 581, 589], "ch3": [48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 304, 319, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 570, 581, 589], "ch4": [48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 304, 319, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 570, 581, 589], "ch5": [48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 304, 319, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 570, 581, 589], "ch6": [48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 304, 319, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 570, 581, 589], "ch7": [48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 137, 164, 304, 319, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 431, 454, 570, 581, 589], "logger_write2dlist": [48, 112, 137, 164, 304, 319, 370, 410, 431, 454, 570, 581, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ai_on_demand_in_loop": [49, 113, 138, 165, 305, 320, 371, 411, 432, 455, 571, 582], "util": [49, 113, 138, 165, 305, 320, 371, 411, 432, 455, 571, 582], "retriev": [49, 50, 72, 113, 114, 138, 139, 165, 166, 305, 306, 320, 321, 371, 372, 386, 411, 412, 432, 433, 455, 456, 571, 572, 582, 583, 607, 613, 614, 615, 616, 621, 622], "chip_select": [49, 109, 110, 111, 112, 113, 114, 115, 116, 117, 138, 165, 167, 168, 305, 320, 407, 408, 409, 410, 411, 412, 413, 414, 415, 607, 613, 614, 615, 621, 622], "ai_readondemand_async": [49, 50, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 138, 139, 165, 166, 167, 168, 305, 306, 320, 321, 409, 415, 603, 607, 609, 613, 614, 615, 621, 622], "ai_on_demand_onc": [50, 72, 114, 139, 166, 306, 321, 372, 386, 412, 433, 456, 572, 583], "dio_loopback_pin": [58, 121, 141, 174, 195, 216, 237, 253, 277, 376, 419, 435, 464, 481, 498, 515, 527, 547], "involv": [58, 59, 115, 116, 121, 122, 141, 142, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 413, 414, 419, 420, 435, 436, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548], "do": [58, 59, 121, 122, 141, 142, 149, 150, 152, 174, 175, 183, 195, 196, 203, 204, 206, 216, 217, 224, 225, 227, 237, 238, 245, 253, 254, 261, 262, 264, 277, 278, 285, 286, 288, 376, 377, 419, 420, 435, 436, 443, 444, 446, 464, 465, 473, 481, 482, 489, 490, 492, 498, 499, 506, 507, 509, 515, 516, 523, 527, 528, 535, 536, 538, 547, 548, 555, 556, 558, 593, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "send": [58, 59, 115, 116, 121, 122, 141, 142, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 413, 414, 419, 420, 435, 436, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 589, 614, 615, 616, 617, 619, 620], "signal": [58, 59, 60, 61, 62, 63, 64, 89, 90, 91, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 148, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 195, 196, 197, 198, 199, 200, 202, 216, 217, 218, 219, 220, 221, 223, 237, 238, 239, 240, 241, 242, 243, 253, 254, 255, 256, 257, 258, 260, 277, 278, 279, 280, 281, 282, 284, 376, 377, 378, 379, 380, 381, 382, 395, 396, 397, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 442, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 471, 481, 482, 483, 484, 485, 486, 488, 498, 499, 500, 501, 502, 503, 505, 515, 516, 517, 518, 519, 520, 521, 527, 528, 529, 530, 531, 532, 534, 547, 548, 549, 550, 551, 552, 554, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "di": [58, 59, 64, 121, 122, 141, 142, 148, 152, 174, 175, 181, 183, 195, 196, 202, 206, 216, 217, 223, 227, 237, 238, 243, 245, 253, 254, 260, 264, 277, 278, 284, 288, 376, 377, 382, 419, 420, 435, 436, 442, 446, 464, 465, 471, 473, 481, 482, 488, 492, 498, 499, 505, 509, 515, 516, 521, 523, 527, 528, 534, 538, 547, 548, 554, 558, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "receiv": [58, 59, 115, 116, 121, 122, 141, 142, 159, 167, 168, 174, 175, 190, 195, 196, 213, 216, 217, 234, 237, 238, 253, 254, 274, 277, 278, 298, 376, 377, 413, 414, 419, 420, 435, 436, 449, 457, 458, 464, 465, 476, 481, 482, 495, 498, 499, 512, 515, 516, 527, 528, 544, 547, 548, 564, 614, 615, 616, 617, 619, 620, 626], "singl": [58, 59, 115, 116, 121, 122, 141, 142, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 413, 414, 419, 420, 435, 436, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 600, 606, 613], "commonli": [58, 59, 115, 116, 121, 122, 141, 142, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 413, 414, 419, 420, 435, 436, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548], "known": [58, 59, 121, 122, 141, 142, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 419, 420, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548], "illustr": [58, 59, 60, 61, 62, 63, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 376, 377, 378, 379, 380, 381, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552], "requir": [58, 59, 60, 61, 62, 63, 115, 116, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 167, 168, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 376, 377, 378, 379, 380, 381, 413, 414, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 457, 458, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552, 623], "lastli": [58, 59, 60, 61, 62, 63, 115, 116, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 167, 168, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 221, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 277, 278, 279, 280, 281, 282, 376, 377, 378, 379, 380, 381, 413, 414, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 457, 458, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 498, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 547, 548, 549, 550, 551, 552], "do_port": [58, 59, 81, 121, 122, 123, 124, 125, 126, 141, 142, 149, 150, 174, 175, 195, 196, 203, 204, 216, 217, 224, 225, 237, 238, 253, 254, 261, 262, 277, 278, 285, 286, 376, 377, 391, 419, 420, 421, 422, 423, 424, 435, 436, 443, 444, 464, 465, 481, 482, 489, 490, 498, 499, 506, 507, 515, 516, 527, 528, 535, 536, 547, 548, 555, 556, 593, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_port": [58, 59, 121, 122, 141, 142, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 419, 420, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_pin": [58, 121, 141, 174, 195, 216, 237, 253, 277, 376, 419, 435, 464, 481, 498, 515, 527, 547], "di_pin": [58, 121, 141, 174, 195, 216, 237, 253, 277, 376, 419, 435, 464, 481, 498, 515, 527, 547], "6": [58, 102, 103, 117, 121, 122, 123, 124, 125, 126, 141, 174, 195, 216, 237, 253, 277, 291, 292, 376, 404, 405, 415, 419, 420, 421, 422, 423, 424, 435, 464, 481, 498, 515, 527, 547, 561, 562, 589, 591, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 627], "digit": [58, 59, 60, 61, 62, 63, 81, 90, 91, 115, 116, 119, 120, 124, 141, 142, 143, 144, 145, 146, 149, 150, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 203, 204, 216, 217, 218, 219, 220, 221, 224, 225, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 261, 262, 277, 278, 279, 280, 281, 282, 285, 286, 376, 377, 378, 379, 380, 381, 391, 396, 397, 413, 414, 417, 418, 421, 422, 435, 436, 437, 438, 439, 440, 443, 444, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 489, 490, 498, 499, 500, 501, 502, 503, 506, 507, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 535, 536, 547, 548, 549, 550, 551, 552, 555, 556, 591, 593, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 623], "output": [58, 59, 60, 61, 62, 63, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 149, 150, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 203, 204, 216, 217, 218, 219, 220, 221, 224, 225, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 261, 262, 277, 278, 279, 280, 281, 282, 285, 286, 376, 377, 378, 379, 380, 381, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 443, 444, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 489, 490, 498, 499, 500, 501, 502, 503, 506, 507, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 535, 536, 547, 548, 549, 550, 551, 552, 555, 556, 590, 591, 593, 600, 601, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 623, 626], "do_openpins_async": [58, 60, 62, 141, 143, 145, 149, 150, 174, 176, 178, 195, 197, 199, 203, 204, 216, 218, 220, 224, 225, 237, 239, 241, 253, 255, 257, 261, 262, 277, 279, 281, 285, 286, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "high": [58, 59, 60, 61, 62, 63, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 149, 150, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 203, 204, 216, 217, 218, 219, 220, 221, 224, 225, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 261, 262, 277, 278, 279, 280, 281, 282, 285, 286, 376, 377, 378, 379, 380, 381, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 443, 444, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 489, 490, 498, 499, 500, 501, 502, 503, 506, 507, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 535, 536, 547, 548, 549, 550, 551, 552, 555, 556, 593, 605, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627], "low": [58, 59, 60, 61, 62, 63, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 149, 150, 174, 175, 176, 177, 178, 179, 195, 196, 197, 198, 199, 200, 203, 204, 216, 217, 218, 219, 220, 221, 224, 225, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 261, 262, 277, 278, 279, 280, 281, 282, 285, 286, 376, 377, 378, 379, 380, 381, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 439, 440, 443, 444, 464, 465, 466, 467, 468, 469, 481, 482, 483, 484, 485, 486, 489, 490, 498, 499, 500, 501, 502, 503, 506, 507, 515, 516, 517, 518, 519, 520, 527, 528, 529, 530, 531, 532, 535, 536, 547, 548, 549, 550, 551, 552, 555, 556, 593, 605, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 627], "do_writepins_async": [58, 62, 121, 125, 141, 145, 149, 150, 174, 178, 195, 199, 203, 204, 216, 220, 224, 225, 237, 241, 253, 257, 261, 262, 277, 281, 285, 286, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "iutput": [58, 141, 174, 195, 216, 237, 253, 277, 376, 435, 464, 481, 498, 515, 527, 547], "di_openpins_async": [58, 141, 174, 195, 216, 237, 253, 277, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "state": [58, 59, 60, 61, 81, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 174, 175, 176, 177, 195, 196, 197, 198, 216, 217, 218, 219, 237, 238, 239, 240, 253, 254, 255, 256, 277, 278, 279, 280, 376, 377, 378, 379, 391, 419, 420, 421, 422, 423, 424, 435, 436, 437, 438, 464, 465, 466, 467, 481, 482, 483, 484, 498, 499, 500, 501, 515, 516, 517, 518, 527, 528, 529, 530, 547, 548, 549, 550, 591, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "state_list": [58, 59, 121, 122, 141, 142, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 419, 420, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_readpins_async": [58, 121, 141, 174, 195, 216, 237, 253, 277, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_closepins_async": [58, 60, 62, 141, 143, 145, 149, 150, 174, 176, 178, 195, 197, 199, 203, 204, 216, 218, 220, 224, 225, 237, 239, 241, 253, 255, 257, 261, 262, 277, 279, 281, 285, 286, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "input": [58, 59, 141, 142, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626], "di_closepins_async": [58, 141, 174, 195, 216, 237, 253, 277, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_loopback_port": [59, 122, 142, 175, 196, 217, 238, 254, 278, 377, 420, 436, 465, 482, 499, 516, 528, 548], "pin": [59, 64, 90, 91, 115, 116, 119, 120, 122, 142, 148, 149, 150, 167, 168, 171, 172, 175, 181, 196, 202, 203, 204, 217, 223, 224, 225, 238, 243, 254, 260, 261, 262, 278, 284, 285, 286, 377, 382, 396, 397, 413, 414, 417, 418, 420, 436, 442, 443, 444, 457, 458, 461, 462, 465, 471, 482, 488, 489, 490, 499, 505, 506, 507, 516, 521, 528, 534, 535, 536, 548, 554, 555, 556, 593, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "do_openport_async": [59, 61, 63, 142, 144, 146, 175, 177, 179, 196, 198, 200, 217, 219, 221, 238, 240, 242, 254, 256, 258, 278, 280, 282, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_openport_async": [59, 142, 175, 196, 217, 238, 254, 278, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_writeport_async": [59, 63, 81, 122, 126, 142, 146, 175, 179, 196, 200, 217, 221, 238, 242, 254, 258, 278, 282, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_readport_async": [59, 122, 142, 175, 196, 217, 238, 254, 278, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_closeport_async": [59, 61, 63, 142, 144, 146, 175, 177, 179, 196, 198, 200, 217, 219, 221, 238, 240, 242, 254, 256, 258, 278, 280, 282, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_closeport_async": [59, 142, 175, 196, 217, 238, 254, 278, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio": [60, 61, 62, 63, 123, 124, 125, 126, 143, 144, 145, 146, 149, 150, 176, 177, 178, 179, 197, 198, 199, 200, 203, 204, 218, 219, 220, 221, 224, 225, 239, 240, 241, 242, 255, 256, 257, 258, 261, 262, 279, 280, 281, 282, 285, 286, 378, 379, 380, 381, 421, 422, 423, 424, 437, 438, 439, 440, 443, 444, 466, 467, 468, 469, 483, 484, 485, 486, 489, 490, 500, 501, 502, 503, 506, 507, 517, 518, 519, 520, 529, 530, 531, 532, 535, 536, 549, 550, 551, 552, 555, 556, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "do_blinky_pin": [60, 123, 143, 176, 197, 218, 239, 255, 279, 378, 421, 437, 466, 483, 500, 517, 529, 549], "loop": [60, 61, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550, 600, 601], "voltag": [60, 61, 62, 63, 89, 123, 124, 125, 126, 143, 144, 145, 146, 170, 176, 177, 178, 179, 197, 198, 199, 200, 218, 219, 220, 221, 239, 240, 241, 242, 255, 256, 257, 258, 279, 280, 281, 282, 378, 379, 380, 381, 395, 421, 422, 423, 424, 437, 438, 439, 440, 460, 466, 467, 468, 469, 483, 484, 485, 486, 500, 501, 502, 503, 517, 518, 519, 520, 529, 530, 531, 532, 549, 550, 551, 552, 589, 590, 607, 611, 613, 615, 623, 627], "appli": [60, 61, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550], "blink": [60, 61, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550], "effect": [60, 61, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550, 607, 611, 613, 614, 615, 621, 622], "pinindex": [60, 123, 143, 176, 197, 218, 239, 255, 279, 378, 421, 437, 466, 483, 500, 517, 529, 549], "toggl": [60, 61, 81, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 391, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_togglepins_async": [60, 123, 143, 176, 197, 218, 239, 255, 279, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "led": [60, 61, 62, 63, 123, 124, 143, 144, 145, 146, 176, 177, 178, 179, 197, 198, 199, 200, 218, 219, 220, 221, 239, 240, 241, 242, 255, 256, 257, 258, 279, 280, 281, 282, 378, 379, 380, 381, 421, 422, 437, 438, 439, 440, 466, 467, 468, 469, 483, 484, 485, 486, 500, 501, 502, 503, 517, 518, 519, 520, 529, 530, 531, 532, 549, 550, 551, 552, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 621, 622], "do_blinky_port": [61, 124, 144, 177, 198, 219, 240, 256, 280, 379, 422, 438, 467, 484, 501, 518, 530, 550], "do_toggleport_async": [61, 124, 144, 177, 198, 219, 240, 256, 280, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_write_pin": [62, 125, 145, 178, 199, 220, 241, 257, 281, 380, 423, 439, 468, 485, 502, 519, 531, 551], "written": [62, 63, 125, 126, 145, 146, 147, 149, 178, 179, 180, 199, 200, 201, 203, 220, 221, 222, 224, 241, 242, 257, 258, 259, 261, 281, 282, 283, 285, 380, 381, 423, 424, 439, 440, 441, 443, 468, 469, 470, 485, 486, 487, 489, 502, 503, 504, 506, 519, 520, 531, 532, 533, 535, 551, 552, 553, 555, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pin_index": [62, 125, 145, 178, 199, 220, 241, 257, 281, 380, 423, 439, 468, 485, 502, 519, 531, 551], "do_write_port": [63, 126, 146, 179, 200, 221, 242, 258, 282, 381, 424, 440, 469, 486, 503, 520, 532, 552], "pwm_gener": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554], "should": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 607, 609, 611, 613, 614, 615, 616, 621, 622], "frequenc": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 627], "duti": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620], "cycl": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620], "so": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554], "can": [64, 117, 148, 181, 202, 223, 243, 260, 284, 382, 415, 442, 471, 488, 505, 521, 534, 554, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628], "proper": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554], "By": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554], "want": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 607, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "could": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 612, 619, 620], "duty_cycl": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620], "50": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554], "sys_getdriverinfo": [64, 140, 148, 173, 181, 194, 202, 215, 223, 236, 243, 252, 260, 276, 284, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pwm_open_async": [64, 148, 181, 202, 223, 243, 260, 284, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_setfrequency_async": [64, 148, 181, 202, 223, 243, 260, 284, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_setdutycycle_async": [64, 148, 181, 202, 223, 243, 260, 284, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_start_async": [64, 148, 181, 202, 223, 243, 260, 284, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_stop_async": [64, 148, 181, 202, 223, 243, 260, 284, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_close_async": [64, 148, 181, 202, 223, 243, 260, 284, 603, 608, 614, 615, 616, 617, 618, 619, 620], "ai24bit": [72, 386], "relay_read_count": [80, 390], "index": [80, 390, 600, 601, 605, 606, 610, 613, 616, 626, 627], "relay_open_async": [80, 81, 603, 610], "relay_read_async": [80, 603, 610], "relay_close_async": [80, 81, 603, 610], "relay_set_channel": [81, 391], "valu": [81, 90, 91, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 147, 149, 167, 168, 171, 172, 180, 201, 203, 222, 224, 259, 261, 283, 285, 310, 325, 391, 396, 397, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 441, 443, 457, 458, 461, 462, 470, 487, 489, 504, 506, 533, 535, 553, 555, 576, 587, 589, 590, 593, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628], "ao_waveform_gen": [89, 170, 395, 460], "number_of_sampl": [89, 170, 395, 460], "form_mod": [89, 170, 395, 460], "dc": [89, 170, 395, 460, 611, 613, 615, 627], "retangular": [89, 170, 395, 460, 611, 613, 615], "triangular": [89, 170, 395, 460, 611, 613, 615, 627], "sine": [89, 170, 395, 460, 611, 613, 615, 627], "amplitud": [89, 170, 395, 460, 611, 613, 615], "offset": [89, 170, 395, 460, 605, 606, 611, 613, 615, 621], "freq_0": [89, 170, 395, 460], "freq_1": [89, 170, 395, 460], "ao_open_async": [89, 90, 91, 115, 116, 117, 119, 120, 167, 168, 170, 171, 172, 603, 611, 613, 615], "ao_setmode_async": [89, 170, 603, 611, 613, 615], "10k": [89, 170, 395, 460, 624], "hz": [89, 117, 170, 395, 415, 460, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ao_setsamplingrate_async": [89, 170, 603, 611, 613, 615], "numsampl": [89, 170, 395, 460, 589], "ao_setnumsamples_async": [89, 170, 603, 611, 613, 615], "ao_setnumsampl": [89, 170, 395, 460, 603, 611, 613, 615], "ao_setenablechannels_async": [89, 170, 603, 611, 613, 615], "form": [89, 170, 395, 460, 611, 613, 615, 623, 626], "ao_setform_async": [89, 170, 603, 611, 613, 615], "ao_setformparam_async": [89, 170, 603, 611, 613, 615], "info": [89, 121, 122, 123, 124, 125, 126, 170, 395, 419, 420, 421, 422, 423, 424, 460, 589, 599, 600, 601, 611, 613, 615], "ao_openstreaming_async": [89, 170, 603, 611, 613, 615], "ao_startstreaming_async": [89, 170, 603, 611, 613, 615], "ao_closestreaming_async": [89, 170, 603, 611, 613, 615], "ao_close_async": [89, 90, 91, 115, 116, 117, 119, 120, 167, 168, 170, 171, 172, 603, 611, 613, 615], "ao_write_all_channel": [90, 119, 171, 396, 417, 461], "simultan": [90, 115, 119, 167, 171, 396, 413, 417, 457, 461, 590, 607, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623], "ao_value_list": [90, 91, 115, 116, 119, 120, 167, 168, 171, 172, 396, 397, 413, 414, 417, 418, 457, 458, 461, 462], "ao_writeallchannels_async": [90, 115, 119, 167, 171, 590, 603, 611, 613, 615], "ao_write_one_channel": [91, 120, 172, 397, 418, 462], "vaul": [91, 116, 117, 120, 168, 172, 397, 414, 415, 418, 458, 462], "ao_writeonechannel_async": [91, 116, 117, 120, 168, 172, 603, 611, 613, 615], "temperature_tc": [102, 103, 104, 291, 292, 293, 404, 405, 406, 561, 562, 563], "tc_read_channel_data": [102, 291, 404, 561], "thermocoupl": [102, 103, 291, 292, 404, 405, 561, 562, 597, 612, 619, 620, 623, 628], "show": [102, 103, 104, 147, 149, 150, 152, 159, 160, 180, 183, 190, 191, 192, 193, 201, 203, 204, 206, 213, 214, 222, 224, 225, 227, 234, 235, 245, 259, 261, 262, 264, 267, 268, 269, 274, 275, 283, 285, 286, 288, 291, 292, 293, 298, 299, 404, 405, 406, 441, 443, 444, 446, 449, 450, 470, 473, 476, 477, 478, 479, 487, 489, 490, 492, 495, 496, 504, 506, 507, 509, 512, 513, 523, 533, 535, 536, 538, 541, 542, 543, 544, 545, 553, 555, 556, 558, 561, 562, 563, 564, 565, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "thermal": [102, 103, 104, 267, 268, 269, 291, 292, 293, 404, 405, 406, 541, 542, 543, 561, 562, 563, 612, 619, 620, 621, 622, 626], "ch": [102, 103, 291, 292, 404, 405, 561, 562], "over_sampling_mod": [102, 103, 291, 292, 404, 405, 561, 562], "16": [102, 103, 149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 291, 292, 404, 405, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 561, 562, 592, 593, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627], "thermo_typ": [102, 103, 291, 292, 404, 405, 561, 562], "b": [102, 103, 291, 292, 404, 405, 561, 562, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627], "type": [102, 103, 291, 292, 404, 405, 561, 562, 596, 597, 605, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 626], "e": [102, 103, 291, 292, 404, 405, 561, 562, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627], "j": [102, 103, 291, 292, 404, 405, 561, 562, 589, 612, 620, 623, 627], "k": [102, 103, 291, 292, 404, 405, 561, 562, 589, 612, 620, 623, 627], "r": [102, 103, 291, 292, 404, 405, 561, 562, 612, 620, 623, 627], "thermo": [102, 103, 104, 291, 292, 293, 307, 322, 404, 405, 406, 561, 562, 563, 573, 584, 597, 621, 622], "thermal_open_async": [102, 103, 104, 267, 268, 269, 291, 292, 293, 603, 612, 619, 620], "over": [102, 103, 291, 292, 404, 405, 561, 562, 597, 612, 620], "thermal_setoversampling_async": [102, 103, 291, 292, 603, 612, 620], "thermal_settype_async": [102, 103, 291, 292, 596, 603, 612, 619, 620], "500": [102, 103, 192, 193, 291, 292, 404, 405, 478, 479, 561, 562, 616], "m": [102, 103, 267, 268, 291, 292, 404, 405, 541, 542, 561, 562, 589, 621], "oversampl": [102, 103, 291, 292, 404, 405, 561, 562, 597, 612, 620], "thermal_readsensor_async": [102, 103, 267, 268, 291, 292, 603, 612, 619, 620], "sensor": [102, 103, 147, 180, 201, 222, 259, 267, 268, 283, 291, 292, 404, 405, 441, 470, 487, 504, 533, 541, 542, 553, 561, 562, 596, 597, 612, 619, 620, 621, 622, 623], "thermal_close_async": [102, 103, 104, 267, 268, 269, 291, 292, 293, 603, 612, 619, 620], "tc_read_channel_data_with_logg": [103, 292, 405, 562], "them": [103, 268, 292, 405, 542, 562, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "logger_writevalu": [103, 292, 405, 562, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "tc_read_channel_statu": [104, 293, 406, 563], "thermal_getstatus_async": [104, 269, 293, 603, 612, 619, 620], "If": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 605, 606, 607, 610, 611, 613, 614, 615, 616, 621, 622, 625], "invok": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424], "function": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 603, 623, 626], "sys_setaiomode_async": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 409, 415, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ai_enablecs_async": [109, 110, 111, 112, 113, 114, 115, 116, 117, 409, 415, 603, 607, 613, 614, 615, 621, 622], "subsequ": [109, 110, 111, 112, 113, 114, 115, 116, 117, 407, 408, 409, 410, 411, 412, 413, 414, 415], "displai": [109, 110, 111, 112, 113, 114, 115, 116, 117, 167, 168, 407, 408, 409, 410, 411, 412, 413, 414, 415, 457, 458], "follow": [109, 110, 111, 112, 113, 114, 115, 116, 117, 167, 168, 407, 408, 409, 410, 411, 412, 413, 414, 415, 457, 458], "cs0": [109, 110, 111, 112, 113, 114, 115, 116, 117, 407, 408, 409, 410, 411, 412, 413, 414, 415], "cs2": [109, 110, 111, 112, 113, 114, 115, 116, 117, 407, 408, 409, 410, 411, 412, 413, 414, 415], "sample0": [109, 110, 111, 112, 113, 114, 115, 116, 117, 407, 408, 409, 410, 411, 412, 413, 414, 415], "sample1": [109, 110, 111, 112, 113, 114, 115, 116, 117, 407, 408, 409, 410, 411, 412, 413, 414, 415], "samplen": [109, 110, 111, 112, 113, 114, 115, 116, 117, 407, 408, 409, 410, 411, 412, 413, 414, 415], "slot": [109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "aio": [109, 110, 111, 112, 113, 114, 117, 119, 120, 407, 408, 409, 410, 411, 412, 415, 417, 418, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628], "modul": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 621, 622, 623, 625, 628], "slot_mod": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424], "sys_getmode_async": [109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ai_continuous_multi_slot": [111, 409], "slot_list": [111, 409], "counter": [111, 117, 409, 415, 600, 601, 606, 610, 613, 614, 615, 616, 617, 618, 619, 620, 625, 626], "keyboardinterrupt": [111, 117, 409, 415], "press": [111, 117, 409, 415], "keyboard": [111, 117, 409, 415], "aio_all_channels_loopback": [115, 167, 413, 457], "across": [115, 167, 413, 457], "ao": [115, 116, 167, 168, 413, 414, 457, 458, 600, 601, 611, 613, 615, 624, 626, 628], "ai": [115, 116, 167, 168, 413, 414, 457, 458, 600, 601, 607, 609, 613, 614, 615, 621, 622, 626, 628], "The": [115, 116, 121, 122, 123, 124, 125, 126, 147, 167, 168, 180, 201, 222, 259, 283, 413, 414, 419, 420, 421, 422, 423, 424, 441, 457, 458, 470, 487, 504, 533, 553, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626], "ar": [115, 116, 121, 122, 123, 124, 125, 126, 167, 168, 413, 414, 419, 420, 421, 422, 423, 424, 457, 458, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628], "wire": [115, 116, 167, 168, 413, 414, 457, 458, 619, 623], "initi": [115, 116, 167, 168, 413, 414, 457, 458, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 606, 613], "correspond": [115, 116, 167, 168, 413, 414, 457, 458, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "onc": [115, 116, 167, 168, 413, 414, 457, 458, 600, 601], "again": [115, 116, 152, 167, 168, 183, 206, 227, 245, 264, 288, 413, 414, 446, 457, 458, 473, 492, 509, 523, 538, 558], "aio_one_channel_loopback": [116, 168, 414, 458], "specif": [116, 168, 414, 458, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624], "ao_output_while_ai_stream": [117, 415], "Not": [117, 415], "alter": [117, 415], "Its": [117, 415, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "must": [117, 415], "less": [117, 193, 415, 479], "than": [117, 193, 415, 479, 607, 613, 614, 615, 621, 622], "equal": [117, 415, 607, 613, 614, 615, 621, 622], "random": [117, 147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 415, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555], "ao_list": [117, 415], "select": [117, 415, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 606, 607, 613, 614, 615, 621, 622, 624], "list": [117, 160, 191, 214, 235, 275, 299, 415, 450, 477, 496, 513, 545, 565, 589, 592, 593, 594, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ao_valu": [117, 415], "choic": [117, 415], "ha": [118, 396, 416, 417, 461, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625], "yet": [118, 396, 416, 417, 461], "sys_setdiomode_async": [121, 122, 123, 124, 125, 126, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "assign": [121, 122, 123, 124, 125, 126, 419, 420, 421, 422, 423, 424, 628], "dio_loadstartup_async": [121, 122, 123, 124, 125, 126, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "direct": [121, 122, 123, 124, 125, 126, 419, 420, 421, 422, 423, 424, 605, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 623, 626], "state_list_async": 121, "default": [134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "ai_enablechannel_async": [134, 135, 137, 138, 139, 161, 162, 164, 165, 166, 167, 168, 603, 607, 613, 614, 615, 621, 622], "counter_read": [140, 173, 194, 215, 236, 252, 276, 434, 463, 480, 497, 514, 526, 546, 603, 614, 615, 616, 617, 618, 619, 620], "counter_open_async": [140, 173, 194, 215, 236, 252, 276, 603, 614, 615, 616, 617, 618, 619, 620], "counter_start_async": [140, 173, 194, 215, 236, 252, 276, 603, 614, 615, 616, 617, 618, 619, 620], "counter_read_async": [140, 173, 194, 215, 236, 252, 276, 603, 614, 615, 616, 617, 618, 619, 620], "counter_stop_async": [140, 173, 194, 215, 236, 252, 276, 603, 614, 615, 616, 617, 618, 619, 620], "counter_close_async": [140, 173, 194, 215, 236, 252, 276, 603, 614, 615, 616, 617, 618, 619, 620], "i2c_write_read": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "commun": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 614, 615, 616, 617, 619, 620], "master": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556], "24c08c": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "slave": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 614, 615, 616, 617, 619, 620], "interfac": [147, 149, 150, 159, 160, 180, 190, 191, 192, 193, 201, 203, 204, 213, 214, 222, 224, 225, 234, 235, 259, 261, 262, 274, 275, 283, 285, 286, 298, 299, 441, 443, 444, 449, 450, 470, 476, 477, 478, 479, 487, 489, 490, 495, 496, 504, 506, 507, 512, 513, 533, 535, 536, 544, 545, 553, 555, 556, 564, 565, 623], "some": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556], "byte": [147, 149, 150, 159, 160, 180, 190, 191, 192, 193, 201, 203, 204, 213, 214, 222, 224, 225, 234, 235, 259, 261, 262, 274, 275, 283, 285, 286, 298, 299, 441, 443, 444, 449, 450, 470, 476, 477, 478, 479, 487, 489, 490, 495, 496, 504, 506, 507, 512, 513, 533, 535, 536, 544, 545, 553, 555, 556, 564, 565, 592, 593, 598, 614, 615, 616, 617, 619, 620], "address": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 592, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 626], "eeprom": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 626], "have": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 607, 611, 613, 614, 615, 621, 622], "howev": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555], "expeci": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "wore": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "device_address": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "0x50": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "01010000": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "numpi": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 589], "np": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 589], "word_address": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553], "randint": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555], "256": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 614, 616, 617, 619, 620, 627], "take": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 628], "i2c_open_async": [147, 180, 201, 222, 259, 283, 603, 614, 615, 616, 617, 619, 620], "clock": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553, 592, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "standard": [147, 180, 193, 201, 222, 259, 283, 441, 470, 479, 487, 504, 533, 553, 614, 615, 616, 617, 619, 620, 627], "i2c_setclockrate_async": [147, 180, 201, 222, 259, 283, 603, 614, 615, 616, 617, 619, 620], "via": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 614, 615, 616, 617, 619, 620], "wren": [147, 149, 150, 180, 201, 203, 204, 222, 224, 225, 259, 261, 262, 283, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593], "i2c_write_async": [147, 180, 201, 222, 259, 283, 603, 614, 615, 616, 617, 619, 620], "0x": [147, 180, 201, 222, 259, 283, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555], "02x": [147, 149, 180, 201, 203, 222, 224, 259, 261, 283, 285, 441, 443, 470, 487, 489, 504, 506, 533, 535, 553, 555, 593], "i2c_read_async": [147, 180, 201, 222, 259, 283, 603, 614, 615, 616, 617, 619, 620], "i2c_close_async": [147, 180, 201, 222, 259, 283, 603, 614, 615, 616, 617, 619, 620], "spi_read_and_writ": [149, 203, 224, 261, 285, 443, 489, 506, 535, 555], "25lc640": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556], "datas": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556], "bit": [149, 150, 159, 160, 190, 191, 203, 204, 213, 214, 224, 225, 234, 235, 261, 262, 274, 275, 285, 286, 298, 299, 443, 444, 449, 450, 476, 477, 489, 490, 495, 496, 506, 507, 512, 513, 535, 536, 544, 545, 555, 556, 564, 565, 598, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626], "first_bit": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556], "msb": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 614, 616, 617, 619, 620, 627], "lsb": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 627], "prescal": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 614, 616, 617, 619, 620, 626, 627], "64": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 614, 616, 617, 619, 620, 627], "cpol": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 614, 616, 617, 619, 620, 627], "cpha": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 614, 616, 617, 619, 620, 627], "do_index": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593], "elif": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 589, 591, 592, 593, 595, 598], "addr": [149, 203, 224, 261, 285, 443, 489, 506, 535, 555], "0x02": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 621], "dummi": [149, 203, 224, 261, 285, 443, 489, 506, 535, 555], "0x01": [149, 203, 224, 261, 285, 300, 443, 489, 506, 535, 555, 566, 621], "0x03": [149, 203, 224, 261, 285, 443, 489, 506, 535, 555], "0x06": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593], "pin0": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "spi_open_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "spi_setdatasize_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "spi_setfirstbit_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "spi_setprescaler_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "spi_setmode_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "spi_write_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "0x00": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 621], "spi_readandwrite_async": [149, 203, 224, 261, 285, 603, 614, 616, 617, 619, 620], "format": [149, 160, 191, 203, 214, 224, 235, 261, 275, 285, 299, 443, 450, 477, 489, 496, 506, 513, 535, 545, 555, 565, 589, 593, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "spi_close_async": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 603, 614, 616, 617, 619, 620], "spi_writ": [150, 204, 225, 262, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 603, 614, 616, 617, 619, 620], "0x55": [150, 204, 225, 262, 286, 444, 490, 507, 536, 556], "0x0002": [150, 204, 225, 262, 286, 444, 490, 507, 536, 556], "system_usb": [151, 152, 153, 154, 182, 183, 184, 185, 205, 206, 207, 208, 226, 227, 228, 229, 244, 245, 246, 247, 263, 264, 265, 266, 287, 288, 289, 290, 445, 446, 447, 448, 472, 473, 474, 475, 491, 492, 493, 494, 508, 509, 510, 511, 522, 523, 524, 525, 537, 538, 539, 540, 557, 558, 559, 560], "get_usb_info": [151, 182, 205, 226, 244, 263, 287, 445, 472, 491, 508, 522, 537, 557], "serial_num": [151, 182, 205, 226, 244, 263, 287, 445, 472, 491, 508, 522, 537, 557, 614, 615, 616, 617, 618, 619, 620], "sys_getserialnumber_async": [151, 182, 205, 226, 244, 263, 287, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "get_pin_mod": [152, 183, 206, 227, 245, 264, 288, 446, 473, 492, 509, 523, 538, 558], "idl": [152, 183, 206, 227, 245, 264, 288, 446, 473, 492, 509, 523, 538, 558, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pinmod": [152, 183, 206, 227, 245, 264, 288, 446, 473, 492, 509, 523, 538, 558, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pin_mod": [152, 183, 206, 227, 245, 264, 288, 446, 473, 492, 509, 523, 538, 558, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_getpinmodeinport_async": [152, 183, 206, 227, 245, 264, 288, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "uart_read": [159, 190, 213, 234, 274, 298, 449, 476, 495, 512, 544, 564, 598, 603, 614, 615, 616, 617, 619, 620], "anoth": [159, 160, 190, 191, 192, 193, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 478, 479, 495, 496, 512, 513, 544, 545, 564, 565, 626], "baudrat": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598], "9600": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565], "data_bit_mod": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565], "9": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 300, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 566, 614, 615, 616, 617, 619, 620, 621, 627], "parity_mod": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565], "none": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 338, 340, 364, 366, 373, 375, 383, 385, 387, 389, 392, 394, 398, 400, 401, 403, 425, 427, 445, 446, 448, 449, 450, 472, 473, 475, 476, 477, 491, 492, 494, 495, 496, 508, 509, 511, 512, 513, 522, 523, 525, 537, 538, 540, 544, 545, 557, 558, 560, 564, 565, 577, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 627], "even": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 614, 615, 616, 617, 619, 620, 627], "pariti": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 614, 615, 616, 617, 619, 620, 626], "odd": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 614, 615, 616, 617, 619, 620, 627], "stop_bit_mod": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565], "read_byt": [159, 190, 213, 234, 274, 298, 449, 476, 495, 512, 544, 564, 598], "uart_open_async": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 603, 614, 615, 616, 617, 619, 620], "uart_setbaudrate_async": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 603, 614, 615, 616, 617, 619, 620], "uart_setdatabit_async": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 603, 614, 615, 616, 617, 619, 620], "uart_setparity_async": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 603, 614, 615, 616, 617, 619, 620], "uart_setnumstopbit_async": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 603, 614, 615, 616, 617, 619, 620], "informaion": [159, 190, 213, 234, 274, 298, 449, 476, 495, 512, 544, 564], "uart_read_async": [159, 190, 213, 234, 274, 298, 603, 614, 615, 616, 617, 619, 620], "uart_close_async": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 603, 614, 615, 616, 617, 619, 620], "uart_writ": [160, 191, 214, 235, 275, 299, 450, 477, 496, 513, 545, 565, 598, 603, 614, 615, 616, 617, 619, 620], "12345": [160, 191, 214, 235, 275, 299, 450, 477, 496, 513, 545, 565], "uart_write_async": [160, 191, 214, 235, 275, 299, 603, 614, 615, 616, 617, 619, 620], "chungle": [160, 191, 214, 235, 275, 299, 450, 477, 496, 513, 545, 565], "peopl": [160, 191, 214, 235, 275, 299, 450, 477, 496, 513, 545, 565], "can_read": [192, 478, 603, 616], "125": [192, 193, 478, 479, 616, 627], "khz": [192, 193, 478, 479, 616, 627], "250": [192, 193, 478, 479, 616], "mhz": [192, 193, 478, 479, 616, 627], "can_open_async": [192, 193, 603, 616], "can_setspeed_async": [192, 193, 603, 616], "can_start_async": [192, 193, 603, 616], "frame": [192, 478, 614, 616, 617, 619, 620], "frame_list": [192, 478, 616], "can_read_async": [192, 603, 616], "01": [192, 443, 444, 478, 489, 490, 506, 507, 535, 536, 555, 556], "can_stop_async": [192, 193, 603, 616], "can_close_async": [192, 193, 603, 616], "can_writ": [193, 479, 603, 616], "can_length": [193, 479], "extend": [193, 479, 589, 616, 627], "can_typ": [193, 479], "remot": [193, 479, 616, 627], "id": [193, 479, 616], "can_write_async": [193, 603, 616], "33": [193, 479], "22": [193, 479], "11": [193, 479, 616, 623], "88": [193, 479], "77": [193, 479], "55": [193, 479], "66": [193, 479], "sec": [193, 479, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "temperature_rtd": [267, 268, 269, 541, 542, 543], "rtd_read_channel_data": [267, 541], "data0": [267, 268, 541, 542], "data1": [267, 268, 541, 542], "rtd_read_channel_data_with_logg": [268, 542], "logger_writelist": [268, 542, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "rtd_read_channel_statu": [269, 543], "ahrs_read": [300, 566], "three": [300, 566, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "estim": [300, 566, 621], "38": [300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "mask": [300, 566, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 621, 622], "theo_grav": [300, 566], "81": [300, 566, 621], "dt": [300, 566, 621], "003": [300, 566], "offset_z": [300, 566], "05": [300, 441, 443, 444, 470, 487, 489, 490, 504, 506, 507, 533, 535, 536, 553, 555, 556, 566, 589], "ahrs_open_async": [300, 603, 621], "ahrs_setgeneral_async": [300, 603, 621], "ahrs_setgener": [300, 566, 603, 621], "ahrs_start_async": [300, 603, 621], "ahrs_list": [300, 566], "ahrs_readstreaming_async": [300, 603, 621], "x_esti": [300, 566], "y_esti": [300, 566], "z_est": 300, "ahrs_stop_async": [300, 603, 621], "ahrs_close_async": [300, 603, 621], "system_wifi": [307, 308, 309, 310, 311, 322, 323, 324, 325, 326, 573, 574, 575, 576, 577, 584, 585, 586, 587, 588], "get_wifi_daq_statu": [307, 322, 573, 584], "basic": [307, 322, 338, 364, 373, 383, 387, 392, 398, 401, 425, 573, 584], "rssi": [307, 322, 573, 584, 621, 622], "batteri": [307, 322, 573, 584, 621, 622], "power": [307, 322, 573, 584, 621, 622, 623], "charg": [307, 322, 573, 584, 621, 622], "wifi_readrssi_async": [307, 322, 603, 621, 622], "wifi_readbattery_async": [307, 322, 603, 621, 622], "wifi_readthermo_async": [307, 322, 603, 621, 622], "power_statu": [307, 322, 573, 584], "wifi_getpowergoodstatus_async": [307, 322, 603, 621, 622], "charge_statu": [307, 322, 573, 584], "wifi_getchargestatus_async": [307, 322, 603, 621, 622], "dbm": [307, 322, 573, 584, 621, 622], "mv": [307, 322, 573, 584, 621, 622], "set_led_statu": [310, 325, 576, 587], "wifi_resetled_async": [310, 325, 603, 621, 622], "green": [310, 325, 576, 587, 621, 622], "wifi_setgreenled_async": [310, 325, 603, 621, 622], "blue": [310, 325, 576, 587, 621, 622], "wifi_setblueled_async": [310, 325, 603, 621, 622], "red": [310, 325, 576, 587, 621, 622], "wifi_setredled_async": [310, 325, 603, 621, 622], "bcst_enumeratenetworkdevic": [331, 594, 603, 604], "drive_rstencoderposi": [332, 333, 334, 336, 337, 603, 605], "drive_getmovestatu": [332, 334, 603, 605], "drive_readencoderposit": [332, 334, 603, 605], "drive_getlimitstatu": [333, 603, 605], "daq": [338, 364, 373, 383, 387, 392, 398, 401, 425, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 607, 612, 613, 624, 625, 626, 628], "net_getipaddrandsubmask": [338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "net_getmacaddr": [338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_reboot": [339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setrtc": [340, 366, 375, 385, 389, 394, 400, 403, 427, 448, 475, 494, 511, 525, 540, 560, 577, 588, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_getrtc": [340, 366, 375, 385, 389, 394, 400, 403, 427, 445, 448, 472, 475, 491, 494, 508, 511, 522, 525, 537, 540, 557, 560, 577, 588, 595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "motion_open": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 603, 606, 613], "motion_opencfgfil": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 603, 606, 613], "opencfgfil": [341, 343, 347, 350, 353, 354, 355, 356, 359, 362, 363], "motion_loadcfgfil": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 363, 603, 606, 613], "loadcfgfil": [341, 343, 347, 350, 353, 354, 355, 356, 359, 362, 363], "motion_cfgaxi": [341, 343, 347, 350, 353, 354, 355, 356, 359, 360, 362, 363, 603, 606, 613], "motion_cfglimit": [341, 342, 343, 347, 350, 353, 354, 355, 356, 359, 362, 363, 603, 606, 613], "motion_cfghom": [341, 354, 356, 359, 603, 606, 613], "motion_cfgaxismov": [341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 359, 360, 362, 363, 603, 606, 613], "motion_rstencoderposi": [341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 359, 362, 363, 603, 606, 613], "motion_enableservoon": [341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 359, 361, 362, 363, 603, 606, 613], "motion_startsingleaxismov": [341, 342, 343, 344, 345, 346, 347, 348, 350, 359, 362, 363, 603, 606, 613], "motion_getmovestatu": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 359, 603, 606, 613], "motion_getlogicalposi": [341, 357, 359, 603, 606, 613], "motion_getencoderposi": [341, 359, 603, 606, 613], "motion_stop": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 603, 606, 613], "motion_enableservooff": [341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 359, 361, 362, 363, 603, 606, 613], "motion_clos": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 603, 606, 613], "motion_cfgjerkandaccelmod": [342, 348, 603, 606, 613], "motion_cfgalarm": [343, 603, 606, 613], "motion_cfgbreakpoint": [344, 603, 606, 613], "motion_enablebreakpoint": [344, 603, 606, 613], "motion_cfgcaptur": [345, 603, 606, 613], "motion_enablecaptur": [345, 603, 606, 613], "motion_readcapturepoint": [345, 603, 606, 613], "motion_cfginposi": [347, 603, 606, 613], "motion_cfgcircularinterpo": [348, 603, 606, 613], "motion_startcircularinterpo": [348, 603, 606, 613], "motion_cfg2axislinearinterpo": [349, 603, 606, 613], "motion_startlinearinterpo": [349, 352, 603, 606, 613], "motion_3axishronous_mov": 350, "motion_cfghelicalinterpo": [351, 603, 606, 613], "motion_starthelicalinterpo": [351, 603, 606, 613], "motion_cfg3axislinearinterpo": [352, 603, 606, 613], "cfglimit": 353, "motion_startmultiaxismov": [353, 603, 606, 613], "motion_cfgfindref": [354, 355, 356, 603, 606, 613], "motion_findref": [354, 355, 356, 603, 606, 613], "motion_getlimitstatu": [354, 356, 603, 606, 613], "motion_gethomestatu": [354, 356, 603, 606, 613], "motion_checkref": [354, 355, 356, 603, 606, 613], "motion_cfgencod": [355, 362, 363, 603, 606, 613], "motion_setlogicalposi": [357, 603, 606, 613], "motion_overrideaxisposi": [359, 603, 606, 613], "motion_savecfgfil": [360, 603, 606, 613], "motion_overrideaxisveloc": [362, 363, 603, 606, 613], "motion_overrideaxisaccel": [363, 603, 606, 613], "ai_open": [367, 368, 370, 371, 372, 386, 407, 408, 409, 410, 411, 412, 413, 414, 415, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 457, 458, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 603, 607, 609, 613, 614, 615, 621, 622], "ai_setmod": [367, 368, 370, 371, 372, 407, 408, 409, 410, 411, 412, 415, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 603, 607, 613, 614, 615, 621, 622], "ai_setsamplingr": [367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581, 589, 603, 607, 613, 614, 615, 621, 622], "ai_setnumsampl": [367, 407, 428, 451, 567, 578, 589, 603, 607, 613, 614, 615, 621, 622], "ai_start": [367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581, 589, 603, 607, 613, 614, 615, 621, 622], "ai_readstream": [367, 368, 370, 407, 408, 409, 410, 411, 412, 413, 414, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581, 589, 603, 607, 613, 614, 615, 621, 622], "ai_stop": [367, 368, 370, 407, 408, 409, 410, 415, 428, 429, 431, 451, 452, 454, 567, 568, 570, 578, 579, 581, 589, 603, 607, 613, 614, 615, 621, 622], "ai_clos": [367, 368, 370, 371, 372, 386, 407, 408, 409, 410, 411, 412, 413, 414, 415, 428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 457, 458, 567, 568, 570, 571, 572, 578, 579, 581, 582, 583, 589, 603, 607, 609, 613, 614, 615, 621, 622], "ai_readondemand": [371, 372, 386, 407, 408, 410, 411, 412, 413, 414, 432, 433, 455, 456, 457, 458, 571, 572, 582, 583, 589, 603, 607, 609, 613, 614, 615, 621, 622], "do_openpin": [376, 378, 380, 435, 437, 439, 443, 444, 464, 466, 468, 481, 483, 485, 489, 490, 498, 500, 502, 506, 507, 515, 517, 519, 527, 529, 531, 535, 536, 547, 549, 551, 555, 556, 593, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_writepin": [376, 380, 419, 423, 435, 439, 443, 444, 464, 468, 481, 485, 489, 490, 498, 502, 506, 507, 515, 519, 527, 531, 535, 536, 547, 551, 555, 556, 593, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_openpin": [376, 435, 464, 481, 498, 515, 527, 547, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_readpin": [376, 419, 435, 464, 481, 498, 515, 527, 547, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_closepin": [376, 378, 380, 435, 437, 439, 443, 444, 464, 466, 468, 481, 483, 485, 489, 490, 498, 500, 502, 506, 507, 515, 517, 519, 527, 529, 531, 535, 536, 547, 549, 551, 555, 556, 593, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_closepin": [376, 435, 464, 481, 498, 515, 527, 547, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_openport": [377, 379, 381, 436, 438, 440, 465, 467, 469, 482, 484, 486, 499, 501, 503, 516, 518, 520, 528, 530, 532, 548, 550, 552, 591, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_openport": [377, 436, 465, 482, 499, 516, 528, 548, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_writeport": [377, 381, 391, 420, 424, 436, 440, 465, 469, 482, 486, 499, 503, 516, 520, 528, 532, 548, 552, 591, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_readport": [377, 420, 436, 465, 482, 499, 516, 528, 548, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_closeport": [377, 379, 381, 436, 438, 440, 465, 467, 469, 482, 484, 486, 499, 501, 503, 516, 518, 520, 528, 530, 532, 548, 550, 552, 591, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_closeport": [377, 436, 465, 482, 499, 516, 528, 548, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_togglepin": [378, 421, 437, 466, 483, 500, 517, 529, 549, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_toggleport": [379, 422, 438, 467, 484, 501, 518, 530, 550, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "pwm_open": [382, 442, 471, 488, 505, 521, 534, 554, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_setfrequ": [382, 442, 471, 488, 505, 521, 534, 554, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_setdutycycl": [382, 442, 471, 488, 505, 521, 534, 554, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_start": [382, 442, 471, 488, 505, 521, 534, 554, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_stop": [382, 442, 471, 488, 505, 521, 534, 554, 603, 608, 614, 615, 616, 617, 618, 619, 620], "pwm_close": [382, 442, 471, 488, 505, 521, 534, 554, 603, 608, 614, 615, 616, 617, 618, 619, 620], "relay_open": [390, 391, 603, 610], "relay_read": [390, 603, 610], "relay_clos": [390, 391, 603, 610], "ao_open": [395, 396, 397, 413, 414, 415, 417, 418, 457, 458, 460, 461, 462, 590, 603, 611, 613, 615], "ao_setmod": [395, 460, 603, 611, 613, 615], "ao_setsamplingr": [395, 460, 603, 611, 613, 615], "ao_setenablechannel": [395, 460, 603, 611, 613, 615], "ao_setform": [395, 460, 603, 611, 613, 615], "ao_setformparam": [395, 460, 603, 611, 613, 615], "ao_openstream": [395, 460, 603, 611, 613, 615], "ao_startstream": [395, 460, 603, 611, 613, 615], "ao_closestream": [395, 460, 603, 611, 613, 615], "ao_clos": [395, 396, 397, 413, 414, 415, 417, 418, 457, 458, 460, 461, 462, 590, 603, 611, 613, 615], "ao_writeallchannel": [396, 413, 417, 457, 461, 590, 603, 611, 613, 615], "ao_writeonechannel": [397, 414, 415, 418, 458, 462, 603, 611, 613, 615], "thermal_open": [404, 405, 406, 541, 542, 543, 561, 562, 563, 596, 597, 603, 612, 619, 620], "thermal_setoversampl": [404, 405, 561, 562, 597, 603, 612, 620], "thermal_settyp": [404, 405, 561, 562, 596, 597, 603, 612, 619, 620], "thermal_readsensor": [404, 405, 541, 542, 561, 562, 596, 597, 603, 612, 619, 620], "thermal_clos": [404, 405, 406, 541, 542, 543, 561, 562, 563, 596, 597, 603, 612, 619, 620], "thermal_getstatu": [406, 543, 563, 603, 612, 619, 620], "sys_setaiomod": [407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ai_enablec": [407, 408, 409, 410, 411, 412, 413, 414, 415, 603, 607, 613, 614, 615, 621, 622], "sys_getmod": [407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setdiomod": [419, 420, 421, 422, 423, 424, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "dio_loadstartup": [419, 420, 421, 422, 423, 424, 603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "ai_enablechannel": [428, 429, 431, 432, 433, 451, 452, 454, 455, 456, 457, 458, 603, 607, 613, 614, 615, 621, 622], "counter_open": [434, 463, 480, 497, 514, 526, 546, 603, 614, 615, 616, 617, 618, 619, 620], "counter_start": [434, 463, 480, 497, 514, 526, 546, 603, 614, 615, 616, 617, 618, 619, 620], "counter_stop": [434, 463, 480, 497, 514, 526, 546, 603, 614, 615, 616, 617, 618, 619, 620], "counter_clos": [434, 463, 480, 497, 514, 526, 546, 603, 614, 615, 616, 617, 618, 619, 620], "i2c_open": [441, 470, 487, 504, 533, 553, 592, 603, 614, 615, 616, 617, 619, 620], "i2c_setclockr": [441, 470, 487, 504, 533, 553, 592, 603, 614, 615, 616, 617, 619, 620], "i2c_writ": [441, 470, 487, 504, 533, 553, 592, 603, 614, 615, 616, 617, 619, 620], "pointer": [441, 470, 487, 504, 533, 553], "i2c_read": [441, 470, 487, 504, 533, 553, 592, 603, 614, 615, 616, 617, 619, 620], "i2c_clos": [441, 470, 487, 504, 533, 553, 592, 603, 614, 615, 616, 617, 619, 620], "spi_open": [443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 603, 614, 616, 617, 619, 620], "spi_setdatas": [443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 603, 614, 616, 617, 619, 620], "spi_setfirstbit": [443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 603, 614, 616, 617, 619, 620], "spi_setprescal": [443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 603, 614, 616, 617, 619, 620], "spi_setmod": [443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 603, 614, 616, 617, 619, 620], "spi_readandwrit": [443, 489, 506, 535, 555, 593, 603, 614, 616, 617, 619, 620], "spi_clos": [443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 603, 614, 616, 617, 619, 620], "sys_getserialnumb": [445, 472, 491, 508, 522, 537, 557, 595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_getpinmodeinport": [446, 473, 492, 509, 523, 538, 558, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "uart_open": [449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 603, 614, 615, 616, 617, 619, 620], "uart_setbaudr": [449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 603, 614, 615, 616, 617, 619, 620], "uart_setdatabit": [449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 603, 614, 615, 616, 617, 619, 620], "uart_setpar": [449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 603, 614, 615, 616, 617, 619, 620], "uart_setnumstopbit": [449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 603, 614, 615, 616, 617, 619, 620], "uart_clos": [449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 603, 614, 615, 616, 617, 619, 620], "can_open": [478, 479, 603, 616], "can_setspe": [478, 479, 603, 616], "can_start": [478, 479, 603, 616], "can_stop": [478, 479, 603, 616], "can_clos": [478, 479, 603, 616], "ahrs_open": [566, 603, 621], "ahrs_start": [566, 603, 621], "ahrs_readstream": [566, 603, 621], "z_esti": 566, "ahrs_stop": [566, 603, 621], "ahrs_clos": [566, 603, 621], "wifi_readrssi": [573, 584, 603, 621, 622], "wifi_readbatteri": [573, 584, 603, 621, 622], "wifi_readthermo": [573, 584, 603, 621, 622], "wifi_getpowergoodstatu": [573, 584, 603, 621, 622], "wifi_getchargestatu": [573, 584, 603, 621, 622], "wifi_resetl": [576, 587, 603, 621, 622], "wifi_setgreenl": [576, 587, 603, 621, 622], "wifi_setbluel": [576, 587, 603, 621, 622], "wifi_setblule": [576, 587], "wifi_setredl": [576, 587, 603, 621, 622], "example_analog_input": 589, "o": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603], "sy": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "third": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "parti": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "matplotlib": 589, "anim": 589, "pyqt5": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "qtwidget": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "qtgui": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "qwidget": 589, "qmessagebox": [589, 591, 595], "ui_design": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "ui_example_gui_ai": 589, "ui_mainwindow": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "class": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "matplotlibwidget": 589, "__init__": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "self": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "parent": 589, "super": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "mainwindow": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "qmainwindow": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "ui": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "setupui": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "materi": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "path": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 626], "file_path": [589, 590, 591, 592, 593, 595, 596, 597, 598], "dirnam": [589, 590, 591, 592, 593, 595, 596, 597, 598], "__file__": [589, 590, 591, 592, 593, 595, 596, 597, 598], "trademark_path": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "trademark": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "jpg": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "blue_led_path": [589, 590, 591, 592, 593, 595, 596, 597, 598], "led_blu": [589, 590, 591, 592, 593, 595, 596, 597, 598], "png": [589, 590, 591, 592, 593, 595, 596, 597, 598], "red_led_path": [589, 590, 591, 592, 593, 595, 596, 597, 598], "led_r": [589, 590, 591, 592, 593, 595, 596, 597, 598], "green_led_path": [589, 590, 591, 592, 593, 595, 596, 597, 598], "led_green": [589, 590, 591, 592, 593, 595, 596, 597, 598], "gray_led_path": [589, 590, 591, 592, 593, 595, 596, 597, 598], "led_grai": [589, 590, 591, 592, 593, 595, 596, 597, 598], "lb_trademark": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "setpixmap": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "qpixmap": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "lb_led": [589, 590, 591, 592, 593, 595, 596, 597, 598], "flag": [589, 590, 591, 592, 593, 595, 596, 597, 598], "connect_flag": [589, 590, 591, 592, 593, 595, 596, 597, 598], "declar": [589, 590, 591, 592, 593, 595, 596, 597, 598], "plot": 589, "plot_y_min": 589, "plot_y_max": 589, "channel_list": [589, 611, 613, 615], "append": [589, 590, 592, 593, 594], "plot_total_tim": 589, "callback": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "event": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "btn_connect": [589, 590, 591, 592, 593, 595, 596, 597, 598], "click": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "connectev": [589, 590, 591, 592, 593, 595, 596, 597, 598], "btn_disconnect": [589, 590, 591, 592, 593, 595, 596, 597, 598], "disconnectev": [589, 590, 591, 592, 593, 595, 596, 597, 598], "btn_aistart": 589, "startaiev": 589, "btn_aistop": 589, "stopaiev": 589, "lineedit_samplingr": 589, "returnpress": 589, "setsamplingrateev": 589, "lineedit_numsampl": 589, "setnumofsampleev": 589, "combobox_aimod": 589, "currentindexchang": 589, "chooseaimodeev": 589, "lineedit_yscalemax": 589, "setyscalemaxev": 589, "lineedit_yscalemin": 589, "setyscaleminev": 589, "kill": 589, "ai_lock": 589, "lock": 589, "acquir": [589, 607, 613, 614, 615, 621, 622], "ai_stream_thread": 589, "aistreamthread": 589, "plotiniti": 589, "plotanim": 589, "closeev": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "selecthandl": [589, 590, 591, 592, 593, 595, 596, 597, 598], "handle_idx": [589, 590, 591, 592, 593, 595, 596, 597, 598], "combobox_handl": [589, 590, 591, 592, 593, 595, 596, 597, 598], "currentindex": [589, 590, 591, 592, 593, 595, 596, 597, 598], "updateparam": [589, 590, 591, 592, 593, 595, 596, 597, 598], "serial_numb": [589, 590, 591, 592, 593, 595, 596, 597, 598], "gui": [589, 590, 591, 592, 593, 595, 596, 597, 598], "lineedit_ip": [589, 590, 591, 592, 593, 595, 596, 597, 598], "text": [589, 590, 591, 592, 593, 595, 596, 597, 598], "combobox_port": [589, 590, 591, 592, 593, 596, 597, 598], "ai_sampling_r": 589, "float": [589, 590, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "ai_n_sampl": 589, "param": [589, 590, 591, 592, 593, 595, 596, 597, 598], "error": [589, 590, 591, 592, 593, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "setdisplayplotnum": 589, "checkconnectionstatu": [589, 591, 595], "checkboxstatu": 589, "x": [589, 606, 613, 621, 622], "mplwidget": 589, "canva": 589, "ax": [589, 606, 613, 623], "alpha": 589, "rearrag": 589, "accord": 589, "amount": [589, 607, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "funcanim": 589, "plotchart": 589, "plotgetaxisdata": 589, "interv": 589, "repeat": 589, "draw": 589, "checkbox": 589, "mainui": 589, "window": 589, "list_ch": 589, "cb_ch0": 589, "cb_ch1": 589, "cb_ch2": 589, "cb_ch3": 589, "cb_ch4": 589, "cb_ch5": 589, "cb_ch6": 589, "cb_ch7": 589, "ischeck": [589, 591], "xmin": 589, "xmax": 589, "x_max": 589, "x_min": 589, "max": [589, 614, 623], "x_list": 589, "xtick": 589, "dx": 589, "tick": 589, "arang": 589, "yield": [589, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "clear": [589, 594, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "marker": 589, "markers": 589, "err_xlist": 589, "err_ylist": 589, "y": [589, 606, 613, 621, 622], "set_ylim": 589, "set_xlim": 589, "xtickslabel": 589, "set_xtick": 589, "new_tick": 589, "plotconvertxtick": 589, "set_xticklabel": 589, "label": 589, "set_xlabel": 589, "fontsiz": 589, "12": [589, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "set_ylabel": 589, "v": 589, "legend": 589, "loc": 589, "center": [589, 599, 606, 613], "left": 589, "shadow": 589, "bbox_to_anchor": 589, "75": 589, "facecolor": 589, "f0f0f0": 589, "grid": 589, "color": [589, 594], "bac3d1": 589, "linestyl": 589, "linewidth": 589, "2f": 589, "num": 589, "arrai": 589, "yscalemax": 589, "yscalemin": 589, "messag": [589, 591, 595, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "server": [589, 591, 595], "app": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "qapplic": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "wpc_main_ui": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "exit": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "exec_": [589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "example_analog_output": 590, "analog": [590, 611, 621, 622, 623], "ui_example_gui_ao": 590, "devid": [590, 596, 597, 598], "fct_list": 590, "hrztslider_cb0": 590, "hrztslider_cb1": 590, "hrztslider_cb2": 590, "hrztslider_cb3": 590, "hrztslider_cb4": 590, "hrztslider_cb5": 590, "hrztslider_cb6": 590, "hrztslider_cb7": 590, "obj_hrztslid": 590, "getattr": [590, 591], "horizontalslid": 590, "d": [590, 591, 603, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 619, 620, 621, 622, 625, 628], "setrang": 590, "setsinglestep": 590, "valuechang": 590, "btn_updat": 590, "writeaovalu": 590, "btn_setal": 590, "setlineeditvalueev": 590, "scaledvalu": 590, "lineedit0": 590, "settext": [590, 592, 593, 595, 596, 597, 598], "lineedit1": 590, "lineedit2": 590, "lineedit3": 590, "lineedit4": 590, "lineedit5": 590, "lineedit6": 590, "lineedit7": 590, "voltage_list": 590, "obj_lineedit": 590, "lineedit": 590, "lineedit_setal": 590, "example_digital_output": 591, "ui_example_gui_do": 591, "state_c": 591, "255": [591, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "switch_blue_path": 591, "switch_blu": 591, "switch_gray_path": 591, "switch_grai": 591, "convert": [591, 592, 593], "backward": 591, "slash": 591, "replac": [591, 592, 593], "obj_chbox_st": 591, "checkbox_st": 591, "statechang": 591, "statedoev": 591, "setstylesheet": [591, 594], "qcheckbox": 591, "indic": [591, 605, 606, 607, 613, 614, 615, 616, 621, 622, 624, 626], "width": [591, 606, 613], "60px": 591, "height": 591, "uncheck": 591, "imag": 591, "url": 591, "calcul": [591, 606, 613], "mcu": 591, "example_i2c": 592, "ui_example_gui_i2c": 592, "btn_write": [592, 593, 598], "writeev": [592, 593, 598], "btn_read": [592, 593, 598], "readev": [592, 593, 598], "btn_set": [592, 593, 596, 597], "setclockev": 592, "clock_mod": 592, "combobox_clockr": 592, "hex": [592, 593], "write_addr": 592, "lineedit_writeaddr": 592, "lineedit_writ": [592, 593, 598], "write_data": [592, 593, 598, 614, 615, 616, 617, 619, 620], "converstrtointlist": [592, 593], "byte_read": 592, "lineedit_byteread": [592, 598], "read_addr": 592, "lineedit_readaddr": 592, "lineedit_read": [592, 593, 598], "str_": [592, 593, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "split": [592, 593, 594], "comma": [592, 593], "write_data_strlist": [592, 593], "write_data_int": [592, 593], "item": [592, 593], "example_spi": 593, "ui_example_gui_spi": 593, "setev": [593, 596, 597], "combobox_mod": 593, "combobox_prescal": 593, "example_find_all_devic": 594, "find": [594, 600, 601, 605, 606, 613], "qtablewidget": 594, "qtcore": 594, "qt": 594, "ui_example_gui_find_all_devic": 594, "column_width": 594, "160": 594, "getcwd": 594, "tabl": 594, "initibroadcastt": 594, "button": 594, "btn_broadcast": 594, "broadcastnetworkev": 594, "broadcast_list": 594, "column": 594, "tablewidget_brst": 594, "setcolumnwidth": 594, "background": 594, "217536": 594, "loaddata": 594, "row": 594, "setrowcount": 594, "setitem": 594, "qtablewidgetitem": 594, "firmware_v": 594, "restoreoverridecursor": 594, "add": 594, "waitcursor": 594, "setoverridecursor": 594, "broadcast": [594, 604], "broadcast_info": 594, "length": [594, 626], "device_amount": 594, "model_vers": 594, "str_list": 594, "_": 594, "example_get_device_info": 595, "ui_example_gui_get_device_info": 595, "btn_deviceinfo": 595, "getdeviceinfoev": 595, "sys_getipaddrandsubmask": [595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_getmacaddr": [595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "lineedit_sbk": 595, "lineedit_serialnum": 595, "lineedit_mac": 595, "lineedit_model": 595, "lineedit_vers": 595, "lineedit_rtc": 595, "tcp": [595, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622, 623, 626], "example_rtd": 596, "ui_example_gui_rtd": 596, "btn_rtd": 596, "rtdevent": 596, "combobox_typ": [596, 597], "noisereject": [596, 597], "combobox_noisereject": [596, 597], "lineedit_sensor0": [596, 597], "lineedit_sensor1": [596, 597], "example_thermo": 597, "ui_example_gui_thermocoupl": 597, "btn_temp": 597, "tempev": 597, "combobox_oversampl": 597, "example_uart": 598, "ui_example_gui_uart": 598, "lb_ledport": 598, "btn_open": 598, "openportev": 598, "btn_close": 598, "closeportev": 598, "combobox_baudr": 598, "currenttext": 598, "databit": 598, "combobox_databit": 598, "combobox_par": 598, "stopbit": 598, "combobox_stopbit": 598, "test": [599, 606, 613], "panel": 599, "finder": [599, 603], "logger": [600, 601], "multi": [600, 601, 606, 613, 623], "waveform": [600, 601], "loopback": [600, 601], "blinki": [600, 601], "hello": [600, 601], "tutori": 600, "multipl": [600, 606, 613], "drive": [600, 601, 605, 626, 628], "1axi": [600, 601], "posit": [600, 601, 605, 606, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 627], "blend": [600, 601], "acceler": [600, 601, 605, 606, 613, 621, 622, 623, 626], "motion": [600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "logic": [600, 601, 605, 606, 613, 627], "config": [600, 601], "alarm": [600, 601, 605, 606, 613], "breakpoint": [600, 601, 606, 613, 626], "captur": [600, 601, 606, 613, 623, 626], "inposit": [600, 601, 606, 613], "2axi": [600, 601], "circular": [600, 601, 606, 613, 623], "interpo": [600, 601], "linear": [600, 601, 606, 613, 623], "3axi": [600, 601], "helic": [600, 601, 606, 613, 623], "pwm": [600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626], "relai": [600, 601, 610, 623, 626], "tc": [600, 601, 612, 619, 620, 628], "i2c": [600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "spi": [600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628], "uart": [600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 628], "rtd": [600, 601, 612, 619, 620, 628], "ahr": [600, 601, 621, 626, 628], "control": [602, 606, 623], "motion card": 602, "wifi": [602, 623, 624, 625, 628], "descript": 603, "bcst_checkmacandreboot": [603, 604], "bcst_checkmacandreboot_async": [603, 604], "bcst_checkmacandsetip": [603, 604], "bcst_checkmacandsetip_async": [603, 604], "e3": [603, 624, 628], "A": [603, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 628], "pinout": 603, "ahrs_reset": [603, 621], "ahrs_reset_async": [603, 621], "ai_getport": [603, 607, 609, 613, 614, 615, 621, 622], "net_getgatewai": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "net_getgateway_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "net_setipaddrandsubmask": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "net_setipaddrandsubmask_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_getgatewai": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_getgateway_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_getipaddrandsubmask_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_getmacaddr_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_getpythonvers": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_getpythonversion_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_rebootonbootload": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_rebootonbootloader_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setdimod": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setdimode_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setdomod": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setdomode_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setipaddrandsubmask": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_setipaddrandsubmask_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "sys_setidlemod": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setidlemode_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setmotionmod": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setmotionmode_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setswitchmod": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "sys_setswitchmode_async": [603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "wifi_getwifibandwidth": [603, 621, 622], "wifi_getwifibandwidth_async": [603, 621, 622], "wifi_getwificonfigur": [603, 621, 622], "wifi_getwificonfiguration_async": [603, 621, 622], "wifi_readacceler": [603, 621, 622], "wifi_readaccleration_async": [603, 621, 622], "wifi_setap": [603, 621, 622], "wifi_setap_async": [603, 621, 622], "wifi_setbandwidth": [603, 621, 622], "wifi_setbandwidth_async": [603, 621, 622], "f4": [603, 624, 628], "ao_getenablechannel": [603, 611, 613, 615], "ao_getmod": [603, 611, 613, 615], "ao_getmode_async": [603, 611, 613, 615], "ao_getport": [603, 611, 613, 615], "ao_getst": [603, 611, 613, 615], "ao_getvalu": [603, 611, 613, 615], "ao_getvalues_async": [603, 611, 613, 615], "dio_savestartup": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_savestartup_async": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_setportdi": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_setportdi_async": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_setportdo": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_setportdo_async": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_setportidl": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "dio_setportidle_async": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "di_getpinmap": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "do_getpinmap": [603, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "motion_cfg4axislinearinterpo": [603, 606, 613], "motion_cfg4axislinearinterpo_async": [603, 606, 613], "drive_cfgencod": [603, 605], "drive_cfgencoder_async": [603, 605], "drive_getalarmstatu": [603, 605], "drive_getalarmstatus_async": [603, 605], "drive_readcurrentveloc": [603, 605], "drive_readcurrentvelocity_async": [603, 605], "ethan": [603, 624, 625, 628], "l": [603, 628], "thermal_getpinmap": [603, 612, 619, 620], "f1": [603, 624, 625, 628], "i2c_getpinmap": [603, 614, 615, 616, 617, 619, 620], "i2c_reset": [603, 614, 615, 616, 617, 619, 620], "i2c_reset_async": [603, 614, 615, 616, 617, 619, 620], "i2c_setaddresss": [603, 614, 615, 616, 617, 619, 620], "i2c_setaddresssize_async": [603, 614, 615, 616, 617, 619, 620], "spi_getpinmap": [603, 614, 616, 617, 619, 620], "spi_read": [603, 614, 616, 617, 619, 620], "spi_read_async": [603, 614, 616, 617, 619, 620], "spi_reset": [603, 614, 616, 617, 619, 620], "spi_reset_async": [603, 614, 616, 617, 619, 620], "uart_getpinmap": [603, 614, 615, 616, 617, 619, 620], "uart_reset": [603, 614, 615, 616, 617, 619, 620], "uart_reset_async": [603, 614, 615, 616, 617, 619, 620], "uart_stopread": [603, 614, 615, 616, 617, 619, 620], "uart_stopreading_async": [603, 614, 615, 616, 617, 619, 620], "snk": 603, "aod": [603, 624, 625, 628], "td": [603, 625, 628], "rd": [603, 625, 628], "cd": [603, 625, 628], "can_getport": [603, 616], "can_setrxfilterormask": [603, 616], "can_setrxfilterormask_async": [603, 616], "can_setrxfilteringon": [603, 616], "can_setrxfilteringon_async": [603, 616], "verbos": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "mac_addr": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "reboot": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "separ": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "colon": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "successfulli": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "otherwis": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "here": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "subnet_mask": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "period": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "dev_info_list": 604, "element": [604, 607, 613, 614, 615, 616, 621, 622], "contain": 604, "subnet": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "bool": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "whether": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "out": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "disonnect": 604, "motor": [605, 623, 628], "phase": [605, 611, 613, 614, 615, 616, 617, 619, 620, 623], "stepper": [605, 623, 626], "axis_dir": [605, 606, 613], "dirction": 605, "origin": 605, "invers": 605, "specifi": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "addit": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "deceler": [605, 606, 613, 627], "absolut": [605, 606, 613, 627], "rel": [605, 606, 608, 613, 614, 615, 616, 617, 618, 619, 620, 627], "count": [605, 606, 613, 614, 615, 616, 617, 618, 619, 620], "s2": [605, 606, 613], "encoder_dir": [605, 606, 613], "search_dir": [605, 606, 613], "search_typ": [605, 606, 613], "search": [605, 606, 613, 626], "percent": [605, 606, 613], "given": [605, 606, 607, 609, 611, 613, 614, 615, 616, 621, 622], "adjust": [605, 606, 613, 623], "locat": [605, 606, 613], "current": [605, 606, 609, 611, 613, 615, 623], "distanc": [605, 606, 613], "request": [605, 606, 613, 614, 615, 616, 617, 619, 620], "limit_polar": [605, 606, 613], "activ": [605, 606, 608, 613, 614, 615, 616, 617, 618, 619, 620, 627], "singal": [605, 606, 613], "instantan": [605, 606, 613], "accerler": [605, 606, 613], "new": [605, 606, 613], "new_veloc": 605, "veloicti": 605, "halt": [605, 606, 613, 627], "edsi": 605, "getewai": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "web": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622, 623], "gatewai": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "network_info": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "deprec": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "v1": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "Will": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "remov": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "ref": [605, 606, 607, 608, 609, 610, 611, 612, 613, 621, 622], "mani": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pin1": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pin7": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "disabl": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "adc": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "softwar": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "repres": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628], "year": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "month": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "dai": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "hour": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "minut": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "charact": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "bootload": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626], "ce": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "31": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "24": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "23": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "59": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "success": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "switch": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "base": [606, 623], "modular": [606, 623], "inter": [606, 623], "filenam": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "clear_old": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "old": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "alread": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "exist": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "value_mat": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "value_list": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "object": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "destin": [606, 613], "vector": [606, 613], "axis4": [606, 613], "dest_posi4": [606, 613], "four": [606, 613], "en_alarm": [606, 613], "alarm_polar": [606, 613], "selector": [606, 613], "stepper_output": [606, 613], "servo_on_polar": [606, 613], "puls": [606, 613, 623, 626, 627], "clockwis": [606, 613], "counterclockwis": [606, 613], "dir": [606, 613, 627], "One": [606, 613, 627], "cw": [606, 613, 623, 627], "ccw": [606, 613, 623, 627], "breakpoint_polar": [606, 613], "start_posi": [606, 613], "capture_typ": [606, 613], "rise": [606, 613, 627], "edg": [606, 613, 627], "fall": [606, 613, 627], "respect": [606, 613], "finish": [606, 613], "encoder_z_polar": [606, 613], "z": [606, 613, 621, 622], "en_axis3": [606, 613], "en_axis4": [606, 613], "rotation_numb": [606, 613], "calculation_timeout": [606, 613], "pitch": [606, 613], "en_hom": [606, 613], "home_polar": [606, 613], "en_inposi": [606, 613], "inposi_polar": [606, 613], "accel_mod": [606, 613], "increas": [606, 613], "decreas": [606, 613], "per": [606, 613, 614, 615, 616, 617, 619, 620], "unit": [606, 613], "acceleration_mod": [606, 613], "trapezoid": [606, 613], "curv": [606, 613, 623], "sequenc": [606, 613], "en_break": [606, 613], "en_captur": [606, 613], "emcod": [606, 613], "axis_list": [606, 613], "8ch": [607, 608, 609, 611, 615, 621, 622, 623], "chip": [607, 613, 614, 615, 621, 622, 624, 626], "volt": [607, 611, 613, 614, 615, 621, 622], "measur": [607, 613, 614, 615, 621, 622], "num_sampl": [607, 611, 613, 614, 615, 621, 622], "pc": [607, 613, 614, 615, 616, 621, 622], "stock": [607, 613, 614, 615, 616, 621, 622], "queue": [607, 613, 614, 615, 616, 621, 622, 626], "call": [607, 613, 614, 615, 616, 621, 622, 624], "fewer": [607, 613, 614, 615, 621, 622], "expect": [607, 613, 614, 615, 621, 622], "ones": [607, 613, 614, 615, 621, 622], "expir": [607, 613, 614, 615, 621, 622], "arriv": [607, 613, 614, 615, 616, 621, 622], "becom": [607, 613, 614, 615, 616, 621, 622], "ineffect": [607, 613, 614, 615, 616, 621, 622], "alreadi": [607, 613, 614, 615, 616, 621, 622, 626], "sample_list": [607, 613, 614, 615, 621, 622], "been": [607, 611, 613, 614, 615, 621, 622], "made": [607, 611, 613, 614, 615, 621, 622], "24v": [608, 613, 618, 623], "6ch": [608, 610, 623], "enable_list": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "about": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "direction_list": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "when": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "intput": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "associ": [608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "pinmap": [608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "dictionari": [608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "kei": [608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "integ": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "thei": [608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "p0": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "p1": [608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620], "pin6": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "pin5": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "pin4": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "pin3": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "pin2": [608, 610, 613, 614, 615, 616, 617, 618, 619, 620], "qualiti": [610, 623], "mechan": [610, 623], "relay_count": 610, "10v": [611, 613, 621, 622, 623], "stand": [611, 613, 615, 628], "where": [611, 613, 615], "which": [611, 613, 615, 619], "accordingli": [611, 613, 615], "averag": [611, 613, 615], "7ch": [612, 623], "tupl": [612, 614, 615, 616, 617, 619, 620], "constitut": [612, 614, 615, 616, 617, 619, 620], "physic": [612, 614, 615, 616, 617, 619, 620], "thermal1": [612, 619, 620], "five": [612, 619, 620], "p2": [612, 614, 615, 616, 617, 619, 620], "thermal_port": [612, 619, 620], "circuit": [612, 619, 620], "fault": [612, 619, 620], "manual": [612, 619, 620], "temperatur": [612, 619, 620, 621, 622], "celsiu": [612, 619, 620, 621, 622], "type_": [612, 619, 620], "24ch": [613, 623], "12ch": [613, 618, 623], "5v": [613, 615, 623], "ttl": [613, 623], "26ch": [614, 617, 623], "3v": [614, 615, 616, 617, 619, 620, 623], "16khz": 614, "i2c1": [614, 615, 616, 617, 619, 620], "i2c2": [614, 615, 616, 617, 619, 620], "p3": [614, 615, 616, 617, 619, 620], "i2c_port": [614, 615, 616, 617, 619, 620], "read_address": [614, 615, 616, 617, 619, 620], "bytes_to_read": [614, 615, 616, 617, 619, 620], "i2c_data": [614, 615, 616, 617, 619, 620], "size": [614, 615, 616, 617, 619, 620, 626], "desir": [614, 615, 616, 617, 619, 620], "400000": [614, 615, 616, 617, 619, 620, 627], "plu": [614, 615, 616, 617, 619, 620, 627], "1000000": [614, 615, 616, 617, 619, 620, 627], "3400000": [614, 615, 616, 617, 619, 620, 627], "write_address": [614, 615, 616, 617, 619, 620], "transfer": [614, 615, 616, 617, 619, 620, 626], "spi1": [614, 616, 617, 619, 620, 627], "spi2": [614, 616, 617, 619, 620, 627], "spi_port": [614, 616, 617, 619, 620], "spi_data": [614, 616, 617, 619, 620], "maximum": [614, 616, 617, 619, 620, 623, 626], "32": [614, 616, 617, 619, 620, 627], "128": [614, 616, 617, 619, 620, 627], "uart1": [614, 615, 616, 617, 619, 620], "uart2": [614, 615, 616, 617, 619, 620], "uart_port": [614, 615, 616, 617, 619, 620], "uart_data": [614, 615, 616, 617, 619, 620], "baud_rat": [614, 615, 616, 617, 619, 620], "baud": [614, 615, 616, 617, 619, 620, 626], "16ch": [615, 623], "20ch": [616, 623], "num_fram": 616, "millisecond": 616, "canfram": 616, "give": 616, "identifi": 616, "extended_id": 616, "tell": 616, "id_": 616, "filter": [616, 626], "recept": 616, "buffer": 616, "29": 616, "ignor": 616, "on_off": 616, "turn": 616, "speed_mod": 616, "dsnk": [618, 625, 628], "14ch": [618, 623], "2ch": [619, 620, 623], "pt": [619, 623], "21ch": [619, 620, 623], "built": [621, 623], "9dof": [621, 623], "imu": [621, 623], "postur": [621, 623], "est": [621, 623], "x1": 621, "y1": 621, "z1": 621, "graviti": 621, "z_offset": 621, "theoret": 621, "Near": 621, "surfac": 621, "earth": 621, "orient": 621, "rad": 621, "0x04": 621, "angular": 621, "0x08": 621, "0x0f": 621, "0b10101": 621, "good": [621, 622], "bandwidth": [621, 622], "ht20": [621, 622], "ht40": [621, 622], "reconnect": [621, 622], "ap": [621, 622], "stai": [621, 622], "wifi_configur": [621, 622], "retri": [621, 622], "accleration_three_axi": [621, 622], "volatg": [621, 622], "level": [621, 622], "station": [621, 622], "port1": [621, 622], "port2": [621, 622], "1336": [621, 622], "photo": 623, "board": 623, "quick": 623, "amplifi": 623, "yaskawa": 623, "panason": 623, "mitsubishi": 623, "delta": 623, "etc": 623, "differenti": 623, "8mpp": 623, "abz": 623, "12mhz": 623, "break": 623, "microstep": 623, "resolut": 623, "51": 623, "revolut": 623, "suppli": 623, "36v": 623, "1a": 623, "peak": 623, "5a": 623, "fwd": 623, "rev": 623, "nomin": 623, "8mhz": 623, "stall": 623, "detect": 623, "intellig": 623, "energi": 623, "diagnost": 623, "ramp": 623, "smooth": 623, "idc": 623, "50p": 623, "multiplex": 623, "4x6": 623, "matrix": 623, "100m": 623, "cabl": 623, "20khz": 623, "npn": 623, "sink": 623, "20ma": 623, "1khz": 623, "4ch": 623, "NO": 623, "nc": 623, "2m": 623, "exclud": 623, "bounc": 623, "1m": [623, 627], "24vdc": 623, "settl": 623, "160m": 623, "1ch": 623, "400khz": 623, "full": 623, "bu": 623, "industri": 623, "isol": 623, "extern": [623, 626], "1mbp": 623, "v2": 623, "0b": 623, "10khz": 623, "802": 623, "g": 623, "ghz": 623, "16k": 624, "8k": 624, "3k": 624, "4k": 624, "2k": 624, "6k": 624, "0k": 624, "12k": 624, "fix": 624, "20k": 624, "below": 624, "1k": 624, "5k": 624, "ctr": 625, "seri": [625, 628], "520003": 626, "warn": 626, "occurr": 626, "overflow": 626, "520002": 626, "520001": 626, "520000": 626, "519000": 626, "librari": 626, "libusb": 626, "dll": 626, "look": 626, "7000": 626, "7001": 626, "7002": 626, "hal": 626, "7003": 626, "7004": 626, "7005": 626, "7006": 626, "7007": 626, "7008": 626, "7009": 626, "7010": 626, "7011": 626, "7012": 626, "7013": 626, "ol": 626, "7014": 626, "core": 626, "7015": 626, "7016": 626, "7017": 626, "7018": 626, "7019": 626, "7020": 626, "7021": 626, "7022": 626, "7023": 626, "7024": 626, "7025": 626, "udp": 626, "7026": 626, "7027": 626, "parser": 626, "7028": 626, "8000": 626, "8001": 626, "fail": 626, "plugin": 626, "8002": 626, "8003": 626, "lost": 626, "8004": 626, "packet": 626, "8005": 626, "valid": 626, "recogn": 626, "8006": 626, "inconsist": 626, "between": 626, "8007": 626, "8008": 626, "8009": 626, "accept": 626, "8010": 626, "extens": 626, "8011": 626, "No": 626, "directori": 626, "8100": 626, "occupi": 626, "8101": 626, "8102": 626, "8103": 626, "8104": 626, "8200": 626, "8201": 626, "8202": 626, "8203": 626, "8204": 626, "8300": 626, "8301": 626, "8302": 626, "span": 626, "8303": 626, "8304": 626, "8305": 626, "8400": 626, "8500": 626, "8501": 626, "8502": 626, "8503": 626, "8600": 626, "8601": 626, "8602": 626, "8700": 626, "8701": 626, "exce": 626, "8702": 626, "8703": 626, "8704": 626, "8705": 626, "8800": 626, "8801": 626, "8802": 626, "8803": 626, "8804": 626, "8805": 626, "8900": 626, "8901": 626, "8902": 626, "invalid": 626, "8903": 626, "tx": 626, "8904": 626, "prioriti": 626, "9100": 626, "9101": 626, "9102": 626, "9103": 626, "9104": 626, "9105": 626, "9106": 626, "9107": 626, "9108": 626, "9109": 626, "9110": 626, "9111": 626, "9112": 626, "9113": 626, "9200": 626, "rectangular": 627, "125k": 627, "250k": 627, "500k": 627, "bp": 627, "peripher": 627, "f_pclk2": 627, "72": 627, "f_pclk1": 627, "36": 627, "18": 627, "25": 627, "562": 627, "281": 627, "140": 627, "625": 627, "big": 627, "littl": 627, "remark": 628}, "objects": {"": [[602, 0, 0, "-", "pywpc"]], "pywpc": [[604, 1, 1, "", "DeviceFinder"], [605, 1, 1, "", "EDrive_ST"], [606, 1, 1, "", "EMotion"], [607, 1, 1, "", "EthanA"], [608, 1, 1, "", "EthanD"], [609, 1, 1, "", "EthanI"], [610, 1, 1, "", "EthanL"], [611, 1, 1, "", "EthanO"], [612, 1, 1, "", "EthanT"], [613, 1, 1, "", "STEM"], [614, 1, 1, "", "USBDAQF1AD"], [615, 1, 1, "", "USBDAQF1AOD"], [616, 1, 1, "", "USBDAQF1CD"], [617, 1, 1, "", "USBDAQF1D"], [618, 1, 1, "", "USBDAQF1DSNK"], [619, 1, 1, "", "USBDAQF1RD"], [620, 1, 1, "", "USBDAQF1TD"], [621, 1, 1, "", "WifiDAQE3A"], [622, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[604, 2, 1, "", "Bcst_checkMACAndReboot"], [604, 2, 1, "", "Bcst_checkMACAndReboot_async"], [604, 2, 1, "", "Bcst_checkMACAndSetIP"], [604, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [604, 2, 1, "", "Bcst_enumerateNetworkDevices"], [604, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [604, 2, 1, "", "Bcst_enumerateUSBDevices"], [604, 2, 1, "", "close"], [604, 2, 1, "", "connect"], [604, 2, 1, "", "disconnect"]], "pywpc.EDrive_ST": [[605, 2, 1, "", "Drive_cfgAxisDirection"], [605, 2, 1, "", "Drive_cfgAxisDirection_async"], [605, 2, 1, "", "Drive_cfgAxisMove"], [605, 2, 1, "", "Drive_cfgAxisMove_async"], [605, 2, 1, "", "Drive_cfgEncoder"], [605, 2, 1, "", "Drive_cfgEncoderDirection"], [605, 2, 1, "", "Drive_cfgEncoderDirection_async"], [605, 2, 1, "", "Drive_cfgEncoder_async"], [605, 2, 1, "", "Drive_cfgFindRef"], [605, 2, 1, "", "Drive_cfgFindRef_async"], [605, 2, 1, "", "Drive_cfgLimit"], [605, 2, 1, "", "Drive_cfgLimit_async"], [605, 2, 1, "", "Drive_close"], [605, 2, 1, "", "Drive_close_async"], [605, 2, 1, "", "Drive_enableServoOff"], [605, 2, 1, "", "Drive_enableServoOff_async"], [605, 2, 1, "", "Drive_enableServoOn"], [605, 2, 1, "", "Drive_enableServoOn_async"], [605, 2, 1, "", "Drive_findReference"], [605, 2, 1, "", "Drive_findReference_async"], [605, 2, 1, "", "Drive_getAlarmStatus"], [605, 2, 1, "", "Drive_getAlarmStatus_async"], [605, 2, 1, "", "Drive_getLimitStatus"], [605, 2, 1, "", "Drive_getLimitStatus_async"], [605, 2, 1, "", "Drive_getMoveStatus"], [605, 2, 1, "", "Drive_getMoveStatus_async"], [605, 2, 1, "", "Drive_open"], [605, 2, 1, "", "Drive_open_async"], [605, 2, 1, "", "Drive_overrideAccel"], [605, 2, 1, "", "Drive_overrideAccel_async"], [605, 2, 1, "", "Drive_overridePosition"], [605, 2, 1, "", "Drive_overridePosition_async"], [605, 2, 1, "", "Drive_overrideVelocity"], [605, 2, 1, "", "Drive_overrideVelocity_async"], [605, 2, 1, "", "Drive_readCurrentVelocity"], [605, 2, 1, "", "Drive_readCurrentVelocity_async"], [605, 2, 1, "", "Drive_readEncoderPosition"], [605, 2, 1, "", "Drive_readEncoderPosition_async"], [605, 2, 1, "", "Drive_rstEncoderPosi"], [605, 2, 1, "", "Drive_rstEncoderPosi_async"], [605, 2, 1, "", "Drive_start"], [605, 2, 1, "", "Drive_start_async"], [605, 2, 1, "", "Drive_stop"], [605, 2, 1, "", "Drive_stop_async"], [605, 2, 1, "", "Net_getGateway"], [605, 2, 1, "", "Net_getGateway_async"], [605, 2, 1, "", "Net_getIPAddrAndSubmask"], [605, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [605, 2, 1, "", "Net_getMACAddr"], [605, 2, 1, "", "Net_getMACAddr_async"], [605, 2, 1, "", "Net_setIPAddrAndSubmask"], [605, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [605, 2, 1, "", "Sys_getDriverInfo"], [605, 2, 1, "", "Sys_getDriverInfo_async"], [605, 2, 1, "", "Sys_getGateway"], [605, 2, 1, "", "Sys_getGateway_async"], [605, 2, 1, "", "Sys_getIPAddrAndSubmask"], [605, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [605, 2, 1, "", "Sys_getMACAddr"], [605, 2, 1, "", "Sys_getMACAddr_async"], [605, 2, 1, "", "Sys_getMode"], [605, 2, 1, "", "Sys_getMode_async"], [605, 2, 1, "", "Sys_getPinModeInPort"], [605, 2, 1, "", "Sys_getPinModeInPort_async"], [605, 2, 1, "", "Sys_getPythonVersion"], [605, 2, 1, "", "Sys_getPythonVersion_async"], [605, 2, 1, "", "Sys_getRTC"], [605, 2, 1, "", "Sys_getRTC_async"], [605, 2, 1, "", "Sys_getSerialNumber"], [605, 2, 1, "", "Sys_getSerialNumber_async"], [605, 2, 1, "", "Sys_reboot"], [605, 2, 1, "", "Sys_rebootOnBootloader"], [605, 2, 1, "", "Sys_rebootOnBootloader_async"], [605, 2, 1, "", "Sys_reboot_async"], [605, 2, 1, "", "Sys_setAIOMode"], [605, 2, 1, "", "Sys_setAIOMode_async"], [605, 2, 1, "", "Sys_setDIMode"], [605, 2, 1, "", "Sys_setDIMode_async"], [605, 2, 1, "", "Sys_setDIOMode"], [605, 2, 1, "", "Sys_setDIOMode_async"], [605, 2, 1, "", "Sys_setDOMode"], [605, 2, 1, "", "Sys_setDOMode_async"], [605, 2, 1, "", "Sys_setIPAddrAndSubmask"], [605, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [605, 2, 1, "", "Sys_setIdleMode"], [605, 2, 1, "", "Sys_setIdleMode_async"], [605, 2, 1, "", "Sys_setMotionMode"], [605, 2, 1, "", "Sys_setMotionMode_async"], [605, 2, 1, "", "Sys_setRTC"], [605, 2, 1, "", "Sys_setRTC_async"], [605, 2, 1, "", "Sys_setSwitchMode"], [605, 2, 1, "", "Sys_setSwitchMode_async"], [605, 2, 1, "", "close"], [605, 2, 1, "", "connect"], [605, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[606, 2, 1, "", "Logger_openFile"], [606, 2, 1, "", "Logger_write2DList"], [606, 2, 1, "", "Logger_writeHeader"], [606, 2, 1, "", "Logger_writeList"], [606, 2, 1, "", "Logger_writeValue"], [606, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [606, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [606, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [606, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [606, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [606, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [606, 2, 1, "", "Motion_cfgAlarm"], [606, 2, 1, "", "Motion_cfgAlarm_async"], [606, 2, 1, "", "Motion_cfgAxis"], [606, 2, 1, "", "Motion_cfgAxisMove"], [606, 2, 1, "", "Motion_cfgAxisMove_async"], [606, 2, 1, "", "Motion_cfgAxis_async"], [606, 2, 1, "", "Motion_cfgBreakPoint"], [606, 2, 1, "", "Motion_cfgBreakPoint_async"], [606, 2, 1, "", "Motion_cfgCapture"], [606, 2, 1, "", "Motion_cfgCapture_async"], [606, 2, 1, "", "Motion_cfgCircularInterpo"], [606, 2, 1, "", "Motion_cfgCircularInterpo_async"], [606, 2, 1, "", "Motion_cfgEncoder"], [606, 2, 1, "", "Motion_cfgEncoder_async"], [606, 2, 1, "", "Motion_cfgFindRef"], [606, 2, 1, "", "Motion_cfgFindRef_async"], [606, 2, 1, "", "Motion_cfgHelicalInterpo"], [606, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [606, 2, 1, "", "Motion_cfgHome"], [606, 2, 1, "", "Motion_cfgHome_async"], [606, 2, 1, "", "Motion_cfgInposi"], [606, 2, 1, "", "Motion_cfgInposi_async"], [606, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [606, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [606, 2, 1, "", "Motion_cfgLimit"], [606, 2, 1, "", "Motion_cfgLimit_async"], [606, 2, 1, "", "Motion_checkRef"], [606, 2, 1, "", "Motion_checkRef_async"], [606, 2, 1, "", "Motion_close"], [606, 2, 1, "", "Motion_close_async"], [606, 2, 1, "", "Motion_enableBreakPoint"], [606, 2, 1, "", "Motion_enableBreakPoint_async"], [606, 2, 1, "", "Motion_enableCapture"], [606, 2, 1, "", "Motion_enableCapture_async"], [606, 2, 1, "", "Motion_enableServoOff"], [606, 2, 1, "", "Motion_enableServoOff_async"], [606, 2, 1, "", "Motion_enableServoOn"], [606, 2, 1, "", "Motion_enableServoOn_async"], [606, 2, 1, "", "Motion_findRef"], [606, 2, 1, "", "Motion_findRef_async"], [606, 2, 1, "", "Motion_getEncoderPosi"], [606, 2, 1, "", "Motion_getEncoderPosi_async"], [606, 2, 1, "", "Motion_getHomeStatus"], [606, 2, 1, "", "Motion_getHomeStatus_async"], [606, 2, 1, "", "Motion_getLimitStatus"], [606, 2, 1, "", "Motion_getLimitStatus_async"], [606, 2, 1, "", "Motion_getLogicalPosi"], [606, 2, 1, "", "Motion_getLogicalPosi_async"], [606, 2, 1, "", "Motion_getMoveStatus"], [606, 2, 1, "", "Motion_getMoveStatus_async"], [606, 2, 1, "", "Motion_loadCfgFile"], [606, 2, 1, "", "Motion_loadCfgFile_async"], [606, 2, 1, "", "Motion_open"], [606, 2, 1, "", "Motion_openCfgFile"], [606, 2, 1, "", "Motion_openCfgFile_async"], [606, 2, 1, "", "Motion_open_async"], [606, 2, 1, "", "Motion_overrideAxisAccel"], [606, 2, 1, "", "Motion_overrideAxisAccel_async"], [606, 2, 1, "", "Motion_overrideAxisPosi"], [606, 2, 1, "", "Motion_overrideAxisPosi_async"], [606, 2, 1, "", "Motion_overrideAxisVelocity"], [606, 2, 1, "", "Motion_overrideAxisVelocity_async"], [606, 2, 1, "", "Motion_readCapturePoint"], [606, 2, 1, "", "Motion_readCapturePoint_async"], [606, 2, 1, "", "Motion_rstEncoderPosi"], [606, 2, 1, "", "Motion_rstEncoderPosi_async"], [606, 2, 1, "", "Motion_saveCfgFile"], [606, 2, 1, "", "Motion_saveCfgFile_async"], [606, 2, 1, "", "Motion_setLogicalPosi"], [606, 2, 1, "", "Motion_setLogicalPosi_async"], [606, 2, 1, "", "Motion_startCircularInterpo"], [606, 2, 1, "", "Motion_startCircularInterpo_async"], [606, 2, 1, "", "Motion_startHelicalInterpo"], [606, 2, 1, "", "Motion_startHelicalInterpo_async"], [606, 2, 1, "", "Motion_startLinearInterpo"], [606, 2, 1, "", "Motion_startLinearInterpo_async"], [606, 2, 1, "", "Motion_startMultiAxisMove"], [606, 2, 1, "", "Motion_startMultiAxisMove_async"], [606, 2, 1, "", "Motion_startSingleAxisMove"], [606, 2, 1, "", "Motion_startSingleAxisMove_async"], [606, 2, 1, "", "Motion_stop"], [606, 2, 1, "", "Motion_stop_async"], [606, 2, 1, "", "Net_getGateway"], [606, 2, 1, "", "Net_getGateway_async"], [606, 2, 1, "", "Net_getIPAddrAndSubmask"], [606, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [606, 2, 1, "", "Net_getMACAddr"], [606, 2, 1, "", "Net_getMACAddr_async"], [606, 2, 1, "", "Net_setIPAddrAndSubmask"], [606, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [606, 2, 1, "", "Sys_getDriverInfo"], [606, 2, 1, "", "Sys_getDriverInfo_async"], [606, 2, 1, "", "Sys_getGateway"], [606, 2, 1, "", "Sys_getGateway_async"], [606, 2, 1, "", "Sys_getIPAddrAndSubmask"], [606, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [606, 2, 1, "", "Sys_getMACAddr"], [606, 2, 1, "", "Sys_getMACAddr_async"], [606, 2, 1, "", "Sys_getMode"], [606, 2, 1, "", "Sys_getMode_async"], [606, 2, 1, "", "Sys_getPinModeInPort"], [606, 2, 1, "", "Sys_getPinModeInPort_async"], [606, 2, 1, "", "Sys_getPythonVersion"], [606, 2, 1, "", "Sys_getPythonVersion_async"], [606, 2, 1, "", "Sys_getRTC"], [606, 2, 1, "", "Sys_getRTC_async"], [606, 2, 1, "", "Sys_getSerialNumber"], [606, 2, 1, "", "Sys_getSerialNumber_async"], [606, 2, 1, "", "Sys_reboot"], [606, 2, 1, "", "Sys_rebootOnBootloader"], [606, 2, 1, "", "Sys_rebootOnBootloader_async"], [606, 2, 1, "", "Sys_reboot_async"], [606, 2, 1, "", "Sys_setAIOMode"], [606, 2, 1, "", "Sys_setAIOMode_async"], [606, 2, 1, "", "Sys_setDIMode"], [606, 2, 1, "", "Sys_setDIMode_async"], [606, 2, 1, "", "Sys_setDIOMode"], [606, 2, 1, "", "Sys_setDIOMode_async"], [606, 2, 1, "", "Sys_setDOMode"], [606, 2, 1, "", "Sys_setDOMode_async"], [606, 2, 1, "", "Sys_setIPAddrAndSubmask"], [606, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [606, 2, 1, "", "Sys_setIdleMode"], [606, 2, 1, "", "Sys_setIdleMode_async"], [606, 2, 1, "", "Sys_setMotionMode"], [606, 2, 1, "", "Sys_setMotionMode_async"], [606, 2, 1, "", "Sys_setRTC"], [606, 2, 1, "", "Sys_setRTC_async"], [606, 2, 1, "", "Sys_setSwitchMode"], [606, 2, 1, "", "Sys_setSwitchMode_async"], [606, 2, 1, "", "close"], [606, 2, 1, "", "connect"], [606, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[607, 2, 1, "", "AI_close"], [607, 2, 1, "", "AI_close_async"], [607, 2, 1, "", "AI_enableCS"], [607, 2, 1, "", "AI_enableCS_async"], [607, 2, 1, "", "AI_enableChannel"], [607, 2, 1, "", "AI_enableChannel_async"], [607, 2, 1, "", "AI_getPort"], [607, 2, 1, "", "AI_open"], [607, 2, 1, "", "AI_open_async"], [607, 2, 1, "", "AI_readOnDemand"], [607, 2, 1, "", "AI_readOnDemand_async"], [607, 2, 1, "", "AI_readStreaming"], [607, 2, 1, "", "AI_readStreaming_async"], [607, 2, 1, "", "AI_setMode"], [607, 2, 1, "", "AI_setMode_async"], [607, 2, 1, "", "AI_setNumSamples"], [607, 2, 1, "", "AI_setNumSamples_async"], [607, 2, 1, "", "AI_setSamplingRate"], [607, 2, 1, "", "AI_setSamplingRate_async"], [607, 2, 1, "", "AI_start"], [607, 2, 1, "", "AI_start_async"], [607, 2, 1, "", "AI_stop"], [607, 2, 1, "", "AI_stop_async"], [607, 2, 1, "", "Logger_openFile"], [607, 2, 1, "", "Logger_write2DList"], [607, 2, 1, "", "Logger_writeHeader"], [607, 2, 1, "", "Logger_writeList"], [607, 2, 1, "", "Logger_writeValue"], [607, 2, 1, "", "Net_getGateway"], [607, 2, 1, "", "Net_getGateway_async"], [607, 2, 1, "", "Net_getIPAddrAndSubmask"], [607, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [607, 2, 1, "", "Net_getMACAddr"], [607, 2, 1, "", "Net_getMACAddr_async"], [607, 2, 1, "", "Net_setIPAddrAndSubmask"], [607, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [607, 2, 1, "", "Sys_getDriverInfo"], [607, 2, 1, "", "Sys_getDriverInfo_async"], [607, 2, 1, "", "Sys_getGateway"], [607, 2, 1, "", "Sys_getGateway_async"], [607, 2, 1, "", "Sys_getIPAddrAndSubmask"], [607, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [607, 2, 1, "", "Sys_getMACAddr"], [607, 2, 1, "", "Sys_getMACAddr_async"], [607, 2, 1, "", "Sys_getMode"], [607, 2, 1, "", "Sys_getMode_async"], [607, 2, 1, "", "Sys_getPinModeInPort"], [607, 2, 1, "", "Sys_getPinModeInPort_async"], [607, 2, 1, "", "Sys_getPythonVersion"], [607, 2, 1, "", "Sys_getPythonVersion_async"], [607, 2, 1, "", "Sys_getRTC"], [607, 2, 1, "", "Sys_getRTC_async"], [607, 2, 1, "", "Sys_getSerialNumber"], [607, 2, 1, "", "Sys_getSerialNumber_async"], [607, 2, 1, "", "Sys_reboot"], [607, 2, 1, "", "Sys_rebootOnBootloader"], [607, 2, 1, "", "Sys_rebootOnBootloader_async"], [607, 2, 1, "", "Sys_reboot_async"], [607, 2, 1, "", "Sys_setAIOMode"], [607, 2, 1, "", "Sys_setAIOMode_async"], [607, 2, 1, "", "Sys_setDIMode"], [607, 2, 1, "", "Sys_setDIMode_async"], [607, 2, 1, "", "Sys_setDIOMode"], [607, 2, 1, "", "Sys_setDIOMode_async"], [607, 2, 1, "", "Sys_setDOMode"], [607, 2, 1, "", "Sys_setDOMode_async"], [607, 2, 1, "", "Sys_setIPAddrAndSubmask"], [607, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [607, 2, 1, "", "Sys_setIdleMode"], [607, 2, 1, "", "Sys_setIdleMode_async"], [607, 2, 1, "", "Sys_setMotionMode"], [607, 2, 1, "", "Sys_setMotionMode_async"], [607, 2, 1, "", "Sys_setRTC"], [607, 2, 1, "", "Sys_setRTC_async"], [607, 2, 1, "", "Sys_setSwitchMode"], [607, 2, 1, "", "Sys_setSwitchMode_async"], [607, 2, 1, "", "close"], [607, 2, 1, "", "connect"], [607, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[608, 2, 1, "", "DIO_loadStartup"], [608, 2, 1, "", "DIO_loadStartup_async"], [608, 2, 1, "", "DIO_saveStartup"], [608, 2, 1, "", "DIO_saveStartup_async"], [608, 2, 1, "", "DIO_setPortDI"], [608, 2, 1, "", "DIO_setPortDI_async"], [608, 2, 1, "", "DIO_setPortDO"], [608, 2, 1, "", "DIO_setPortDO_async"], [608, 2, 1, "", "DIO_setPortIdle"], [608, 2, 1, "", "DIO_setPortIdle_async"], [608, 2, 1, "", "DI_closePins"], [608, 2, 1, "", "DI_closePins_async"], [608, 2, 1, "", "DI_closePort"], [608, 2, 1, "", "DI_closePort_async"], [608, 2, 1, "", "DI_getPinMap"], [608, 2, 1, "", "DI_openPins"], [608, 2, 1, "", "DI_openPins_async"], [608, 2, 1, "", "DI_openPort"], [608, 2, 1, "", "DI_openPort_async"], [608, 2, 1, "", "DI_readPins"], [608, 2, 1, "", "DI_readPins_async"], [608, 2, 1, "", "DI_readPort"], [608, 2, 1, "", "DI_readPort_async"], [608, 2, 1, "", "DO_closePins"], [608, 2, 1, "", "DO_closePins_async"], [608, 2, 1, "", "DO_closePort"], [608, 2, 1, "", "DO_closePort_async"], [608, 2, 1, "", "DO_getPinMap"], [608, 2, 1, "", "DO_openPins"], [608, 2, 1, "", "DO_openPins_async"], [608, 2, 1, "", "DO_openPort"], [608, 2, 1, "", "DO_openPort_async"], [608, 2, 1, "", "DO_togglePins"], [608, 2, 1, "", "DO_togglePins_async"], [608, 2, 1, "", "DO_togglePort"], [608, 2, 1, "", "DO_togglePort_async"], [608, 2, 1, "", "DO_writePins"], [608, 2, 1, "", "DO_writePins_async"], [608, 2, 1, "", "DO_writePort"], [608, 2, 1, "", "DO_writePort_async"], [608, 2, 1, "", "Logger_openFile"], [608, 2, 1, "", "Logger_write2DList"], [608, 2, 1, "", "Logger_writeHeader"], [608, 2, 1, "", "Logger_writeList"], [608, 2, 1, "", "Logger_writeValue"], [608, 2, 1, "", "Net_getGateway"], [608, 2, 1, "", "Net_getGateway_async"], [608, 2, 1, "", "Net_getIPAddrAndSubmask"], [608, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [608, 2, 1, "", "Net_getMACAddr"], [608, 2, 1, "", "Net_getMACAddr_async"], [608, 2, 1, "", "Net_setIPAddrAndSubmask"], [608, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [608, 2, 1, "", "PWM_close"], [608, 2, 1, "", "PWM_close_async"], [608, 2, 1, "", "PWM_open"], [608, 2, 1, "", "PWM_open_async"], [608, 2, 1, "", "PWM_setDutyCycle"], [608, 2, 1, "", "PWM_setDutyCycle_async"], [608, 2, 1, "", "PWM_setFrequency"], [608, 2, 1, "", "PWM_setFrequency_async"], [608, 2, 1, "", "PWM_start"], [608, 2, 1, "", "PWM_start_async"], [608, 2, 1, "", "PWM_stop"], [608, 2, 1, "", "PWM_stop_async"], [608, 2, 1, "", "Sys_getDriverInfo"], [608, 2, 1, "", "Sys_getDriverInfo_async"], [608, 2, 1, "", "Sys_getGateway"], [608, 2, 1, "", "Sys_getGateway_async"], [608, 2, 1, "", "Sys_getIPAddrAndSubmask"], [608, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [608, 2, 1, "", "Sys_getMACAddr"], [608, 2, 1, "", "Sys_getMACAddr_async"], [608, 2, 1, "", "Sys_getMode"], [608, 2, 1, "", "Sys_getMode_async"], [608, 2, 1, "", "Sys_getPinModeInPort"], [608, 2, 1, "", "Sys_getPinModeInPort_async"], [608, 2, 1, "", "Sys_getPythonVersion"], [608, 2, 1, "", "Sys_getPythonVersion_async"], [608, 2, 1, "", "Sys_getRTC"], [608, 2, 1, "", "Sys_getRTC_async"], [608, 2, 1, "", "Sys_getSerialNumber"], [608, 2, 1, "", "Sys_getSerialNumber_async"], [608, 2, 1, "", "Sys_reboot"], [608, 2, 1, "", "Sys_rebootOnBootloader"], [608, 2, 1, "", "Sys_rebootOnBootloader_async"], [608, 2, 1, "", "Sys_reboot_async"], [608, 2, 1, "", "Sys_setAIOMode"], [608, 2, 1, "", "Sys_setAIOMode_async"], [608, 2, 1, "", "Sys_setDIMode"], [608, 2, 1, "", "Sys_setDIMode_async"], [608, 2, 1, "", "Sys_setDIOMode"], [608, 2, 1, "", "Sys_setDIOMode_async"], [608, 2, 1, "", "Sys_setDOMode"], [608, 2, 1, "", "Sys_setDOMode_async"], [608, 2, 1, "", "Sys_setIPAddrAndSubmask"], [608, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [608, 2, 1, "", "Sys_setIdleMode"], [608, 2, 1, "", "Sys_setIdleMode_async"], [608, 2, 1, "", "Sys_setMotionMode"], [608, 2, 1, "", "Sys_setMotionMode_async"], [608, 2, 1, "", "Sys_setRTC"], [608, 2, 1, "", "Sys_setRTC_async"], [608, 2, 1, "", "Sys_setSwitchMode"], [608, 2, 1, "", "Sys_setSwitchMode_async"], [608, 2, 1, "", "close"], [608, 2, 1, "", "connect"], [608, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[609, 2, 1, "", "AI_close"], [609, 2, 1, "", "AI_close_async"], [609, 2, 1, "", "AI_getPort"], [609, 2, 1, "", "AI_open"], [609, 2, 1, "", "AI_open_async"], [609, 2, 1, "", "AI_readOnDemand"], [609, 2, 1, "", "AI_readOnDemand_async"], [609, 2, 1, "", "Logger_openFile"], [609, 2, 1, "", "Logger_write2DList"], [609, 2, 1, "", "Logger_writeHeader"], [609, 2, 1, "", "Logger_writeList"], [609, 2, 1, "", "Logger_writeValue"], [609, 2, 1, "", "Net_getGateway"], [609, 2, 1, "", "Net_getGateway_async"], [609, 2, 1, "", "Net_getIPAddrAndSubmask"], [609, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [609, 2, 1, "", "Net_getMACAddr"], [609, 2, 1, "", "Net_getMACAddr_async"], [609, 2, 1, "", "Net_setIPAddrAndSubmask"], [609, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [609, 2, 1, "", "Sys_getDriverInfo"], [609, 2, 1, "", "Sys_getDriverInfo_async"], [609, 2, 1, "", "Sys_getGateway"], [609, 2, 1, "", "Sys_getGateway_async"], [609, 2, 1, "", "Sys_getIPAddrAndSubmask"], [609, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [609, 2, 1, "", "Sys_getMACAddr"], [609, 2, 1, "", "Sys_getMACAddr_async"], [609, 2, 1, "", "Sys_getMode"], [609, 2, 1, "", "Sys_getMode_async"], [609, 2, 1, "", "Sys_getPinModeInPort"], [609, 2, 1, "", "Sys_getPinModeInPort_async"], [609, 2, 1, "", "Sys_getPythonVersion"], [609, 2, 1, "", "Sys_getPythonVersion_async"], [609, 2, 1, "", "Sys_getRTC"], [609, 2, 1, "", "Sys_getRTC_async"], [609, 2, 1, "", "Sys_getSerialNumber"], [609, 2, 1, "", "Sys_getSerialNumber_async"], [609, 2, 1, "", "Sys_reboot"], [609, 2, 1, "", "Sys_rebootOnBootloader"], [609, 2, 1, "", "Sys_rebootOnBootloader_async"], [609, 2, 1, "", "Sys_reboot_async"], [609, 2, 1, "", "Sys_setAIOMode"], [609, 2, 1, "", "Sys_setAIOMode_async"], [609, 2, 1, "", "Sys_setDIMode"], [609, 2, 1, "", "Sys_setDIMode_async"], [609, 2, 1, "", "Sys_setDIOMode"], [609, 2, 1, "", "Sys_setDIOMode_async"], [609, 2, 1, "", "Sys_setDOMode"], [609, 2, 1, "", "Sys_setDOMode_async"], [609, 2, 1, "", "Sys_setIPAddrAndSubmask"], [609, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [609, 2, 1, "", "Sys_setIdleMode"], [609, 2, 1, "", "Sys_setIdleMode_async"], [609, 2, 1, "", "Sys_setMotionMode"], [609, 2, 1, "", "Sys_setMotionMode_async"], [609, 2, 1, "", "Sys_setRTC"], [609, 2, 1, "", "Sys_setRTC_async"], [609, 2, 1, "", "Sys_setSwitchMode"], [609, 2, 1, "", "Sys_setSwitchMode_async"], [609, 2, 1, "", "close"], [609, 2, 1, "", "connect"], [609, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[610, 2, 1, "", "DIO_loadStartup"], [610, 2, 1, "", "DIO_loadStartup_async"], [610, 2, 1, "", "DIO_saveStartup"], [610, 2, 1, "", "DIO_saveStartup_async"], [610, 2, 1, "", "DIO_setPortDI"], [610, 2, 1, "", "DIO_setPortDI_async"], [610, 2, 1, "", "DIO_setPortDO"], [610, 2, 1, "", "DIO_setPortDO_async"], [610, 2, 1, "", "DIO_setPortIdle"], [610, 2, 1, "", "DIO_setPortIdle_async"], [610, 2, 1, "", "DI_closePins"], [610, 2, 1, "", "DI_closePins_async"], [610, 2, 1, "", "DI_closePort"], [610, 2, 1, "", "DI_closePort_async"], [610, 2, 1, "", "DI_getPinMap"], [610, 2, 1, "", "DI_openPins"], [610, 2, 1, "", "DI_openPins_async"], [610, 2, 1, "", "DI_openPort"], [610, 2, 1, "", "DI_openPort_async"], [610, 2, 1, "", "DI_readPins"], [610, 2, 1, "", "DI_readPins_async"], [610, 2, 1, "", "DI_readPort"], [610, 2, 1, "", "DI_readPort_async"], [610, 2, 1, "", "DO_closePins"], [610, 2, 1, "", "DO_closePins_async"], [610, 2, 1, "", "DO_closePort"], [610, 2, 1, "", "DO_closePort_async"], [610, 2, 1, "", "DO_getPinMap"], [610, 2, 1, "", "DO_openPins"], [610, 2, 1, "", "DO_openPins_async"], [610, 2, 1, "", "DO_openPort"], [610, 2, 1, "", "DO_openPort_async"], [610, 2, 1, "", "DO_togglePins"], [610, 2, 1, "", "DO_togglePins_async"], [610, 2, 1, "", "DO_togglePort"], [610, 2, 1, "", "DO_togglePort_async"], [610, 2, 1, "", "DO_writePins"], [610, 2, 1, "", "DO_writePins_async"], [610, 2, 1, "", "DO_writePort"], [610, 2, 1, "", "DO_writePort_async"], [610, 2, 1, "", "Logger_openFile"], [610, 2, 1, "", "Logger_write2DList"], [610, 2, 1, "", "Logger_writeHeader"], [610, 2, 1, "", "Logger_writeList"], [610, 2, 1, "", "Logger_writeValue"], [610, 2, 1, "", "Net_getGateway"], [610, 2, 1, "", "Net_getGateway_async"], [610, 2, 1, "", "Net_getIPAddrAndSubmask"], [610, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [610, 2, 1, "", "Net_getMACAddr"], [610, 2, 1, "", "Net_getMACAddr_async"], [610, 2, 1, "", "Net_setIPAddrAndSubmask"], [610, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [610, 2, 1, "", "Relay_close"], [610, 2, 1, "", "Relay_close_async"], [610, 2, 1, "", "Relay_open"], [610, 2, 1, "", "Relay_open_async"], [610, 2, 1, "", "Relay_read"], [610, 2, 1, "", "Relay_read_async"], [610, 2, 1, "", "Sys_getDriverInfo"], [610, 2, 1, "", "Sys_getDriverInfo_async"], [610, 2, 1, "", "Sys_getGateway"], [610, 2, 1, "", "Sys_getGateway_async"], [610, 2, 1, "", "Sys_getIPAddrAndSubmask"], [610, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [610, 2, 1, "", "Sys_getMACAddr"], [610, 2, 1, "", "Sys_getMACAddr_async"], [610, 2, 1, "", "Sys_getMode"], [610, 2, 1, "", "Sys_getMode_async"], [610, 2, 1, "", "Sys_getPinModeInPort"], [610, 2, 1, "", "Sys_getPinModeInPort_async"], [610, 2, 1, "", "Sys_getPythonVersion"], [610, 2, 1, "", "Sys_getPythonVersion_async"], [610, 2, 1, "", "Sys_getRTC"], [610, 2, 1, "", "Sys_getRTC_async"], [610, 2, 1, "", "Sys_getSerialNumber"], [610, 2, 1, "", "Sys_getSerialNumber_async"], [610, 2, 1, "", "Sys_reboot"], [610, 2, 1, "", "Sys_rebootOnBootloader"], [610, 2, 1, "", "Sys_rebootOnBootloader_async"], [610, 2, 1, "", "Sys_reboot_async"], [610, 2, 1, "", "Sys_setAIOMode"], [610, 2, 1, "", "Sys_setAIOMode_async"], [610, 2, 1, "", "Sys_setDIMode"], [610, 2, 1, "", "Sys_setDIMode_async"], [610, 2, 1, "", "Sys_setDIOMode"], [610, 2, 1, "", "Sys_setDIOMode_async"], [610, 2, 1, "", "Sys_setDOMode"], [610, 2, 1, "", "Sys_setDOMode_async"], [610, 2, 1, "", "Sys_setIPAddrAndSubmask"], [610, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [610, 2, 1, "", "Sys_setIdleMode"], [610, 2, 1, "", "Sys_setIdleMode_async"], [610, 2, 1, "", "Sys_setMotionMode"], [610, 2, 1, "", "Sys_setMotionMode_async"], [610, 2, 1, "", "Sys_setRTC"], [610, 2, 1, "", "Sys_setRTC_async"], [610, 2, 1, "", "Sys_setSwitchMode"], [610, 2, 1, "", "Sys_setSwitchMode_async"], [610, 2, 1, "", "close"], [610, 2, 1, "", "connect"], [610, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[611, 2, 1, "", "AO_close"], [611, 2, 1, "", "AO_closeStreaming"], [611, 2, 1, "", "AO_closeStreaming_async"], [611, 2, 1, "", "AO_close_async"], [611, 2, 1, "", "AO_getEnableChannels"], [611, 2, 1, "", "AO_getMode"], [611, 2, 1, "", "AO_getMode_async"], [611, 2, 1, "", "AO_getPort"], [611, 2, 1, "", "AO_getState"], [611, 2, 1, "", "AO_getValues"], [611, 2, 1, "", "AO_getValues_async"], [611, 2, 1, "", "AO_open"], [611, 2, 1, "", "AO_openStreaming"], [611, 2, 1, "", "AO_openStreaming_async"], [611, 2, 1, "", "AO_open_async"], [611, 2, 1, "", "AO_setEnableChannels"], [611, 2, 1, "", "AO_setEnableChannels_async"], [611, 2, 1, "", "AO_setForm"], [611, 2, 1, "", "AO_setFormParam"], [611, 2, 1, "", "AO_setFormParam_async"], [611, 2, 1, "", "AO_setForm_async"], [611, 2, 1, "", "AO_setMode"], [611, 2, 1, "", "AO_setMode_async"], [611, 2, 1, "", "AO_setNumSamples"], [611, 2, 1, "", "AO_setNumSamples_async"], [611, 2, 1, "", "AO_setSamplingRate"], [611, 2, 1, "", "AO_setSamplingRate_async"], [611, 2, 1, "", "AO_startStreaming"], [611, 2, 1, "", "AO_startStreaming_async"], [611, 2, 1, "", "AO_writeAllChannels"], [611, 2, 1, "", "AO_writeAllChannels_async"], [611, 2, 1, "", "AO_writeOneChannel"], [611, 2, 1, "", "AO_writeOneChannel_async"], [611, 2, 1, "", "Logger_openFile"], [611, 2, 1, "", "Logger_write2DList"], [611, 2, 1, "", "Logger_writeHeader"], [611, 2, 1, "", "Logger_writeList"], [611, 2, 1, "", "Logger_writeValue"], [611, 2, 1, "", "Net_getGateway"], [611, 2, 1, "", "Net_getGateway_async"], [611, 2, 1, "", "Net_getIPAddrAndSubmask"], [611, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [611, 2, 1, "", "Net_getMACAddr"], [611, 2, 1, "", "Net_getMACAddr_async"], [611, 2, 1, "", "Net_setIPAddrAndSubmask"], [611, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [611, 2, 1, "", "Sys_getDriverInfo"], [611, 2, 1, "", "Sys_getDriverInfo_async"], [611, 2, 1, "", "Sys_getGateway"], [611, 2, 1, "", "Sys_getGateway_async"], [611, 2, 1, "", "Sys_getIPAddrAndSubmask"], [611, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [611, 2, 1, "", "Sys_getMACAddr"], [611, 2, 1, "", "Sys_getMACAddr_async"], [611, 2, 1, "", "Sys_getMode"], [611, 2, 1, "", "Sys_getMode_async"], [611, 2, 1, "", "Sys_getPinModeInPort"], [611, 2, 1, "", "Sys_getPinModeInPort_async"], [611, 2, 1, "", "Sys_getPythonVersion"], [611, 2, 1, "", "Sys_getPythonVersion_async"], [611, 2, 1, "", "Sys_getRTC"], [611, 2, 1, "", "Sys_getRTC_async"], [611, 2, 1, "", "Sys_getSerialNumber"], [611, 2, 1, "", "Sys_getSerialNumber_async"], [611, 2, 1, "", "Sys_reboot"], [611, 2, 1, "", "Sys_rebootOnBootloader"], [611, 2, 1, "", "Sys_rebootOnBootloader_async"], [611, 2, 1, "", "Sys_reboot_async"], [611, 2, 1, "", "Sys_setAIOMode"], [611, 2, 1, "", "Sys_setAIOMode_async"], [611, 2, 1, "", "Sys_setDIMode"], [611, 2, 1, "", "Sys_setDIMode_async"], [611, 2, 1, "", "Sys_setDIOMode"], [611, 2, 1, "", "Sys_setDIOMode_async"], [611, 2, 1, "", "Sys_setDOMode"], [611, 2, 1, "", "Sys_setDOMode_async"], [611, 2, 1, "", "Sys_setIPAddrAndSubmask"], [611, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [611, 2, 1, "", "Sys_setIdleMode"], [611, 2, 1, "", "Sys_setIdleMode_async"], [611, 2, 1, "", "Sys_setMotionMode"], [611, 2, 1, "", "Sys_setMotionMode_async"], [611, 2, 1, "", "Sys_setRTC"], [611, 2, 1, "", "Sys_setRTC_async"], [611, 2, 1, "", "Sys_setSwitchMode"], [611, 2, 1, "", "Sys_setSwitchMode_async"], [611, 2, 1, "", "close"], [611, 2, 1, "", "connect"], [611, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[612, 2, 1, "", "Logger_openFile"], [612, 2, 1, "", "Logger_write2DList"], [612, 2, 1, "", "Logger_writeHeader"], [612, 2, 1, "", "Logger_writeList"], [612, 2, 1, "", "Logger_writeValue"], [612, 2, 1, "", "Net_getGateway"], [612, 2, 1, "", "Net_getGateway_async"], [612, 2, 1, "", "Net_getIPAddrAndSubmask"], [612, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [612, 2, 1, "", "Net_getMACAddr"], [612, 2, 1, "", "Net_getMACAddr_async"], [612, 2, 1, "", "Net_setIPAddrAndSubmask"], [612, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [612, 2, 1, "", "Sys_getDriverInfo"], [612, 2, 1, "", "Sys_getDriverInfo_async"], [612, 2, 1, "", "Sys_getGateway"], [612, 2, 1, "", "Sys_getGateway_async"], [612, 2, 1, "", "Sys_getIPAddrAndSubmask"], [612, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [612, 2, 1, "", "Sys_getMACAddr"], [612, 2, 1, "", "Sys_getMACAddr_async"], [612, 2, 1, "", "Sys_getMode"], [612, 2, 1, "", "Sys_getMode_async"], [612, 2, 1, "", "Sys_getPinModeInPort"], [612, 2, 1, "", "Sys_getPinModeInPort_async"], [612, 2, 1, "", "Sys_getPythonVersion"], [612, 2, 1, "", "Sys_getPythonVersion_async"], [612, 2, 1, "", "Sys_getRTC"], [612, 2, 1, "", "Sys_getRTC_async"], [612, 2, 1, "", "Sys_getSerialNumber"], [612, 2, 1, "", "Sys_getSerialNumber_async"], [612, 2, 1, "", "Sys_reboot"], [612, 2, 1, "", "Sys_rebootOnBootloader"], [612, 2, 1, "", "Sys_rebootOnBootloader_async"], [612, 2, 1, "", "Sys_reboot_async"], [612, 2, 1, "", "Sys_setAIOMode"], [612, 2, 1, "", "Sys_setAIOMode_async"], [612, 2, 1, "", "Sys_setDIMode"], [612, 2, 1, "", "Sys_setDIMode_async"], [612, 2, 1, "", "Sys_setDIOMode"], [612, 2, 1, "", "Sys_setDIOMode_async"], [612, 2, 1, "", "Sys_setDOMode"], [612, 2, 1, "", "Sys_setDOMode_async"], [612, 2, 1, "", "Sys_setIPAddrAndSubmask"], [612, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [612, 2, 1, "", "Sys_setIdleMode"], [612, 2, 1, "", "Sys_setIdleMode_async"], [612, 2, 1, "", "Sys_setMotionMode"], [612, 2, 1, "", "Sys_setMotionMode_async"], [612, 2, 1, "", "Sys_setRTC"], [612, 2, 1, "", "Sys_setRTC_async"], [612, 2, 1, "", "Sys_setSwitchMode"], [612, 2, 1, "", "Sys_setSwitchMode_async"], [612, 2, 1, "", "Thermal_close"], [612, 2, 1, "", "Thermal_close_async"], [612, 2, 1, "", "Thermal_getPinMap"], [612, 2, 1, "", "Thermal_getStatus"], [612, 2, 1, "", "Thermal_getStatus_async"], [612, 2, 1, "", "Thermal_open"], [612, 2, 1, "", "Thermal_open_async"], [612, 2, 1, "", "Thermal_readSensor"], [612, 2, 1, "", "Thermal_readSensor_async"], [612, 2, 1, "", "Thermal_setOverSampling"], [612, 2, 1, "", "Thermal_setOverSampling_async"], [612, 2, 1, "", "Thermal_setType"], [612, 2, 1, "", "Thermal_setType_async"], [612, 2, 1, "", "close"], [612, 2, 1, "", "connect"], [612, 2, 1, "", "disconnect"]], "pywpc.STEM": [[613, 2, 1, "", "AI_close"], [613, 2, 1, "", "AI_close_async"], [613, 2, 1, "", "AI_enableCS"], [613, 2, 1, "", "AI_enableCS_async"], [613, 2, 1, "", "AI_enableChannel"], [613, 2, 1, "", "AI_enableChannel_async"], [613, 2, 1, "", "AI_getPort"], [613, 2, 1, "", "AI_open"], [613, 2, 1, "", "AI_open_async"], [613, 2, 1, "", "AI_readOnDemand"], [613, 2, 1, "", "AI_readOnDemand_async"], [613, 2, 1, "", "AI_readStreaming"], [613, 2, 1, "", "AI_readStreaming_async"], [613, 2, 1, "", "AI_setMode"], [613, 2, 1, "", "AI_setMode_async"], [613, 2, 1, "", "AI_setNumSamples"], [613, 2, 1, "", "AI_setNumSamples_async"], [613, 2, 1, "", "AI_setSamplingRate"], [613, 2, 1, "", "AI_setSamplingRate_async"], [613, 2, 1, "", "AI_start"], [613, 2, 1, "", "AI_start_async"], [613, 2, 1, "", "AI_stop"], [613, 2, 1, "", "AI_stop_async"], [613, 2, 1, "", "AO_close"], [613, 2, 1, "", "AO_closeStreaming"], [613, 2, 1, "", "AO_closeStreaming_async"], [613, 2, 1, "", "AO_close_async"], [613, 2, 1, "", "AO_getEnableChannels"], [613, 2, 1, "", "AO_getMode"], [613, 2, 1, "", "AO_getMode_async"], [613, 2, 1, "", "AO_getPort"], [613, 2, 1, "", "AO_getState"], [613, 2, 1, "", "AO_getValues"], [613, 2, 1, "", "AO_getValues_async"], [613, 2, 1, "", "AO_open"], [613, 2, 1, "", "AO_openStreaming"], [613, 2, 1, "", "AO_openStreaming_async"], [613, 2, 1, "", "AO_open_async"], [613, 2, 1, "", "AO_setEnableChannels"], [613, 2, 1, "", "AO_setEnableChannels_async"], [613, 2, 1, "", "AO_setForm"], [613, 2, 1, "", "AO_setFormParam"], [613, 2, 1, "", "AO_setFormParam_async"], [613, 2, 1, "", "AO_setForm_async"], [613, 2, 1, "", "AO_setMode"], [613, 2, 1, "", "AO_setMode_async"], [613, 2, 1, "", "AO_setNumSamples"], [613, 2, 1, "", "AO_setNumSamples_async"], [613, 2, 1, "", "AO_setSamplingRate"], [613, 2, 1, "", "AO_setSamplingRate_async"], [613, 2, 1, "", "AO_startStreaming"], [613, 2, 1, "", "AO_startStreaming_async"], [613, 2, 1, "", "AO_writeAllChannels"], [613, 2, 1, "", "AO_writeAllChannels_async"], [613, 2, 1, "", "AO_writeOneChannel"], [613, 2, 1, "", "AO_writeOneChannel_async"], [613, 2, 1, "", "DIO_loadStartup"], [613, 2, 1, "", "DIO_loadStartup_async"], [613, 2, 1, "", "DIO_saveStartup"], [613, 2, 1, "", "DIO_saveStartup_async"], [613, 2, 1, "", "DIO_setPortDI"], [613, 2, 1, "", "DIO_setPortDI_async"], [613, 2, 1, "", "DIO_setPortDO"], [613, 2, 1, "", "DIO_setPortDO_async"], [613, 2, 1, "", "DIO_setPortIdle"], [613, 2, 1, "", "DIO_setPortIdle_async"], [613, 2, 1, "", "DI_closePins"], [613, 2, 1, "", "DI_closePins_async"], [613, 2, 1, "", "DI_closePort"], [613, 2, 1, "", "DI_closePort_async"], [613, 2, 1, "", "DI_getPinMap"], [613, 2, 1, "", "DI_openPins"], [613, 2, 1, "", "DI_openPins_async"], [613, 2, 1, "", "DI_openPort"], [613, 2, 1, "", "DI_openPort_async"], [613, 2, 1, "", "DI_readPins"], [613, 2, 1, "", "DI_readPins_async"], [613, 2, 1, "", "DI_readPort"], [613, 2, 1, "", "DI_readPort_async"], [613, 2, 1, "", "DO_closePins"], [613, 2, 1, "", "DO_closePins_async"], [613, 2, 1, "", "DO_closePort"], [613, 2, 1, "", "DO_closePort_async"], [613, 2, 1, "", "DO_getPinMap"], [613, 2, 1, "", "DO_openPins"], [613, 2, 1, "", "DO_openPins_async"], [613, 2, 1, "", "DO_openPort"], [613, 2, 1, "", "DO_openPort_async"], [613, 2, 1, "", "DO_togglePins"], [613, 2, 1, "", "DO_togglePins_async"], [613, 2, 1, "", "DO_togglePort"], [613, 2, 1, "", "DO_togglePort_async"], [613, 2, 1, "", "DO_writePins"], [613, 2, 1, "", "DO_writePins_async"], [613, 2, 1, "", "DO_writePort"], [613, 2, 1, "", "DO_writePort_async"], [613, 2, 1, "", "Logger_openFile"], [613, 2, 1, "", "Logger_write2DList"], [613, 2, 1, "", "Logger_writeHeader"], [613, 2, 1, "", "Logger_writeList"], [613, 2, 1, "", "Logger_writeValue"], [613, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [613, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [613, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [613, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [613, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [613, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [613, 2, 1, "", "Motion_cfgAlarm"], [613, 2, 1, "", "Motion_cfgAlarm_async"], [613, 2, 1, "", "Motion_cfgAxis"], [613, 2, 1, "", "Motion_cfgAxisMove"], [613, 2, 1, "", "Motion_cfgAxisMove_async"], [613, 2, 1, "", "Motion_cfgAxis_async"], [613, 2, 1, "", "Motion_cfgBreakPoint"], [613, 2, 1, "", "Motion_cfgBreakPoint_async"], [613, 2, 1, "", "Motion_cfgCapture"], [613, 2, 1, "", "Motion_cfgCapture_async"], [613, 2, 1, "", "Motion_cfgCircularInterpo"], [613, 2, 1, "", "Motion_cfgCircularInterpo_async"], [613, 2, 1, "", "Motion_cfgEncoder"], [613, 2, 1, "", "Motion_cfgEncoder_async"], [613, 2, 1, "", "Motion_cfgFindRef"], [613, 2, 1, "", "Motion_cfgFindRef_async"], [613, 2, 1, "", "Motion_cfgHelicalInterpo"], [613, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [613, 2, 1, "", "Motion_cfgHome"], [613, 2, 1, "", "Motion_cfgHome_async"], [613, 2, 1, "", "Motion_cfgInposi"], [613, 2, 1, "", "Motion_cfgInposi_async"], [613, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [613, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [613, 2, 1, "", "Motion_cfgLimit"], [613, 2, 1, "", "Motion_cfgLimit_async"], [613, 2, 1, "", "Motion_checkRef"], [613, 2, 1, "", "Motion_checkRef_async"], [613, 2, 1, "", "Motion_close"], [613, 2, 1, "", "Motion_close_async"], [613, 2, 1, "", "Motion_enableBreakPoint"], [613, 2, 1, "", "Motion_enableBreakPoint_async"], [613, 2, 1, "", "Motion_enableCapture"], [613, 2, 1, "", "Motion_enableCapture_async"], [613, 2, 1, "", "Motion_enableServoOff"], [613, 2, 1, "", "Motion_enableServoOff_async"], [613, 2, 1, "", "Motion_enableServoOn"], [613, 2, 1, "", "Motion_enableServoOn_async"], [613, 2, 1, "", "Motion_findRef"], [613, 2, 1, "", "Motion_findRef_async"], [613, 2, 1, "", "Motion_getEncoderPosi"], [613, 2, 1, "", "Motion_getEncoderPosi_async"], [613, 2, 1, "", "Motion_getHomeStatus"], [613, 2, 1, "", "Motion_getHomeStatus_async"], [613, 2, 1, "", "Motion_getLimitStatus"], [613, 2, 1, "", "Motion_getLimitStatus_async"], [613, 2, 1, "", "Motion_getLogicalPosi"], [613, 2, 1, "", "Motion_getLogicalPosi_async"], [613, 2, 1, "", "Motion_getMoveStatus"], [613, 2, 1, "", "Motion_getMoveStatus_async"], [613, 2, 1, "", "Motion_loadCfgFile"], [613, 2, 1, "", "Motion_loadCfgFile_async"], [613, 2, 1, "", "Motion_open"], [613, 2, 1, "", "Motion_openCfgFile"], [613, 2, 1, "", "Motion_openCfgFile_async"], [613, 2, 1, "", "Motion_open_async"], [613, 2, 1, "", "Motion_overrideAxisAccel"], [613, 2, 1, "", "Motion_overrideAxisAccel_async"], [613, 2, 1, "", "Motion_overrideAxisPosi"], [613, 2, 1, "", "Motion_overrideAxisPosi_async"], [613, 2, 1, "", "Motion_overrideAxisVelocity"], [613, 2, 1, "", "Motion_overrideAxisVelocity_async"], [613, 2, 1, "", "Motion_readCapturePoint"], [613, 2, 1, "", "Motion_readCapturePoint_async"], [613, 2, 1, "", "Motion_rstEncoderPosi"], [613, 2, 1, "", "Motion_rstEncoderPosi_async"], [613, 2, 1, "", "Motion_saveCfgFile"], [613, 2, 1, "", "Motion_saveCfgFile_async"], [613, 2, 1, "", "Motion_setLogicalPosi"], [613, 2, 1, "", "Motion_setLogicalPosi_async"], [613, 2, 1, "", "Motion_startCircularInterpo"], [613, 2, 1, "", "Motion_startCircularInterpo_async"], [613, 2, 1, "", "Motion_startHelicalInterpo"], [613, 2, 1, "", "Motion_startHelicalInterpo_async"], [613, 2, 1, "", "Motion_startLinearInterpo"], [613, 2, 1, "", "Motion_startLinearInterpo_async"], [613, 2, 1, "", "Motion_startMultiAxisMove"], [613, 2, 1, "", "Motion_startMultiAxisMove_async"], [613, 2, 1, "", "Motion_startSingleAxisMove"], [613, 2, 1, "", "Motion_startSingleAxisMove_async"], [613, 2, 1, "", "Motion_stop"], [613, 2, 1, "", "Motion_stop_async"], [613, 2, 1, "", "Net_getGateway"], [613, 2, 1, "", "Net_getGateway_async"], [613, 2, 1, "", "Net_getIPAddrAndSubmask"], [613, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [613, 2, 1, "", "Net_getMACAddr"], [613, 2, 1, "", "Net_getMACAddr_async"], [613, 2, 1, "", "Net_setIPAddrAndSubmask"], [613, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [613, 2, 1, "", "Sys_getDriverInfo"], [613, 2, 1, "", "Sys_getDriverInfo_async"], [613, 2, 1, "", "Sys_getGateway"], [613, 2, 1, "", "Sys_getGateway_async"], [613, 2, 1, "", "Sys_getIPAddrAndSubmask"], [613, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [613, 2, 1, "", "Sys_getMACAddr"], [613, 2, 1, "", "Sys_getMACAddr_async"], [613, 2, 1, "", "Sys_getMode"], [613, 2, 1, "", "Sys_getMode_async"], [613, 2, 1, "", "Sys_getPinModeInPort"], [613, 2, 1, "", "Sys_getPinModeInPort_async"], [613, 2, 1, "", "Sys_getPythonVersion"], [613, 2, 1, "", "Sys_getPythonVersion_async"], [613, 2, 1, "", "Sys_getRTC"], [613, 2, 1, "", "Sys_getRTC_async"], [613, 2, 1, "", "Sys_getSerialNumber"], [613, 2, 1, "", "Sys_getSerialNumber_async"], [613, 2, 1, "", "Sys_reboot"], [613, 2, 1, "", "Sys_rebootOnBootloader"], [613, 2, 1, "", "Sys_rebootOnBootloader_async"], [613, 2, 1, "", "Sys_reboot_async"], [613, 2, 1, "", "Sys_setAIOMode"], [613, 2, 1, "", "Sys_setAIOMode_async"], [613, 2, 1, "", "Sys_setDIMode"], [613, 2, 1, "", "Sys_setDIMode_async"], [613, 2, 1, "", "Sys_setDIOMode"], [613, 2, 1, "", "Sys_setDIOMode_async"], [613, 2, 1, "", "Sys_setDOMode"], [613, 2, 1, "", "Sys_setDOMode_async"], [613, 2, 1, "", "Sys_setIPAddrAndSubmask"], [613, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [613, 2, 1, "", "Sys_setIdleMode"], [613, 2, 1, "", "Sys_setIdleMode_async"], [613, 2, 1, "", "Sys_setMotionMode"], [613, 2, 1, "", "Sys_setMotionMode_async"], [613, 2, 1, "", "Sys_setRTC"], [613, 2, 1, "", "Sys_setRTC_async"], [613, 2, 1, "", "Sys_setSwitchMode"], [613, 2, 1, "", "Sys_setSwitchMode_async"], [613, 2, 1, "", "close"], [613, 2, 1, "", "connect"], [613, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[614, 2, 1, "", "AI_close"], [614, 2, 1, "", "AI_close_async"], [614, 2, 1, "", "AI_enableCS"], [614, 2, 1, "", "AI_enableCS_async"], [614, 2, 1, "", "AI_enableChannel"], [614, 2, 1, "", "AI_enableChannel_async"], [614, 2, 1, "", "AI_getPort"], [614, 2, 1, "", "AI_open"], [614, 2, 1, "", "AI_open_async"], [614, 2, 1, "", "AI_readOnDemand"], [614, 2, 1, "", "AI_readOnDemand_async"], [614, 2, 1, "", "AI_readStreaming"], [614, 2, 1, "", "AI_readStreaming_async"], [614, 2, 1, "", "AI_setMode"], [614, 2, 1, "", "AI_setMode_async"], [614, 2, 1, "", "AI_setNumSamples"], [614, 2, 1, "", "AI_setNumSamples_async"], [614, 2, 1, "", "AI_setSamplingRate"], [614, 2, 1, "", "AI_setSamplingRate_async"], [614, 2, 1, "", "AI_start"], [614, 2, 1, "", "AI_start_async"], [614, 2, 1, "", "AI_stop"], [614, 2, 1, "", "AI_stop_async"], [614, 2, 1, "", "Counter_close"], [614, 2, 1, "", "Counter_close_async"], [614, 2, 1, "", "Counter_open"], [614, 2, 1, "", "Counter_open_async"], [614, 2, 1, "", "Counter_read"], [614, 2, 1, "", "Counter_read_async"], [614, 2, 1, "", "Counter_start"], [614, 2, 1, "", "Counter_start_async"], [614, 2, 1, "", "Counter_stop"], [614, 2, 1, "", "Counter_stop_async"], [614, 2, 1, "", "DIO_loadStartup"], [614, 2, 1, "", "DIO_loadStartup_async"], [614, 2, 1, "", "DIO_saveStartup"], [614, 2, 1, "", "DIO_saveStartup_async"], [614, 2, 1, "", "DIO_setPortDI"], [614, 2, 1, "", "DIO_setPortDI_async"], [614, 2, 1, "", "DIO_setPortDO"], [614, 2, 1, "", "DIO_setPortDO_async"], [614, 2, 1, "", "DIO_setPortIdle"], [614, 2, 1, "", "DIO_setPortIdle_async"], [614, 2, 1, "", "DI_closePins"], [614, 2, 1, "", "DI_closePins_async"], [614, 2, 1, "", "DI_closePort"], [614, 2, 1, "", "DI_closePort_async"], [614, 2, 1, "", "DI_getPinMap"], [614, 2, 1, "", "DI_openPins"], [614, 2, 1, "", "DI_openPins_async"], [614, 2, 1, "", "DI_openPort"], [614, 2, 1, "", "DI_openPort_async"], [614, 2, 1, "", "DI_readPins"], [614, 2, 1, "", "DI_readPins_async"], [614, 2, 1, "", "DI_readPort"], [614, 2, 1, "", "DI_readPort_async"], [614, 2, 1, "", "DO_closePins"], [614, 2, 1, "", "DO_closePins_async"], [614, 2, 1, "", "DO_closePort"], [614, 2, 1, "", "DO_closePort_async"], [614, 2, 1, "", "DO_getPinMap"], [614, 2, 1, "", "DO_openPins"], [614, 2, 1, "", "DO_openPins_async"], [614, 2, 1, "", "DO_openPort"], [614, 2, 1, "", "DO_openPort_async"], [614, 2, 1, "", "DO_togglePins"], [614, 2, 1, "", "DO_togglePins_async"], [614, 2, 1, "", "DO_togglePort"], [614, 2, 1, "", "DO_togglePort_async"], [614, 2, 1, "", "DO_writePins"], [614, 2, 1, "", "DO_writePins_async"], [614, 2, 1, "", "DO_writePort"], [614, 2, 1, "", "DO_writePort_async"], [614, 2, 1, "", "I2C_close"], [614, 2, 1, "", "I2C_close_async"], [614, 2, 1, "", "I2C_getPinMap"], [614, 2, 1, "", "I2C_open"], [614, 2, 1, "", "I2C_open_async"], [614, 2, 1, "", "I2C_read"], [614, 2, 1, "", "I2C_read_async"], [614, 2, 1, "", "I2C_reset"], [614, 2, 1, "", "I2C_reset_async"], [614, 2, 1, "", "I2C_setAddressSize"], [614, 2, 1, "", "I2C_setAddressSize_async"], [614, 2, 1, "", "I2C_setClockRate"], [614, 2, 1, "", "I2C_setClockRate_async"], [614, 2, 1, "", "I2C_write"], [614, 2, 1, "", "I2C_write_async"], [614, 2, 1, "", "Logger_openFile"], [614, 2, 1, "", "Logger_write2DList"], [614, 2, 1, "", "Logger_writeHeader"], [614, 2, 1, "", "Logger_writeList"], [614, 2, 1, "", "Logger_writeValue"], [614, 2, 1, "", "PWM_close"], [614, 2, 1, "", "PWM_close_async"], [614, 2, 1, "", "PWM_open"], [614, 2, 1, "", "PWM_open_async"], [614, 2, 1, "", "PWM_setDutyCycle"], [614, 2, 1, "", "PWM_setDutyCycle_async"], [614, 2, 1, "", "PWM_setFrequency"], [614, 2, 1, "", "PWM_setFrequency_async"], [614, 2, 1, "", "PWM_start"], [614, 2, 1, "", "PWM_start_async"], [614, 2, 1, "", "PWM_stop"], [614, 2, 1, "", "PWM_stop_async"], [614, 2, 1, "", "SPI_close"], [614, 2, 1, "", "SPI_close_async"], [614, 2, 1, "", "SPI_getPinMap"], [614, 2, 1, "", "SPI_open"], [614, 2, 1, "", "SPI_open_async"], [614, 2, 1, "", "SPI_read"], [614, 2, 1, "", "SPI_readAndWrite"], [614, 2, 1, "", "SPI_readAndWrite_async"], [614, 2, 1, "", "SPI_read_async"], [614, 2, 1, "", "SPI_reset"], [614, 2, 1, "", "SPI_reset_async"], [614, 2, 1, "", "SPI_setDataSize"], [614, 2, 1, "", "SPI_setDataSize_async"], [614, 2, 1, "", "SPI_setFirstBit"], [614, 2, 1, "", "SPI_setFirstBit_async"], [614, 2, 1, "", "SPI_setMode"], [614, 2, 1, "", "SPI_setMode_async"], [614, 2, 1, "", "SPI_setPrescaler"], [614, 2, 1, "", "SPI_setPrescaler_async"], [614, 2, 1, "", "SPI_write"], [614, 2, 1, "", "SPI_write_async"], [614, 2, 1, "", "Sys_getDriverInfo"], [614, 2, 1, "", "Sys_getDriverInfo_async"], [614, 2, 1, "", "Sys_getMode"], [614, 2, 1, "", "Sys_getMode_async"], [614, 2, 1, "", "Sys_getPinModeInPort"], [614, 2, 1, "", "Sys_getPinModeInPort_async"], [614, 2, 1, "", "Sys_getPythonVersion"], [614, 2, 1, "", "Sys_getPythonVersion_async"], [614, 2, 1, "", "Sys_getRTC"], [614, 2, 1, "", "Sys_getRTC_async"], [614, 2, 1, "", "Sys_getSerialNumber"], [614, 2, 1, "", "Sys_getSerialNumber_async"], [614, 2, 1, "", "Sys_reboot"], [614, 2, 1, "", "Sys_rebootOnBootloader"], [614, 2, 1, "", "Sys_rebootOnBootloader_async"], [614, 2, 1, "", "Sys_reboot_async"], [614, 2, 1, "", "Sys_setAIOMode"], [614, 2, 1, "", "Sys_setAIOMode_async"], [614, 2, 1, "", "Sys_setDIMode"], [614, 2, 1, "", "Sys_setDIMode_async"], [614, 2, 1, "", "Sys_setDIOMode"], [614, 2, 1, "", "Sys_setDIOMode_async"], [614, 2, 1, "", "Sys_setDOMode"], [614, 2, 1, "", "Sys_setDOMode_async"], [614, 2, 1, "", "Sys_setIdleMode"], [614, 2, 1, "", "Sys_setIdleMode_async"], [614, 2, 1, "", "Sys_setMotionMode"], [614, 2, 1, "", "Sys_setMotionMode_async"], [614, 2, 1, "", "Sys_setRTC"], [614, 2, 1, "", "Sys_setRTC_async"], [614, 2, 1, "", "Sys_setSwitchMode"], [614, 2, 1, "", "Sys_setSwitchMode_async"], [614, 2, 1, "", "UART_close"], [614, 2, 1, "", "UART_close_async"], [614, 2, 1, "", "UART_getPinMap"], [614, 2, 1, "", "UART_open"], [614, 2, 1, "", "UART_open_async"], [614, 2, 1, "", "UART_read"], [614, 2, 1, "", "UART_read_async"], [614, 2, 1, "", "UART_reset"], [614, 2, 1, "", "UART_reset_async"], [614, 2, 1, "", "UART_setBaudRate"], [614, 2, 1, "", "UART_setBaudRate_async"], [614, 2, 1, "", "UART_setDataBit"], [614, 2, 1, "", "UART_setDataBit_async"], [614, 2, 1, "", "UART_setNumStopBit"], [614, 2, 1, "", "UART_setNumStopBit_async"], [614, 2, 1, "", "UART_setParity"], [614, 2, 1, "", "UART_setParity_async"], [614, 2, 1, "", "UART_stopReading"], [614, 2, 1, "", "UART_stopReading_async"], [614, 2, 1, "", "UART_write"], [614, 2, 1, "", "UART_write_async"], [614, 2, 1, "", "close"], [614, 2, 1, "", "connect"], [614, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[615, 2, 1, "", "AI_close"], [615, 2, 1, "", "AI_close_async"], [615, 2, 1, "", "AI_enableCS"], [615, 2, 1, "", "AI_enableCS_async"], [615, 2, 1, "", "AI_enableChannel"], [615, 2, 1, "", "AI_enableChannel_async"], [615, 2, 1, "", "AI_getPort"], [615, 2, 1, "", "AI_open"], [615, 2, 1, "", "AI_open_async"], [615, 2, 1, "", "AI_readOnDemand"], [615, 2, 1, "", "AI_readOnDemand_async"], [615, 2, 1, "", "AI_readStreaming"], [615, 2, 1, "", "AI_readStreaming_async"], [615, 2, 1, "", "AI_setMode"], [615, 2, 1, "", "AI_setMode_async"], [615, 2, 1, "", "AI_setNumSamples"], [615, 2, 1, "", "AI_setNumSamples_async"], [615, 2, 1, "", "AI_setSamplingRate"], [615, 2, 1, "", "AI_setSamplingRate_async"], [615, 2, 1, "", "AI_start"], [615, 2, 1, "", "AI_start_async"], [615, 2, 1, "", "AI_stop"], [615, 2, 1, "", "AI_stop_async"], [615, 2, 1, "", "AO_close"], [615, 2, 1, "", "AO_closeStreaming"], [615, 2, 1, "", "AO_closeStreaming_async"], [615, 2, 1, "", "AO_close_async"], [615, 2, 1, "", "AO_getEnableChannels"], [615, 2, 1, "", "AO_getMode"], [615, 2, 1, "", "AO_getMode_async"], [615, 2, 1, "", "AO_getPort"], [615, 2, 1, "", "AO_getState"], [615, 2, 1, "", "AO_getValues"], [615, 2, 1, "", "AO_getValues_async"], [615, 2, 1, "", "AO_open"], [615, 2, 1, "", "AO_openStreaming"], [615, 2, 1, "", "AO_openStreaming_async"], [615, 2, 1, "", "AO_open_async"], [615, 2, 1, "", "AO_setEnableChannels"], [615, 2, 1, "", "AO_setEnableChannels_async"], [615, 2, 1, "", "AO_setForm"], [615, 2, 1, "", "AO_setFormParam"], [615, 2, 1, "", "AO_setFormParam_async"], [615, 2, 1, "", "AO_setForm_async"], [615, 2, 1, "", "AO_setMode"], [615, 2, 1, "", "AO_setMode_async"], [615, 2, 1, "", "AO_setNumSamples"], [615, 2, 1, "", "AO_setNumSamples_async"], [615, 2, 1, "", "AO_setSamplingRate"], [615, 2, 1, "", "AO_setSamplingRate_async"], [615, 2, 1, "", "AO_startStreaming"], [615, 2, 1, "", "AO_startStreaming_async"], [615, 2, 1, "", "AO_writeAllChannels"], [615, 2, 1, "", "AO_writeAllChannels_async"], [615, 2, 1, "", "AO_writeOneChannel"], [615, 2, 1, "", "AO_writeOneChannel_async"], [615, 2, 1, "", "Counter_close"], [615, 2, 1, "", "Counter_close_async"], [615, 2, 1, "", "Counter_open"], [615, 2, 1, "", "Counter_open_async"], [615, 2, 1, "", "Counter_read"], [615, 2, 1, "", "Counter_read_async"], [615, 2, 1, "", "Counter_start"], [615, 2, 1, "", "Counter_start_async"], [615, 2, 1, "", "Counter_stop"], [615, 2, 1, "", "Counter_stop_async"], [615, 2, 1, "", "DIO_loadStartup"], [615, 2, 1, "", "DIO_loadStartup_async"], [615, 2, 1, "", "DIO_saveStartup"], [615, 2, 1, "", "DIO_saveStartup_async"], [615, 2, 1, "", "DIO_setPortDI"], [615, 2, 1, "", "DIO_setPortDI_async"], [615, 2, 1, "", "DIO_setPortDO"], [615, 2, 1, "", "DIO_setPortDO_async"], [615, 2, 1, "", "DIO_setPortIdle"], [615, 2, 1, "", "DIO_setPortIdle_async"], [615, 2, 1, "", "DI_closePins"], [615, 2, 1, "", "DI_closePins_async"], [615, 2, 1, "", "DI_closePort"], [615, 2, 1, "", "DI_closePort_async"], [615, 2, 1, "", "DI_getPinMap"], [615, 2, 1, "", "DI_openPins"], [615, 2, 1, "", "DI_openPins_async"], [615, 2, 1, "", "DI_openPort"], [615, 2, 1, "", "DI_openPort_async"], [615, 2, 1, "", "DI_readPins"], [615, 2, 1, "", "DI_readPins_async"], [615, 2, 1, "", "DI_readPort"], [615, 2, 1, "", "DI_readPort_async"], [615, 2, 1, "", "DO_closePins"], [615, 2, 1, "", "DO_closePins_async"], [615, 2, 1, "", "DO_closePort"], [615, 2, 1, "", "DO_closePort_async"], [615, 2, 1, "", "DO_getPinMap"], [615, 2, 1, "", "DO_openPins"], [615, 2, 1, "", "DO_openPins_async"], [615, 2, 1, "", "DO_openPort"], [615, 2, 1, "", "DO_openPort_async"], [615, 2, 1, "", "DO_togglePins"], [615, 2, 1, "", "DO_togglePins_async"], [615, 2, 1, "", "DO_togglePort"], [615, 2, 1, "", "DO_togglePort_async"], [615, 2, 1, "", "DO_writePins"], [615, 2, 1, "", "DO_writePins_async"], [615, 2, 1, "", "DO_writePort"], [615, 2, 1, "", "DO_writePort_async"], [615, 2, 1, "", "I2C_close"], [615, 2, 1, "", "I2C_close_async"], [615, 2, 1, "", "I2C_getPinMap"], [615, 2, 1, "", "I2C_open"], [615, 2, 1, "", "I2C_open_async"], [615, 2, 1, "", "I2C_read"], [615, 2, 1, "", "I2C_read_async"], [615, 2, 1, "", "I2C_reset"], [615, 2, 1, "", "I2C_reset_async"], [615, 2, 1, "", "I2C_setAddressSize"], [615, 2, 1, "", "I2C_setAddressSize_async"], [615, 2, 1, "", "I2C_setClockRate"], [615, 2, 1, "", "I2C_setClockRate_async"], [615, 2, 1, "", "I2C_write"], [615, 2, 1, "", "I2C_write_async"], [615, 2, 1, "", "Logger_openFile"], [615, 2, 1, "", "Logger_write2DList"], [615, 2, 1, "", "Logger_writeHeader"], [615, 2, 1, "", "Logger_writeList"], [615, 2, 1, "", "Logger_writeValue"], [615, 2, 1, "", "PWM_close"], [615, 2, 1, "", "PWM_close_async"], [615, 2, 1, "", "PWM_open"], [615, 2, 1, "", "PWM_open_async"], [615, 2, 1, "", "PWM_setDutyCycle"], [615, 2, 1, "", "PWM_setDutyCycle_async"], [615, 2, 1, "", "PWM_setFrequency"], [615, 2, 1, "", "PWM_setFrequency_async"], [615, 2, 1, "", "PWM_start"], [615, 2, 1, "", "PWM_start_async"], [615, 2, 1, "", "PWM_stop"], [615, 2, 1, "", "PWM_stop_async"], [615, 2, 1, "", "Sys_getDriverInfo"], [615, 2, 1, "", "Sys_getDriverInfo_async"], [615, 2, 1, "", "Sys_getMode"], [615, 2, 1, "", "Sys_getMode_async"], [615, 2, 1, "", "Sys_getPinModeInPort"], [615, 2, 1, "", "Sys_getPinModeInPort_async"], [615, 2, 1, "", "Sys_getPythonVersion"], [615, 2, 1, "", "Sys_getPythonVersion_async"], [615, 2, 1, "", "Sys_getRTC"], [615, 2, 1, "", "Sys_getRTC_async"], [615, 2, 1, "", "Sys_getSerialNumber"], [615, 2, 1, "", "Sys_getSerialNumber_async"], [615, 2, 1, "", "Sys_reboot"], [615, 2, 1, "", "Sys_rebootOnBootloader"], [615, 2, 1, "", "Sys_rebootOnBootloader_async"], [615, 2, 1, "", "Sys_reboot_async"], [615, 2, 1, "", "Sys_setAIOMode"], [615, 2, 1, "", "Sys_setAIOMode_async"], [615, 2, 1, "", "Sys_setDIMode"], [615, 2, 1, "", "Sys_setDIMode_async"], [615, 2, 1, "", "Sys_setDIOMode"], [615, 2, 1, "", "Sys_setDIOMode_async"], [615, 2, 1, "", "Sys_setDOMode"], [615, 2, 1, "", "Sys_setDOMode_async"], [615, 2, 1, "", "Sys_setIdleMode"], [615, 2, 1, "", "Sys_setIdleMode_async"], [615, 2, 1, "", "Sys_setMotionMode"], [615, 2, 1, "", "Sys_setMotionMode_async"], [615, 2, 1, "", "Sys_setRTC"], [615, 2, 1, "", "Sys_setRTC_async"], [615, 2, 1, "", "Sys_setSwitchMode"], [615, 2, 1, "", "Sys_setSwitchMode_async"], [615, 2, 1, "", "UART_close"], [615, 2, 1, "", "UART_close_async"], [615, 2, 1, "", "UART_getPinMap"], [615, 2, 1, "", "UART_open"], [615, 2, 1, "", "UART_open_async"], [615, 2, 1, "", "UART_read"], [615, 2, 1, "", "UART_read_async"], [615, 2, 1, "", "UART_reset"], [615, 2, 1, "", "UART_reset_async"], [615, 2, 1, "", "UART_setBaudRate"], [615, 2, 1, "", "UART_setBaudRate_async"], [615, 2, 1, "", "UART_setDataBit"], [615, 2, 1, "", "UART_setDataBit_async"], [615, 2, 1, "", "UART_setNumStopBit"], [615, 2, 1, "", "UART_setNumStopBit_async"], [615, 2, 1, "", "UART_setParity"], [615, 2, 1, "", "UART_setParity_async"], [615, 2, 1, "", "UART_stopReading"], [615, 2, 1, "", "UART_stopReading_async"], [615, 2, 1, "", "UART_write"], [615, 2, 1, "", "UART_write_async"], [615, 2, 1, "", "close"], [615, 2, 1, "", "connect"], [615, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[616, 2, 1, "", "CAN_close"], [616, 2, 1, "", "CAN_close_async"], [616, 2, 1, "", "CAN_getPort"], [616, 2, 1, "", "CAN_open"], [616, 2, 1, "", "CAN_open_async"], [616, 2, 1, "", "CAN_read"], [616, 2, 1, "", "CAN_read_async"], [616, 2, 1, "", "CAN_setRXFilterOrMask"], [616, 2, 1, "", "CAN_setRXFilterOrMask_async"], [616, 2, 1, "", "CAN_setRXFilteringOn"], [616, 2, 1, "", "CAN_setRXFilteringOn_async"], [616, 2, 1, "", "CAN_setSpeed"], [616, 2, 1, "", "CAN_setSpeed_async"], [616, 2, 1, "", "CAN_start"], [616, 2, 1, "", "CAN_start_async"], [616, 2, 1, "", "CAN_stop"], [616, 2, 1, "", "CAN_stop_async"], [616, 2, 1, "", "CAN_write"], [616, 2, 1, "", "CAN_write_async"], [616, 2, 1, "", "Counter_close"], [616, 2, 1, "", "Counter_close_async"], [616, 2, 1, "", "Counter_open"], [616, 2, 1, "", "Counter_open_async"], [616, 2, 1, "", "Counter_read"], [616, 2, 1, "", "Counter_read_async"], [616, 2, 1, "", "Counter_start"], [616, 2, 1, "", "Counter_start_async"], [616, 2, 1, "", "Counter_stop"], [616, 2, 1, "", "Counter_stop_async"], [616, 2, 1, "", "DIO_loadStartup"], [616, 2, 1, "", "DIO_loadStartup_async"], [616, 2, 1, "", "DIO_saveStartup"], [616, 2, 1, "", "DIO_saveStartup_async"], [616, 2, 1, "", "DIO_setPortDI"], [616, 2, 1, "", "DIO_setPortDI_async"], [616, 2, 1, "", "DIO_setPortDO"], [616, 2, 1, "", "DIO_setPortDO_async"], [616, 2, 1, "", "DIO_setPortIdle"], [616, 2, 1, "", "DIO_setPortIdle_async"], [616, 2, 1, "", "DI_closePins"], [616, 2, 1, "", "DI_closePins_async"], [616, 2, 1, "", "DI_closePort"], [616, 2, 1, "", "DI_closePort_async"], [616, 2, 1, "", "DI_getPinMap"], [616, 2, 1, "", "DI_openPins"], [616, 2, 1, "", "DI_openPins_async"], [616, 2, 1, "", "DI_openPort"], [616, 2, 1, "", "DI_openPort_async"], [616, 2, 1, "", "DI_readPins"], [616, 2, 1, "", "DI_readPins_async"], [616, 2, 1, "", "DI_readPort"], [616, 2, 1, "", "DI_readPort_async"], [616, 2, 1, "", "DO_closePins"], [616, 2, 1, "", "DO_closePins_async"], [616, 2, 1, "", "DO_closePort"], [616, 2, 1, "", "DO_closePort_async"], [616, 2, 1, "", "DO_getPinMap"], [616, 2, 1, "", "DO_openPins"], [616, 2, 1, "", "DO_openPins_async"], [616, 2, 1, "", "DO_openPort"], [616, 2, 1, "", "DO_openPort_async"], [616, 2, 1, "", "DO_togglePins"], [616, 2, 1, "", "DO_togglePins_async"], [616, 2, 1, "", "DO_togglePort"], [616, 2, 1, "", "DO_togglePort_async"], [616, 2, 1, "", "DO_writePins"], [616, 2, 1, "", "DO_writePins_async"], [616, 2, 1, "", "DO_writePort"], [616, 2, 1, "", "DO_writePort_async"], [616, 2, 1, "", "I2C_close"], [616, 2, 1, "", "I2C_close_async"], [616, 2, 1, "", "I2C_getPinMap"], [616, 2, 1, "", "I2C_open"], [616, 2, 1, "", "I2C_open_async"], [616, 2, 1, "", "I2C_read"], [616, 2, 1, "", "I2C_read_async"], [616, 2, 1, "", "I2C_reset"], [616, 2, 1, "", "I2C_reset_async"], [616, 2, 1, "", "I2C_setAddressSize"], [616, 2, 1, "", "I2C_setAddressSize_async"], [616, 2, 1, "", "I2C_setClockRate"], [616, 2, 1, "", "I2C_setClockRate_async"], [616, 2, 1, "", "I2C_write"], [616, 2, 1, "", "I2C_write_async"], [616, 2, 1, "", "Logger_openFile"], [616, 2, 1, "", "Logger_write2DList"], [616, 2, 1, "", "Logger_writeHeader"], [616, 2, 1, "", "Logger_writeList"], [616, 2, 1, "", "Logger_writeValue"], [616, 2, 1, "", "PWM_close"], [616, 2, 1, "", "PWM_close_async"], [616, 2, 1, "", "PWM_open"], [616, 2, 1, "", "PWM_open_async"], [616, 2, 1, "", "PWM_setDutyCycle"], [616, 2, 1, "", "PWM_setDutyCycle_async"], [616, 2, 1, "", "PWM_setFrequency"], [616, 2, 1, "", "PWM_setFrequency_async"], [616, 2, 1, "", "PWM_start"], [616, 2, 1, "", "PWM_start_async"], [616, 2, 1, "", "PWM_stop"], [616, 2, 1, "", "PWM_stop_async"], [616, 2, 1, "", "SPI_close"], [616, 2, 1, "", "SPI_close_async"], [616, 2, 1, "", "SPI_getPinMap"], [616, 2, 1, "", "SPI_open"], [616, 2, 1, "", "SPI_open_async"], [616, 2, 1, "", "SPI_read"], [616, 2, 1, "", "SPI_readAndWrite"], [616, 2, 1, "", "SPI_readAndWrite_async"], [616, 2, 1, "", "SPI_read_async"], [616, 2, 1, "", "SPI_reset"], [616, 2, 1, "", "SPI_reset_async"], [616, 2, 1, "", "SPI_setDataSize"], [616, 2, 1, "", "SPI_setDataSize_async"], [616, 2, 1, "", "SPI_setFirstBit"], [616, 2, 1, "", "SPI_setFirstBit_async"], [616, 2, 1, "", "SPI_setMode"], [616, 2, 1, "", "SPI_setMode_async"], [616, 2, 1, "", "SPI_setPrescaler"], [616, 2, 1, "", "SPI_setPrescaler_async"], [616, 2, 1, "", "SPI_write"], [616, 2, 1, "", "SPI_write_async"], [616, 2, 1, "", "Sys_getDriverInfo"], [616, 2, 1, "", "Sys_getDriverInfo_async"], [616, 2, 1, "", "Sys_getMode"], [616, 2, 1, "", "Sys_getMode_async"], [616, 2, 1, "", "Sys_getPinModeInPort"], [616, 2, 1, "", "Sys_getPinModeInPort_async"], [616, 2, 1, "", "Sys_getPythonVersion"], [616, 2, 1, "", "Sys_getPythonVersion_async"], [616, 2, 1, "", "Sys_getRTC"], [616, 2, 1, "", "Sys_getRTC_async"], [616, 2, 1, "", "Sys_getSerialNumber"], [616, 2, 1, "", "Sys_getSerialNumber_async"], [616, 2, 1, "", "Sys_reboot"], [616, 2, 1, "", "Sys_rebootOnBootloader"], [616, 2, 1, "", "Sys_rebootOnBootloader_async"], [616, 2, 1, "", "Sys_reboot_async"], [616, 2, 1, "", "Sys_setAIOMode"], [616, 2, 1, "", "Sys_setAIOMode_async"], [616, 2, 1, "", "Sys_setDIMode"], [616, 2, 1, "", "Sys_setDIMode_async"], [616, 2, 1, "", "Sys_setDIOMode"], [616, 2, 1, "", "Sys_setDIOMode_async"], [616, 2, 1, "", "Sys_setDOMode"], [616, 2, 1, "", "Sys_setDOMode_async"], [616, 2, 1, "", "Sys_setIdleMode"], [616, 2, 1, "", "Sys_setIdleMode_async"], [616, 2, 1, "", "Sys_setMotionMode"], [616, 2, 1, "", "Sys_setMotionMode_async"], [616, 2, 1, "", "Sys_setRTC"], [616, 2, 1, "", "Sys_setRTC_async"], [616, 2, 1, "", "Sys_setSwitchMode"], [616, 2, 1, "", "Sys_setSwitchMode_async"], [616, 2, 1, "", "UART_close"], [616, 2, 1, "", "UART_close_async"], [616, 2, 1, "", "UART_getPinMap"], [616, 2, 1, "", "UART_open"], [616, 2, 1, "", "UART_open_async"], [616, 2, 1, "", "UART_read"], [616, 2, 1, "", "UART_read_async"], [616, 2, 1, "", "UART_reset"], [616, 2, 1, "", "UART_reset_async"], [616, 2, 1, "", "UART_setBaudRate"], [616, 2, 1, "", "UART_setBaudRate_async"], [616, 2, 1, "", "UART_setDataBit"], [616, 2, 1, "", "UART_setDataBit_async"], [616, 2, 1, "", "UART_setNumStopBit"], [616, 2, 1, "", "UART_setNumStopBit_async"], [616, 2, 1, "", "UART_setParity"], [616, 2, 1, "", "UART_setParity_async"], [616, 2, 1, "", "UART_stopReading"], [616, 2, 1, "", "UART_stopReading_async"], [616, 2, 1, "", "UART_write"], [616, 2, 1, "", "UART_write_async"], [616, 2, 1, "", "close"], [616, 2, 1, "", "connect"], [616, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[617, 2, 1, "", "Counter_close"], [617, 2, 1, "", "Counter_close_async"], [617, 2, 1, "", "Counter_open"], [617, 2, 1, "", "Counter_open_async"], [617, 2, 1, "", "Counter_read"], [617, 2, 1, "", "Counter_read_async"], [617, 2, 1, "", "Counter_start"], [617, 2, 1, "", "Counter_start_async"], [617, 2, 1, "", "Counter_stop"], [617, 2, 1, "", "Counter_stop_async"], [617, 2, 1, "", "DIO_loadStartup"], [617, 2, 1, "", "DIO_loadStartup_async"], [617, 2, 1, "", "DIO_saveStartup"], [617, 2, 1, "", "DIO_saveStartup_async"], [617, 2, 1, "", "DIO_setPortDI"], [617, 2, 1, "", "DIO_setPortDI_async"], [617, 2, 1, "", "DIO_setPortDO"], [617, 2, 1, "", "DIO_setPortDO_async"], [617, 2, 1, "", "DIO_setPortIdle"], [617, 2, 1, "", "DIO_setPortIdle_async"], [617, 2, 1, "", "DI_closePins"], [617, 2, 1, "", "DI_closePins_async"], [617, 2, 1, "", "DI_closePort"], [617, 2, 1, "", "DI_closePort_async"], [617, 2, 1, "", "DI_getPinMap"], [617, 2, 1, "", "DI_openPins"], [617, 2, 1, "", "DI_openPins_async"], [617, 2, 1, "", "DI_openPort"], [617, 2, 1, "", "DI_openPort_async"], [617, 2, 1, "", "DI_readPins"], [617, 2, 1, "", "DI_readPins_async"], [617, 2, 1, "", "DI_readPort"], [617, 2, 1, "", "DI_readPort_async"], [617, 2, 1, "", "DO_closePins"], [617, 2, 1, "", "DO_closePins_async"], [617, 2, 1, "", "DO_closePort"], [617, 2, 1, "", "DO_closePort_async"], [617, 2, 1, "", "DO_getPinMap"], [617, 2, 1, "", "DO_openPins"], [617, 2, 1, "", "DO_openPins_async"], [617, 2, 1, "", "DO_openPort"], [617, 2, 1, "", "DO_openPort_async"], [617, 2, 1, "", "DO_togglePins"], [617, 2, 1, "", "DO_togglePins_async"], [617, 2, 1, "", "DO_togglePort"], [617, 2, 1, "", "DO_togglePort_async"], [617, 2, 1, "", "DO_writePins"], [617, 2, 1, "", "DO_writePins_async"], [617, 2, 1, "", "DO_writePort"], [617, 2, 1, "", "DO_writePort_async"], [617, 2, 1, "", "I2C_close"], [617, 2, 1, "", "I2C_close_async"], [617, 2, 1, "", "I2C_getPinMap"], [617, 2, 1, "", "I2C_open"], [617, 2, 1, "", "I2C_open_async"], [617, 2, 1, "", "I2C_read"], [617, 2, 1, "", "I2C_read_async"], [617, 2, 1, "", "I2C_reset"], [617, 2, 1, "", "I2C_reset_async"], [617, 2, 1, "", "I2C_setAddressSize"], [617, 2, 1, "", "I2C_setAddressSize_async"], [617, 2, 1, "", "I2C_setClockRate"], [617, 2, 1, "", "I2C_setClockRate_async"], [617, 2, 1, "", "I2C_write"], [617, 2, 1, "", "I2C_write_async"], [617, 2, 1, "", "Logger_openFile"], [617, 2, 1, "", "Logger_write2DList"], [617, 2, 1, "", "Logger_writeHeader"], [617, 2, 1, "", "Logger_writeList"], [617, 2, 1, "", "Logger_writeValue"], [617, 2, 1, "", "PWM_close"], [617, 2, 1, "", "PWM_close_async"], [617, 2, 1, "", "PWM_open"], [617, 2, 1, "", "PWM_open_async"], [617, 2, 1, "", "PWM_setDutyCycle"], [617, 2, 1, "", "PWM_setDutyCycle_async"], [617, 2, 1, "", "PWM_setFrequency"], [617, 2, 1, "", "PWM_setFrequency_async"], [617, 2, 1, "", "PWM_start"], [617, 2, 1, "", "PWM_start_async"], [617, 2, 1, "", "PWM_stop"], [617, 2, 1, "", "PWM_stop_async"], [617, 2, 1, "", "SPI_close"], [617, 2, 1, "", "SPI_close_async"], [617, 2, 1, "", "SPI_getPinMap"], [617, 2, 1, "", "SPI_open"], [617, 2, 1, "", "SPI_open_async"], [617, 2, 1, "", "SPI_read"], [617, 2, 1, "", "SPI_readAndWrite"], [617, 2, 1, "", "SPI_readAndWrite_async"], [617, 2, 1, "", "SPI_read_async"], [617, 2, 1, "", "SPI_reset"], [617, 2, 1, "", "SPI_reset_async"], [617, 2, 1, "", "SPI_setDataSize"], [617, 2, 1, "", "SPI_setDataSize_async"], [617, 2, 1, "", "SPI_setFirstBit"], [617, 2, 1, "", "SPI_setFirstBit_async"], [617, 2, 1, "", "SPI_setMode"], [617, 2, 1, "", "SPI_setMode_async"], [617, 2, 1, "", "SPI_setPrescaler"], [617, 2, 1, "", "SPI_setPrescaler_async"], [617, 2, 1, "", "SPI_write"], [617, 2, 1, "", "SPI_write_async"], [617, 2, 1, "", "Sys_getDriverInfo"], [617, 2, 1, "", "Sys_getDriverInfo_async"], [617, 2, 1, "", "Sys_getMode"], [617, 2, 1, "", "Sys_getMode_async"], [617, 2, 1, "", "Sys_getPinModeInPort"], [617, 2, 1, "", "Sys_getPinModeInPort_async"], [617, 2, 1, "", "Sys_getPythonVersion"], [617, 2, 1, "", "Sys_getPythonVersion_async"], [617, 2, 1, "", "Sys_getRTC"], [617, 2, 1, "", "Sys_getRTC_async"], [617, 2, 1, "", "Sys_getSerialNumber"], [617, 2, 1, "", "Sys_getSerialNumber_async"], [617, 2, 1, "", "Sys_reboot"], [617, 2, 1, "", "Sys_rebootOnBootloader"], [617, 2, 1, "", "Sys_rebootOnBootloader_async"], [617, 2, 1, "", "Sys_reboot_async"], [617, 2, 1, "", "Sys_setAIOMode"], [617, 2, 1, "", "Sys_setAIOMode_async"], [617, 2, 1, "", "Sys_setDIMode"], [617, 2, 1, "", "Sys_setDIMode_async"], [617, 2, 1, "", "Sys_setDIOMode"], [617, 2, 1, "", "Sys_setDIOMode_async"], [617, 2, 1, "", "Sys_setDOMode"], [617, 2, 1, "", "Sys_setDOMode_async"], [617, 2, 1, "", "Sys_setIdleMode"], [617, 2, 1, "", "Sys_setIdleMode_async"], [617, 2, 1, "", "Sys_setMotionMode"], [617, 2, 1, "", "Sys_setMotionMode_async"], [617, 2, 1, "", "Sys_setRTC"], [617, 2, 1, "", "Sys_setRTC_async"], [617, 2, 1, "", "Sys_setSwitchMode"], [617, 2, 1, "", "Sys_setSwitchMode_async"], [617, 2, 1, "", "UART_close"], [617, 2, 1, "", "UART_close_async"], [617, 2, 1, "", "UART_getPinMap"], [617, 2, 1, "", "UART_open"], [617, 2, 1, "", "UART_open_async"], [617, 2, 1, "", "UART_read"], [617, 2, 1, "", "UART_read_async"], [617, 2, 1, "", "UART_reset"], [617, 2, 1, "", "UART_reset_async"], [617, 2, 1, "", "UART_setBaudRate"], [617, 2, 1, "", "UART_setBaudRate_async"], [617, 2, 1, "", "UART_setDataBit"], [617, 2, 1, "", "UART_setDataBit_async"], [617, 2, 1, "", "UART_setNumStopBit"], [617, 2, 1, "", "UART_setNumStopBit_async"], [617, 2, 1, "", "UART_setParity"], [617, 2, 1, "", "UART_setParity_async"], [617, 2, 1, "", "UART_stopReading"], [617, 2, 1, "", "UART_stopReading_async"], [617, 2, 1, "", "UART_write"], [617, 2, 1, "", "UART_write_async"], [617, 2, 1, "", "close"], [617, 2, 1, "", "connect"], [617, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[618, 2, 1, "", "Counter_close"], [618, 2, 1, "", "Counter_close_async"], [618, 2, 1, "", "Counter_open"], [618, 2, 1, "", "Counter_open_async"], [618, 2, 1, "", "Counter_read"], [618, 2, 1, "", "Counter_read_async"], [618, 2, 1, "", "Counter_start"], [618, 2, 1, "", "Counter_start_async"], [618, 2, 1, "", "Counter_stop"], [618, 2, 1, "", "Counter_stop_async"], [618, 2, 1, "", "DIO_loadStartup"], [618, 2, 1, "", "DIO_loadStartup_async"], [618, 2, 1, "", "DIO_saveStartup"], [618, 2, 1, "", "DIO_saveStartup_async"], [618, 2, 1, "", "DIO_setPortDI"], [618, 2, 1, "", "DIO_setPortDI_async"], [618, 2, 1, "", "DIO_setPortDO"], [618, 2, 1, "", "DIO_setPortDO_async"], [618, 2, 1, "", "DIO_setPortIdle"], [618, 2, 1, "", "DIO_setPortIdle_async"], [618, 2, 1, "", "DI_closePins"], [618, 2, 1, "", "DI_closePins_async"], [618, 2, 1, "", "DI_closePort"], [618, 2, 1, "", "DI_closePort_async"], [618, 2, 1, "", "DI_getPinMap"], [618, 2, 1, "", "DI_openPins"], [618, 2, 1, "", "DI_openPins_async"], [618, 2, 1, "", "DI_openPort"], [618, 2, 1, "", "DI_openPort_async"], [618, 2, 1, "", "DI_readPins"], [618, 2, 1, "", "DI_readPins_async"], [618, 2, 1, "", "DI_readPort"], [618, 2, 1, "", "DI_readPort_async"], [618, 2, 1, "", "DO_closePins"], [618, 2, 1, "", "DO_closePins_async"], [618, 2, 1, "", "DO_closePort"], [618, 2, 1, "", "DO_closePort_async"], [618, 2, 1, "", "DO_getPinMap"], [618, 2, 1, "", "DO_openPins"], [618, 2, 1, "", "DO_openPins_async"], [618, 2, 1, "", "DO_openPort"], [618, 2, 1, "", "DO_openPort_async"], [618, 2, 1, "", "DO_togglePins"], [618, 2, 1, "", "DO_togglePins_async"], [618, 2, 1, "", "DO_togglePort"], [618, 2, 1, "", "DO_togglePort_async"], [618, 2, 1, "", "DO_writePins"], [618, 2, 1, "", "DO_writePins_async"], [618, 2, 1, "", "DO_writePort"], [618, 2, 1, "", "DO_writePort_async"], [618, 2, 1, "", "Logger_openFile"], [618, 2, 1, "", "Logger_write2DList"], [618, 2, 1, "", "Logger_writeHeader"], [618, 2, 1, "", "Logger_writeList"], [618, 2, 1, "", "Logger_writeValue"], [618, 2, 1, "", "PWM_close"], [618, 2, 1, "", "PWM_close_async"], [618, 2, 1, "", "PWM_open"], [618, 2, 1, "", "PWM_open_async"], [618, 2, 1, "", "PWM_setDutyCycle"], [618, 2, 1, "", "PWM_setDutyCycle_async"], [618, 2, 1, "", "PWM_setFrequency"], [618, 2, 1, "", "PWM_setFrequency_async"], [618, 2, 1, "", "PWM_start"], [618, 2, 1, "", "PWM_start_async"], [618, 2, 1, "", "PWM_stop"], [618, 2, 1, "", "PWM_stop_async"], [618, 2, 1, "", "Sys_getDriverInfo"], [618, 2, 1, "", "Sys_getDriverInfo_async"], [618, 2, 1, "", "Sys_getMode"], [618, 2, 1, "", "Sys_getMode_async"], [618, 2, 1, "", "Sys_getPinModeInPort"], [618, 2, 1, "", "Sys_getPinModeInPort_async"], [618, 2, 1, "", "Sys_getPythonVersion"], [618, 2, 1, "", "Sys_getPythonVersion_async"], [618, 2, 1, "", "Sys_getRTC"], [618, 2, 1, "", "Sys_getRTC_async"], [618, 2, 1, "", "Sys_getSerialNumber"], [618, 2, 1, "", "Sys_getSerialNumber_async"], [618, 2, 1, "", "Sys_reboot"], [618, 2, 1, "", "Sys_rebootOnBootloader"], [618, 2, 1, "", "Sys_rebootOnBootloader_async"], [618, 2, 1, "", "Sys_reboot_async"], [618, 2, 1, "", "Sys_setAIOMode"], [618, 2, 1, "", "Sys_setAIOMode_async"], [618, 2, 1, "", "Sys_setDIMode"], [618, 2, 1, "", "Sys_setDIMode_async"], [618, 2, 1, "", "Sys_setDIOMode"], [618, 2, 1, "", "Sys_setDIOMode_async"], [618, 2, 1, "", "Sys_setDOMode"], [618, 2, 1, "", "Sys_setDOMode_async"], [618, 2, 1, "", "Sys_setIdleMode"], [618, 2, 1, "", "Sys_setIdleMode_async"], [618, 2, 1, "", "Sys_setMotionMode"], [618, 2, 1, "", "Sys_setMotionMode_async"], [618, 2, 1, "", "Sys_setRTC"], [618, 2, 1, "", "Sys_setRTC_async"], [618, 2, 1, "", "Sys_setSwitchMode"], [618, 2, 1, "", "Sys_setSwitchMode_async"], [618, 2, 1, "", "close"], [618, 2, 1, "", "connect"], [618, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[619, 2, 1, "", "Counter_close"], [619, 2, 1, "", "Counter_close_async"], [619, 2, 1, "", "Counter_open"], [619, 2, 1, "", "Counter_open_async"], [619, 2, 1, "", "Counter_read"], [619, 2, 1, "", "Counter_read_async"], [619, 2, 1, "", "Counter_start"], [619, 2, 1, "", "Counter_start_async"], [619, 2, 1, "", "Counter_stop"], [619, 2, 1, "", "Counter_stop_async"], [619, 2, 1, "", "DIO_loadStartup"], [619, 2, 1, "", "DIO_loadStartup_async"], [619, 2, 1, "", "DIO_saveStartup"], [619, 2, 1, "", "DIO_saveStartup_async"], [619, 2, 1, "", "DIO_setPortDI"], [619, 2, 1, "", "DIO_setPortDI_async"], [619, 2, 1, "", "DIO_setPortDO"], [619, 2, 1, "", "DIO_setPortDO_async"], [619, 2, 1, "", "DIO_setPortIdle"], [619, 2, 1, "", "DIO_setPortIdle_async"], [619, 2, 1, "", "DI_closePins"], [619, 2, 1, "", "DI_closePins_async"], [619, 2, 1, "", "DI_closePort"], [619, 2, 1, "", "DI_closePort_async"], [619, 2, 1, "", "DI_getPinMap"], [619, 2, 1, "", "DI_openPins"], [619, 2, 1, "", "DI_openPins_async"], [619, 2, 1, "", "DI_openPort"], [619, 2, 1, "", "DI_openPort_async"], [619, 2, 1, "", "DI_readPins"], [619, 2, 1, "", "DI_readPins_async"], [619, 2, 1, "", "DI_readPort"], [619, 2, 1, "", "DI_readPort_async"], [619, 2, 1, "", "DO_closePins"], [619, 2, 1, "", "DO_closePins_async"], [619, 2, 1, "", "DO_closePort"], [619, 2, 1, "", "DO_closePort_async"], [619, 2, 1, "", "DO_getPinMap"], [619, 2, 1, "", "DO_openPins"], [619, 2, 1, "", "DO_openPins_async"], [619, 2, 1, "", "DO_openPort"], [619, 2, 1, "", "DO_openPort_async"], [619, 2, 1, "", "DO_togglePins"], [619, 2, 1, "", "DO_togglePins_async"], [619, 2, 1, "", "DO_togglePort"], [619, 2, 1, "", "DO_togglePort_async"], [619, 2, 1, "", "DO_writePins"], [619, 2, 1, "", "DO_writePins_async"], [619, 2, 1, "", "DO_writePort"], [619, 2, 1, "", "DO_writePort_async"], [619, 2, 1, "", "I2C_close"], [619, 2, 1, "", "I2C_close_async"], [619, 2, 1, "", "I2C_getPinMap"], [619, 2, 1, "", "I2C_open"], [619, 2, 1, "", "I2C_open_async"], [619, 2, 1, "", "I2C_read"], [619, 2, 1, "", "I2C_read_async"], [619, 2, 1, "", "I2C_reset"], [619, 2, 1, "", "I2C_reset_async"], [619, 2, 1, "", "I2C_setAddressSize"], [619, 2, 1, "", "I2C_setAddressSize_async"], [619, 2, 1, "", "I2C_setClockRate"], [619, 2, 1, "", "I2C_setClockRate_async"], [619, 2, 1, "", "I2C_write"], [619, 2, 1, "", "I2C_write_async"], [619, 2, 1, "", "Logger_openFile"], [619, 2, 1, "", "Logger_write2DList"], [619, 2, 1, "", "Logger_writeHeader"], [619, 2, 1, "", "Logger_writeList"], [619, 2, 1, "", "Logger_writeValue"], [619, 2, 1, "", "PWM_close"], [619, 2, 1, "", "PWM_close_async"], [619, 2, 1, "", "PWM_open"], [619, 2, 1, "", "PWM_open_async"], [619, 2, 1, "", "PWM_setDutyCycle"], [619, 2, 1, "", "PWM_setDutyCycle_async"], [619, 2, 1, "", "PWM_setFrequency"], [619, 2, 1, "", "PWM_setFrequency_async"], [619, 2, 1, "", "PWM_start"], [619, 2, 1, "", "PWM_start_async"], [619, 2, 1, "", "PWM_stop"], [619, 2, 1, "", "PWM_stop_async"], [619, 2, 1, "", "SPI_close"], [619, 2, 1, "", "SPI_close_async"], [619, 2, 1, "", "SPI_getPinMap"], [619, 2, 1, "", "SPI_open"], [619, 2, 1, "", "SPI_open_async"], [619, 2, 1, "", "SPI_read"], [619, 2, 1, "", "SPI_readAndWrite"], [619, 2, 1, "", "SPI_readAndWrite_async"], [619, 2, 1, "", "SPI_read_async"], [619, 2, 1, "", "SPI_reset"], [619, 2, 1, "", "SPI_reset_async"], [619, 2, 1, "", "SPI_setDataSize"], [619, 2, 1, "", "SPI_setDataSize_async"], [619, 2, 1, "", "SPI_setFirstBit"], [619, 2, 1, "", "SPI_setFirstBit_async"], [619, 2, 1, "", "SPI_setMode"], [619, 2, 1, "", "SPI_setMode_async"], [619, 2, 1, "", "SPI_setPrescaler"], [619, 2, 1, "", "SPI_setPrescaler_async"], [619, 2, 1, "", "SPI_write"], [619, 2, 1, "", "SPI_write_async"], [619, 2, 1, "", "Sys_getDriverInfo"], [619, 2, 1, "", "Sys_getDriverInfo_async"], [619, 2, 1, "", "Sys_getMode"], [619, 2, 1, "", "Sys_getMode_async"], [619, 2, 1, "", "Sys_getPinModeInPort"], [619, 2, 1, "", "Sys_getPinModeInPort_async"], [619, 2, 1, "", "Sys_getPythonVersion"], [619, 2, 1, "", "Sys_getPythonVersion_async"], [619, 2, 1, "", "Sys_getRTC"], [619, 2, 1, "", "Sys_getRTC_async"], [619, 2, 1, "", "Sys_getSerialNumber"], [619, 2, 1, "", "Sys_getSerialNumber_async"], [619, 2, 1, "", "Sys_reboot"], [619, 2, 1, "", "Sys_rebootOnBootloader"], [619, 2, 1, "", "Sys_rebootOnBootloader_async"], [619, 2, 1, "", "Sys_reboot_async"], [619, 2, 1, "", "Sys_setAIOMode"], [619, 2, 1, "", "Sys_setAIOMode_async"], [619, 2, 1, "", "Sys_setDIMode"], [619, 2, 1, "", "Sys_setDIMode_async"], [619, 2, 1, "", "Sys_setDIOMode"], [619, 2, 1, "", "Sys_setDIOMode_async"], [619, 2, 1, "", "Sys_setDOMode"], [619, 2, 1, "", "Sys_setDOMode_async"], [619, 2, 1, "", "Sys_setIdleMode"], [619, 2, 1, "", "Sys_setIdleMode_async"], [619, 2, 1, "", "Sys_setMotionMode"], [619, 2, 1, "", "Sys_setMotionMode_async"], [619, 2, 1, "", "Sys_setRTC"], [619, 2, 1, "", "Sys_setRTC_async"], [619, 2, 1, "", "Sys_setSwitchMode"], [619, 2, 1, "", "Sys_setSwitchMode_async"], [619, 2, 1, "", "Thermal_close"], [619, 2, 1, "", "Thermal_close_async"], [619, 2, 1, "", "Thermal_getPinMap"], [619, 2, 1, "", "Thermal_getStatus"], [619, 2, 1, "", "Thermal_getStatus_async"], [619, 2, 1, "", "Thermal_open"], [619, 2, 1, "", "Thermal_open_async"], [619, 2, 1, "", "Thermal_readSensor"], [619, 2, 1, "", "Thermal_readSensor_async"], [619, 2, 1, "", "Thermal_setType"], [619, 2, 1, "", "Thermal_setType_async"], [619, 2, 1, "", "UART_close"], [619, 2, 1, "", "UART_close_async"], [619, 2, 1, "", "UART_getPinMap"], [619, 2, 1, "", "UART_open"], [619, 2, 1, "", "UART_open_async"], [619, 2, 1, "", "UART_read"], [619, 2, 1, "", "UART_read_async"], [619, 2, 1, "", "UART_reset"], [619, 2, 1, "", "UART_reset_async"], [619, 2, 1, "", "UART_setBaudRate"], [619, 2, 1, "", "UART_setBaudRate_async"], [619, 2, 1, "", "UART_setDataBit"], [619, 2, 1, "", "UART_setDataBit_async"], [619, 2, 1, "", "UART_setNumStopBit"], [619, 2, 1, "", "UART_setNumStopBit_async"], [619, 2, 1, "", "UART_setParity"], [619, 2, 1, "", "UART_setParity_async"], [619, 2, 1, "", "UART_stopReading"], [619, 2, 1, "", "UART_stopReading_async"], [619, 2, 1, "", "UART_write"], [619, 2, 1, "", "UART_write_async"], [619, 2, 1, "", "close"], [619, 2, 1, "", "connect"], [619, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[620, 2, 1, "", "Counter_close"], [620, 2, 1, "", "Counter_close_async"], [620, 2, 1, "", "Counter_open"], [620, 2, 1, "", "Counter_open_async"], [620, 2, 1, "", "Counter_read"], [620, 2, 1, "", "Counter_read_async"], [620, 2, 1, "", "Counter_start"], [620, 2, 1, "", "Counter_start_async"], [620, 2, 1, "", "Counter_stop"], [620, 2, 1, "", "Counter_stop_async"], [620, 2, 1, "", "DIO_loadStartup"], [620, 2, 1, "", "DIO_loadStartup_async"], [620, 2, 1, "", "DIO_saveStartup"], [620, 2, 1, "", "DIO_saveStartup_async"], [620, 2, 1, "", "DIO_setPortDI"], [620, 2, 1, "", "DIO_setPortDI_async"], [620, 2, 1, "", "DIO_setPortDO"], [620, 2, 1, "", "DIO_setPortDO_async"], [620, 2, 1, "", "DIO_setPortIdle"], [620, 2, 1, "", "DIO_setPortIdle_async"], [620, 2, 1, "", "DI_closePins"], [620, 2, 1, "", "DI_closePins_async"], [620, 2, 1, "", "DI_closePort"], [620, 2, 1, "", "DI_closePort_async"], [620, 2, 1, "", "DI_getPinMap"], [620, 2, 1, "", "DI_openPins"], [620, 2, 1, "", "DI_openPins_async"], [620, 2, 1, "", "DI_openPort"], [620, 2, 1, "", "DI_openPort_async"], [620, 2, 1, "", "DI_readPins"], [620, 2, 1, "", "DI_readPins_async"], [620, 2, 1, "", "DI_readPort"], [620, 2, 1, "", "DI_readPort_async"], [620, 2, 1, "", "DO_closePins"], [620, 2, 1, "", "DO_closePins_async"], [620, 2, 1, "", "DO_closePort"], [620, 2, 1, "", "DO_closePort_async"], [620, 2, 1, "", "DO_getPinMap"], [620, 2, 1, "", "DO_openPins"], [620, 2, 1, "", "DO_openPins_async"], [620, 2, 1, "", "DO_openPort"], [620, 2, 1, "", "DO_openPort_async"], [620, 2, 1, "", "DO_togglePins"], [620, 2, 1, "", "DO_togglePins_async"], [620, 2, 1, "", "DO_togglePort"], [620, 2, 1, "", "DO_togglePort_async"], [620, 2, 1, "", "DO_writePins"], [620, 2, 1, "", "DO_writePins_async"], [620, 2, 1, "", "DO_writePort"], [620, 2, 1, "", "DO_writePort_async"], [620, 2, 1, "", "I2C_close"], [620, 2, 1, "", "I2C_close_async"], [620, 2, 1, "", "I2C_getPinMap"], [620, 2, 1, "", "I2C_open"], [620, 2, 1, "", "I2C_open_async"], [620, 2, 1, "", "I2C_read"], [620, 2, 1, "", "I2C_read_async"], [620, 2, 1, "", "I2C_reset"], [620, 2, 1, "", "I2C_reset_async"], [620, 2, 1, "", "I2C_setAddressSize"], [620, 2, 1, "", "I2C_setAddressSize_async"], [620, 2, 1, "", "I2C_setClockRate"], [620, 2, 1, "", "I2C_setClockRate_async"], [620, 2, 1, "", "I2C_write"], [620, 2, 1, "", "I2C_write_async"], [620, 2, 1, "", "Logger_openFile"], [620, 2, 1, "", "Logger_write2DList"], [620, 2, 1, "", "Logger_writeHeader"], [620, 2, 1, "", "Logger_writeList"], [620, 2, 1, "", "Logger_writeValue"], [620, 2, 1, "", "PWM_close"], [620, 2, 1, "", "PWM_close_async"], [620, 2, 1, "", "PWM_open"], [620, 2, 1, "", "PWM_open_async"], [620, 2, 1, "", "PWM_setDutyCycle"], [620, 2, 1, "", "PWM_setDutyCycle_async"], [620, 2, 1, "", "PWM_setFrequency"], [620, 2, 1, "", "PWM_setFrequency_async"], [620, 2, 1, "", "PWM_start"], [620, 2, 1, "", "PWM_start_async"], [620, 2, 1, "", "PWM_stop"], [620, 2, 1, "", "PWM_stop_async"], [620, 2, 1, "", "SPI_close"], [620, 2, 1, "", "SPI_close_async"], [620, 2, 1, "", "SPI_getPinMap"], [620, 2, 1, "", "SPI_open"], [620, 2, 1, "", "SPI_open_async"], [620, 2, 1, "", "SPI_read"], [620, 2, 1, "", "SPI_readAndWrite"], [620, 2, 1, "", "SPI_readAndWrite_async"], [620, 2, 1, "", "SPI_read_async"], [620, 2, 1, "", "SPI_reset"], [620, 2, 1, "", "SPI_reset_async"], [620, 2, 1, "", "SPI_setDataSize"], [620, 2, 1, "", "SPI_setDataSize_async"], [620, 2, 1, "", "SPI_setFirstBit"], [620, 2, 1, "", "SPI_setFirstBit_async"], [620, 2, 1, "", "SPI_setMode"], [620, 2, 1, "", "SPI_setMode_async"], [620, 2, 1, "", "SPI_setPrescaler"], [620, 2, 1, "", "SPI_setPrescaler_async"], [620, 2, 1, "", "SPI_write"], [620, 2, 1, "", "SPI_write_async"], [620, 2, 1, "", "Sys_getDriverInfo"], [620, 2, 1, "", "Sys_getDriverInfo_async"], [620, 2, 1, "", "Sys_getMode"], [620, 2, 1, "", "Sys_getMode_async"], [620, 2, 1, "", "Sys_getPinModeInPort"], [620, 2, 1, "", "Sys_getPinModeInPort_async"], [620, 2, 1, "", "Sys_getPythonVersion"], [620, 2, 1, "", "Sys_getPythonVersion_async"], [620, 2, 1, "", "Sys_getRTC"], [620, 2, 1, "", "Sys_getRTC_async"], [620, 2, 1, "", "Sys_getSerialNumber"], [620, 2, 1, "", "Sys_getSerialNumber_async"], [620, 2, 1, "", "Sys_reboot"], [620, 2, 1, "", "Sys_rebootOnBootloader"], [620, 2, 1, "", "Sys_rebootOnBootloader_async"], [620, 2, 1, "", "Sys_reboot_async"], [620, 2, 1, "", "Sys_setAIOMode"], [620, 2, 1, "", "Sys_setAIOMode_async"], [620, 2, 1, "", "Sys_setDIMode"], [620, 2, 1, "", "Sys_setDIMode_async"], [620, 2, 1, "", "Sys_setDIOMode"], [620, 2, 1, "", "Sys_setDIOMode_async"], [620, 2, 1, "", "Sys_setDOMode"], [620, 2, 1, "", "Sys_setDOMode_async"], [620, 2, 1, "", "Sys_setIdleMode"], [620, 2, 1, "", "Sys_setIdleMode_async"], [620, 2, 1, "", "Sys_setMotionMode"], [620, 2, 1, "", "Sys_setMotionMode_async"], [620, 2, 1, "", "Sys_setRTC"], [620, 2, 1, "", "Sys_setRTC_async"], [620, 2, 1, "", "Sys_setSwitchMode"], [620, 2, 1, "", "Sys_setSwitchMode_async"], [620, 2, 1, "", "Thermal_close"], [620, 2, 1, "", "Thermal_close_async"], [620, 2, 1, "", "Thermal_getPinMap"], [620, 2, 1, "", "Thermal_getStatus"], [620, 2, 1, "", "Thermal_getStatus_async"], [620, 2, 1, "", "Thermal_open"], [620, 2, 1, "", "Thermal_open_async"], [620, 2, 1, "", "Thermal_readSensor"], [620, 2, 1, "", "Thermal_readSensor_async"], [620, 2, 1, "", "Thermal_setOverSampling"], [620, 2, 1, "", "Thermal_setOverSampling_async"], [620, 2, 1, "", "Thermal_setType"], [620, 2, 1, "", "Thermal_setType_async"], [620, 2, 1, "", "UART_close"], [620, 2, 1, "", "UART_close_async"], [620, 2, 1, "", "UART_getPinMap"], [620, 2, 1, "", "UART_open"], [620, 2, 1, "", "UART_open_async"], [620, 2, 1, "", "UART_read"], [620, 2, 1, "", "UART_read_async"], [620, 2, 1, "", "UART_reset"], [620, 2, 1, "", "UART_reset_async"], [620, 2, 1, "", "UART_setBaudRate"], [620, 2, 1, "", "UART_setBaudRate_async"], [620, 2, 1, "", "UART_setDataBit"], [620, 2, 1, "", "UART_setDataBit_async"], [620, 2, 1, "", "UART_setNumStopBit"], [620, 2, 1, "", "UART_setNumStopBit_async"], [620, 2, 1, "", "UART_setParity"], [620, 2, 1, "", "UART_setParity_async"], [620, 2, 1, "", "UART_stopReading"], [620, 2, 1, "", "UART_stopReading_async"], [620, 2, 1, "", "UART_write"], [620, 2, 1, "", "UART_write_async"], [620, 2, 1, "", "close"], [620, 2, 1, "", "connect"], [620, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[621, 2, 1, "", "AHRS_close"], [621, 2, 1, "", "AHRS_close_async"], [621, 2, 1, "", "AHRS_open"], [621, 2, 1, "", "AHRS_open_async"], [621, 2, 1, "", "AHRS_readStreaming"], [621, 2, 1, "", "AHRS_readStreaming_async"], [621, 2, 1, "", "AHRS_reset"], [621, 2, 1, "", "AHRS_reset_async"], [621, 2, 1, "", "AHRS_setGeneral"], [621, 2, 1, "", "AHRS_setGeneral_async"], [621, 2, 1, "", "AHRS_start"], [621, 2, 1, "", "AHRS_start_async"], [621, 2, 1, "", "AHRS_stop"], [621, 2, 1, "", "AHRS_stop_async"], [621, 2, 1, "", "AI_close"], [621, 2, 1, "", "AI_close_async"], [621, 2, 1, "", "AI_enableCS"], [621, 2, 1, "", "AI_enableCS_async"], [621, 2, 1, "", "AI_enableChannel"], [621, 2, 1, "", "AI_enableChannel_async"], [621, 2, 1, "", "AI_getPort"], [621, 2, 1, "", "AI_open"], [621, 2, 1, "", "AI_open_async"], [621, 2, 1, "", "AI_readOnDemand"], [621, 2, 1, "", "AI_readOnDemand_async"], [621, 2, 1, "", "AI_readStreaming"], [621, 2, 1, "", "AI_readStreaming_async"], [621, 2, 1, "", "AI_setMode"], [621, 2, 1, "", "AI_setMode_async"], [621, 2, 1, "", "AI_setNumSamples"], [621, 2, 1, "", "AI_setNumSamples_async"], [621, 2, 1, "", "AI_setSamplingRate"], [621, 2, 1, "", "AI_setSamplingRate_async"], [621, 2, 1, "", "AI_start"], [621, 2, 1, "", "AI_start_async"], [621, 2, 1, "", "AI_stop"], [621, 2, 1, "", "AI_stop_async"], [621, 2, 1, "", "Logger_openFile"], [621, 2, 1, "", "Logger_write2DList"], [621, 2, 1, "", "Logger_writeHeader"], [621, 2, 1, "", "Logger_writeList"], [621, 2, 1, "", "Logger_writeValue"], [621, 2, 1, "", "Net_getGateway"], [621, 2, 1, "", "Net_getGateway_async"], [621, 2, 1, "", "Net_getIPAddrAndSubmask"], [621, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [621, 2, 1, "", "Net_getMACAddr"], [621, 2, 1, "", "Net_getMACAddr_async"], [621, 2, 1, "", "Net_setIPAddrAndSubmask"], [621, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [621, 2, 1, "", "Sys_getDriverInfo"], [621, 2, 1, "", "Sys_getDriverInfo_async"], [621, 2, 1, "", "Sys_getGateway"], [621, 2, 1, "", "Sys_getGateway_async"], [621, 2, 1, "", "Sys_getIPAddrAndSubmask"], [621, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [621, 2, 1, "", "Sys_getMACAddr"], [621, 2, 1, "", "Sys_getMACAddr_async"], [621, 2, 1, "", "Sys_getMode"], [621, 2, 1, "", "Sys_getMode_async"], [621, 2, 1, "", "Sys_getPinModeInPort"], [621, 2, 1, "", "Sys_getPinModeInPort_async"], [621, 2, 1, "", "Sys_getPythonVersion"], [621, 2, 1, "", "Sys_getPythonVersion_async"], [621, 2, 1, "", "Sys_getRTC"], [621, 2, 1, "", "Sys_getRTC_async"], [621, 2, 1, "", "Sys_getSerialNumber"], [621, 2, 1, "", "Sys_getSerialNumber_async"], [621, 2, 1, "", "Sys_reboot"], [621, 2, 1, "", "Sys_rebootOnBootloader"], [621, 2, 1, "", "Sys_rebootOnBootloader_async"], [621, 2, 1, "", "Sys_reboot_async"], [621, 2, 1, "", "Sys_setAIOMode"], [621, 2, 1, "", "Sys_setAIOMode_async"], [621, 2, 1, "", "Sys_setDIMode"], [621, 2, 1, "", "Sys_setDIMode_async"], [621, 2, 1, "", "Sys_setDIOMode"], [621, 2, 1, "", "Sys_setDIOMode_async"], [621, 2, 1, "", "Sys_setDOMode"], [621, 2, 1, "", "Sys_setDOMode_async"], [621, 2, 1, "", "Sys_setIPAddrAndSubmask"], [621, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [621, 2, 1, "", "Sys_setIdleMode"], [621, 2, 1, "", "Sys_setIdleMode_async"], [621, 2, 1, "", "Sys_setMotionMode"], [621, 2, 1, "", "Sys_setMotionMode_async"], [621, 2, 1, "", "Sys_setRTC"], [621, 2, 1, "", "Sys_setRTC_async"], [621, 2, 1, "", "Sys_setSwitchMode"], [621, 2, 1, "", "Sys_setSwitchMode_async"], [621, 2, 1, "", "Wifi_getChargeStatus"], [621, 2, 1, "", "Wifi_getChargeStatus_async"], [621, 2, 1, "", "Wifi_getPowerGoodStatus"], [621, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [621, 2, 1, "", "Wifi_getWifiBandWidth"], [621, 2, 1, "", "Wifi_getWifiBandWidth_async"], [621, 2, 1, "", "Wifi_getWifiConfiguration"], [621, 2, 1, "", "Wifi_getWifiConfiguration_async"], [621, 2, 1, "", "Wifi_readAcceleration"], [621, 2, 1, "", "Wifi_readAccleration_async"], [621, 2, 1, "", "Wifi_readBattery"], [621, 2, 1, "", "Wifi_readBattery_async"], [621, 2, 1, "", "Wifi_readRSSI"], [621, 2, 1, "", "Wifi_readRSSI_async"], [621, 2, 1, "", "Wifi_readThermo"], [621, 2, 1, "", "Wifi_readThermo_async"], [621, 2, 1, "", "Wifi_resetLED"], [621, 2, 1, "", "Wifi_resetLED_async"], [621, 2, 1, "", "Wifi_setAP"], [621, 2, 1, "", "Wifi_setAP_async"], [621, 2, 1, "", "Wifi_setBandwidth"], [621, 2, 1, "", "Wifi_setBandwidth_async"], [621, 2, 1, "", "Wifi_setBlueLED"], [621, 2, 1, "", "Wifi_setBlueLED_async"], [621, 2, 1, "", "Wifi_setGreenLED"], [621, 2, 1, "", "Wifi_setGreenLED_async"], [621, 2, 1, "", "Wifi_setRedLED"], [621, 2, 1, "", "Wifi_setRedLED_async"], [621, 2, 1, "", "close"], [621, 2, 1, "", "connect"], [621, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[622, 2, 1, "", "AI_close"], [622, 2, 1, "", "AI_close_async"], [622, 2, 1, "", "AI_enableCS"], [622, 2, 1, "", "AI_enableCS_async"], [622, 2, 1, "", "AI_enableChannel"], [622, 2, 1, "", "AI_enableChannel_async"], [622, 2, 1, "", "AI_getPort"], [622, 2, 1, "", "AI_open"], [622, 2, 1, "", "AI_open_async"], [622, 2, 1, "", "AI_readOnDemand"], [622, 2, 1, "", "AI_readOnDemand_async"], [622, 2, 1, "", "AI_readStreaming"], [622, 2, 1, "", "AI_readStreaming_async"], [622, 2, 1, "", "AI_setMode"], [622, 2, 1, "", "AI_setMode_async"], [622, 2, 1, "", "AI_setNumSamples"], [622, 2, 1, "", "AI_setNumSamples_async"], [622, 2, 1, "", "AI_setSamplingRate"], [622, 2, 1, "", "AI_setSamplingRate_async"], [622, 2, 1, "", "AI_start"], [622, 2, 1, "", "AI_start_async"], [622, 2, 1, "", "AI_stop"], [622, 2, 1, "", "AI_stop_async"], [622, 2, 1, "", "Logger_openFile"], [622, 2, 1, "", "Logger_write2DList"], [622, 2, 1, "", "Logger_writeHeader"], [622, 2, 1, "", "Logger_writeList"], [622, 2, 1, "", "Logger_writeValue"], [622, 2, 1, "", "Net_getGateway"], [622, 2, 1, "", "Net_getGateway_async"], [622, 2, 1, "", "Net_getIPAddrAndSubmask"], [622, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [622, 2, 1, "", "Net_getMACAddr"], [622, 2, 1, "", "Net_getMACAddr_async"], [622, 2, 1, "", "Net_setIPAddrAndSubmask"], [622, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [622, 2, 1, "", "Sys_getDriverInfo"], [622, 2, 1, "", "Sys_getDriverInfo_async"], [622, 2, 1, "", "Sys_getGateway"], [622, 2, 1, "", "Sys_getGateway_async"], [622, 2, 1, "", "Sys_getIPAddrAndSubmask"], [622, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [622, 2, 1, "", "Sys_getMACAddr"], [622, 2, 1, "", "Sys_getMACAddr_async"], [622, 2, 1, "", "Sys_getMode"], [622, 2, 1, "", "Sys_getMode_async"], [622, 2, 1, "", "Sys_getPinModeInPort"], [622, 2, 1, "", "Sys_getPinModeInPort_async"], [622, 2, 1, "", "Sys_getPythonVersion"], [622, 2, 1, "", "Sys_getPythonVersion_async"], [622, 2, 1, "", "Sys_getRTC"], [622, 2, 1, "", "Sys_getRTC_async"], [622, 2, 1, "", "Sys_getSerialNumber"], [622, 2, 1, "", "Sys_getSerialNumber_async"], [622, 2, 1, "", "Sys_reboot"], [622, 2, 1, "", "Sys_rebootOnBootloader"], [622, 2, 1, "", "Sys_rebootOnBootloader_async"], [622, 2, 1, "", "Sys_reboot_async"], [622, 2, 1, "", "Sys_setAIOMode"], [622, 2, 1, "", "Sys_setAIOMode_async"], [622, 2, 1, "", "Sys_setDIMode"], [622, 2, 1, "", "Sys_setDIMode_async"], [622, 2, 1, "", "Sys_setDIOMode"], [622, 2, 1, "", "Sys_setDIOMode_async"], [622, 2, 1, "", "Sys_setDOMode"], [622, 2, 1, "", "Sys_setDOMode_async"], [622, 2, 1, "", "Sys_setIPAddrAndSubmask"], [622, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [622, 2, 1, "", "Sys_setIdleMode"], [622, 2, 1, "", "Sys_setIdleMode_async"], [622, 2, 1, "", "Sys_setMotionMode"], [622, 2, 1, "", "Sys_setMotionMode_async"], [622, 2, 1, "", "Sys_setRTC"], [622, 2, 1, "", "Sys_setRTC_async"], [622, 2, 1, "", "Sys_setSwitchMode"], [622, 2, 1, "", "Sys_setSwitchMode_async"], [622, 2, 1, "", "Wifi_getChargeStatus"], [622, 2, 1, "", "Wifi_getChargeStatus_async"], [622, 2, 1, "", "Wifi_getPowerGoodStatus"], [622, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [622, 2, 1, "", "Wifi_getWifiBandWidth"], [622, 2, 1, "", "Wifi_getWifiBandWidth_async"], [622, 2, 1, "", "Wifi_getWifiConfiguration"], [622, 2, 1, "", "Wifi_getWifiConfiguration_async"], [622, 2, 1, "", "Wifi_readAcceleration"], [622, 2, 1, "", "Wifi_readAccleration_async"], [622, 2, 1, "", "Wifi_readBattery"], [622, 2, 1, "", "Wifi_readBattery_async"], [622, 2, 1, "", "Wifi_readRSSI"], [622, 2, 1, "", "Wifi_readRSSI_async"], [622, 2, 1, "", "Wifi_readThermo"], [622, 2, 1, "", "Wifi_readThermo_async"], [622, 2, 1, "", "Wifi_resetLED"], [622, 2, 1, "", "Wifi_resetLED_async"], [622, 2, 1, "", "Wifi_setAP"], [622, 2, 1, "", "Wifi_setAP_async"], [622, 2, 1, "", "Wifi_setBandwidth"], [622, 2, 1, "", "Wifi_setBandwidth_async"], [622, 2, 1, "", "Wifi_setBlueLED"], [622, 2, 1, "", "Wifi_setBlueLED_async"], [622, 2, 1, "", "Wifi_setGreenLED"], [622, 2, 1, "", "Wifi_setGreenLED_async"], [622, 2, 1, "", "Wifi_setRedLED"], [622, 2, 1, "", "Wifi_setRedLED_async"], [622, 2, 1, "", "close"], [622, 2, 1, "", "connect"], [622, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 602], "architectur": [0, 602], "instal": [0, 602], "upgrad": [0, 602], "quick": [0, 602], "start": [0, 602], "refer": [0, 602, 627], "licens": [0, 602], "find": [1, 3, 28, 29, 30, 331, 333, 354, 355, 356, 627], "all": [1, 90, 115, 119, 167, 171, 331, 396, 413, 417, 457, 461], "devic": [1, 331, 594, 595, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "drive": [2, 3, 4, 5, 6, 7, 332, 333, 334, 335, 336, 337], "1axi": [2, 15, 16, 17, 18, 19, 20, 21, 332, 341, 342, 343, 344, 345, 346, 347], "move": [2, 15, 16, 17, 18, 19, 20, 21, 24, 27, 332, 341, 342, 343, 344, 345, 346, 347, 350, 353], "limit": [3, 30, 333, 356], "posit": [4, 31, 33, 334, 357, 359], "blend": [4, 6, 7, 33, 36, 37, 334, 336, 337, 359, 362, 363], "servo": [5, 35, 335, 361], "veloc": [6, 7, 36, 336, 337, 362], "acceler": [7, 37, 337, 363], "system": [8, 9, 38, 39, 51, 52, 65, 66, 73, 74, 82, 83, 92, 93, 99, 100, 127, 128, 151, 152, 153, 182, 183, 184, 205, 206, 207, 226, 227, 228, 244, 245, 246, 263, 264, 265, 287, 288, 289, 307, 308, 309, 322, 323, 324, 338, 339, 364, 365, 373, 374, 383, 384, 387, 388, 392, 393, 398, 399, 401, 402, 425, 426, 445, 446, 447, 472, 473, 474, 491, 492, 493, 508, 509, 510, 522, 523, 524, 537, 538, 539, 557, 558, 559, 573, 574, 575, 584, 585, 586, 599], "get": [8, 10, 31, 38, 40, 51, 53, 65, 67, 73, 75, 82, 84, 92, 94, 99, 101, 127, 129, 151, 152, 154, 182, 183, 185, 205, 206, 208, 226, 227, 229, 244, 245, 247, 263, 264, 266, 287, 288, 290, 307, 308, 311, 322, 323, 326, 338, 340, 357, 364, 366, 373, 375, 383, 385, 387, 389, 392, 394, 398, 400, 401, 403, 425, 427, 445, 446, 448, 472, 473, 475, 491, 492, 494, 508, 509, 511, 522, 523, 525, 537, 538, 540, 557, 558, 560, 573, 574, 577, 584, 585, 588], "network": [8, 38, 51, 65, 73, 82, 92, 99, 127, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 574, 585, 594, 595], "info": [8, 38, 51, 65, 73, 82, 92, 99, 127, 151, 182, 205, 226, 244, 263, 287, 308, 323, 338, 364, 373, 383, 387, 392, 398, 401, 425, 445, 472, 491, 508, 522, 537, 557, 574, 585, 595], "hello": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "world": [9, 39, 52, 66, 74, 83, 93, 100, 128, 153, 184, 207, 228, 246, 265, 289, 309, 324, 339, 365, 374, 384, 388, 393, 399, 402, 426, 447, 474, 493, 510, 524, 539, 559, 575, 586], "set": [10, 40, 53, 67, 75, 81, 84, 94, 101, 129, 154, 185, 208, 229, 247, 266, 290, 310, 311, 325, 326, 340, 366, 375, 385, 389, 391, 394, 400, 403, 427, 448, 475, 494, 511, 525, 540, 560, 576, 577, 587, 588, 627], "rtc": [10, 40, 53, 67, 75, 84, 94, 101, 129, 154, 185, 208, 229, 247, 266, 290, 311, 326, 340, 366, 375, 385, 389, 394, 400, 403, 427, 448, 475, 494, 511, 525, 540, 560, 577, 588], "tutori": [11, 12, 13, 14, 41, 42, 43, 44, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 130, 131, 132, 133, 155, 156, 157, 158, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 312, 313, 314, 315, 327, 328, 329, 330], "multipl": [11, 12, 41, 42, 54, 55, 68, 69, 76, 77, 85, 86, 95, 96, 105, 106, 130, 131, 155, 156, 186, 187, 209, 210, 230, 231, 248, 249, 270, 271, 294, 295, 312, 313, 327, 328], "loop": [11, 12, 13, 14, 41, 42, 43, 44, 49, 54, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 85, 86, 87, 88, 95, 96, 97, 98, 105, 106, 107, 108, 113, 130, 131, 132, 133, 138, 155, 156, 157, 158, 165, 186, 187, 188, 189, 209, 210, 211, 212, 230, 231, 232, 233, 248, 249, 250, 251, 270, 271, 272, 273, 294, 295, 296, 297, 305, 312, 313, 314, 315, 320, 327, 328, 329, 330, 371, 411, 432, 455, 571, 582], "async": [11, 13, 24, 41, 43, 54, 56, 68, 70, 76, 78, 85, 87, 95, 97, 105, 107, 130, 132, 155, 157, 186, 188, 209, 211, 230, 232, 248, 250, 270, 272, 294, 296, 312, 314, 327, 329, 350, 600], "thread": [12, 14, 42, 44, 55, 57, 69, 71, 77, 79, 86, 88, 96, 98, 106, 108, 131, 133, 156, 158, 187, 189, 210, 212, 231, 233, 249, 251, 271, 273, 295, 297, 313, 315, 328, 330], "singl": [13, 14, 43, 44, 56, 57, 70, 71, 78, 79, 87, 88, 97, 98, 107, 108, 132, 133, 157, 158, 188, 189, 211, 212, 232, 233, 250, 251, 272, 273, 296, 297, 314, 315, 329, 330], "motion": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 627], "scurv": [16, 342], "alarm": [17, 343], "breakpoint": [18, 344], "captur": [19, 345, 627], "config": [20, 32, 34, 346, 358, 360], "file": [20, 32, 34, 346, 358, 360], "inposit": [21, 347], "2axi": [22, 23, 348, 349], "circular": [22, 348], "interpo": [22, 23, 25, 26, 348, 349, 351, 352], "linear": [23, 26, 349, 352], "3axi": [24, 25, 26, 27, 350, 351, 352, 353], "helic": [25, 351], "sync": [27, 353, 599, 601], "home": [28, 354], "index": [29, 355], "logic": [31, 357], "load": [32, 358], "save": [34, 360], "ai": [45, 46, 47, 48, 49, 50, 72, 109, 110, 111, 112, 113, 114, 117, 134, 135, 136, 137, 138, 139, 161, 162, 163, 164, 165, 166, 169, 301, 302, 303, 304, 305, 306, 316, 317, 318, 319, 320, 321, 367, 368, 369, 370, 371, 372, 386, 407, 408, 409, 410, 411, 412, 415, 428, 429, 430, 431, 432, 433, 451, 452, 453, 454, 455, 456, 459, 567, 568, 569, 570, 571, 572, 578, 579, 580, 581, 582, 583, 589, 599, 624, 627], "n": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578], "sampl": [45, 109, 134, 161, 301, 316, 367, 407, 428, 451, 567, 578, 624], "onc": [45, 50, 72, 109, 114, 134, 139, 161, 166, 301, 306, 316, 321, 367, 372, 386, 407, 412, 428, 433, 451, 456, 567, 572, 578, 583], "continu": [46, 47, 48, 110, 111, 112, 135, 136, 137, 162, 163, 164, 302, 303, 304, 317, 318, 319, 368, 369, 370, 408, 409, 410, 429, 430, 431, 452, 453, 454, 568, 569, 570, 579, 580, 581], "multi": [47, 111, 136, 163, 303, 318, 369, 409, 430, 453, 569, 580], "slot": [47, 111, 136, 163, 303, 318, 369, 409, 430, 453, 569, 580], "logger": [48, 103, 112, 137, 164, 268, 292, 304, 319, 370, 405, 410, 431, 454, 542, 562, 570, 581], "demand": [49, 50, 72, 113, 114, 138, 139, 165, 166, 305, 306, 320, 321, 371, 372, 386, 411, 412, 432, 433, 455, 456, 571, 572, 582, 583], "dio": [58, 59, 121, 122, 141, 142, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 419, 420, 435, 436, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548], "loopback": [58, 59, 115, 116, 121, 122, 141, 142, 167, 168, 174, 175, 195, 196, 216, 217, 237, 238, 253, 254, 277, 278, 376, 377, 413, 414, 419, 420, 435, 436, 457, 458, 464, 465, 481, 482, 498, 499, 515, 516, 527, 528, 547, 548], "pin": [58, 60, 62, 121, 123, 125, 141, 143, 145, 152, 174, 176, 178, 183, 195, 197, 199, 206, 216, 218, 220, 227, 237, 239, 241, 245, 253, 255, 257, 264, 277, 279, 281, 288, 376, 378, 380, 419, 421, 423, 435, 437, 439, 446, 464, 466, 468, 473, 481, 483, 485, 492, 498, 500, 502, 509, 515, 517, 519, 523, 527, 529, 531, 538, 547, 549, 551, 558], "port": [59, 61, 63, 122, 124, 126, 142, 144, 146, 175, 177, 179, 196, 198, 200, 217, 219, 221, 238, 240, 242, 254, 256, 258, 278, 280, 282, 377, 379, 381, 420, 422, 424, 436, 438, 440, 465, 467, 469, 482, 484, 486, 499, 501, 503, 516, 518, 520, 528, 530, 532, 548, 550, 552, 628], "do": [60, 61, 62, 63, 123, 124, 125, 126, 143, 144, 145, 146, 176, 177, 178, 179, 197, 198, 199, 200, 218, 219, 220, 221, 239, 240, 241, 242, 255, 256, 257, 258, 279, 280, 281, 282, 378, 379, 380, 381, 421, 422, 423, 424, 437, 438, 439, 440, 466, 467, 468, 469, 483, 484, 485, 486, 500, 501, 502, 503, 517, 518, 519, 520, 529, 530, 531, 532, 549, 550, 551, 552, 591, 599], "blinki": [60, 61, 123, 124, 143, 144, 176, 177, 197, 198, 218, 219, 239, 240, 255, 256, 279, 280, 378, 379, 421, 422, 437, 438, 466, 467, 483, 484, 500, 501, 517, 518, 529, 530, 549, 550], "write": [62, 63, 90, 91, 119, 120, 125, 126, 145, 146, 147, 149, 150, 160, 171, 172, 178, 179, 180, 191, 193, 199, 200, 201, 203, 204, 214, 220, 221, 222, 224, 225, 235, 241, 242, 257, 258, 259, 261, 262, 275, 281, 282, 283, 285, 286, 299, 380, 381, 396, 397, 417, 418, 423, 424, 439, 440, 441, 443, 444, 450, 461, 462, 468, 469, 470, 477, 479, 485, 486, 487, 489, 490, 496, 502, 503, 504, 506, 507, 513, 519, 520, 531, 532, 533, 535, 536, 545, 551, 552, 553, 555, 556, 565], "pwm": [64, 148, 181, 202, 223, 243, 260, 284, 382, 442, 471, 488, 505, 521, 534, 554], "gener": [64, 89, 118, 148, 170, 181, 202, 223, 243, 260, 284, 382, 395, 416, 442, 460, 471, 488, 505, 521, 534, 554], "relai": [80, 81, 390, 391], "read": [80, 102, 103, 104, 140, 147, 149, 159, 173, 180, 190, 192, 194, 201, 203, 213, 215, 222, 224, 234, 236, 252, 259, 261, 267, 268, 269, 274, 276, 283, 285, 291, 292, 293, 298, 300, 390, 404, 405, 406, 434, 441, 443, 449, 463, 470, 476, 478, 480, 487, 489, 495, 497, 504, 506, 512, 514, 526, 533, 535, 541, 542, 543, 544, 546, 553, 555, 561, 562, 563, 564, 566], "counter": [80, 140, 173, 194, 215, 236, 252, 276, 390, 434, 463, 480, 497, 514, 526, 546], "channel": [81, 90, 91, 102, 103, 104, 115, 116, 119, 120, 167, 168, 171, 172, 267, 268, 269, 291, 292, 293, 391, 396, 397, 404, 405, 406, 413, 414, 417, 418, 457, 458, 461, 462, 541, 542, 543, 561, 562, 563, 625, 627], "ao": [89, 90, 91, 117, 118, 119, 120, 169, 170, 171, 172, 395, 396, 397, 415, 416, 417, 418, 459, 460, 461, 462, 590, 599, 627], "waveform": [89, 118, 170, 395, 416, 460], "one": [91, 116, 120, 168, 172, 397, 414, 418, 458, 462], "tc": [102, 103, 104, 291, 292, 293, 404, 405, 406, 561, 562, 563, 597, 599], "data": [102, 103, 267, 268, 291, 292, 404, 405, 541, 542, 561, 562, 627], "statu": [104, 269, 293, 307, 310, 322, 325, 406, 543, 563, 573, 576, 584, 587], "aio": [115, 116, 167, 168, 413, 414, 457, 458], "output": [117, 169, 415, 459, 627], "while": [117, 169, 415, 459], "stream": [117, 169, 415, 459], "i2c": [147, 180, 201, 222, 259, 283, 441, 470, 487, 504, 533, 553, 592, 599, 627], "spi": [149, 150, 203, 204, 224, 225, 261, 262, 285, 286, 443, 444, 489, 490, 506, 507, 535, 536, 555, 556, 593, 599, 627], "usb": [151, 182, 205, 226, 244, 263, 287, 445, 472, 491, 508, 522, 537, 557, 600, 601, 603, 614, 615, 616, 617, 618, 619, 620], "mode": [152, 183, 206, 227, 245, 264, 288, 446, 473, 492, 509, 523, 538, 558, 627], "uart": [159, 160, 190, 191, 213, 214, 234, 235, 274, 275, 298, 299, 449, 450, 476, 477, 495, 496, 512, 513, 544, 545, 564, 565, 598, 599, 627], "can": [192, 193, 478, 479, 627], "rtd": [267, 268, 269, 541, 542, 543, 596, 599], "ahr": [300, 566], "wifi": [307, 322, 573, 584, 600, 601, 603, 621, 622], "daq": [307, 322, 573, 584, 600, 601, 614, 615, 616, 617, 618, 619, 620, 621, 622], "led": [310, 325, 576, 587], "test": [589, 590, 591, 592, 593, 596, 597, 598], "panel": [589, 590, 591, 592, 593, 596, 597, 598], "finder": [594, 600, 601, 604], "center": 595, "exampl": [599, 600, 601], "code": [599, 600, 601, 626], "gui": 599, "temperatur": 599, "consol": [600, 601], "stem": [600, 601, 613], "edriv": [600, 601, 605], "st": [600, 601, 605], "emot": [600, 601, 606], "ethan": [600, 601, 607, 608, 609, 610, 611, 612], "A": [600, 601, 607, 621, 622], "d": [600, 601, 608, 617, 618], "i": [600, 601, 609, 625, 628], "l": [600, 601, 610], "o": [600, 601, 611, 625, 628], "t": [600, 601, 612], "f1": [600, 601, 614, 615, 616, 617, 618, 619, 620], "ad": [600, 601, 614], "aod": [600, 601, 615], "cd": [600, 601, 616], "snk": [600, 601, 618], "rd": [600, 601, 619], "td": [600, 601, 620], "e3": [600, 601, 621], "f4": [600, 601, 622], "product": [603, 623], "usag": 603, "util": 603, "ethernet": 603, "api": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "function": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 628], "descript": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "pinout": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "featur": 623, "max": 624, "rate": 624, "tabl": [624, 625, 626, 627, 628], "error": 626, "form": 627, "speed": 627, "type": 627, "address": 627, "direct": 627, "enabl": 627, "oper": 627, "polar": 627, "search": 627, "stepper": 627, "stop": 627, "clock": 627, "size": 627, "endian": 627, "thermal": 627, "oversampl": 627, "pariti": 627, "bit": 627}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Overview": [[0, "overview"], [602, "overview"]], "Architecture": [[0, "architecture"], [602, "architecture"]], "Install and Upgrade": [[0, "install-and-upgrade"], [602, "install-and-upgrade"]], "Quick Start": [[0, "quick-start"], [602, "quick-start"]], "References": [[0, "references"], [602, "references"]], "License": [[0, "license"], [602, "license"]], "Find all devices": [[1, "find-all-devices"], [331, "find-all-devices"]], "Drive 1axis move": [[2, "drive-1axis-move"], [332, "drive-1axis-move"]], "Drive find limit": [[3, "drive-find-limit"], [333, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [334, "drive-position-blending"]], "Drive servo on": [[5, "drive-servo-on"], [335, "drive-servo-on"]], "Drive velocity blending": [[6, "drive-velocity-blending"], [336, "drive-velocity-blending"]], "Drive velocity blending acceleration": [[7, "drive-velocity-blending-acceleration"], [337, "drive-velocity-blending-acceleration"]], "System get network info": [[8, "system-get-network-info"], [38, "system-get-network-info"], [51, "system-get-network-info"], [65, "system-get-network-info"], [73, "system-get-network-info"], [82, "system-get-network-info"], [92, "system-get-network-info"], [99, "system-get-network-info"], [127, "system-get-network-info"], [308, "system-get-network-info"], [323, "system-get-network-info"], [338, "system-get-network-info"], [364, "system-get-network-info"], [373, "system-get-network-info"], [383, "system-get-network-info"], [387, "system-get-network-info"], [392, "system-get-network-info"], [398, "system-get-network-info"], [401, "system-get-network-info"], [425, "system-get-network-info"], [574, "system-get-network-info"], [585, "system-get-network-info"]], "System hello world": [[9, "system-hello-world"], [39, "system-hello-world"], [52, "system-hello-world"], [66, "system-hello-world"], [74, "system-hello-world"], [83, "system-hello-world"], [93, "system-hello-world"], [100, "system-hello-world"], [128, "system-hello-world"], [153, "system-hello-world"], [184, "system-hello-world"], [207, "system-hello-world"], [228, "system-hello-world"], [246, "system-hello-world"], [265, "system-hello-world"], [289, "system-hello-world"], [309, "system-hello-world"], [324, "system-hello-world"], [339, "system-hello-world"], [365, "system-hello-world"], [374, "system-hello-world"], [384, "system-hello-world"], [388, "system-hello-world"], [393, "system-hello-world"], [399, "system-hello-world"], [402, "system-hello-world"], [426, "system-hello-world"], [447, "system-hello-world"], [474, "system-hello-world"], [493, "system-hello-world"], [510, "system-hello-world"], [524, "system-hello-world"], [539, "system-hello-world"], [559, "system-hello-world"], [575, "system-hello-world"], [586, "system-hello-world"]], "Set and get RTC": [[10, "set-and-get-rtc"], [40, "set-and-get-rtc"], [53, "set-and-get-rtc"], [67, "set-and-get-rtc"], [75, "set-and-get-rtc"], [84, "set-and-get-rtc"], [94, "set-and-get-rtc"], [101, "set-and-get-rtc"], [129, "set-and-get-rtc"], [154, "set-and-get-rtc"], [185, "set-and-get-rtc"], [208, "set-and-get-rtc"], [229, "set-and-get-rtc"], [247, "set-and-get-rtc"], [266, "set-and-get-rtc"], [290, "set-and-get-rtc"], [311, "set-and-get-rtc"], [326, "set-and-get-rtc"], [340, "set-and-get-rtc"], [366, "set-and-get-rtc"], [375, "set-and-get-rtc"], [385, "set-and-get-rtc"], [389, "set-and-get-rtc"], [394, "set-and-get-rtc"], [400, "set-and-get-rtc"], [403, "set-and-get-rtc"], [427, "set-and-get-rtc"], [448, "set-and-get-rtc"], [475, "set-and-get-rtc"], [494, "set-and-get-rtc"], [511, "set-and-get-rtc"], [525, "set-and-get-rtc"], [540, "set-and-get-rtc"], [560, "set-and-get-rtc"], [577, "set-and-get-rtc"], [588, "set-and-get-rtc"]], "Tutorial multiple loops async": [[11, "tutorial-multiple-loops-async"], [41, "tutorial-multiple-loops-async"], [54, "tutorial-multiple-loops-async"], [68, "tutorial-multiple-loops-async"], [76, "tutorial-multiple-loops-async"], [85, "tutorial-multiple-loops-async"], [95, "tutorial-multiple-loops-async"], [105, "tutorial-multiple-loops-async"], [130, "tutorial-multiple-loops-async"], [155, "tutorial-multiple-loops-async"], [186, "tutorial-multiple-loops-async"], [209, "tutorial-multiple-loops-async"], [230, "tutorial-multiple-loops-async"], [248, "tutorial-multiple-loops-async"], [270, "tutorial-multiple-loops-async"], [294, "tutorial-multiple-loops-async"], [312, "tutorial-multiple-loops-async"], [327, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[12, "tutorial-multiple-loops-thread"], [42, "tutorial-multiple-loops-thread"], [55, "tutorial-multiple-loops-thread"], [69, "tutorial-multiple-loops-thread"], [77, "tutorial-multiple-loops-thread"], [86, "tutorial-multiple-loops-thread"], [96, "tutorial-multiple-loops-thread"], [106, "tutorial-multiple-loops-thread"], [131, "tutorial-multiple-loops-thread"], [156, "tutorial-multiple-loops-thread"], [187, "tutorial-multiple-loops-thread"], [210, "tutorial-multiple-loops-thread"], [231, "tutorial-multiple-loops-thread"], [249, "tutorial-multiple-loops-thread"], [271, "tutorial-multiple-loops-thread"], [295, "tutorial-multiple-loops-thread"], [313, "tutorial-multiple-loops-thread"], [328, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[13, "tutorial-single-loop-async"], [43, "tutorial-single-loop-async"], [56, "tutorial-single-loop-async"], [70, "tutorial-single-loop-async"], [78, "tutorial-single-loop-async"], [87, "tutorial-single-loop-async"], [97, "tutorial-single-loop-async"], [107, "tutorial-single-loop-async"], [132, "tutorial-single-loop-async"], [157, "tutorial-single-loop-async"], [188, "tutorial-single-loop-async"], [211, "tutorial-single-loop-async"], [232, "tutorial-single-loop-async"], [250, "tutorial-single-loop-async"], [272, "tutorial-single-loop-async"], [296, "tutorial-single-loop-async"], [314, "tutorial-single-loop-async"], [329, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[14, "tutorial-single-loop-thread"], [44, "tutorial-single-loop-thread"], [57, "tutorial-single-loop-thread"], [71, "tutorial-single-loop-thread"], [79, "tutorial-single-loop-thread"], [88, "tutorial-single-loop-thread"], [98, "tutorial-single-loop-thread"], [108, "tutorial-single-loop-thread"], [133, "tutorial-single-loop-thread"], [158, "tutorial-single-loop-thread"], [189, "tutorial-single-loop-thread"], [212, "tutorial-single-loop-thread"], [233, "tutorial-single-loop-thread"], [251, "tutorial-single-loop-thread"], [273, "tutorial-single-loop-thread"], [297, "tutorial-single-loop-thread"], [315, "tutorial-single-loop-thread"], [330, "tutorial-single-loop-thread"]], "Motion 1axis move": [[15, "motion-1axis-move"], [341, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[16, "motion-1axis-move-with-scurve"], [342, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[17, "motion-1axis-move-with-alarm-in"], [343, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[18, "motion-1axis-move-with-breakpoint"], [344, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[19, "motion-1axis-move-with-capture"], [345, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[20, "motion-1axis-move-with-config-file"], [346, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[21, "motion-1axis-move-with-inposition"], [347, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[22, "motion-2axis-circular-interpo"], [348, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[23, "motion-2axis-linear-interpo"], [349, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[24, "motion-3axis-async-move"], [350, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[25, "motion-3axis-helical-interpo"], [351, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[26, "motion-3axis-linear-interpo"], [352, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[27, "motion-3axis-sync-move"], [353, "motion-3axis-sync-move"]], "Motion find home": [[28, "motion-find-home"], [354, "motion-find-home"]], "Motion find index": [[29, "motion-find-index"], [355, "motion-find-index"]], "Motion find limit": [[30, "motion-find-limit"], [356, "motion-find-limit"]], "Motion get logical position": [[31, "motion-get-logical-position"], [357, "motion-get-logical-position"]], "Motion load config file": [[32, "motion-load-config-file"], [358, "motion-load-config-file"]], "Motion position blending": [[33, "motion-position-blending"], [359, "motion-position-blending"]], "Motion save config file": [[34, "motion-save-config-file"], [360, "motion-save-config-file"]], "Motion servo on": [[35, "motion-servo-on"], [361, "motion-servo-on"]], "Motion velocity blending": [[36, "motion-velocity-blending"], [362, "motion-velocity-blending"]], "Motion acceleration blending": [[37, "motion-acceleration-blending"], [363, "motion-acceleration-blending"]], "AI N samples once": [[45, "ai-n-samples-once"], [109, "ai-n-samples-once"], [134, "ai-n-samples-once"], [161, "ai-n-samples-once"], [301, "ai-n-samples-once"], [316, "ai-n-samples-once"], [367, "ai-n-samples-once"], [407, "ai-n-samples-once"], [428, "ai-n-samples-once"], [451, "ai-n-samples-once"], [567, "ai-n-samples-once"], [578, "ai-n-samples-once"]], "AI continuous": [[46, "ai-continuous"], [110, "ai-continuous"], [135, "ai-continuous"], [162, "ai-continuous"], [302, "ai-continuous"], [317, "ai-continuous"], [368, "ai-continuous"], [408, "ai-continuous"], [429, "ai-continuous"], [452, "ai-continuous"], [568, "ai-continuous"], [579, "ai-continuous"]], "AI continuous multi slot": [[47, "ai-continuous-multi-slot"], [111, "ai-continuous-multi-slot"], [136, "ai-continuous-multi-slot"], [163, "ai-continuous-multi-slot"], [303, "ai-continuous-multi-slot"], [318, "ai-continuous-multi-slot"], [369, "ai-continuous-multi-slot"], [409, "ai-continuous-multi-slot"], [430, "ai-continuous-multi-slot"], [453, "ai-continuous-multi-slot"], [569, "ai-continuous-multi-slot"], [580, "ai-continuous-multi-slot"]], "AI continuous with logger": [[48, "ai-continuous-with-logger"], [112, "ai-continuous-with-logger"], [137, "ai-continuous-with-logger"], [164, "ai-continuous-with-logger"], [304, "ai-continuous-with-logger"], [319, "ai-continuous-with-logger"], [370, "ai-continuous-with-logger"], [410, "ai-continuous-with-logger"], [431, "ai-continuous-with-logger"], [454, "ai-continuous-with-logger"], [570, "ai-continuous-with-logger"], [581, "ai-continuous-with-logger"]], "AI on demand in loop": [[49, "ai-on-demand-in-loop"], [113, "ai-on-demand-in-loop"], [138, "ai-on-demand-in-loop"], [165, "ai-on-demand-in-loop"], [305, "ai-on-demand-in-loop"], [320, "ai-on-demand-in-loop"], [371, "ai-on-demand-in-loop"], [411, "ai-on-demand-in-loop"], [432, "ai-on-demand-in-loop"], [455, "ai-on-demand-in-loop"], [571, "ai-on-demand-in-loop"], [582, "ai-on-demand-in-loop"]], "AI on demand once": [[50, "ai-on-demand-once"], [72, "ai-on-demand-once"], [114, "ai-on-demand-once"], [139, "ai-on-demand-once"], [166, "ai-on-demand-once"], [306, "ai-on-demand-once"], [321, "ai-on-demand-once"], [372, "ai-on-demand-once"], [386, "ai-on-demand-once"], [412, "ai-on-demand-once"], [433, "ai-on-demand-once"], [456, "ai-on-demand-once"], [572, "ai-on-demand-once"], [583, "ai-on-demand-once"]], "DIO loopback pins": [[58, "dio-loopback-pins"], [121, "dio-loopback-pins"], [141, "dio-loopback-pins"], [174, "dio-loopback-pins"], [195, "dio-loopback-pins"], [216, "dio-loopback-pins"], [237, "dio-loopback-pins"], [253, "dio-loopback-pins"], [277, "dio-loopback-pins"], [376, "dio-loopback-pins"], [419, "dio-loopback-pins"], [435, "dio-loopback-pins"], [464, "dio-loopback-pins"], [481, "dio-loopback-pins"], [498, "dio-loopback-pins"], [515, "dio-loopback-pins"], [527, "dio-loopback-pins"], [547, "dio-loopback-pins"]], "DIO loopback port": [[59, "dio-loopback-port"], [122, "dio-loopback-port"], [142, "dio-loopback-port"], [175, "dio-loopback-port"], [196, "dio-loopback-port"], [217, "dio-loopback-port"], [238, "dio-loopback-port"], [254, "dio-loopback-port"], [278, "dio-loopback-port"], [377, "dio-loopback-port"], [420, "dio-loopback-port"], [436, "dio-loopback-port"], [465, "dio-loopback-port"], [482, "dio-loopback-port"], [499, "dio-loopback-port"], [516, "dio-loopback-port"], [528, "dio-loopback-port"], [548, "dio-loopback-port"]], "DO blinky pins": [[60, "do-blinky-pins"], [123, "do-blinky-pins"], [143, "do-blinky-pins"], [176, "do-blinky-pins"], [197, "do-blinky-pins"], [218, "do-blinky-pins"], [239, "do-blinky-pins"], [255, "do-blinky-pins"], [279, "do-blinky-pins"], [378, "do-blinky-pins"], [421, "do-blinky-pins"], [437, "do-blinky-pins"], [466, "do-blinky-pins"], [483, "do-blinky-pins"], [500, "do-blinky-pins"], [517, "do-blinky-pins"], [529, "do-blinky-pins"], [549, "do-blinky-pins"]], "DO blinky port": [[61, "do-blinky-port"], [124, "do-blinky-port"], [144, "do-blinky-port"], [177, "do-blinky-port"], [198, "do-blinky-port"], [219, "do-blinky-port"], [240, "do-blinky-port"], [256, "do-blinky-port"], [280, "do-blinky-port"], [379, "do-blinky-port"], [422, "do-blinky-port"], [438, "do-blinky-port"], [467, "do-blinky-port"], [484, "do-blinky-port"], [501, "do-blinky-port"], [518, "do-blinky-port"], [530, "do-blinky-port"], [550, "do-blinky-port"]], "DO write pins": [[62, "do-write-pins"], [125, "do-write-pins"], [145, "do-write-pins"], [178, "do-write-pins"], [199, "do-write-pins"], [220, "do-write-pins"], [241, "do-write-pins"], [257, "do-write-pins"], [281, "do-write-pins"], [380, "do-write-pins"], [423, "do-write-pins"], [439, "do-write-pins"], [468, "do-write-pins"], [485, "do-write-pins"], [502, "do-write-pins"], [519, "do-write-pins"], [531, "do-write-pins"], [551, "do-write-pins"]], "DO write port": [[63, "do-write-port"], [126, "do-write-port"], [146, "do-write-port"], [179, "do-write-port"], [200, "do-write-port"], [221, "do-write-port"], [242, "do-write-port"], [258, "do-write-port"], [282, "do-write-port"], [381, "do-write-port"], [424, "do-write-port"], [440, "do-write-port"], [469, "do-write-port"], [486, "do-write-port"], [503, "do-write-port"], [520, "do-write-port"], [532, "do-write-port"], [552, "do-write-port"]], "PWM generate": [[64, "pwm-generate"], [148, "pwm-generate"], [181, "pwm-generate"], [202, "pwm-generate"], [223, "pwm-generate"], [243, "pwm-generate"], [260, "pwm-generate"], [284, "pwm-generate"], [382, "pwm-generate"], [442, "pwm-generate"], [471, "pwm-generate"], [488, "pwm-generate"], [505, "pwm-generate"], [521, "pwm-generate"], [534, "pwm-generate"], [554, "pwm-generate"]], "Relay read counters": [[80, "relay-read-counters"], [390, "relay-read-counters"]], "Relay set channel": [[81, "relay-set-channel"], [391, "relay-set-channel"]], "AO waveform generation": [[89, "ao-waveform-generation"], [118, "ao-waveform-generation"], [170, "ao-waveform-generation"], [395, "ao-waveform-generation"], [416, "ao-waveform-generation"], [460, "ao-waveform-generation"]], "AO write all channels": [[90, "ao-write-all-channels"], [119, "ao-write-all-channels"], [171, "ao-write-all-channels"], [396, "ao-write-all-channels"], [417, "ao-write-all-channels"], [461, "ao-write-all-channels"]], "AO write one channel": [[91, "ao-write-one-channel"], [120, "ao-write-one-channel"], [172, "ao-write-one-channel"], [397, "ao-write-one-channel"], [418, "ao-write-one-channel"], [462, "ao-write-one-channel"]], "TC read channel data": [[102, "tc-read-channel-data"], [291, "tc-read-channel-data"], [404, "tc-read-channel-data"], [561, "tc-read-channel-data"]], "TC read channel data with logger": [[103, "tc-read-channel-data-with-logger"], [292, "tc-read-channel-data-with-logger"], [405, "tc-read-channel-data-with-logger"], [562, "tc-read-channel-data-with-logger"]], "TC read channel status": [[104, "tc-read-channel-status"], [293, "tc-read-channel-status"], [406, "tc-read-channel-status"], [563, "tc-read-channel-status"]], "AIO all channels loopback": [[115, "aio-all-channels-loopback"], [167, "aio-all-channels-loopback"], [413, "aio-all-channels-loopback"], [457, "aio-all-channels-loopback"]], "AIO one channel loopback": [[116, "aio-one-channel-loopback"], [168, "aio-one-channel-loopback"], [414, "aio-one-channel-loopback"], [458, "aio-one-channel-loopback"]], "AO output while AI streaming": [[117, "ao-output-while-ai-streaming"], [169, "ao-output-while-ai-streaming"], [415, "ao-output-while-ai-streaming"], [459, "ao-output-while-ai-streaming"]], "Counter read": [[140, "counter-read"], [173, "counter-read"], [194, "counter-read"], [215, "counter-read"], [236, "counter-read"], [252, "counter-read"], [276, "counter-read"], [434, "counter-read"], [463, "counter-read"], [480, "counter-read"], [497, "counter-read"], [514, "counter-read"], [526, "counter-read"], [546, "counter-read"]], "I2C write and read": [[147, "i2c-write-and-read"], [180, "i2c-write-and-read"], [201, "i2c-write-and-read"], [222, "i2c-write-and-read"], [259, "i2c-write-and-read"], [283, "i2c-write-and-read"], [441, "i2c-write-and-read"], [470, "i2c-write-and-read"], [487, "i2c-write-and-read"], [504, "i2c-write-and-read"], [533, "i2c-write-and-read"], [553, "i2c-write-and-read"]], "SPI read and write": [[149, "spi-read-and-write"], [203, "spi-read-and-write"], [224, "spi-read-and-write"], [261, "spi-read-and-write"], [285, "spi-read-and-write"], [443, "spi-read-and-write"], [489, "spi-read-and-write"], [506, "spi-read-and-write"], [535, "spi-read-and-write"], [555, "spi-read-and-write"]], "SPI write": [[150, "spi-write"], [204, "spi-write"], [225, "spi-write"], [262, "spi-write"], [286, "spi-write"], [444, "spi-write"], [490, "spi-write"], [507, "spi-write"], [536, "spi-write"], [556, "spi-write"]], "System get USB info": [[151, "system-get-usb-info"], [182, "system-get-usb-info"], [205, "system-get-usb-info"], [226, "system-get-usb-info"], [244, "system-get-usb-info"], [263, "system-get-usb-info"], [287, "system-get-usb-info"], [445, "system-get-usb-info"], [472, "system-get-usb-info"], [491, "system-get-usb-info"], [508, "system-get-usb-info"], [522, "system-get-usb-info"], [537, "system-get-usb-info"], [557, "system-get-usb-info"]], "System get pin mode": [[152, "system-get-pin-mode"], [183, "system-get-pin-mode"], [206, "system-get-pin-mode"], [227, "system-get-pin-mode"], [245, "system-get-pin-mode"], [264, "system-get-pin-mode"], [288, "system-get-pin-mode"], [446, "system-get-pin-mode"], [473, "system-get-pin-mode"], [492, "system-get-pin-mode"], [509, "system-get-pin-mode"], [523, "system-get-pin-mode"], [538, "system-get-pin-mode"], [558, "system-get-pin-mode"]], "UART read": [[159, "uart-read"], [190, "uart-read"], [213, "uart-read"], [234, "uart-read"], [274, "uart-read"], [298, "uart-read"], [449, "uart-read"], [476, "uart-read"], [495, "uart-read"], [512, "uart-read"], [544, "uart-read"], [564, "uart-read"]], "UART write": [[160, "uart-write"], [191, "uart-write"], [214, "uart-write"], [235, "uart-write"], [275, "uart-write"], [299, "uart-write"], [450, "uart-write"], [477, "uart-write"], [496, "uart-write"], [513, "uart-write"], [545, "uart-write"], [565, "uart-write"]], "CAN read": [[192, "can-read"], [478, "can-read"]], "CAN write": [[193, "can-write"], [479, "can-write"]], "RTD read channel data": [[267, "rtd-read-channel-data"], [541, "rtd-read-channel-data"]], "RTD read channel data with logger": [[268, "rtd-read-channel-data-with-logger"], [542, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[269, "rtd-read-channel-status"], [543, "rtd-read-channel-status"]], "AHRS read": [[300, "ahrs-read"], [566, "ahrs-read"]], "System get Wifi DAQ status": [[307, "system-get-wifi-daq-status"], [322, "system-get-wifi-daq-status"], [573, "system-get-wifi-daq-status"], [584, "system-get-wifi-daq-status"]], "Set LED status": [[310, "set-led-status"], [325, "set-led-status"], [576, "set-led-status"], [587, "set-led-status"]], "AI test panel": [[589, "ai-test-panel"]], "AO test panel": [[590, "ao-test-panel"]], "DO test panel": [[591, "do-test-panel"]], "I2C test panel": [[592, "i2c-test-panel"]], "SPI test panel": [[593, "spi-test-panel"]], "Network device finder": [[594, "network-device-finder"]], "Device network info center": [[595, "device-network-info-center"]], "RTD test panel": [[596, "rtd-test-panel"]], "TC test panel": [[597, "tc-test-panel"]], "UART test panel": [[598, "uart-test-panel"]], "Example Codes - GUI (sync)": [[599, "example-codes-gui-sync"]], "AI": [[599, "ai"]], "AO": [[599, "ao"]], "DO": [[599, "do"]], "I2C": [[599, "i2c"]], "SPI": [[599, "spi"]], "System": [[599, "system"]], "Temperature-RTD": [[599, "temperature-rtd"]], "Temperature-TC": [[599, "temperature-tc"]], "UART": [[599, "uart"]], "Example Codes - Console (async)": [[600, "example-codes-console-async"]], "Device finder": [[600, "device-finder"], [601, "device-finder"], [604, "device-finder"]], "STEM": [[600, "stem"], [601, "stem"], [613, "stem"]], "EDrive-ST": [[600, "edrive-st"], [601, "edrive-st"], [605, "edrive-st"]], "EMotion": [[600, "emotion"], [601, "emotion"], [606, "emotion"]], "Ethan-A": [[600, "ethan-a"], [601, "ethan-a"], [607, "ethan-a"]], "Ethan-D": [[600, "ethan-d"], [601, "ethan-d"], [608, "ethan-d"]], "Ethan-I": [[600, "ethan-i"], [601, "ethan-i"], [609, "ethan-i"]], "Ethan-L": [[600, "ethan-l"], [601, "ethan-l"], [610, "ethan-l"]], "Ethan-O": [[600, "ethan-o"], [601, "ethan-o"], [611, "ethan-o"]], "Ethan-T": [[600, "ethan-t"], [601, "ethan-t"], [612, "ethan-t"]], "USB-DAQ-F1-AD": [[600, "usb-daq-f1-ad"], [601, "usb-daq-f1-ad"], [614, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[600, "usb-daq-f1-aod"], [601, "usb-daq-f1-aod"], [615, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[600, "usb-daq-f1-cd"], [601, "usb-daq-f1-cd"], [616, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[600, "usb-daq-f1-d"], [601, "usb-daq-f1-d"], [617, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[600, "usb-daq-f1-d-snk"], [601, "usb-daq-f1-d-snk"], [618, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[600, "usb-daq-f1-rd"], [601, "usb-daq-f1-rd"], [619, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[600, "usb-daq-f1-td"], [601, "usb-daq-f1-td"], [620, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[600, "wifi-daq-e3-a"], [601, "wifi-daq-e3-a"], [621, "wifi-daq-e3-a"]], "Wifi-DAQ-F4-A": [[600, "wifi-daq-f4-a"], [601, "wifi-daq-f4-a"], [622, "wifi-daq-f4-a"]], "Example Codes - Console (sync)": [[601, "example-codes-console-sync"]], "Products Usage": [[603, "products-usage"]], "Utilities": [[603, "utilities"]], "Wifi devices": [[603, "wifi-devices"]], "Ethernet devices": [[603, "ethernet-devices"]], "USB devices": [[603, "usb-devices"]], "API function description": [[604, "api-function-description"], [605, "api-function-description"], [606, "api-function-description"], [607, "api-function-description"], [608, "api-function-description"], [609, "api-function-description"], [610, "api-function-description"], [611, "api-function-description"], [612, "api-function-description"], [613, "api-function-description"], [614, "api-function-description"], [615, "api-function-description"], [616, "api-function-description"], [617, "api-function-description"], [618, "api-function-description"], [619, "api-function-description"], [620, "api-function-description"], [621, "api-function-description"], [622, "api-function-description"]], "Device pinout": [[605, "device-pinout"], [606, "device-pinout"], [607, "device-pinout"], [608, "device-pinout"], [609, "device-pinout"], [610, "device-pinout"], [611, "device-pinout"], [612, "device-pinout"], [613, "device-pinout"], [614, "device-pinout"], [615, "device-pinout"], [616, "device-pinout"], [617, "device-pinout"], [618, "device-pinout"], [619, "device-pinout"], [620, "device-pinout"], [621, "device-pinout"], [622, "device-pinout"]], "Products Feature": [[623, "products-feature"]], "AI Max Sampling Rate Table": [[624, "ai-max-sampling-rate-table"]], "I/O Channel Function Table": [[625, "i-o-channel-function-table"]], "Error Code Table": [[626, "error-code-table"]], "Setting Table": [[627, "setting-table"]], "AI Mode": [[627, "ai-mode"]], "AO Form": [[627, "ao-form"]], "AO Mode": [[627, "ao-mode"]], "CAN Speed": [[627, "can-speed"]], "CAN Type": [[627, "can-type"]], "I2C Address": [[627, "i2c-address"]], "I2C Speed": [[627, "i2c-speed"]], "Motion Capture Mode": [[627, "motion-capture-mode"]], "Motion Capture Type": [[627, "motion-capture-type"]], "Motion Direction": [[627, "motion-direction"]], "Motion Enable": [[627, "motion-enable"]], "Motion Find Reference Type": [[627, "motion-find-reference-type"]], "Motion Operation Mode": [[627, "motion-operation-mode"]], "Motion Polarity": [[627, "motion-polarity"]], "Motion Search Direction": [[627, "motion-search-direction"]], "Motion Stepper Output": [[627, "motion-stepper-output"]], "Motion Stop Type": [[627, "motion-stop-type"]], "SPI Clock": [[627, "spi-clock"]], "SPI Data Size": [[627, "spi-data-size"]], "SPI Endianness": [[627, "spi-endianness"]], "SPI Mode": [[627, "spi-mode"]], "Thermal Channel": [[627, "thermal-channel"]], "Thermal OverSampling": [[627, "thermal-oversampling"]], "Thermal Type": [[627, "thermal-type"]], "UART Data Size": [[627, "uart-data-size"]], "UART Parity": [[627, "uart-parity"]], "UART Stop Bit": [[627, "uart-stop-bit"]], "I/O Port Function Table": [[628, "i-o-port-function-table"]]}, "indexentries": {"module": [[602, "module-pywpc"]], "pywpc": [[602, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[604, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[604, "pywpc.DeviceFinder.disconnect"]], "drive_cfgaxisdirection() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgAxisDirection"]], "drive_cfgaxisdirection_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgAxisDirection_async"]], "drive_cfgaxismove() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgAxisMove"]], "drive_cfgaxismove_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgAxisMove_async"]], "drive_cfgencoder() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgEncoder"]], "drive_cfgencoderdirection() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgEncoderDirection"]], "drive_cfgencoderdirection_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgEncoderDirection_async"]], "drive_cfgencoder_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgEncoder_async"]], "drive_cfgfindref() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgFindRef"]], "drive_cfgfindref_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgFindRef_async"]], "drive_cfglimit() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgLimit"]], "drive_cfglimit_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_cfgLimit_async"]], "drive_close() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_close"]], "drive_close_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_close_async"]], "drive_enableservooff() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_enableServoOff"]], "drive_enableservooff_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_enableServoOff_async"]], "drive_enableservoon() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_enableServoOn"]], "drive_enableservoon_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_enableServoOn_async"]], "drive_findreference() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_findReference"]], "drive_findreference_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_findReference_async"]], "drive_getalarmstatus() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_getAlarmStatus"]], "drive_getalarmstatus_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_getAlarmStatus_async"]], "drive_getlimitstatus() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_getLimitStatus"]], "drive_getlimitstatus_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_getLimitStatus_async"]], "drive_getmovestatus() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_getMoveStatus"]], "drive_getmovestatus_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_getMoveStatus_async"]], "drive_open() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_open"]], "drive_open_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_open_async"]], "drive_overrideaccel() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_overrideAccel"]], "drive_overrideaccel_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_overrideAccel_async"]], "drive_overrideposition() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_overridePosition"]], "drive_overrideposition_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_overridePosition_async"]], "drive_overridevelocity() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_overrideVelocity"]], "drive_overridevelocity_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_overrideVelocity_async"]], "drive_readcurrentvelocity() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_readCurrentVelocity"]], "drive_readcurrentvelocity_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_readCurrentVelocity_async"]], "drive_readencoderposition() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_readEncoderPosition"]], "drive_readencoderposition_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_readEncoderPosition_async"]], "drive_rstencoderposi() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_rstEncoderPosi"]], "drive_rstencoderposi_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_rstEncoderPosi_async"]], "drive_start() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_start"]], "drive_start_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_start_async"]], "drive_stop() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_stop"]], "drive_stop_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Drive_stop_async"]], "edrive_st (class in pywpc)": [[605, "pywpc.EDrive_ST"]], "net_getgateway() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.Sys_setSwitchMode_async"]], "close() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.close"]], "connect() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.connect"]], "disconnect() (pywpc.edrive_st method)": [[605, "pywpc.EDrive_ST.disconnect"]], "emotion (class in pywpc)": [[606, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[606, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[606, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[606, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[606, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[606, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[606, "pywpc.EMotion.Sys_setSwitchMode_async"]], "close() (pywpc.emotion method)": [[606, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[606, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[606, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_enableCS_async"]], "ai_enablechannel() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_enableChannel_async"]], "ai_getport() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_getPort"]], "ai_open() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[607, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[607, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[607, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[607, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[607, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[607, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[607, "pywpc.EthanA.Sys_setSwitchMode_async"]], "close() (pywpc.ethana method)": [[607, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[607, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[607, "pywpc.EthanA.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[608, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[608, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[608, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[608, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[608, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[608, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "pwm_close() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_close"]], "pwm_close_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_close_async"]], "pwm_open() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_open"]], "pwm_open_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_setFrequency_async"]], "pwm_start() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_start"]], "pwm_start_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_start_async"]], "pwm_stop() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_stop"]], "pwm_stop_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[608, "pywpc.EthanD.Sys_setSwitchMode_async"]], "close() (pywpc.ethand method)": [[608, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[608, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[608, "pywpc.EthanD.disconnect"]], "ai_close() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_close_async"]], "ai_getport() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_getPort"]], "ai_open() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[609, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[609, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[609, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[609, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[609, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[609, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[609, "pywpc.EthanI.Sys_setSwitchMode_async"]], "close() (pywpc.ethani method)": [[609, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[609, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[609, "pywpc.EthanI.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[610, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[610, "pywpc.EthanL.Sys_setSwitchMode_async"]], "close() (pywpc.ethanl method)": [[610, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[610, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[610, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_close_async"]], "ao_getenablechannels() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getEnableChannels"]], "ao_getmode() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getMode"]], "ao_getmode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getMode_async"]], "ao_getport() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getPort"]], "ao_getstate() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getState"]], "ao_getvalues() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_open_async"]], "ao_setenablechannels() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[611, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[611, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[611, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[611, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[611, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[611, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[611, "pywpc.EthanO.Sys_setSwitchMode_async"]], "close() (pywpc.ethano method)": [[611, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[611, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[611, "pywpc.EthanO.disconnect"]], "ethant (class in pywpc)": [[612, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[612, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[612, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[612, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[612, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[612, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[612, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[612, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[612, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[612, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[613, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[613, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_enableCS_async"]], "ai_enablechannel() (pywpc.stem method)": [[613, "pywpc.STEM.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_enableChannel_async"]], "ai_getport() (pywpc.stem method)": [[613, "pywpc.STEM.AI_getPort"]], "ai_open() (pywpc.stem method)": [[613, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[613, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[613, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[613, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[613, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[613, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[613, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[613, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[613, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[613, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[613, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_close_async"]], "ao_getenablechannels() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getEnableChannels"]], "ao_getmode() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getMode"]], "ao_getmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getMode_async"]], "ao_getport() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getPort"]], "ao_getstate() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getState"]], "ao_getvalues() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[613, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[613, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_open_async"]], "ao_setenablechannels() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[613, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[613, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[613, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[613, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.stem method)": [[613, "pywpc.STEM.DIO_setPortIdle_async"]], "di_closepins() (pywpc.stem method)": [[613, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[613, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[613, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[613, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[613, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[613, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[613, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[613, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[613, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[613, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[613, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[613, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[613, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[613, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[613, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[613, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[613, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[613, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[613, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[613, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[613, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[613, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[613, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[613, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[613, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[613, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[613, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[613, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[613, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[613, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[613, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[613, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[613, "pywpc.STEM.Sys_setSwitchMode_async"]], "close() (pywpc.stem method)": [[613, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[613, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[613, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.AI_stop_async"]], "counter_close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[614, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[614, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getenablechannels() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getEnableChannels"]], "ao_getmode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getMode"]], "ao_getmode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getMode_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getstate() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getState"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "counter_close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[615, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[615, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.CAN_write_async"]], "counter_close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[616, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[616, "pywpc.USBDAQF1CD.disconnect"]], "counter_close() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[617, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[617, "pywpc.USBDAQF1D.disconnect"]], "counter_close() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "usbdaqf1dsnk (class in pywpc)": [[618, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[618, "pywpc.USBDAQF1DSNK.disconnect"]], "counter_close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[619, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[619, "pywpc.USBDAQF1RD.disconnect"]], "counter_close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[620, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[620, "pywpc.USBDAQF1TD.disconnect"]], "ahrs_close() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_close"]], "ahrs_close_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_close_async"]], "ahrs_open() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_open"]], "ahrs_open_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_open_async"]], "ahrs_readstreaming() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_readStreaming"]], "ahrs_readstreaming_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_readStreaming_async"]], "ahrs_reset() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_reset"]], "ahrs_reset_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_reset_async"]], "ahrs_setgeneral() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_setGeneral"]], "ahrs_setgeneral_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_setGeneral_async"]], "ahrs_start() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_start"]], "ahrs_start_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_start_async"]], "ahrs_stop() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_stop"]], "ahrs_stop_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AHRS_stop_async"]], "ai_close() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_getPort"]], "ai_open() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "wifidaqe3a (class in pywpc)": [[621, "pywpc.WifiDAQE3A"]], "wifi_getchargestatus() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getChargeStatus_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_readThermo_async"]], "wifi_resetled() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_resetLED_async"]], "wifi_setap() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setBandwidth_async"]], "wifi_setblueled() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[621, "pywpc.WifiDAQE3A.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_getPort"]], "ai_open() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "wifidaqf4a (class in pywpc)": [[622, "pywpc.WifiDAQF4A"]], "wifi_getchargestatus() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getChargeStatus_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_readThermo_async"]], "wifi_resetled() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_resetLED_async"]], "wifi_setap() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setBandwidth_async"]], "wifi_setblueled() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[622, "pywpc.WifiDAQF4A.disconnect"]]}})