Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDriveST/System_ETH/get_serial_number", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/System_ETH/get_serial_number", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanIA/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeByChannel", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanP/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/System_ETH/get_serial_number", "examples/Console/Asynchronous/STEM/System_ETH/hello_world", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Synchronous/EDriveST/System_ETH/get_serial_number", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/System_ETH/get_serial_number", "examples/Console/Synchronous/EMotion/System_ETH/hello_world", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanA/System_ETH/hello_world", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/PWM/PWM_generate", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanD/System_ETH/hello_world", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanEXD/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanI/System_ETH/hello_world", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanIA/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanL/System_ETH/hello_world", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanO/System_ETH/hello_world", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeByChannel", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info", "examples/Console/Synchronous/EthanP/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanP/System_ETH/hello_world", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanT/System_ETH/hello_world", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/STEM/System_ETH/get_serial_number", "examples/Console/Synchronous/STEM/System_ETH/hello_world", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDriveST", "products/EMotion", "products/EthanA", "products/EthanD", "products/EthanEXD", "products/EthanI", "products/EthanIA", "products/EthanL", "products/EthanO", "products/EthanP", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQE3AH", "products/WifiDAQF4A", "products_summary", "ref_AIO", "ref_channel", "ref_error", "ref_param", "ref_port"], "filenames": ["README.rst", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration.rst", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EMotion/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanA/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanD/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanI/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters.rst", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel.rst", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanL/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanO/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeByChannel.rst", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanP/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanT/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DO_write_port.rst", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/STEM/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/STEM/System_ETH/hello_world.rst", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread.rst", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move.rst", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EDriveST/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world.rst", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration.rst", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EMotion/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EMotion/System_ETH/hello_world.rst", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanA/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanA/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DO_write_port.rst", "examples/Console/Synchronous/EthanD/PWM/PWM_generate.rst", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanD/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanD/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanI/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanI/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanIA/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters.rst", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel.rst", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanL/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanL/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanO/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanO/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeByChannel.rst", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanP/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanP/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanT/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanT/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/STEM/DIO/DO_write_pins.rst", "examples/Console/Synchronous/STEM/DIO/DO_write_port.rst", "examples/Console/Synchronous/STEM/System_ETH/get_network_info.rst", "examples/Console/Synchronous/STEM/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/STEM/System_ETH/hello_world.rst", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read.rst", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write.rst", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status.rst", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC.rst", "examples/GUI/Synchronous/AI/AI_integrated_gui.rst", "examples/GUI/Synchronous/AO/AO_gui.rst", "examples/GUI/Synchronous/DO/DO_gui.rst", "examples/GUI/Synchronous/I2C/I2C_gui.rst", "examples/GUI/Synchronous/SPI/SPI_gui.rst", "examples/GUI/Synchronous/System/find_all_devices_gui.rst", "examples/GUI/Synchronous/System/get_device_info_gui.rst", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui.rst", "examples/GUI/Synchronous/Temperature_TC/TC_gui.rst", "examples/GUI/Synchronous/UART/UART_gui.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products/DeviceFinder.rst", "products/EDriveST.rst", "products/EMotion.rst", "products/EthanA.rst", "products/EthanD.rst", "products/EthanEXD.rst", "products/EthanI.rst", "products/EthanIA.rst", "products/EthanL.rst", "products/EthanO.rst", "products/EthanP.rst", "products/EthanT.rst", "products/STEM.rst", "products/USBDAQF1AD.rst", "products/USBDAQF1AOD.rst", "products/USBDAQF1CD.rst", "products/USBDAQF1D.rst", "products/USBDAQF1DSNK.rst", "products/USBDAQF1RD.rst", "products/USBDAQF1TD.rst", "products/WifiDAQE3A.rst", "products/WifiDAQE3AH.rst", "products/WifiDAQF4A.rst", "products_summary.rst", "ref_AIO.rst", "ref_channel.rst", "ref_error.rst", "ref_param.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DPOT read by channel", "DPOT write all channels", "DPOT write by channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AHRS getAcceleration", "AHRS getAngularVelocity", "AHRS getEstimation", "AHRS getOrientation", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Relay read counters", "Relay set channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DPOT read by channel", "DPOT write all channels", "DPOT write by channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AHRS getAcceleration", "AHRS getAngularVelocity", "AHRS getEstimation", "AHRS getOrientation", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-D", "Ethan-EX-D", "Ethan-I", "Ethan-IA", "Ethan-L", "Ethan-O", "Ethan-P", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-E3-AH", "Wifi-DAQ-F4-A", "Products Feature", "AI Max Sampling Rate Table", "I/O Channel Function Table", "Error Code Table", "Setting Table", "I/O Port Function Table"], "terms": {"welcom": [0, 720], "wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 750], "api": [0, 720, 721, 748], "document": [0, 720], "It": [0, 63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 720, 724, 726, 734, 735, 736, 737, 738, 739, 740, 741], "i": [0, 12, 13, 15, 17, 25, 26, 27, 29, 30, 34, 43, 44, 46, 48, 49, 53, 57, 58, 60, 62, 65, 66, 67, 68, 72, 73, 75, 77, 80, 81, 82, 83, 86, 87, 89, 91, 95, 96, 98, 100, 104, 105, 107, 109, 111, 114, 115, 117, 119, 121, 122, 125, 126, 128, 130, 131, 136, 137, 139, 141, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 178, 179, 183, 185, 188, 189, 190, 191, 192, 194, 196, 198, 199, 201, 203, 206, 210, 212, 213, 216, 217, 218, 221, 222, 223, 224, 225, 227, 229, 230, 232, 234, 237, 239, 242, 243, 244, 245, 246, 248, 250, 252, 253, 255, 257, 260, 263, 264, 265, 266, 267, 269, 271, 273, 274, 276, 278, 281, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 300, 301, 302, 303, 304, 306, 308, 310, 311, 316, 318, 321, 324, 325, 326, 327, 328, 330, 332, 334, 335, 340, 342, 345, 349, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 370, 375, 376, 377, 379, 381, 382, 386, 391, 392, 393, 395, 397, 409, 410, 418, 419, 420, 422, 423, 427, 436, 437, 438, 442, 446, 447, 450, 451, 452, 453, 457, 458, 461, 462, 463, 464, 467, 468, 472, 473, 477, 478, 480, 483, 484, 486, 487, 490, 491, 492, 497, 498, 501, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 526, 527, 528, 532, 534, 537, 538, 539, 540, 541, 543, 545, 547, 548, 551, 555, 557, 558, 561, 562, 563, 566, 567, 568, 569, 570, 572, 574, 575, 578, 580, 583, 584, 585, 586, 587, 589, 591, 593, 594, 597, 600, 601, 602, 603, 604, 606, 608, 610, 611, 614, 617, 618, 619, 620, 622, 624, 625, 626, 629, 630, 631, 632, 633, 635, 637, 639, 640, 646, 649, 650, 651, 652, 653, 655, 657, 659, 660, 666, 670, 675, 676, 677, 678, 679, 680, 681, 682, 683, 687, 692, 693, 694, 695, 699, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748], "an": [0, 713, 720, 723, 724, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "easi": [0, 720, 745], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 541, 557, 558, 564, 565, 570, 581, 582, 587, 598, 599, 604, 615, 616, 627, 628, 633, 647, 648, 653, 682, 720, 724, 725, 731, 734, 735, 736, 737, 742, 743, 744, 750], "open": [0, 2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 92, 101, 110, 111, 120, 121, 122, 131, 132, 133, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 459, 460, 461, 462, 463, 464, 469, 474, 479, 480, 485, 486, 487, 492, 493, 494, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 708, 709, 710, 711, 714, 715, 716, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sourc": [0, 720, 745], "tool": [0, 720], "beginn": [0, 720], "we": [0, 192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 720], "provid": [0, 720], "excel": [0, 720], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 750], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "help": [0, 720], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 725, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747], "quickli": [0, 720], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 436, 438, 439, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 457, 459, 460, 461, 462, 463, 464, 467, 469, 472, 474, 477, 479, 480, 483, 485, 486, 487, 490, 492, 493, 494, 497, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 526, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 675, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 692, 693, 695, 696, 698, 699, 700, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "our": [0, 720], "product": [0, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 365, 506, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 682, 720, 728, 729, 746, 747, 748, 750], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748], "real": [0, 720], "world": [0, 718, 719, 720], "usag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 725, 731, 734, 735, 736, 737, 742, 743, 744, 746, 748], "make": [0, 192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 720], "great": [0, 720], "wai": [0, 69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 720], "learn": [0, 720], "therefor": [0, 720], "highli": [0, 720], "recommend": [0, 720], "becaus": [0, 14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 175, 176, 177, 178, 200, 201, 202, 203, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 357, 358, 359, 360, 378, 379, 380, 381, 394, 395, 396, 397, 720], "": [0, 6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 167, 168, 173, 174, 175, 176, 177, 178, 180, 182, 188, 189, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 207, 209, 215, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 247, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 268, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 324, 325, 326, 327, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 354, 355, 356, 357, 358, 359, 360, 367, 369, 375, 376, 377, 378, 379, 380, 381, 383, 385, 391, 392, 393, 394, 395, 396, 397, 403, 405, 406, 409, 410, 420, 423, 431, 432, 433, 436, 437, 439, 441, 446, 447, 450, 451, 452, 453, 454, 457, 458, 461, 462, 463, 464, 467, 468, 472, 473, 477, 478, 480, 483, 484, 485, 490, 491, 497, 498, 501, 502, 503, 504, 507, 509, 520, 521, 526, 527, 529, 531, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 552, 554, 560, 566, 567, 568, 569, 570, 571, 574, 575, 576, 578, 579, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 617, 618, 619, 620, 621, 624, 625, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 664, 667, 669, 675, 676, 677, 684, 686, 692, 693, 694, 696, 698, 704, 705, 706, 707, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749], "simpl": [0, 720], "just": [0, 720], "read": [0, 33, 49, 50, 52, 53, 54, 63, 64, 78, 79, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 179, 180, 182, 183, 184, 186, 187, 206, 207, 209, 210, 211, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 424, 426, 438, 439, 441, 442, 443, 448, 449, 459, 460, 469, 474, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 528, 529, 531, 532, 533, 535, 536, 551, 552, 554, 555, 556, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 710, 711, 714, 715, 716, 718, 719, 720, 723, 724, 725, 726, 727, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "write": [0, 52, 63, 64, 65, 66, 78, 79, 80, 81, 111, 120, 147, 156, 159, 160, 161, 165, 166, 167, 168, 182, 186, 187, 188, 189, 209, 212, 213, 215, 219, 220, 221, 222, 240, 241, 242, 243, 261, 262, 263, 264, 282, 283, 284, 285, 298, 299, 300, 301, 313, 322, 323, 324, 325, 337, 348, 369, 385, 441, 448, 449, 450, 451, 459, 460, 461, 462, 480, 485, 504, 509, 512, 513, 514, 518, 519, 520, 521, 531, 535, 536, 537, 538, 554, 557, 558, 560, 564, 565, 566, 567, 581, 582, 583, 584, 598, 599, 600, 601, 615, 616, 617, 618, 627, 628, 629, 630, 642, 647, 648, 649, 650, 662, 669, 686, 698, 708, 709, 710, 711, 716, 718, 719, 720, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "allow": [0, 720, 746], "access": [0, 720], "updat": [0, 50, 52, 154, 155, 156, 161, 180, 182, 207, 209, 346, 348, 361, 362, 363, 364, 365, 367, 369, 383, 385, 439, 441, 507, 508, 509, 514, 529, 531, 552, 554, 667, 669, 678, 679, 680, 681, 682, 684, 686, 696, 698, 707, 708, 709, 710, 711, 713, 714, 715, 716, 720, 745], "data": [0, 15, 16, 17, 46, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 75, 76, 77, 89, 90, 91, 92, 98, 99, 100, 101, 107, 108, 109, 117, 118, 119, 128, 129, 130, 139, 140, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 176, 177, 178, 179, 180, 182, 183, 184, 192, 194, 195, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 225, 232, 233, 234, 235, 236, 237, 238, 246, 248, 249, 255, 256, 257, 258, 259, 267, 269, 270, 276, 277, 278, 279, 280, 294, 295, 296, 304, 306, 307, 316, 317, 318, 319, 320, 328, 330, 331, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 379, 380, 381, 382, 383, 385, 386, 387, 395, 396, 397, 438, 439, 441, 442, 443, 469, 474, 506, 507, 508, 509, 510, 511, 512, 513, 514, 528, 529, 531, 532, 533, 541, 543, 544, 549, 550, 551, 552, 554, 555, 556, 557, 558, 570, 576, 577, 578, 579, 587, 589, 590, 595, 596, 604, 606, 607, 612, 613, 633, 635, 636, 644, 645, 653, 655, 656, 664, 665, 666, 667, 669, 670, 671, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 708, 710, 711, 714, 715, 716, 718, 719, 720, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "eas": [0, 720], "ad": [0, 720, 721, 746, 747, 750], "your": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 728, 729], "toolkit": [0, 720], "onli": [0, 720, 725, 731, 734, 735, 736, 742, 743, 744], "simplifi": [0, 720], "task": [0, 720], "also": [0, 720], "practic": [0, 720], "experi": [0, 720], "bridg": [0, 720], "theori": [0, 720], "applic": [0, 720], "last": [0, 10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 146, 147, 148, 171, 192, 194, 195, 196, 204, 205, 225, 227, 235, 236, 237, 238, 246, 248, 249, 250, 258, 259, 267, 269, 270, 271, 279, 280, 289, 304, 306, 307, 308, 312, 313, 314, 319, 320, 328, 330, 331, 332, 336, 337, 338, 343, 344, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 503, 504, 505, 524, 541, 543, 544, 545, 549, 550, 570, 572, 576, 577, 578, 579, 587, 589, 590, 591, 595, 596, 604, 606, 607, 608, 612, 613, 622, 633, 635, 636, 637, 641, 642, 643, 644, 645, 653, 655, 656, 657, 661, 662, 663, 664, 665, 673, 690, 702, 720], "least": [0, 146, 147, 312, 313, 336, 337, 438, 503, 504, 528, 551, 641, 642, 661, 662, 666, 683, 695, 720], "valuabl": [0, 720], "resourc": [0, 720], "both": [0, 720], "work": [0, 720], "effici": [0, 720], "support": [0, 51, 162, 181, 208, 214, 347, 368, 384, 440, 515, 530, 553, 559, 668, 685, 697, 720, 740, 745, 748], "synchron": [0, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 493, 494, 514, 720], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748], "comput": [0, 720], "process": [0, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 92, 101, 120, 121, 122, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 469, 474, 485, 486, 487, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 720, 723, 748], "thread": [0, 14, 16, 27, 30, 45, 47, 59, 61, 74, 76, 88, 90, 97, 99, 106, 108, 116, 118, 127, 129, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396, 420, 423, 707, 718, 720], "mean": [0, 720, 725, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "two": [0, 14, 15, 17, 45, 46, 48, 59, 60, 62, 74, 75, 77, 88, 89, 91, 97, 98, 100, 106, 107, 109, 116, 117, 119, 127, 128, 130, 138, 139, 141, 149, 150, 152, 175, 176, 178, 192, 200, 201, 203, 225, 231, 232, 234, 246, 254, 255, 257, 267, 275, 276, 278, 293, 294, 296, 304, 312, 313, 314, 315, 316, 318, 328, 339, 340, 342, 357, 358, 360, 378, 379, 381, 394, 395, 397, 541, 570, 587, 604, 633, 641, 642, 643, 653, 714, 720, 724, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 749], "more": [0, 720], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 723], "step": [0, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 485, 486, 487, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 720, 723, 724, 734, 745, 749], "manner": [0, 720], "one": [0, 718, 719, 720, 724, 725, 733, 734, 735, 736, 740, 741, 742, 743, 744], "after": [0, 146, 147, 336, 337, 503, 504, 661, 662, 720, 723, 724, 725, 734, 735, 736, 737, 742, 743, 744], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "In": [0, 121, 122, 159, 160, 161, 163, 164, 212, 213, 216, 217, 486, 487, 512, 513, 514, 516, 517, 557, 558, 561, 562, 720, 735, 736, 737, 738, 740, 741, 748, 750], "execut": [0, 14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 175, 176, 177, 178, 200, 201, 202, 203, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 357, 358, 359, 360, 378, 379, 380, 381, 394, 395, 396, 397, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "block": [0, 720], "until": [0, 720], "previou": [0, 720], "complet": [0, 25, 26, 27, 29, 30, 418, 419, 420, 421, 422, 423, 720, 724, 734], "independ": [0, 720], "each": [0, 65, 66, 80, 81, 111, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 480, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 720, 722, 725, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "don": [0, 720], "t": [0, 16, 47, 61, 76, 90, 99, 108, 118, 129, 140, 146, 147, 151, 177, 202, 233, 256, 277, 295, 317, 336, 337, 341, 359, 380, 396, 503, 504, 661, 662, 720, 721, 741, 745, 749, 750], "wait": [0, 6, 8, 9, 27, 30, 38, 50, 52, 65, 66, 67, 68, 69, 80, 81, 82, 83, 111, 120, 146, 147, 154, 155, 156, 167, 168, 180, 182, 188, 189, 190, 191, 193, 204, 207, 209, 215, 221, 222, 223, 224, 226, 235, 237, 238, 242, 243, 244, 245, 247, 258, 263, 264, 265, 266, 268, 279, 284, 285, 286, 287, 288, 300, 301, 302, 303, 305, 312, 313, 319, 324, 325, 326, 327, 329, 336, 337, 343, 346, 348, 367, 369, 383, 385, 403, 405, 406, 420, 423, 431, 432, 433, 439, 441, 450, 451, 452, 453, 454, 461, 462, 463, 464, 480, 485, 503, 504, 507, 509, 520, 521, 529, 531, 537, 538, 539, 540, 542, 549, 552, 554, 560, 566, 567, 568, 569, 571, 576, 578, 579, 583, 584, 585, 586, 588, 595, 600, 601, 602, 603, 605, 612, 617, 618, 619, 620, 621, 629, 630, 631, 632, 634, 641, 642, 644, 649, 650, 651, 652, 654, 661, 662, 664, 667, 669, 684, 686, 696, 698, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "instead": [0, 720, 748], "its": [0, 159, 160, 212, 213, 512, 513, 557, 558, 720, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "own": [0, 720], "without": [0, 720], "gener": [0, 192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 718, 719, 720, 726, 727, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 748], "easier": [0, 720], "understand": [0, 720], "debug": [0, 720], "while": [0, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 45, 46, 47, 48, 50, 52, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 154, 155, 156, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 182, 200, 201, 202, 203, 207, 209, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 346, 348, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 378, 379, 380, 381, 383, 385, 394, 395, 396, 397, 399, 400, 401, 402, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 439, 441, 507, 508, 509, 518, 519, 520, 521, 522, 523, 529, 531, 552, 554, 667, 669, 678, 679, 680, 681, 682, 684, 686, 696, 698, 707, 718, 719, 720, 742, 743, 744, 746, 750], "scalabl": [0, 720], "greater": [0, 720], "concurr": [0, 720], "sure": [0, 192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 720], "latest": [0, 720], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 713, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "up": [0, 165, 166, 167, 168, 169, 170, 518, 519, 520, 521, 522, 523, 720], "date": [0, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pip": [0, 720], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720], "fast": [0, 720, 735, 736, 737, 738, 740, 741, 749], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pkg_name": [0, 720], "handle_list": [0, 720], "devicefind": [0, 1, 398, 712, 720, 721, 722], "wifidaqe3a": [0, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 707, 713, 720, 721, 742, 745], "wifidaqe3ah": [0, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 720, 721, 743, 745], "wifidaqf4a": [0, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 721, 744, 745], "stem": [0, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 707, 720, 721, 725, 735, 736, 742, 743, 744, 745, 746, 748, 750], "emot": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 720, 721, 745, 750], "edrivest": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 720, 721, 723], "ethana": [0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 707, 713, 720, 721, 725, 745], "ethand": [0, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 709, 713, 720, 721, 726, 745], "ethanexd": [0, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 720, 721, 727], "ethani": [0, 92, 93, 94, 95, 96, 97, 98, 99, 100, 469, 470, 471, 472, 473, 720, 721, 728, 729, 745], "ethania": [0, 101, 102, 103, 104, 105, 106, 107, 108, 109, 474, 475, 476, 477, 478, 720, 721, 728, 729, 745], "ethanl": [0, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 479, 480, 481, 482, 483, 484, 720, 721, 730, 745], "ethano": [0, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 485, 486, 487, 488, 489, 490, 491, 720, 721, 731, 745], "ethanp": [0, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 492, 493, 494, 495, 496, 497, 498, 720, 721, 732, 745], "ethant": [0, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 499, 500, 501, 502, 503, 504, 505, 720, 721, 733, 745], "usbdaqf1d": [0, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 709, 710, 711, 716, 720, 721, 738, 745], "usbdaqf1dsnk": [0, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 709, 720, 721, 739, 745], "usbdaqf1ad": [0, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 707, 709, 710, 711, 716, 720, 721, 725, 734, 735, 736, 742, 743, 744, 745], "usbdaqf1aod": [0, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 707, 708, 709, 710, 711, 716, 720, 721, 725, 734, 735, 736, 742, 743, 744, 745], "usbdaqf1td": [0, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 709, 710, 711, 715, 716, 720, 721, 741, 745], "usbdaqf1rd": [0, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 709, 710, 711, 714, 716, 720, 721, 740, 745], "usbdaqf1cd": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 709, 710, 711, 716, 720, 721, 737, 745], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720], "conda": [0, 720], "command": [0, 720, 742, 743, 744], "consol": [0, 720], "how": [0, 1, 10, 11, 13, 14, 15, 16, 17, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 69, 70, 71, 73, 74, 75, 76, 77, 84, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 290, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 407, 408, 410, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 454, 455, 456, 458, 465, 466, 468, 470, 471, 473, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 524, 525, 527, 528, 529, 531, 532, 533, 534, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 621, 622, 623, 625, 626, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "build": [0, 720], "ex": [0, 720, 721, 750], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "miniconda": [0, 720], "virtual": [0, 720], "environ": [0, 720], "labview": [0, 720, 745], "time": [0, 14, 15, 16, 17, 27, 30, 45, 46, 47, 48, 53, 59, 60, 61, 62, 65, 66, 74, 75, 76, 77, 80, 81, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 111, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 157, 168, 175, 176, 177, 178, 183, 188, 189, 200, 201, 202, 203, 210, 221, 222, 231, 232, 233, 234, 237, 242, 243, 254, 255, 256, 257, 263, 264, 275, 276, 277, 278, 284, 285, 293, 294, 295, 296, 300, 301, 315, 316, 317, 318, 324, 325, 339, 340, 341, 342, 349, 357, 358, 359, 360, 370, 378, 379, 380, 381, 386, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 713, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748], "engin": [0, 720], "under": [0, 720, 746], "mit": [0, 720], "style": [0, 365, 682, 720], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "incorpor": [0, 720], "project": [0, 14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 175, 176, 177, 178, 200, 201, 202, 203, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 357, 358, 359, 360, 365, 378, 379, 380, 381, 394, 395, 396, 397, 682, 720], "mai": [0, 720], "differ": [0, 65, 66, 80, 81, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 725, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "non": [0, 720], "commerci": [0, 720], "find_devic": [1, 398], "find_all_devic": [1, 398], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "demonstr": [1, 10, 11, 13, 14, 15, 16, 17, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 407, 408, 410, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706], "avail": [1, 398, 712, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 750], "usb": [1, 398, 720, 745, 746, 747, 748, 750], "ethernet": [1, 398, 712, 720, 724, 745], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 713, 735, 737, 738, 740, 741, 748], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716], "correct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 748], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 705, 706, 713, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 705, 706, 707, 713, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744, 748], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 457, 458, 459, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 621, 622, 623, 624, 625, 626, 627, 629, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 725, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 713, 724, 734, 735, 737, 738, 740, 741, 748], "http": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "com": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "system": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 480, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 691, 693, 694, 695, 696, 698, 699, 700, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719], "ltd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "wpc_python_driver_releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "tree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "readm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "md": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "detail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746], "2022": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "2024": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 735, 736, 737, 738, 740, 741], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "creat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712], "handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "perform": [1, 15, 16, 17, 46, 47, 48, 60, 61, 62, 63, 64, 75, 76, 77, 78, 79, 89, 90, 91, 98, 99, 100, 107, 108, 109, 117, 118, 119, 128, 129, 130, 139, 140, 141, 150, 151, 152, 165, 166, 176, 177, 178, 186, 187, 201, 202, 203, 219, 220, 232, 233, 234, 240, 241, 255, 256, 257, 261, 262, 276, 277, 278, 282, 283, 294, 295, 296, 298, 299, 316, 317, 318, 322, 323, 340, 341, 342, 358, 359, 360, 379, 380, 381, 395, 396, 397, 398, 448, 449, 459, 460, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 712, 723, 724, 734], "inform": [1, 10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 165, 166, 167, 168, 169, 170, 171, 351, 352, 372, 373, 388, 389, 398, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 518, 519, 520, 521, 522, 523, 524, 672, 673, 689, 690, 701, 702, 707, 709, 712, 713, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716], "dev_list": [1, 398], "bcst_enumerateusbdevic": [1, 398, 721, 722], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716], "printgenericerror": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "network": [1, 11, 12, 13, 42, 43, 44, 56, 57, 58, 71, 72, 73, 85, 86, 87, 94, 95, 96, 103, 104, 105, 113, 114, 115, 124, 125, 126, 135, 136, 137, 143, 144, 145, 172, 173, 174, 197, 198, 199, 228, 229, 230, 251, 252, 253, 272, 273, 274, 290, 291, 292, 309, 310, 311, 333, 334, 335, 351, 353, 354, 355, 356, 372, 374, 375, 376, 377, 388, 390, 391, 392, 393, 398, 408, 409, 410, 435, 436, 437, 445, 446, 447, 456, 457, 458, 466, 467, 468, 471, 472, 473, 476, 477, 478, 482, 483, 484, 489, 490, 491, 496, 497, 498, 500, 501, 502, 525, 526, 527, 546, 547, 548, 573, 574, 575, 592, 593, 594, 609, 610, 611, 623, 624, 625, 638, 639, 640, 658, 659, 660, 672, 674, 675, 676, 677, 689, 691, 692, 693, 694, 701, 703, 704, 705, 706, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744, 748], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "bcst_enumeratenetworkdevices_async": [1, 721, 722], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 745], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 420, 423, 707], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 450, 451, 461, 462, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 735, 736, 737, 738, 739, 740, 741], "els": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 418, 419, 422, 438, 480, 506, 528, 551, 578, 666, 683, 695, 707, 709, 713], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "ipython": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "7": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 410, 437, 447, 450, 458, 461, 468, 473, 478, 484, 491, 493, 498, 502, 503, 504, 518, 519, 520, 521, 522, 523, 527, 537, 548, 566, 575, 583, 594, 600, 611, 617, 625, 629, 640, 649, 660, 661, 662, 677, 682, 694, 706, 709, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749, 750], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750], "spyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "drive_find_hom": [2, 399], "devic": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717], "192": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734], "168": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750], "110": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734], "depend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 728, 729, 737, 746], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 92, 101, 110, 111, 120, 121, 122, 131, 132, 133, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 355, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 376, 382, 383, 385, 386, 387, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "set": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 92, 101, 110, 120, 121, 122, 131, 132, 133, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747], "searching_spe": [2, 3, 399, 400, 723], "50000": [2, 3, 4, 5, 8, 9, 399, 400, 401, 402, 405, 406], "approaching_spe": [2, 3, 399, 400, 723], "10000": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 37, 120, 215, 399, 400, 401, 402, 403, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 429, 430, 485, 560, 708, 724, 734], "acceler": [2, 3, 4, 5, 6, 9, 361, 363, 365, 399, 400, 401, 402, 403, 406, 678, 680, 682, 718, 719, 723, 724, 734, 743, 745, 748], "search_direct": [2, 399, 723], "point": [2, 49, 153, 179, 206, 345, 366, 382, 399, 438, 506, 528, 551, 666, 683, 695, 723, 724, 734, 745], "forward": [2, 3, 31, 33, 365, 399, 400, 424, 426, 682, 709, 723, 724, 734, 749], "revers": [2, 3, 31, 33, 399, 400, 424, 426, 723, 724, 734, 749], "approach_direct": [2, 399, 723], "offset": [2, 3, 120, 215, 399, 400, 485, 560, 723, 724, 731, 734, 736], "reset_posit": [2, 3, 399, 400, 723], "fals": [2, 3, 28, 49, 153, 179, 206, 238, 345, 365, 366, 382, 399, 400, 421, 438, 506, 528, 551, 579, 666, 682, 683, 695, 707, 709, 713, 723, 724, 734, 737, 749], "en_forward": [2, 3, 4, 5, 6, 8, 9, 399, 400, 401, 402, 403, 405, 406, 723, 724, 734], "en_revers": [2, 3, 4, 5, 6, 8, 9, 399, 400, 401, 402, 403, 405, 406, 723, 724, 734], "active_high": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 399, 400, 401, 402, 403, 405, 406, 411, 412, 413, 414, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433], "model": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 712, 713, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "driver_info": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 713, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_getdriverinfo_async": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "name": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694, 695, 696, 698, 699, 700, 702, 703, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "motion": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "motion_open_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 721, 723, 724, 734], "motion_open": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 721, 723, 724, 734], "statu": [2, 3, 4, 5, 6, 7, 8, 9, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 49, 50, 52, 53, 54, 58, 63, 64, 65, 66, 67, 68, 69, 73, 78, 79, 80, 81, 82, 83, 87, 92, 96, 101, 105, 110, 111, 115, 120, 121, 122, 126, 131, 132, 133, 137, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 343, 344, 345, 346, 348, 349, 350, 356, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 377, 382, 383, 385, 386, 387, 393, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 468, 469, 473, 474, 478, 479, 480, 484, 485, 486, 487, 491, 492, 493, 494, 498, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 694, 695, 696, 698, 699, 700, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "config": [2, 3, 400, 718, 719], "motion_cfglimit_async": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 24, 27, 30, 31, 32, 33, 36, 39, 40, 721, 723, 724, 734], "motion_cfglimit": [2, 3, 4, 5, 6, 8, 9, 399, 400, 401, 402, 403, 405, 406, 411, 412, 413, 417, 420, 423, 424, 425, 426, 429, 432, 433, 721, 723, 724, 734], "reset": [2, 3, 4, 5, 8, 9, 355, 376, 392, 399, 400, 401, 402, 405, 406, 676, 693, 705, 723, 724, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744], "motion_rstencoderposi_async": [2, 3, 4, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40, 721, 723, 724, 734], "motion_resetencod": [2, 3, 4, 5], "servo": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 36, 39, 40, 399, 400, 401, 402, 403, 405, 406, 411, 412, 413, 414, 415, 416, 417, 424, 425, 426, 429, 432, 433, 718, 719, 723, 724, 734, 745], "motion_enableservoon_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39, 40, 721, 723, 724, 734], "motion_enableservoon": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 429, 431, 432, 433, 721, 723, 724, 734], "refer": [2, 3, 31, 32, 33, 159, 160, 212, 213, 424, 425, 426, 512, 513, 557, 558, 723, 724, 734], "motion_startfindhome_async": [2, 721, 723], "motion_startfindhom": [2, 399, 721, 723], "motion_getprocessstate_async": [2, 3, 4, 5, 721, 723], "motion_getprocessst": [2, 3, 4, 5, 399, 400, 401, 402, 721, 723], "limit": [2, 31, 161, 399, 424, 514, 707, 718, 719, 723, 724, 734, 745, 749], "state_list": [2, 3, 63, 64, 78, 79, 165, 166, 186, 187, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 399, 400, 448, 449, 459, 460, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "motion_getlimitstatus_async": [2, 3, 31, 33, 721, 723, 724, 734], "2": [2, 3, 14, 27, 29, 30, 33, 39, 40, 45, 49, 50, 52, 59, 63, 67, 74, 78, 79, 82, 88, 97, 106, 111, 116, 120, 121, 122, 127, 132, 138, 146, 147, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 175, 179, 180, 182, 186, 190, 194, 195, 200, 204, 205, 206, 207, 209, 212, 213, 215, 216, 217, 219, 223, 231, 235, 236, 237, 238, 240, 244, 248, 249, 254, 258, 259, 261, 265, 269, 270, 275, 279, 280, 282, 283, 284, 285, 286, 287, 293, 298, 302, 306, 307, 315, 319, 320, 322, 326, 330, 331, 336, 337, 339, 343, 344, 345, 346, 348, 357, 365, 366, 367, 369, 378, 382, 383, 385, 394, 399, 400, 420, 422, 423, 426, 432, 433, 438, 439, 441, 448, 452, 459, 460, 463, 480, 485, 486, 487, 493, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 535, 539, 543, 544, 549, 550, 551, 552, 554, 557, 558, 560, 561, 562, 564, 568, 576, 577, 578, 579, 581, 585, 589, 590, 595, 596, 598, 602, 606, 607, 612, 613, 615, 616, 617, 618, 619, 620, 627, 631, 635, 636, 644, 645, 647, 651, 655, 656, 661, 662, 664, 665, 666, 667, 669, 682, 683, 684, 686, 695, 696, 698, 707, 709, 710, 711, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750], "keyboardinterrupt": [2, 3, 4, 5, 6, 7, 8, 9, 155, 161, 361, 362, 363, 364, 365, 399, 400, 401, 402, 403, 404, 405, 406, 508, 514, 678, 679, 680, 681, 682], "press": [2, 3, 4, 5, 6, 7, 8, 9, 155, 161, 361, 362, 363, 364, 365, 399, 400, 401, 402, 403, 404, 405, 406, 508, 514, 678, 679, 680, 681, 682], "keyboard": [2, 3, 4, 5, 6, 7, 8, 9, 155, 161, 361, 362, 363, 364, 365, 399, 400, 401, 402, 403, 404, 405, 406, 508, 514, 678, 679, 680, 681, 682], "final": [2, 3, 4, 5, 6, 7, 8, 9, 49, 50, 52, 53, 54, 120, 121, 122, 153, 154, 155, 156, 157, 158, 161, 163, 164, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 215, 216, 217, 345, 346, 348, 349, 350, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 399, 400, 401, 402, 403, 404, 405, 406, 438, 439, 441, 442, 443, 485, 486, 487, 506, 507, 508, 509, 510, 511, 514, 516, 517, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 560, 561, 562, 666, 667, 669, 670, 671, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 724, 734], "stop": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 49, 50, 52, 69, 153, 154, 155, 156, 161, 179, 180, 182, 185, 193, 204, 205, 206, 207, 209, 218, 226, 235, 236, 237, 238, 239, 247, 258, 259, 260, 268, 279, 280, 281, 288, 297, 305, 319, 320, 321, 329, 343, 344, 345, 346, 348, 361, 362, 363, 364, 365, 366, 367, 369, 382, 383, 385, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 432, 433, 438, 439, 441, 454, 506, 507, 508, 509, 514, 528, 529, 531, 534, 542, 549, 550, 551, 552, 554, 563, 571, 576, 577, 578, 579, 580, 588, 595, 596, 597, 605, 612, 613, 614, 621, 626, 634, 644, 645, 646, 654, 664, 665, 666, 667, 669, 678, 679, 680, 681, 682, 683, 684, 686, 695, 696, 698, 707, 716, 723, 724, 725, 726, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "motion_stopprocess_async": [2, 3, 4, 5, 6, 7, 8, 9, 721, 723], "motion_stopprocess": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406, 721, 723], "off": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 36, 38, 39, 40, 365, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 424, 425, 426, 429, 431, 432, 433, 682, 723, 724, 734, 737, 742, 743, 744], "motion_enableservooff_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39, 40, 721, 723, 724, 734], "motion_enableservooff": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 429, 431, 432, 433, 721, 723, 724, 734], "motion_close_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 721, 723, 724, 734], "motion_clos": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 721, 723, 724, 734], "drive_find_limit": [3, 400], "motion_startfindlimit_async": [3, 721, 723], "motion_startfindlimit": [3, 400, 721, 723], "home": [3, 33, 400, 426, 718, 719, 723, 724, 734, 749], "drive_position_blend": [4, 401], "80000": [4, 401], "position1": [4, 401], "position2": [4, 401], "speed": [4, 5, 6, 8, 9, 25, 26, 28, 29, 237, 238, 401, 402, 403, 405, 406, 418, 419, 421, 422, 578, 579, 723, 724, 734, 735, 736, 737, 738, 740, 741, 745, 746, 748], "deceler": [4, 5, 8, 9, 401, 402, 405, 406, 723, 724, 734, 749], "absolut": [4, 5, 401, 402, 723, 724, 734, 749], "rel": [4, 5, 401, 402, 723, 724, 726, 734, 735, 736, 737, 738, 739, 740, 741, 749], "configur": [4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 49, 50, 52, 53, 54, 120, 146, 147, 153, 154, 155, 156, 157, 158, 179, 180, 182, 183, 184, 192, 194, 195, 204, 205, 206, 207, 209, 210, 211, 215, 225, 235, 236, 237, 238, 246, 248, 249, 258, 259, 267, 269, 270, 279, 280, 304, 306, 307, 319, 320, 328, 330, 331, 336, 337, 343, 344, 345, 346, 348, 349, 350, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 399, 401, 402, 403, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 438, 439, 441, 442, 443, 485, 503, 504, 506, 507, 508, 509, 510, 511, 528, 529, 531, 532, 533, 541, 543, 544, 549, 550, 551, 552, 554, 555, 556, 560, 570, 576, 577, 578, 579, 587, 589, 590, 595, 596, 604, 606, 607, 612, 613, 633, 635, 636, 644, 645, 653, 655, 656, 661, 662, 664, 665, 666, 667, 669, 670, 671, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 723, 724, 725, 731, 734, 735, 736, 742, 743, 744, 745], "start": [4, 5, 6, 8, 9, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 46, 48, 49, 50, 52, 60, 62, 69, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 120, 128, 130, 139, 141, 150, 152, 153, 154, 155, 156, 161, 165, 166, 167, 168, 169, 170, 176, 178, 179, 180, 182, 185, 193, 201, 203, 206, 207, 209, 215, 218, 226, 232, 234, 237, 238, 239, 247, 255, 257, 260, 268, 276, 278, 281, 288, 294, 296, 297, 305, 316, 318, 321, 329, 340, 342, 345, 346, 348, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 379, 381, 382, 383, 385, 395, 397, 401, 402, 403, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 432, 433, 438, 439, 441, 454, 485, 506, 507, 508, 509, 514, 518, 519, 520, 521, 522, 523, 528, 529, 531, 534, 542, 551, 552, 554, 560, 563, 571, 578, 579, 580, 588, 597, 605, 614, 621, 626, 634, 646, 654, 666, 667, 669, 678, 679, 680, 681, 682, 683, 684, 686, 695, 696, 698, 707, 723, 724, 725, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "motion_startpositionmove_async": [4, 5, 721, 723], "motion_startpositionmov": [4, 5, 401, 402, 721, 723], "drive_position_mov": [5, 402], "drive_scan_mov": [6, 403], "position_0": [6, 403, 723], "30000": [6, 403], "position_1": [6, 403, 723], "motion_startscanmove_async": [6, 721, 723], "motion_startscanmov": [6, 403, 721, 723], "second": [6, 8, 9, 12, 14, 27, 30, 43, 45, 49, 50, 52, 57, 59, 65, 66, 67, 68, 69, 72, 74, 80, 81, 82, 83, 86, 88, 95, 97, 104, 106, 111, 114, 116, 125, 127, 136, 138, 144, 146, 147, 148, 149, 153, 154, 155, 156, 161, 167, 168, 173, 175, 179, 180, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 204, 205, 206, 207, 209, 221, 222, 223, 224, 225, 226, 227, 229, 231, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 279, 280, 284, 285, 286, 287, 288, 289, 291, 293, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 319, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 343, 344, 345, 346, 348, 354, 357, 366, 367, 369, 375, 378, 382, 383, 385, 391, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sleep": [6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 167, 168, 173, 174, 175, 176, 177, 178, 180, 182, 188, 189, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 207, 209, 215, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 247, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 268, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 324, 325, 326, 327, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 354, 355, 356, 357, 358, 359, 360, 367, 369, 375, 376, 377, 378, 379, 380, 381, 383, 385, 391, 392, 393, 394, 395, 396, 397, 403, 405, 406, 409, 410, 420, 423, 431, 432, 433, 436, 437, 439, 441, 446, 447, 450, 451, 452, 453, 454, 457, 458, 461, 462, 463, 464, 467, 468, 472, 473, 477, 478, 480, 483, 484, 485, 490, 491, 497, 498, 501, 502, 503, 504, 507, 509, 520, 521, 526, 527, 529, 531, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 552, 554, 560, 566, 567, 568, 569, 570, 571, 574, 575, 576, 578, 579, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 617, 618, 619, 620, 621, 624, 625, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 664, 667, 669, 675, 676, 677, 684, 686, 692, 693, 694, 696, 698, 704, 705, 706, 707], "10": [6, 12, 13, 43, 44, 57, 58, 65, 66, 72, 73, 80, 81, 86, 87, 95, 96, 104, 105, 111, 114, 115, 120, 125, 126, 136, 137, 144, 145, 161, 167, 168, 173, 174, 185, 188, 189, 198, 199, 204, 215, 218, 221, 222, 229, 230, 235, 238, 239, 242, 243, 252, 253, 258, 260, 263, 264, 273, 274, 279, 281, 284, 285, 291, 292, 297, 300, 301, 310, 311, 319, 321, 324, 325, 334, 335, 343, 354, 356, 365, 375, 377, 391, 393, 403, 409, 410, 436, 437, 446, 447, 450, 451, 457, 458, 461, 462, 467, 468, 472, 473, 477, 478, 480, 483, 484, 485, 490, 491, 497, 498, 501, 502, 514, 520, 521, 526, 527, 534, 537, 538, 547, 548, 549, 560, 563, 566, 567, 574, 575, 576, 579, 580, 583, 584, 593, 594, 595, 597, 600, 601, 610, 611, 612, 614, 617, 618, 624, 625, 626, 629, 630, 639, 640, 644, 646, 649, 650, 659, 660, 664, 675, 677, 682, 692, 694, 704, 706, 707, 732, 735, 736, 737, 738, 740, 741, 745, 749], "delai": [6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 167, 168, 173, 174, 175, 176, 177, 178, 180, 182, 188, 189, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 207, 209, 215, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 247, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 268, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 324, 325, 326, 327, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 354, 355, 356, 357, 358, 359, 360, 367, 369, 375, 376, 377, 378, 379, 380, 381, 383, 385, 391, 392, 393, 394, 395, 396, 397, 403, 405, 406, 409, 410, 420, 423, 431, 432, 433, 436, 437, 439, 441, 446, 447, 450, 451, 452, 453, 454, 457, 458, 461, 462, 463, 464, 467, 468, 472, 473, 477, 478, 480, 483, 484, 485, 490, 491, 497, 498, 501, 502, 503, 504, 507, 509, 520, 521, 526, 527, 529, 531, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 552, 554, 560, 566, 567, 568, 569, 570, 571, 574, 575, 576, 578, 579, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 617, 618, 619, 620, 621, 624, 625, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 664, 667, 669, 675, 676, 677, 684, 686, 692, 693, 694, 696, 698, 704, 705, 706, 725, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744], "drive_servo_on": [7, 404], "drive_velocity_blending_acceler": [8, 405], "dir": [8, 9, 405, 406, 723, 724, 734, 749], "motion_resetencoderposi": [8, 9, 399, 400, 401, 402, 405, 406], "motion_startvelocticymove_async": [8, 9, 721, 723], "motion_startvelocticymov": [8, 9, 405, 406, 721, 723], "move": [8, 25, 26, 29, 405, 418, 419, 421, 422, 432, 433, 718, 719, 723, 724, 734, 745], "3": [8, 9, 16, 39, 47, 61, 63, 65, 67, 68, 76, 78, 80, 82, 83, 90, 99, 108, 118, 120, 121, 122, 129, 140, 146, 147, 151, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 177, 186, 188, 190, 191, 194, 195, 196, 202, 204, 205, 212, 213, 215, 216, 217, 219, 221, 223, 224, 227, 233, 235, 236, 237, 238, 240, 242, 244, 245, 248, 249, 250, 256, 258, 259, 261, 263, 265, 266, 269, 270, 271, 277, 279, 280, 282, 284, 286, 287, 289, 295, 298, 300, 302, 303, 306, 307, 308, 317, 319, 320, 322, 324, 326, 327, 330, 331, 332, 336, 337, 341, 343, 344, 355, 359, 361, 363, 365, 376, 380, 392, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 716, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750], "new_spe": [8, 405], "new_dir": [8, 405], "new_acceler": [8, 405], "20000": [8, 405], "new_deceler": [8, 405], "drive_velocity_mov": [9, 406], "system_eth": [10, 11, 12, 13, 41, 42, 43, 44, 55, 56, 57, 58, 70, 71, 72, 73, 84, 85, 86, 87, 93, 94, 95, 96, 102, 103, 104, 105, 112, 113, 114, 115, 123, 124, 125, 126, 134, 135, 136, 137, 142, 143, 144, 145, 171, 172, 173, 174, 407, 408, 409, 410, 434, 435, 436, 437, 444, 445, 446, 447, 455, 456, 457, 458, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 481, 482, 483, 484, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 524, 525, 526, 527], "get_network_info": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702], "hardwar": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 723, 724, 734], "first": [10, 41, 55, 69, 70, 84, 93, 102, 112, 123, 134, 142, 146, 147, 148, 171, 192, 193, 194, 195, 196, 204, 205, 225, 226, 227, 235, 236, 237, 238, 246, 247, 248, 249, 250, 258, 259, 267, 268, 269, 270, 271, 279, 280, 288, 289, 304, 305, 306, 307, 308, 312, 313, 314, 319, 320, 328, 329, 330, 331, 332, 336, 337, 338, 343, 344, 352, 373, 389, 407, 434, 444, 454, 455, 465, 470, 475, 481, 488, 495, 499, 503, 504, 505, 524, 541, 542, 543, 544, 545, 549, 550, 570, 571, 572, 576, 577, 578, 579, 587, 588, 589, 590, 591, 595, 596, 604, 605, 606, 607, 608, 612, 613, 621, 622, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 673, 690, 702, 707, 709, 713, 735, 737, 738, 740, 741, 748, 749], "submask": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 712, 713], "mac": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 712, 713, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "ip_addr": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "net_getipaddrandsubmask_async": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "net_getmacaddr_async": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "get_serial_numb": [11, 42, 56, 71, 85, 94, 103, 113, 124, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 674, 691, 703], "serial_numb": [11, 42, 56, 71, 85, 94, 103, 113, 124, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 674, 691, 703, 707, 708, 709, 710, 711, 713, 714, 715, 716], "sys_getserialnumber_async": [11, 42, 56, 71, 85, 94, 103, 113, 124, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "hello_world": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "public": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "domain": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "rang": [12, 13, 25, 34, 43, 44, 53, 57, 58, 65, 66, 72, 73, 80, 81, 86, 87, 95, 96, 104, 105, 111, 114, 115, 125, 126, 131, 136, 137, 144, 145, 157, 167, 168, 173, 174, 183, 185, 188, 189, 196, 198, 199, 210, 218, 221, 222, 227, 229, 230, 237, 239, 242, 243, 250, 252, 253, 260, 263, 264, 271, 273, 274, 281, 284, 285, 289, 291, 292, 297, 300, 301, 308, 310, 311, 321, 324, 325, 332, 334, 335, 349, 354, 355, 356, 370, 375, 376, 377, 386, 391, 392, 393, 409, 410, 418, 427, 436, 437, 442, 446, 447, 450, 451, 457, 458, 461, 462, 467, 468, 472, 473, 477, 478, 480, 483, 484, 490, 491, 492, 497, 498, 501, 502, 510, 520, 521, 526, 527, 532, 534, 537, 538, 545, 547, 548, 555, 563, 566, 567, 572, 574, 575, 578, 580, 583, 584, 591, 593, 594, 597, 600, 601, 608, 610, 611, 614, 617, 618, 622, 624, 625, 626, 629, 630, 637, 639, 640, 646, 649, 650, 657, 659, 660, 670, 675, 676, 677, 687, 692, 693, 694, 699, 704, 705, 706, 707, 708, 709, 712, 714, 715, 745, 748], "restart": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "now": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "sys_reboot_async": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "set_and_get_rtc": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706], "sys_setrtc_async": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 377, 393, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "2023": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716], "5": [13, 38, 40, 44, 49, 53, 58, 65, 66, 69, 73, 80, 81, 87, 96, 105, 111, 115, 121, 122, 126, 132, 133, 137, 145, 146, 147, 153, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 174, 179, 183, 188, 189, 193, 199, 204, 205, 206, 210, 212, 213, 216, 217, 221, 222, 226, 230, 235, 236, 237, 242, 243, 247, 253, 258, 259, 263, 264, 268, 274, 279, 280, 284, 285, 288, 292, 300, 301, 305, 311, 319, 320, 324, 325, 329, 335, 336, 337, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 410, 431, 433, 437, 442, 447, 450, 451, 454, 458, 461, 462, 468, 473, 478, 480, 484, 486, 487, 491, 493, 494, 498, 502, 503, 504, 506, 510, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 527, 532, 537, 538, 542, 548, 549, 550, 555, 557, 558, 561, 562, 566, 567, 571, 575, 576, 577, 578, 583, 584, 588, 594, 595, 596, 600, 601, 605, 611, 612, 613, 617, 618, 621, 625, 629, 630, 634, 640, 644, 645, 649, 650, 654, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 716, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749], "8": [13, 44, 49, 50, 52, 53, 54, 58, 73, 87, 96, 105, 115, 126, 132, 137, 145, 146, 147, 153, 154, 156, 161, 174, 179, 180, 182, 183, 184, 192, 194, 195, 199, 204, 205, 206, 207, 209, 210, 211, 212, 213, 225, 230, 235, 236, 238, 246, 248, 249, 253, 258, 259, 267, 269, 270, 274, 279, 280, 292, 304, 306, 307, 311, 319, 320, 328, 330, 331, 335, 336, 337, 343, 344, 345, 346, 348, 349, 350, 356, 365, 366, 367, 369, 370, 371, 377, 382, 383, 385, 386, 387, 393, 410, 437, 438, 439, 441, 442, 443, 447, 458, 468, 473, 478, 484, 491, 493, 498, 502, 503, 504, 506, 507, 509, 514, 527, 528, 529, 531, 532, 533, 541, 543, 544, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 570, 575, 576, 577, 579, 587, 589, 590, 594, 595, 596, 604, 606, 607, 611, 612, 613, 625, 633, 635, 636, 640, 644, 645, 653, 655, 656, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 677, 682, 683, 684, 686, 687, 688, 694, 695, 696, 698, 699, 700, 706, 707, 708, 709, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749], "15": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 365, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 682, 694, 706], "05": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 365, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 541, 543, 544, 548, 570, 575, 587, 589, 590, 594, 604, 606, 607, 611, 625, 633, 635, 636, 640, 653, 655, 656, 660, 677, 682, 694, 706, 707], "08": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706], "07": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706], "sys_getrtc_async": [13, 14, 15, 16, 17, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 73, 74, 75, 76, 77, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 137, 138, 139, 140, 141, 145, 149, 150, 151, 152, 174, 175, 176, 177, 178, 199, 200, 201, 202, 203, 230, 231, 232, 233, 234, 253, 254, 255, 256, 257, 274, 275, 276, 277, 278, 292, 293, 294, 295, 296, 311, 315, 316, 317, 318, 335, 339, 340, 341, 342, 356, 357, 358, 359, 360, 377, 378, 379, 380, 381, 393, 394, 395, 396, 397, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "multiple_loops_async": [14, 45, 59, 74, 88, 97, 106, 116, 127, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "rtc": [14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 175, 176, 177, 178, 200, 201, 202, 203, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 357, 358, 359, 360, 378, 379, 380, 381, 394, 395, 396, 397, 713, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "string": [14, 15, 45, 46, 59, 60, 74, 75, 88, 89, 97, 98, 106, 107, 116, 117, 127, 128, 138, 139, 149, 150, 175, 176, 200, 201, 205, 231, 232, 236, 254, 255, 259, 275, 276, 280, 293, 294, 315, 316, 320, 339, 340, 344, 357, 358, 378, 379, 394, 395, 550, 577, 596, 613, 645, 665, 710, 711, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "readrtc_loop": [14, 45, 59, 74, 88, 97, 106, 116, 127, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "true": [14, 15, 17, 21, 22, 45, 46, 48, 49, 59, 60, 62, 74, 75, 77, 88, 89, 91, 97, 98, 100, 106, 107, 109, 116, 117, 119, 127, 128, 130, 138, 139, 141, 149, 150, 152, 153, 175, 176, 178, 179, 200, 201, 203, 206, 231, 232, 234, 238, 254, 255, 257, 275, 276, 278, 293, 294, 296, 315, 316, 318, 339, 340, 342, 345, 357, 358, 360, 361, 362, 363, 364, 365, 366, 378, 379, 381, 382, 394, 395, 397, 414, 415, 438, 506, 528, 551, 579, 666, 678, 679, 680, 681, 682, 683, 695, 707, 709, 713, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 749], "printstring_loop": [14, 45, 59, 74, 88, 97, 106, 116, 127, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "gather": [14, 45, 59, 74, 88, 97, 106, 116, 127, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "part": [14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 175, 176, 177, 178, 200, 201, 202, 203, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 357, 358, 359, 360, 378, 379, 380, 381, 394, 395, 396, 397], "never": [14, 16, 45, 47, 59, 61, 74, 76, 88, 90, 97, 99, 106, 108, 116, 118, 127, 129, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "multiple_loops_thread": [15, 46, 60, 75, 89, 98, 107, 117, 128, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395], "getrtc": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397], "str": [15, 16, 17, 46, 47, 48, 60, 61, 62, 75, 76, 77, 89, 90, 91, 98, 99, 100, 107, 108, 109, 117, 118, 119, 128, 129, 130, 139, 140, 141, 150, 151, 152, 176, 177, 178, 201, 202, 203, 232, 233, 234, 255, 256, 257, 276, 277, 278, 294, 295, 296, 316, 317, 318, 340, 341, 342, 358, 359, 360, 379, 380, 381, 395, 396, 397, 707, 708, 709, 710, 711, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "printstr": [15, 46, 60, 75, 89, 98, 107, 117, 128, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395], "rtc_thread": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397], "print_thread": [15, 46, 60, 75, 89, 98, 107, 117, 128, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395], "sync": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397, 718, 745], "queri": [15, 16, 17, 46, 47, 48, 60, 61, 62, 75, 76, 77, 89, 90, 91, 98, 99, 100, 107, 108, 109, 117, 118, 119, 128, 129, 130, 139, 140, 141, 150, 151, 152, 176, 177, 178, 201, 202, 203, 232, 233, 234, 255, 256, 257, 276, 277, 278, 294, 295, 296, 316, 317, 318, 340, 341, 342, 358, 359, 360, 379, 380, 381, 395, 396, 397], "_threadprint": [15, 46, 60, 75, 89, 98, 107, 117, 128, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395], "target": [15, 17, 27, 30, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397, 420, 423, 707, 723, 724, 734], "_threadrtc": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397], "immedi": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397], "parallel": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397], "single_loop_async": [16, 47, 61, 76, 90, 99, 108, 118, 129, 140, 151, 177, 202, 233, 256, 277, 295, 317, 341, 359, 380, 396], "loop_func": [16, 47, 61, 76, 90, 99, 108, 118, 129, 140, 151, 177, 202, 233, 256, 277, 295, 317, 341, 359, 380, 396], "timeout": [16, 47, 61, 76, 90, 99, 108, 118, 129, 140, 151, 177, 202, 233, 256, 277, 295, 317, 341, 359, 380, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "single_loop_thread": [17, 48, 62, 77, 91, 100, 109, 119, 130, 141, 152, 178, 203, 234, 257, 278, 296, 318, 342, 360, 381, 397], "motion_1axis_mov": [18, 411], "axi": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 361, 362, 363, 364, 365, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 678, 679, 680, 681, 682, 707, 723, 724, 734, 743, 748], "two_pulse_mod": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 411, 413, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433], "rel_posi_mod": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 36, 37, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 429, 430], "stop_decel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 432, 433], "encod": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 411, 413, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433, 723, 724, 734, 745, 748, 749], "axis_dir_cw": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 411, 413, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433], "encoder_dir_cw": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 411, 413, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433], "polar": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 411, 412, 413, 414, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433, 723, 724, 734, 735, 737, 738, 740, 741, 748], "enabl": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 120, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 215, 411, 412, 413, 414, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433, 485, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 523, 560, 723, 724, 725, 726, 727, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748], "active_low": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 411, 412, 413, 414, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433], "forward_enable_tru": [18, 19, 20, 24, 31, 32, 33, 36, 39, 40, 411, 412, 413, 417, 424, 425, 426, 429, 432, 433], "reverse_enable_tru": [18, 19, 20, 24, 31, 32, 33, 36, 39, 40, 411, 412, 413, 417, 424, 425, 426, 429, 432, 433], "home_enable_fals": [18, 31, 33, 36, 411, 424, 426, 429], "open_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "motion_opencfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 721, 723, 724, 734], "user": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 725, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744], "desktop": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433], "3axisstage_2p": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433], "ini": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 723, 724, 734, 748], "opencfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40], "load": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 365, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 432, 433, 682, 718, 719, 723, 724, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "motion_loadcfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 721, 723, 724, 734], "loadcfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40], "motion_cfgaxis_async": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 721, 724, 734], "cfgaxis_async": [18, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40], "cfglimit_async": [18, 19, 20, 24, 27, 30, 31, 32, 33, 36, 39, 40], "motion_cfghome_async": [18, 31, 33, 36, 721, 724, 734], "cfghome_async": [18, 31, 33, 36], "motion_cfgaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 721, 724, 734], "target_posi": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 429, 430, 432, 433, 724, 734], "5000": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 429, 430, 432, 433], "velo": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 429, 430, 432, 433, 724, 734], "accel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 429, 430, 432, 433, 724, 734], "100000": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 429, 430, 432, 433, 724, 734, 735, 736, 737, 738, 740, 741, 749], "decel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 429, 430, 432, 433, 724, 734], "cfgaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40], "encoder_posi": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 429, 432, 433, 723, 724, 734], "rstencoderposi_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40], "enableservoon_async": [18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 38, 39, 40], "motion_startsingleaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 39, 40, 721, 724, 734], "startsingleaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 39, 40], "move_statu": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429], "motion_getmovestatus_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 721, 724, 734], "logical_posi": [18, 36, 411, 429], "motion_getlogicalposi_async": [18, 34, 36, 721, 724, 734], "motion_getencoderposi_async": [18, 36, 721, 724, 734], "motion_stop_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 721, 724, 734], "stop_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40], "enableservooff_async": [18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 38, 39, 40], "close_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "motion_1axis_move_with_s_curve_acceler": [19, 412], "jerk": [19, 25, 412, 418, 724, 734], "accelet": [19, 25, 412, 418], "motion_cfgjerkandaccelmode_async": [19, 25, 721, 724, 734], "cfgjerkandaccelmode_async": [19, 25], "getmovestatus_async": [19, 22, 23, 24, 28], "motion_1axis_move_with_alarm_in": [20, 413], "alarm_enable_fals": [20, 413], "cfgaxisparam_async": 20, "motion_cfgalarm_async": [20, 721, 724, 734], "cfgalarm_async": 20, "getmovestatu": [20, 21], "motion_1axis_move_with_breakpoint": [21, 414], "start_posit": [21, 414], "100": [21, 28, 34, 40, 69, 193, 226, 247, 268, 288, 305, 312, 313, 329, 414, 421, 427, 433, 454, 542, 571, 588, 605, 621, 634, 641, 642, 654, 707, 740, 745], "pulse_width": [21, 414, 724, 734], "pulse_period": [21, 414, 724, 734], "pulse_numb": [21, 414, 724, 734], "motion_cfgbreakpoint_async": [21, 721, 724, 734], "cfgbreakpoint_async": 21, "motion_enablebreakpoint_async": [21, 721, 724, 734], "int": [21, 22, 28, 365, 414, 415, 421, 682, 707, 708, 709, 710, 711, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "enablebreakpoint_async": 21, "motion_1axis_move_with_captur": [22, 415], "rising_edg": [22, 415], "capture_logical_posit": [22, 415], "motion_cfgcapture_async": [22, 721, 724, 734], "cfgcapture_async": 22, "motion_enablecapture_async": [22, 721, 724, 734], "enablecapture_async": 22, "capture_point": [22, 415], "motion_readcapturepoint_async": [22, 721, 724, 734], "readcapturepoint_async": 22, "motion_1axis_move_with_configuration_fil": [23, 416], "motion_1axis_move_with_inposit": [24, 417], "inposi_enable_fals": [24, 417], "motion_cfginposi_async": [24, 721, 724, 734], "cfginposi_async": 24, "motion_2axis_circular_interpol": [25, 418], "interpol": [25, 26, 29, 418, 419, 422, 724, 734, 745], "x_axi": [25, 418, 724, 734], "y_axi": [25, 418, 724, 734], "center_point_x": [25, 418, 724, 734], "2000": [25, 26, 29, 418, 419, 422, 708, 714, 715, 716], "center_point_i": [25, 418, 724, 734], "finish_point_x": [25, 418, 724, 734], "finish_point_i": [25, 418, 724, 734], "circular_dir_cw": [25, 418], "scurv": [25, 418, 718, 719], "motion_cfgcircularinterpo_async": [25, 721, 724, 734], "1000": [25, 27, 28, 30, 39, 49, 153, 179, 206, 237, 345, 366, 382, 418, 420, 421, 423, 432, 438, 485, 506, 528, 551, 560, 578, 666, 683, 695, 740, 745], "cfgcircularinterpo_async": 25, "motion_startcircularinterpo_async": [25, 721, 724, 734], "startcircularinterpo_async": 25, "4": [25, 131, 146, 147, 161, 165, 166, 167, 168, 169, 170, 196, 205, 227, 236, 250, 259, 271, 280, 289, 308, 320, 332, 336, 337, 344, 418, 492, 503, 504, 514, 518, 519, 520, 521, 522, 523, 545, 550, 572, 577, 591, 596, 608, 613, 622, 637, 645, 657, 661, 662, 665, 707, 709, 710, 711, 712, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750], "x_axis_move_statu": [25, 418], "y_axis_move_statu": [25, 418], "motion_2axis_linear_interpol": [26, 419], "axis1": [26, 27, 29, 30, 419, 420, 422, 423, 724, 734], "dest_posi1": [26, 29, 419, 422, 724, 734], "axis2": [26, 27, 29, 30, 419, 420, 422, 423, 724, 734], "dest_posi2": [26, 29, 419, 422, 724, 734], "motion_cfg2axislinearinterpo_async": [26, 721, 724, 734], "cfg2axislinearinterpo_async": 26, "motion_startlinearinterpo_async": [26, 29, 721, 724, 734], "startlinearinterpo_async": [26, 29], "axis1_move_statu": [26, 29, 419, 422], "axis2_move_statu": [26, 29, 419, 422], "motion_3axis_asynchronous_mov": 27, "getaxisstatu": [27, 30], "005": [27, 30, 204, 235, 237, 258, 279, 319, 343, 420, 423, 549, 576, 578, 595, 612, 644, 664, 725, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744], "axis1_thread": [27, 30, 420, 423], "axis2_thread": [27, 30, 420, 423], "axis3_thread": [27, 30, 420, 423], "axis3": [27, 29, 30, 420, 422, 423, 724, 734], "forward_enable_fals": [27, 30, 420, 423], "reverse_enable_fals": [27, 30, 420, 423], "defin": [27, 30, 420, 423, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "thread_1": [27, 30, 420, 423], "thread_2": [27, 30, 420, 423], "thread_3": [27, 30, 420, 423], "servoon": [27, 30], "join": [27, 30, 420, 423], "servooff_async": 27, "motion_3axis_helical_interpol": [28, 421], "center_x": [28, 421], "center_i": [28, 421], "finish_x": [28, 421], "finish_i": [28, 421], "pitch_axis3": [28, 421, 724, 734], "pitch_axis4": [28, 421, 724, 734], "rotation_num": [28, 421], "cal_timeout": [28, 421], "helical_dir_cw": [28, 421], "motion_cfghelicalinterpo_async": [28, 721, 724, 734], "cfghelicalinterpo_async": 28, "motion_starthelicalinterpo_async": [28, 721, 724, 734], "starthelicalinterpo_async": 28, "motion_3axis_linear_interpol": [29, 422], "dest_posi3": [29, 422, 724, 734], "motion_cfg3axislinearinterpo_async": [29, 721, 724, 734], "cfg3axislinearinterpo_async": 29, "axis3_move_statu": [29, 422], "motion_3axis_synchronous_mov": [30, 423], "motion_startmultiaxismove_async": [30, 721, 724, 734], "startmultiaxismove_async": 30, "servooff": 30, "motion_find_hom": [31, 424], "find_hom": [31, 424], "dir_revers": [31, 32, 33, 424, 425, 426], "motion_cfgfindref_async": [31, 32, 33, 721, 724, 734], "search_velo": [31, 32, 33, 424, 425, 426, 724, 734], "search_accl": [31, 32, 33, 424, 425, 426, 724, 734], "approach_velo_perc": [31, 32, 33, 424, 425, 426, 724, 734], "20": [31, 32, 33, 120, 204, 215, 235, 238, 258, 279, 319, 343, 365, 424, 425, 426, 485, 549, 560, 576, 579, 595, 612, 644, 664, 682, 724, 734], "en_reset_posi": [31, 32, 33, 424, 425, 426, 724, 734], "offset_posi": [31, 32, 33, 424, 425, 426, 724, 734], "1500": [31, 32, 33, 424, 425, 426], "cfgfindref_async": [31, 32, 33], "motion_findref_async": [31, 32, 33, 721, 724, 734], "findref_async": [31, 32, 33], "home_statu": [31, 33, 424, 426], "hit_statu": [31, 33, 424, 426], "forward_hit": [31, 33, 424, 426], "reverse_hit": [31, 33, 424, 426], "hit": [31, 33, 424, 426], "motion_gethomestatus_async": [31, 33, 721, 724, 734], "found": [31, 33, 424, 426, 724, 734, 748], "driving_statu": [31, 32, 33, 424, 425, 426], "motion_checkref_async": [31, 32, 33, 721, 724, 734], "motion_find_index": [32, 425], "one_pulse_mod": [32, 425], "find_index": [32, 425], "motion_cfgencoder_async": [32, 39, 40, 721, 723, 724, 734], "cfgencoder_async": [32, 39, 40], "motion_find_limit": [33, 426], "find_limit": [33, 426], "motion_get_logical_posit": [34, 427], "motion_setlogicalposi_async": [34, 721, 724, 734], "setlogicalposi_async": 34, "posi": [34, 427], "getlogicalposi": 34, "motion_load_configuration_fil": [35, 428], "motion_position_blend": [36, 429], "new_posit": [36, 429, 724, 734], "motion_overrideaxisposi_async": [36, 721, 724, 734], "overrideaxisposi_async": 36, "motion_save_configuration_fil": [37, 430], "motion_savecfgfile_async": [37, 721, 723, 724, 734], "savecfgfile_async": 37, "motion_servo_on": [38, 431], "motion_velocity_blend": [39, 432], "velocity_mod": [39, 40, 432, 433], "overrid": [39, 40, 432, 433, 724, 734], "new_velo": [39, 40, 432, 433, 724, 734], "motion_overrideaxisvelocity_async": [39, 40, 721, 724, 734], "overrideaxisvelocity_async": [39, 40], "3000": [39, 40, 161, 432, 433, 514], "motion_velocity_blending_acceler": [40, 433], "veloc": [40, 361, 362, 363, 364, 433, 679, 680, 718, 719, 723, 724, 734, 743, 749], "new_accel": [40, 433, 724, 734], "new_decel": [40, 433, 724, 734], "motion_overrideaxisaccel_async": [40, 721, 724, 734], "overrideaxisaccel_async": 40, "6000": [40, 433], "ai_n_samples_onc": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695], "obtain": [49, 50, 52, 53, 54, 92, 101, 153, 154, 155, 156, 157, 158, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 469, 474, 506, 507, 508, 509, 510, 511, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "addition": [49, 53, 54, 92, 101, 153, 157, 158, 179, 183, 184, 206, 210, 211, 345, 349, 350, 366, 370, 371, 382, 386, 387, 438, 442, 443, 469, 474, 506, 510, 511, 528, 532, 533, 551, 555, 556, 666, 670, 671, 683, 687, 688, 695, 699, 700, 750], "To": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 206, 207, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 485, 486, 487, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 551, 552, 554, 555, 556, 560, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "begin": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 206, 207, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 485, 486, 487, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 551, 552, 554, 555, 556, 560, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "next": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 485, 486, 487, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "outlin": [49, 50, 52, 53, 54, 120, 121, 122, 153, 154, 155, 156, 157, 158, 163, 164, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 215, 216, 217, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 485, 486, 487, 506, 507, 508, 509, 510, 511, 516, 517, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 560, 561, 562, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "procedur": [49, 50, 52, 53, 54, 120, 121, 122, 153, 154, 155, 156, 157, 158, 163, 164, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 215, 216, 217, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 485, 486, 487, 506, 507, 508, 509, 510, 511, 516, 517, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 560, 561, 562, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "stream": [49, 50, 52, 120, 153, 154, 155, 156, 179, 180, 182, 206, 207, 209, 215, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 485, 506, 507, 508, 509, 528, 529, 531, 551, 552, 554, 560, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 718, 719, 725, 734, 735, 736, 737, 742, 743, 744, 746], "conclud": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 206, 207, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 485, 486, 487, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 551, 552, 554, 555, 556, 560, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "explain": [49, 50, 52, 53, 54, 120, 121, 122, 153, 154, 155, 156, 157, 158, 163, 164, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 215, 216, 217, 345, 346, 348, 349, 350, 361, 362, 363, 364, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 485, 486, 487, 506, 507, 508, 509, 510, 511, 516, 517, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 560, 561, 562, 666, 667, 669, 670, 671, 678, 679, 680, 681, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700], "channel": [49, 50, 52, 53, 54, 69, 120, 154, 156, 161, 179, 180, 182, 183, 184, 185, 193, 206, 207, 209, 210, 211, 215, 218, 226, 239, 247, 260, 268, 281, 288, 297, 305, 321, 329, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 454, 485, 507, 509, 514, 528, 529, 531, 532, 533, 534, 542, 551, 552, 554, 555, 556, 560, 563, 571, 580, 588, 597, 605, 614, 621, 626, 634, 646, 654, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 714, 715, 718, 719, 725, 726, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748], "On": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 749], "demand": [49, 50, 52, 120, 153, 154, 155, 156, 159, 160, 161, 179, 180, 182, 206, 207, 209, 212, 213, 215, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 485, 506, 507, 508, 509, 512, 513, 514, 528, 529, 531, 551, 552, 554, 557, 558, 560, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 718, 719, 725, 731, 734, 735, 736, 742, 743, 744, 745, 749], "continu": [49, 120, 153, 161, 179, 206, 215, 345, 366, 382, 438, 485, 506, 514, 528, 551, 560, 666, 683, 695, 707, 718, 719, 725, 731, 734, 735, 736, 742, 743, 744, 749], "sampling_r": [49, 50, 52, 120, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 215, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 485, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 560, 666, 667, 669, 683, 684, 686, 695, 696, 698, 725, 731, 734, 735, 736, 742, 743, 744], "200": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 745], "read_point": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698], "read_delai": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 237, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698], "ai_open_async": [49, 50, 52, 53, 54, 92, 101, 153, 154, 155, 156, 157, 158, 159, 160, 161, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 212, 213, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "acquisit": [49, 50, 52, 53, 54, 92, 101, 153, 154, 155, 156, 157, 158, 159, 160, 161, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 212, 213, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 438, 439, 441, 442, 443, 469, 474, 506, 507, 508, 509, 510, 511, 512, 513, 514, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 557, 558, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 725, 734, 735, 736, 742, 743, 744], "ai_setmode_async": [49, 50, 52, 53, 54, 153, 154, 155, 156, 157, 158, 161, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 721, 725, 734, 735, 736, 742, 743, 744], "rate": [49, 50, 52, 120, 153, 154, 155, 156, 161, 179, 180, 182, 192, 206, 207, 209, 215, 225, 246, 267, 304, 328, 345, 346, 348, 361, 362, 363, 364, 365, 366, 367, 369, 382, 383, 385, 438, 439, 441, 485, 506, 507, 508, 509, 514, 528, 529, 531, 541, 551, 552, 554, 560, 570, 587, 604, 633, 653, 666, 667, 669, 678, 679, 680, 681, 682, 683, 684, 686, 695, 696, 698, 707, 710, 724, 725, 731, 734, 735, 736, 742, 743, 744, 745, 748], "ai_setsamplingrate_async": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 721, 725, 734, 735, 736, 742, 743, 744], "ai_setnumsamples_async": [49, 153, 179, 206, 345, 366, 382, 721, 725, 734, 735, 736, 742, 743, 744], "ai_start_async": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 721, 725, 734, 735, 736, 742, 743, 744], "ai_2dlist": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698], "ai_readstreaming_async": [49, 50, 52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 508, 514, 721, 725, 734, 735, 736, 742, 743, 744], "len": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 237, 345, 346, 348, 365, 366, 367, 369, 382, 383, 385, 438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 578, 666, 667, 669, 682, 683, 684, 686, 695, 696, 698, 707, 712, 725, 734, 735, 736, 742, 743, 744], "ok": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695, 707, 709, 713], "ai_list": [49, 53, 54, 153, 157, 158, 159, 160, 179, 183, 184, 206, 210, 211, 212, 213, 345, 349, 350, 366, 370, 371, 382, 386, 387, 438, 442, 443, 506, 510, 511, 512, 513, 528, 532, 533, 551, 555, 556, 557, 558, 666, 670, 671, 683, 687, 688, 695, 699, 700], "enumer": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695, 707], "ani": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695, 707], "miss": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695], "ng": [49, 153, 179, 206, 345, 366, 382, 506], "ai_stop_async": [49, 50, 52, 153, 154, 155, 156, 161, 179, 180, 182, 206, 207, 209, 345, 346, 348, 366, 367, 369, 382, 383, 385, 721, 725, 734, 735, 736, 742, 743, 744], "ai_close_async": [49, 50, 52, 53, 54, 92, 101, 153, 154, 155, 156, 157, 158, 159, 160, 161, 179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 212, 213, 345, 346, 348, 349, 350, 366, 367, 369, 370, 371, 382, 383, 385, 386, 387, 721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "ai_continu": [50, 154, 180, 207, 346, 367, 383, 439, 507, 529, 552, 667, 684, 696], "n": [50, 52, 120, 146, 147, 154, 155, 156, 161, 180, 182, 207, 209, 215, 336, 337, 346, 348, 365, 367, 369, 383, 385, 439, 441, 485, 503, 504, 507, 508, 509, 514, 529, 531, 552, 554, 560, 661, 662, 667, 669, 682, 684, 686, 696, 698, 707, 718, 719, 725, 731, 733, 734, 735, 736, 741, 742, 743, 744, 745, 749], "sampl": [50, 52, 120, 146, 147, 154, 155, 156, 161, 180, 182, 207, 209, 215, 336, 337, 346, 348, 367, 369, 383, 385, 439, 441, 485, 503, 504, 507, 508, 509, 514, 529, 531, 552, 554, 560, 661, 662, 667, 669, 684, 686, 696, 698, 707, 715, 718, 719, 725, 731, 733, 734, 735, 736, 741, 742, 743, 744, 745, 748, 749], "data_len": [50, 52, 154, 155, 156, 161, 180, 182, 207, 209, 346, 348, 367, 369, 383, 385, 439, 441, 507, 508, 509, 514, 529, 531, 552, 554, 667, 669, 684, 686, 696, 698], "did": [51, 181, 208, 214, 347, 368, 384, 440, 530, 553, 559, 668, 685, 697], "ai_continuous_with_logg": [52, 156, 182, 209, 348, 369, 385, 441, 509, 531, 554, 669, 686, 698], "Then": [52, 156, 182, 209, 348, 369, 385, 441, 509, 531, 554, 669, 686, 698], "save": [52, 147, 156, 182, 209, 313, 337, 348, 365, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 682, 686, 698, 718, 719, 723, 724, 734, 745], "csv": [52, 147, 156, 182, 209, 313, 337, 348, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 686, 698, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "wpc_test": [52, 147, 156, 182, 209, 313, 337, 348, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 686, 698], "logger_openfil": [52, 147, 156, 182, 209, 313, 337, 348, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 686, 698, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "header": [52, 147, 156, 182, 209, 313, 337, 348, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 686, 698, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "logger_writehead": [52, 147, 156, 182, 209, 313, 337, 348, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 686, 698, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ch0": [52, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 312, 313, 314, 338, 348, 369, 385, 441, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 641, 642, 643, 663, 669, 686, 698, 707], "ch1": [52, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 312, 313, 314, 337, 338, 348, 369, 385, 441, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 641, 642, 643, 662, 663, 669, 686, 698, 707], "ch2": [52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 348, 369, 385, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 669, 686, 698, 707], "ch3": [52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 348, 369, 385, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 669, 686, 698, 707], "ch4": [52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 348, 369, 385, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 669, 686, 698, 707], "ch5": [52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 348, 369, 385, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 669, 686, 698, 707], "ch6": [52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 348, 369, 385, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 669, 686, 698, 707], "ch7": [52, 153, 154, 155, 156, 157, 158, 159, 160, 161, 182, 209, 348, 369, 385, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 531, 554, 669, 686, 698, 707], "logger_write2dlist": [52, 156, 182, 209, 348, 369, 385, 441, 509, 531, 554, 669, 686, 698, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ai_on_demand_in_loop": [53, 157, 183, 210, 349, 370, 386, 442, 510, 532, 555, 670, 687, 699], "util": [53, 157, 183, 210, 349, 365, 370, 386, 442, 510, 532, 555, 670, 682, 687, 699], "retriev": [53, 54, 92, 101, 157, 158, 183, 184, 210, 211, 349, 350, 370, 371, 386, 387, 442, 443, 469, 474, 510, 511, 532, 533, 555, 556, 670, 671, 687, 688, 699, 700, 725, 734, 735, 736, 737, 742, 743, 744], "chip_select": [53, 153, 154, 155, 156, 157, 158, 159, 160, 161, 183, 210, 212, 213, 349, 370, 386, 506, 507, 508, 509, 510, 511, 512, 513, 514, 725, 734, 735, 736, 742, 743, 744], "ai_readondemand_async": [53, 54, 92, 101, 153, 154, 155, 156, 157, 158, 159, 160, 161, 183, 184, 210, 211, 212, 213, 349, 350, 370, 371, 386, 387, 508, 514, 721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "ai_on_demand_onc": [54, 92, 101, 158, 184, 211, 350, 371, 387, 443, 469, 474, 511, 533, 556, 671, 688, 700], "dio_loopback_pin": [63, 78, 165, 186, 219, 240, 261, 282, 298, 322, 448, 459, 518, 535, 564, 581, 598, 615, 627, 647], "involv": [63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "do": [63, 64, 78, 79, 165, 166, 186, 187, 194, 195, 196, 219, 220, 227, 240, 241, 248, 249, 250, 261, 262, 269, 270, 271, 282, 283, 289, 298, 299, 306, 307, 308, 322, 323, 330, 331, 332, 448, 449, 459, 460, 518, 519, 535, 536, 543, 544, 545, 564, 565, 572, 581, 582, 589, 590, 591, 598, 599, 606, 607, 608, 615, 616, 622, 627, 628, 635, 636, 637, 647, 648, 655, 656, 657, 711, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "send": [63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 707, 735, 736, 737, 738, 740, 741], "signal": [63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 120, 121, 122, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 193, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 240, 241, 242, 243, 244, 245, 247, 261, 262, 263, 264, 265, 266, 268, 282, 283, 284, 285, 286, 287, 288, 298, 299, 300, 301, 302, 303, 305, 322, 323, 324, 325, 326, 327, 329, 448, 449, 450, 451, 452, 453, 454, 459, 460, 461, 462, 463, 464, 485, 486, 487, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 542, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 581, 582, 583, 584, 585, 586, 588, 598, 599, 600, 601, 602, 603, 605, 615, 616, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 634, 647, 648, 649, 650, 651, 652, 654, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "di": [63, 64, 69, 78, 79, 165, 166, 186, 187, 193, 196, 219, 220, 226, 227, 240, 241, 247, 250, 261, 262, 268, 271, 282, 283, 288, 289, 298, 299, 305, 308, 322, 323, 329, 332, 448, 449, 454, 459, 460, 518, 519, 535, 536, 542, 545, 564, 565, 571, 572, 581, 582, 588, 591, 598, 599, 605, 608, 615, 616, 621, 622, 627, 628, 634, 637, 647, 648, 654, 657, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "receiv": [63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 204, 212, 213, 219, 220, 235, 240, 241, 258, 261, 262, 279, 282, 283, 298, 299, 319, 322, 323, 343, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 549, 557, 558, 564, 565, 576, 581, 582, 595, 598, 599, 612, 615, 616, 627, 628, 644, 647, 648, 664, 735, 736, 737, 738, 740, 741, 748], "singl": [63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 718, 724, 734], "commonli": [63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "known": [63, 64, 78, 79, 165, 166, 186, 187, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "illustr": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652], "requir": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 159, 160, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 212, 213, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 512, 513, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 557, 558, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652, 745], "oper": [63, 64, 78, 79, 165, 166, 186, 187, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 724, 734, 745, 748], "lastli": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 159, 160, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 212, 213, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 322, 323, 324, 325, 326, 327, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 512, 513, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 557, 558, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 598, 599, 600, 601, 602, 603, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 647, 648, 649, 650, 651, 652], "do_port": [63, 64, 78, 79, 111, 165, 166, 167, 168, 169, 170, 186, 187, 194, 195, 219, 220, 240, 241, 248, 249, 261, 262, 269, 270, 282, 283, 298, 299, 306, 307, 322, 323, 330, 331, 448, 449, 459, 460, 480, 518, 519, 520, 521, 522, 523, 535, 536, 543, 544, 564, 565, 581, 582, 589, 590, 598, 599, 606, 607, 615, 616, 627, 628, 635, 636, 647, 648, 655, 656, 711, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_port": [63, 64, 78, 79, 165, 166, 186, 187, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_pin": [63, 78, 165, 186, 219, 240, 261, 282, 298, 322, 448, 459, 518, 535, 564, 581, 598, 615, 627, 647], "di_pin": [63, 78, 165, 186, 219, 240, 261, 282, 298, 322, 448, 459, 518, 535, 564, 581, 598, 615, 627, 647], "do_valu": [63, 64, 67, 68, 78, 79, 82, 83, 165, 166, 169, 170, 186, 187, 190, 191, 219, 220, 223, 224, 240, 241, 244, 245, 261, 262, 265, 266, 282, 283, 286, 287, 298, 299, 302, 303, 322, 323, 326, 327, 448, 449, 452, 453, 459, 460, 463, 464, 518, 519, 522, 523, 535, 536, 539, 540, 564, 565, 568, 569, 581, 582, 585, 586, 598, 599, 602, 603, 615, 616, 619, 620, 627, 628, 631, 632, 647, 648, 651, 652], "digit": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 111, 121, 122, 131, 132, 133, 159, 160, 163, 164, 168, 186, 187, 188, 189, 190, 191, 194, 195, 212, 213, 216, 217, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 248, 249, 261, 262, 263, 264, 265, 266, 269, 270, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 306, 307, 322, 323, 324, 325, 326, 327, 330, 331, 365, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 480, 486, 487, 492, 493, 494, 512, 513, 516, 517, 520, 521, 535, 536, 537, 538, 539, 540, 543, 544, 557, 558, 561, 562, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 589, 590, 598, 599, 600, 601, 602, 603, 606, 607, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 635, 636, 647, 648, 649, 650, 651, 652, 655, 656, 682, 709, 711, 726, 727, 730, 732, 734, 735, 736, 737, 738, 739, 740, 741, 745], "output": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 194, 195, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 248, 249, 261, 262, 263, 264, 265, 266, 269, 270, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 306, 307, 322, 323, 324, 325, 326, 327, 330, 331, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 543, 544, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 589, 590, 598, 599, 600, 601, 602, 603, 606, 607, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 635, 636, 647, 648, 649, 650, 651, 652, 655, 656, 708, 709, 711, 718, 719, 726, 727, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 745, 748], "do_openpins_async": [63, 65, 67, 78, 80, 82, 186, 188, 190, 194, 195, 219, 221, 223, 240, 242, 244, 248, 249, 261, 263, 265, 269, 270, 282, 284, 286, 298, 300, 302, 306, 307, 322, 324, 326, 330, 331, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "high": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 194, 195, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 248, 249, 261, 262, 263, 264, 265, 266, 269, 270, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 306, 307, 322, 323, 324, 325, 326, 327, 330, 331, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 543, 544, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 589, 590, 598, 599, 600, 601, 602, 603, 606, 607, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 635, 636, 647, 648, 649, 650, 651, 652, 655, 656, 711, 723, 724, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749], "low": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 194, 195, 219, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 248, 249, 261, 262, 263, 264, 265, 266, 269, 270, 282, 283, 284, 285, 286, 287, 298, 299, 300, 301, 302, 303, 306, 307, 322, 323, 324, 325, 326, 327, 330, 331, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 539, 540, 543, 544, 564, 565, 566, 567, 568, 569, 581, 582, 583, 584, 585, 586, 589, 590, 598, 599, 600, 601, 602, 603, 606, 607, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 635, 636, 647, 648, 649, 650, 651, 652, 655, 656, 711, 723, 724, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 749], "do_writepins_async": [63, 67, 78, 82, 165, 169, 186, 190, 194, 195, 219, 223, 240, 244, 248, 249, 261, 265, 269, 270, 282, 286, 298, 302, 306, 307, 322, 326, 330, 331, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "iutput": [63, 78, 186, 219, 240, 261, 282, 298, 322, 448, 459, 535, 564, 581, 598, 615, 627, 647], "di_openpins_async": [63, 78, 186, 219, 240, 261, 282, 298, 322, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "state": [63, 64, 65, 66, 78, 79, 80, 81, 111, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 219, 220, 221, 222, 240, 241, 242, 243, 261, 262, 263, 264, 282, 283, 284, 285, 298, 299, 300, 301, 322, 323, 324, 325, 448, 449, 450, 451, 459, 460, 461, 462, 480, 518, 519, 520, 521, 522, 523, 535, 536, 537, 538, 564, 565, 566, 567, 581, 582, 583, 584, 598, 599, 600, 601, 615, 616, 617, 618, 627, 628, 629, 630, 647, 648, 649, 650, 709, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "di_readpins_async": [63, 78, 165, 186, 219, 240, 261, 282, 298, 322, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_closepins_async": [63, 65, 67, 78, 80, 82, 186, 188, 190, 194, 195, 219, 221, 223, 240, 242, 244, 248, 249, 261, 263, 265, 269, 270, 282, 284, 286, 298, 300, 302, 306, 307, 322, 324, 326, 330, 331, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "input": [63, 64, 78, 79, 186, 187, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748], "di_closepins_async": [63, 78, 186, 219, 240, 261, 282, 298, 322, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "dio_loopback_port": [64, 79, 166, 187, 220, 241, 262, 283, 299, 323, 449, 460, 519, 536, 565, 582, 599, 616, 628, 648], "pin": [64, 69, 79, 121, 122, 159, 160, 163, 164, 166, 187, 193, 194, 195, 212, 213, 216, 217, 220, 226, 241, 247, 248, 249, 262, 268, 269, 270, 283, 288, 299, 305, 306, 307, 323, 329, 330, 331, 449, 454, 460, 486, 487, 512, 513, 516, 517, 519, 536, 542, 543, 544, 557, 558, 561, 562, 565, 571, 582, 588, 589, 590, 599, 605, 606, 607, 616, 621, 628, 634, 635, 636, 648, 654, 655, 656, 711, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "do_openport_async": [64, 66, 68, 79, 81, 83, 187, 189, 191, 220, 222, 224, 241, 243, 245, 262, 264, 266, 283, 285, 287, 299, 301, 303, 323, 325, 327, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_openport_async": [64, 79, 187, 220, 241, 262, 283, 299, 323, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_writeport_async": [64, 68, 79, 83, 111, 166, 170, 187, 191, 220, 224, 241, 245, 262, 266, 283, 287, 299, 303, 323, 327, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_readport_async": [64, 79, 166, 187, 220, 241, 262, 283, 299, 323, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_closeport_async": [64, 66, 68, 79, 81, 83, 187, 189, 191, 220, 222, 224, 241, 243, 245, 262, 264, 266, 283, 285, 287, 299, 301, 303, 323, 325, 327, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_closeport_async": [64, 79, 187, 220, 241, 262, 283, 299, 323, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "dio": [65, 66, 67, 68, 80, 81, 82, 83, 167, 168, 169, 170, 188, 189, 190, 191, 194, 195, 221, 222, 223, 224, 242, 243, 244, 245, 248, 249, 263, 264, 265, 266, 269, 270, 284, 285, 286, 287, 300, 301, 302, 303, 306, 307, 324, 325, 326, 327, 330, 331, 450, 451, 452, 453, 461, 462, 463, 464, 520, 521, 522, 523, 537, 538, 539, 540, 543, 544, 566, 567, 568, 569, 583, 584, 585, 586, 589, 590, 600, 601, 602, 603, 606, 607, 617, 618, 619, 620, 629, 630, 631, 632, 635, 636, 649, 650, 651, 652, 655, 656, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "do_blinky_pin": [65, 80, 167, 188, 221, 242, 263, 284, 300, 324, 450, 461, 520, 537, 566, 583, 600, 617, 629, 649], "loop": [65, 66, 80, 81, 131, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 492, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 718, 719], "voltag": [65, 66, 67, 68, 80, 81, 82, 83, 120, 167, 168, 169, 170, 188, 189, 190, 191, 215, 221, 222, 223, 224, 242, 243, 244, 245, 263, 264, 265, 266, 284, 285, 286, 287, 300, 301, 302, 303, 324, 325, 326, 327, 450, 451, 452, 453, 461, 462, 463, 464, 485, 520, 521, 522, 523, 537, 538, 539, 540, 560, 566, 567, 568, 569, 583, 584, 585, 586, 600, 601, 602, 603, 617, 618, 619, 620, 629, 630, 631, 632, 649, 650, 651, 652, 707, 708, 725, 728, 729, 731, 734, 736, 745, 749], "appli": [65, 66, 80, 81, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 365, 450, 451, 461, 462, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 682], "blink": [65, 66, 80, 81, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650], "effect": [65, 66, 80, 81, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 725, 731, 734, 735, 736, 742, 743, 744], "pinindex": [65, 80, 167, 188, 221, 242, 263, 284, 300, 324, 450, 461, 520, 537, 566, 583, 600, 617, 629, 649], "toggl": [65, 66, 80, 81, 111, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 480, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_togglepins_async": [65, 80, 167, 188, 221, 242, 263, 284, 300, 324, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "led": [65, 66, 67, 68, 80, 81, 82, 83, 167, 168, 188, 189, 190, 191, 221, 222, 223, 224, 242, 243, 244, 245, 263, 264, 265, 266, 284, 285, 286, 287, 300, 301, 302, 303, 324, 325, 326, 327, 450, 451, 452, 453, 461, 462, 463, 464, 520, 521, 537, 538, 539, 540, 566, 567, 568, 569, 583, 584, 585, 586, 600, 601, 602, 603, 617, 618, 619, 620, 629, 630, 631, 632, 649, 650, 651, 652, 707, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 742, 743, 744], "do_blinky_port": [66, 81, 168, 189, 222, 243, 264, 285, 301, 325, 451, 462, 521, 538, 567, 584, 601, 618, 630, 650], "do_toggleport_async": [66, 81, 168, 189, 222, 243, 264, 285, 301, 325, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_write_pin": [67, 82, 169, 190, 223, 244, 265, 286, 302, 326, 452, 463, 522, 539, 568, 585, 602, 619, 631, 651], "written": [67, 68, 82, 83, 169, 170, 190, 191, 192, 194, 223, 224, 225, 244, 245, 246, 248, 265, 266, 267, 269, 286, 287, 302, 303, 304, 306, 326, 327, 328, 330, 452, 453, 463, 464, 522, 523, 539, 540, 541, 543, 568, 569, 570, 585, 586, 587, 589, 602, 603, 604, 606, 619, 620, 631, 632, 633, 635, 651, 652, 653, 655, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pin_index": [67, 82, 169, 190, 223, 244, 265, 286, 302, 326, 452, 463, 522, 539, 568, 585, 602, 619, 631, 651, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_write_port": [68, 83, 170, 191, 224, 245, 266, 287, 303, 327, 453, 464, 523, 540, 569, 586, 603, 620, 632, 652], "pwm_gener": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654], "should": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 725, 731, 734, 735, 736, 737, 742, 743, 744], "frequenc": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741, 749], "duti": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741], "cycl": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741], "so": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654], "can": [69, 161, 193, 226, 247, 268, 288, 305, 329, 454, 514, 542, 571, 588, 605, 621, 634, 654, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 750], "proper": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654], "By": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654], "want": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 725, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "could": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 730, 732, 733, 740, 741], "duty_cycl": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741], "50": [69, 193, 226, 247, 268, 288, 305, 329, 365, 454, 542, 571, 588, 605, 621, 634, 654, 682], "pwm_open_async": [69, 193, 226, 247, 268, 288, 305, 329, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_setfrequency_async": [69, 193, 226, 247, 268, 288, 305, 329, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_setdutycycle_async": [69, 193, 226, 247, 268, 288, 305, 329, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_start_async": [69, 193, 226, 247, 268, 288, 305, 329, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_stop_async": [69, 193, 226, 247, 268, 288, 305, 329, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_close_async": [69, 193, 226, 247, 268, 288, 305, 329, 721, 726, 735, 736, 737, 738, 739, 740, 741], "ai24bit": [92, 101, 469, 474], "relay_read_count": [110, 479], "index": [110, 479, 718, 719, 724, 730, 734, 737, 748, 749], "relay_open_async": [110, 111, 721, 730], "relay_read_async": [110, 721, 730], "relay_close_async": [110, 111, 721, 730], "relay_set_channel": [111, 480], "valu": [111, 121, 122, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 192, 194, 212, 213, 216, 217, 225, 246, 248, 267, 269, 304, 306, 328, 330, 355, 376, 392, 480, 486, 487, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 541, 543, 557, 558, 561, 562, 570, 587, 589, 604, 606, 633, 635, 653, 655, 676, 693, 705, 707, 708, 711, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 750], "ao_waveform_gen": [120, 215, 485, 560], "number_of_sampl": [120, 215, 485, 560], "form_mod": [120, 215, 485, 560], "dc": [120, 215, 485, 560, 731, 734, 736, 749], "retangular": [120, 215, 485, 560, 731, 734, 736], "triangular": [120, 215, 485, 560, 731, 734, 736, 749], "sine": [120, 215, 485, 560, 731, 734, 736, 749], "amplitud": [120, 215, 485, 560, 731, 734, 736], "freq_0": [120, 215, 485, 560], "freq_1": [120, 215, 485, 560], "ao_open_async": [120, 121, 122, 159, 160, 161, 163, 164, 212, 213, 215, 216, 217, 721, 731, 734, 736], "ao_setmode_async": [120, 215, 721, 731, 734, 736], "10k": [120, 215, 485, 560, 746], "hz": [120, 161, 215, 361, 362, 363, 364, 365, 485, 514, 560, 678, 679, 680, 681, 682, 725, 726, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ao_setsamplingrate_async": [120, 215, 721, 731, 734, 736], "numsampl": [120, 215, 485, 560, 707], "ao_setnumsamples_async": [120, 215, 721, 731, 734, 736], "ao_setnumsampl": [120, 215, 485, 560, 721, 731, 734, 736], "ao_setenablechannels_async": [120, 215, 721, 731, 734, 736], "form": [120, 215, 485, 560, 731, 734, 736, 745, 748], "ao_setform_async": [120, 215, 721, 731, 734, 736], "ao_setformparam_async": [120, 215, 721, 731, 734, 736], "info": [120, 165, 166, 167, 168, 169, 170, 215, 485, 518, 519, 520, 521, 522, 523, 560, 707, 717, 718, 719, 731, 734, 736], "ao_openstreaming_async": [120, 215, 721, 731, 734, 736], "ao_startstreaming_async": [120, 215, 721, 731, 734, 736], "ao_closestreaming_async": [120, 215, 721, 731, 734, 736], "ao_close_async": [120, 121, 122, 159, 160, 161, 163, 164, 212, 213, 215, 216, 217, 721, 731, 734, 736], "ao_write_all_channel": [121, 163, 216, 486, 516, 561], "simultan": [121, 159, 163, 212, 216, 486, 512, 516, 557, 561, 708, 725, 731, 734, 735, 736, 742, 743, 744, 745], "ao_value_list": [121, 122, 159, 160, 163, 164, 212, 213, 216, 217, 486, 487, 512, 513, 516, 517, 557, 558, 561, 562], "ao_writeallchannels_async": [121, 159, 163, 212, 216, 708, 721, 731, 734, 736], "ao_write_one_channel": [122, 164, 217, 487, 517, 562], "vaul": [122, 160, 161, 164, 213, 217, 487, 513, 514, 517, 558, 562], "ao_writeonechannel_async": [122, 160, 161, 164, 213, 217, 721, 731, 734, 736], "dpot_readbychannel": [131, 492, 721, 732], "potentiomet": [131, 132, 133, 492, 493, 494, 732], "resist": [131, 132, 133, 492, 493, 494, 732], "dpot_open_async": [131, 132, 133, 721, 732], "resistance_ratio": [131, 132, 133, 492, 493, 494, 732], "dpot_readbychannel_async": [131, 721, 732], "dpot_close_async": [131, 132, 133, 721, 732], "dpot_writeallchannel": [132, 493, 721, 732], "dpot_writeallchannel_async": [132, 721, 732], "dpot_writebychannel": [133, 494, 721, 732], "specef": [133, 494, 726, 727, 730, 732, 734, 735, 736, 737, 738, 739, 740, 741], "dpot_writebychannel_async": [133, 721, 732], "temperature_tc": [146, 147, 148, 336, 337, 338, 503, 504, 505, 661, 662, 663], "tc_read_channel_data": [146, 336, 503, 661], "thermocoupl": [146, 147, 336, 337, 503, 504, 661, 662, 715, 733, 740, 741, 745, 750], "show": [146, 147, 148, 192, 194, 195, 196, 204, 205, 225, 227, 235, 236, 237, 238, 246, 248, 249, 250, 258, 259, 267, 269, 270, 271, 279, 280, 289, 304, 306, 307, 308, 312, 313, 314, 319, 320, 328, 330, 331, 332, 336, 337, 338, 343, 344, 365, 503, 504, 505, 541, 543, 544, 545, 549, 550, 570, 572, 576, 577, 578, 579, 587, 589, 590, 591, 595, 596, 604, 606, 607, 608, 612, 613, 622, 633, 635, 636, 637, 641, 642, 643, 644, 645, 653, 655, 656, 657, 661, 662, 663, 664, 665, 682, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "thermal": [146, 147, 148, 312, 313, 314, 336, 337, 338, 503, 504, 505, 641, 642, 643, 661, 662, 663, 733, 740, 741, 748], "ch": [146, 147, 336, 337, 503, 504, 661, 662], "over_sampling_mod": [146, 147, 336, 337, 503, 504, 661, 662], "16": [146, 147, 194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 336, 337, 503, 504, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 661, 662, 710, 711, 733, 735, 737, 738, 740, 741, 742, 743, 744, 745, 749], "thermo_typ": [146, 147, 336, 337, 503, 504, 661, 662], "b": [146, 147, 336, 337, 503, 504, 661, 662, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749], "type": [146, 147, 336, 337, 503, 504, 661, 662, 714, 715, 723, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 748], "e": [146, 147, 336, 337, 503, 504, 661, 662, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749], "j": [146, 147, 336, 337, 503, 504, 661, 662, 707, 733, 741, 745, 749], "k": [146, 147, 336, 337, 365, 503, 504, 661, 662, 682, 707, 733, 741, 745, 749], "r": [146, 147, 336, 337, 503, 504, 661, 662, 733, 741, 745, 749], "6": [146, 147, 161, 165, 166, 167, 168, 169, 170, 336, 337, 361, 363, 365, 503, 504, 514, 518, 519, 520, 521, 522, 523, 661, 662, 680, 682, 707, 709, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749], "thermo": [146, 147, 148, 336, 337, 338, 351, 372, 388, 503, 504, 505, 661, 662, 663, 672, 689, 701, 715], "thermal_open_async": [146, 147, 148, 312, 313, 314, 336, 337, 338, 721, 733, 740, 741], "over": [146, 147, 336, 337, 503, 504, 661, 662, 715, 733, 741], "thermal_setoversampling_async": [146, 147, 336, 337, 721, 733, 741], "thermal_settype_async": [146, 147, 336, 337, 714, 721, 733, 740, 741], "500": [146, 147, 237, 238, 336, 337, 503, 504, 578, 579, 661, 662, 737], "m": [146, 147, 312, 313, 336, 337, 503, 504, 641, 642, 661, 662, 707], "oversampl": [146, 147, 336, 337, 503, 504, 661, 662, 715, 733, 741], "thermal_readsensor_async": [146, 147, 312, 313, 336, 337, 721, 733, 740, 741], "sensor": [146, 147, 192, 225, 246, 267, 304, 312, 313, 328, 336, 337, 365, 503, 504, 541, 570, 587, 604, 633, 641, 642, 653, 661, 662, 682, 714, 715, 733, 740, 741, 745], "deg": [146, 147, 312, 313, 336, 337, 365, 503, 504, 641, 642, 661, 662, 682], "thermal_close_async": [146, 147, 148, 312, 313, 314, 336, 337, 338, 721, 733, 740, 741], "tc_read_channel_data_with_logg": [147, 337, 504, 662], "them": [147, 313, 337, 504, 642, 662, 725, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "logger_writevalu": [147, 337, 504, 662, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "tc_read_channel_statu": [148, 338, 505, 663], "thermal_getstatus_async": [148, 314, 338, 721, 733, 740, 741], "If": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 365, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 682, 724, 725, 728, 729, 730, 731, 734, 735, 736, 737, 742, 743, 744, 747], "invok": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523], "function": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 365, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 682, 721, 745, 748], "sys_setaiomode_async": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 508, 514, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ai_enablecs_async": [153, 154, 155, 156, 157, 158, 159, 160, 161, 508, 514, 721, 725, 734, 735, 736, 742, 743, 744], "subsequ": [153, 154, 155, 156, 157, 158, 159, 160, 161, 506, 507, 508, 509, 510, 511, 512, 513, 514], "displai": [153, 154, 155, 156, 157, 158, 159, 160, 161, 212, 213, 365, 506, 507, 508, 509, 510, 511, 512, 513, 514, 557, 558, 682], "follow": [153, 154, 155, 156, 157, 158, 159, 160, 161, 212, 213, 506, 507, 508, 509, 510, 511, 512, 513, 514, 557, 558], "cs0": [153, 154, 155, 156, 157, 158, 159, 160, 161, 506, 507, 508, 509, 510, 511, 512, 513, 514], "cs2": [153, 154, 155, 156, 157, 158, 159, 160, 161, 506, 507, 508, 509, 510, 511, 512, 513, 514], "sample0": [153, 154, 155, 156, 157, 158, 159, 160, 161, 506, 507, 508, 509, 510, 511, 512, 513, 514], "sample1": [153, 154, 155, 156, 157, 158, 159, 160, 161, 506, 507, 508, 509, 510, 511, 512, 513, 514], "samplen": [153, 154, 155, 156, 157, 158, 159, 160, 161, 506, 507, 508, 509, 510, 511, 512, 513, 514], "slot": [153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 506, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "aio": [153, 154, 155, 156, 157, 158, 161, 163, 164, 506, 507, 508, 509, 510, 511, 514, 516, 517, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 750], "modul": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 723, 724, 725, 728, 729, 730, 731, 732, 734, 735, 736, 737, 742, 743, 744, 745, 747, 750], "slot_mod": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523], "sys_getmode_async": [153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ai_continuous_multi_slot": [155, 508], "slot_list": [155, 508], "counter": [155, 161, 508, 514, 718, 719, 724, 730, 734, 735, 736, 737, 738, 739, 740, 741, 747, 748], "aio_all_channels_loopback": [159, 212, 512, 557], "across": [159, 212, 512, 557], "ao": [159, 160, 212, 213, 512, 513, 557, 558, 718, 719, 731, 734, 736, 746, 748, 750], "ai": [159, 160, 212, 213, 512, 513, 557, 558, 718, 719, 725, 728, 729, 734, 735, 736, 742, 743, 744, 748, 750], "The": [159, 160, 165, 166, 167, 168, 169, 170, 192, 212, 213, 225, 246, 267, 304, 328, 512, 513, 518, 519, 520, 521, 522, 523, 541, 557, 558, 570, 587, 604, 633, 653, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748], "ar": [159, 160, 165, 166, 167, 168, 169, 170, 212, 213, 512, 513, 518, 519, 520, 521, 522, 523, 557, 558, 725, 726, 727, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 750], "wire": [159, 160, 212, 213, 512, 513, 557, 558, 740, 745], "initi": [159, 160, 212, 213, 512, 513, 557, 558, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 734], "correspond": [159, 160, 212, 213, 512, 513, 557, 558, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "onc": [159, 160, 212, 213, 512, 513, 557, 558, 718, 719], "again": [159, 160, 196, 212, 213, 227, 250, 271, 289, 308, 332, 365, 512, 513, 545, 557, 558, 572, 591, 608, 622, 637, 657, 682], "aio_one_channel_loopback": [160, 213, 513, 558], "specif": [160, 213, 513, 558, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746], "ao_output_while_ai_stream": [161, 514], "Not": [161, 514], "alter": [161, 514], "Its": [161, 514, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "must": [161, 514], "less": [161, 238, 514, 579], "than": [161, 238, 514, 579, 725, 734, 735, 736, 742, 743, 744], "equal": [161, 514, 725, 734, 735, 736, 742, 743, 744], "random": [161, 192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 514, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655], "ao_list": [161, 514], "select": [161, 514, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 734, 735, 736, 742, 743, 744, 746], "list": [161, 205, 236, 259, 280, 320, 344, 514, 550, 577, 596, 613, 645, 665, 707, 710, 711, 712, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ao_valu": [161, 514], "choic": [161, 514], "ha": [162, 365, 438, 515, 528, 551, 666, 682, 683, 695, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747], "yet": [162, 515], "sys_setdiomode_async": [165, 166, 167, 168, 169, 170, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "assign": [165, 166, 167, 168, 169, 170, 518, 519, 520, 521, 522, 523, 750], "dio_loadstartup_async": [165, 166, 167, 168, 169, 170, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "direct": [165, 166, 167, 168, 169, 170, 518, 519, 520, 521, 522, 523, 723, 724, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 745, 748], "state_list_async": 165, "default": [179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "ai_enablechannel_async": [179, 180, 182, 183, 184, 206, 207, 209, 210, 211, 212, 213, 721, 725, 734, 735, 736, 742, 743, 744], "counter_read": [185, 218, 239, 260, 281, 297, 321, 534, 563, 580, 597, 614, 626, 646, 721, 735, 736, 737, 738, 739, 740, 741], "counter_open_async": [185, 218, 239, 260, 281, 297, 321, 721, 735, 736, 737, 738, 739, 740, 741], "counter_start_async": [185, 218, 239, 260, 281, 297, 321, 721, 735, 736, 737, 738, 739, 740, 741], "counter_read_async": [185, 218, 239, 260, 281, 297, 321, 721, 735, 736, 737, 738, 739, 740, 741], "counter_stop_async": [185, 218, 239, 260, 281, 297, 321, 721, 735, 736, 737, 738, 739, 740, 741], "counter_close_async": [185, 218, 239, 260, 281, 297, 321, 721, 735, 736, 737, 738, 739, 740, 741], "i2c_write_read": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "commun": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656, 737], "master": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656], "24c08c": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "slave": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656, 735, 736, 737, 738, 740, 741], "interfac": [192, 194, 195, 204, 205, 225, 235, 236, 237, 238, 246, 248, 249, 258, 259, 267, 269, 270, 279, 280, 304, 306, 307, 319, 320, 328, 330, 331, 343, 344, 541, 543, 544, 549, 550, 570, 576, 577, 578, 579, 587, 589, 590, 595, 596, 604, 606, 607, 612, 613, 633, 635, 636, 644, 645, 653, 655, 656, 664, 665, 745], "some": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656], "byte": [192, 194, 195, 204, 205, 225, 235, 236, 237, 238, 246, 248, 249, 258, 259, 267, 269, 270, 279, 280, 304, 306, 307, 319, 320, 328, 330, 331, 343, 344, 541, 543, 544, 549, 550, 570, 576, 577, 578, 579, 587, 589, 590, 595, 596, 604, 606, 607, 612, 613, 633, 635, 636, 644, 645, 653, 655, 656, 664, 665, 710, 711, 716, 735, 736, 737, 738, 740, 741], "address": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656, 710, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 748], "eeprom": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 748], "have": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 365, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 682, 725, 731, 734, 735, 736, 742, 743, 744], "howev": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655], "expeci": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "wore": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "device_address": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "0x50": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "01010000": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "numpi": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 365, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 682, 707], "np": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 365, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 682, 707], "word_address": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653], "randint": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655], "256": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 735, 737, 738, 740, 741, 749], "take": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656, 750], "i2c_open_async": [192, 225, 246, 267, 304, 328, 721, 735, 736, 737, 738, 740, 741], "clock": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653, 710, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "standard": [192, 225, 238, 246, 267, 304, 328, 541, 570, 579, 587, 604, 633, 653, 735, 736, 737, 738, 740, 741, 749], "i2c_setclockrate_async": [192, 225, 246, 267, 304, 328, 721, 735, 736, 737, 738, 740, 741], "via": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 541, 543, 544, 570, 587, 589, 590, 604, 606, 607, 633, 635, 636, 653, 655, 656, 735, 736, 737, 738, 740, 741], "wren": [192, 194, 195, 225, 246, 248, 249, 267, 269, 270, 304, 306, 307, 328, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711], "i2c_write_async": [192, 225, 246, 267, 304, 328, 721, 735, 736, 737, 738, 740, 741], "0x": [192, 225, 246, 267, 304, 328, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655], "02x": [192, 194, 225, 246, 248, 267, 269, 304, 306, 328, 330, 541, 543, 570, 587, 589, 604, 606, 633, 635, 653, 655, 711], "i2c_read_async": [192, 225, 246, 267, 304, 328, 721, 735, 736, 737, 738, 740, 741], "i2c_close_async": [192, 225, 246, 267, 304, 328, 721, 735, 736, 737, 738, 740, 741], "spi_read_and_writ": [194, 248, 269, 306, 330, 543, 589, 606, 635, 655], "25lc640": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656], "datas": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656], "bit": [194, 195, 204, 205, 235, 236, 248, 249, 258, 259, 269, 270, 279, 280, 306, 307, 319, 320, 330, 331, 343, 344, 543, 544, 549, 550, 576, 577, 589, 590, 595, 596, 606, 607, 612, 613, 635, 636, 644, 645, 655, 656, 664, 665, 716, 728, 729, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 748], "first_bit": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656], "msb": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 735, 737, 738, 740, 741, 749], "lsb": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 749], "prescal": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 735, 737, 738, 740, 741, 748, 749], "64": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 735, 737, 738, 740, 741, 749], "cpol": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 735, 737, 738, 740, 741, 749], "cpha": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 735, 737, 738, 740, 741, 749], "do_index": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711], "elif": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 707, 709, 710, 711, 713, 716], "addr": [194, 248, 269, 306, 330, 543, 589, 606, 635, 655], "0x02": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711], "dummi": [194, 248, 269, 306, 330, 543, 589, 606, 635, 655], "0x01": [194, 248, 269, 306, 330, 543, 589, 606, 635, 655], "0x03": [194, 248, 269, 306, 330, 543, 589, 606, 635, 655], "0x06": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711], "pin0": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "spi_open_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "spi_setdatasize_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "spi_setfirstbit_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "spi_setprescaler_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "spi_setmode_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "spi_write_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "0x00": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656], "spi_readandwrite_async": [194, 248, 269, 306, 330, 721, 735, 737, 738, 740, 741], "format": [194, 205, 236, 248, 259, 269, 280, 306, 320, 330, 344, 365, 543, 550, 577, 589, 596, 606, 613, 635, 645, 655, 665, 682, 707, 711, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "spi_close_async": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 721, 735, 737, 738, 740, 741], "spi_writ": [195, 249, 270, 307, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 721, 735, 737, 738, 740, 741], "0x55": [195, 249, 270, 307, 331, 544, 590, 607, 636, 656], "0x0002": [195, 249, 270, 307, 331, 544, 590, 607, 636, 656], "system_usb": [196, 197, 198, 199, 227, 228, 229, 230, 250, 251, 252, 253, 271, 272, 273, 274, 289, 290, 291, 292, 308, 309, 310, 311, 332, 333, 334, 335, 545, 546, 547, 548, 572, 573, 574, 575, 591, 592, 593, 594, 608, 609, 610, 611, 622, 623, 624, 625, 637, 638, 639, 640, 657, 658, 659, 660], "get_pin_mod": [196, 227, 250, 271, 289, 308, 332, 545, 572, 591, 608, 622, 637, 657], "idl": [196, 227, 250, 271, 289, 308, 332, 545, 572, 591, 608, 622, 637, 657, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pinmod": [196, 227, 250, 271, 289, 308, 332, 545, 572, 591, 608, 622, 637, 657, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pin_mod": [196, 227, 250, 271, 289, 308, 332, 545, 572, 591, 608, 622, 637, 657, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_getpinmodeinport_async": [196, 227, 250, 271, 289, 308, 332, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "uart_read": [204, 235, 258, 279, 319, 343, 549, 576, 595, 612, 644, 664, 716, 721, 735, 736, 737, 738, 740, 741], "anoth": [204, 205, 235, 236, 237, 238, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 578, 579, 595, 596, 612, 613, 644, 645, 664, 665, 748], "baudrat": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 735, 736, 737, 738, 740, 741], "9600": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665], "data_bit_mod": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665], "9": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 735, 736, 737, 738, 740, 741, 749], "parity_mod": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665], "none": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 365, 545, 549, 550, 572, 576, 577, 591, 595, 596, 608, 612, 613, 622, 637, 644, 645, 657, 664, 665, 682, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 749], "even": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 735, 736, 737, 738, 740, 741, 749], "pariti": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 735, 736, 737, 738, 740, 741, 748], "odd": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 735, 736, 737, 738, 740, 741, 749], "stop_bit_mod": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665], "read_byt": [204, 235, 258, 279, 319, 343, 549, 576, 595, 612, 644, 664, 716], "uart_open_async": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 721, 735, 736, 737, 738, 740, 741], "uart_setbaudrate_async": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 721, 735, 736, 737, 738, 740, 741], "uart_setdatabit_async": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 721, 735, 736, 737, 738, 740, 741], "uart_setparity_async": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 721, 735, 736, 737, 738, 740, 741], "uart_setnumstopbit_async": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 721, 735, 736, 737, 738, 740, 741], "informaion": [204, 235, 258, 279, 319, 343, 549, 576, 595, 612, 644, 664], "uart_read_async": [204, 235, 258, 279, 319, 343, 721, 735, 736, 737, 738, 740, 741], "uart_close_async": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 721, 735, 736, 737, 738, 740, 741], "uart_writ": [205, 236, 259, 280, 320, 344, 550, 577, 596, 613, 645, 665, 716, 721, 735, 736, 737, 738, 740, 741], "12345": [205, 236, 259, 280, 320, 344, 550, 577, 596, 613, 645, 665], "uart_write_async": [205, 236, 259, 280, 320, 344, 721, 735, 736, 737, 738, 740, 741], "chungle": [205, 236, 259, 280, 320, 344, 550, 577, 596, 613, 645, 665], "peopl": [205, 236, 259, 280, 320, 344, 550, 577, 596, 613, 645, 665], "can_read": [237, 578, 721, 737], "125": [237, 238, 578, 579, 737, 749], "khz": [237, 238, 578, 579, 737, 749], "250": [237, 238, 578, 579, 737, 745], "mhz": [237, 238, 578, 579, 737, 749], "can_open_async": [237, 238, 721, 737], "can_setspeed_async": [237, 238, 721, 737], "can_start_async": [237, 238, 721, 737], "frame": [237, 578, 735, 737, 738, 740, 741], "frame_list": [237, 578, 737], "can_read_async": [237, 721, 737], "01": [237, 543, 544, 578, 589, 590, 606, 607, 635, 636, 655, 656], "can_stop_async": [237, 238, 721, 737], "can_close_async": [237, 238, 721, 737], "can_writ": [238, 579, 721, 737], "can_length": [238, 579], "extend": [238, 579, 707, 737, 749], "can_typ": [238, 579], "remot": [238, 579, 737, 749], "id": [238, 579, 737], "can_write_async": [238, 721, 737], "33": [238, 579], "22": [238, 579], "11": [238, 579, 737, 745], "88": [238, 579], "77": [238, 579], "55": [238, 579], "66": [238, 579], "sec": [238, 579, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "temperature_rtd": [312, 313, 314, 641, 642, 643], "rtd_read_channel_data": [312, 641], "data0": [312, 313, 641, 642], "data1": [312, 313, 641, 642], "rtd_read_channel_data_with_logg": [313, 642], "logger_writelist": [313, 642, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "rtd_read_channel_statu": [314, 643], "38": [345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706], "system_wifi": [351, 352, 353, 354, 355, 356, 372, 373, 374, 375, 376, 377, 388, 389, 390, 391, 392, 393, 672, 673, 674, 675, 676, 677, 689, 690, 691, 692, 693, 694, 701, 702, 703, 704, 705, 706], "get_wifi_daq_statu": [351, 372, 388, 672, 689, 701], "basic": [351, 372, 388, 672, 689, 701], "rssi": [351, 372, 388, 672, 689, 701, 742, 743, 744], "batteri": [351, 372, 388, 672, 689, 701, 742, 743, 744], "power": [351, 372, 388, 672, 689, 701, 745], "charg": [351, 372, 388, 672, 689, 701, 742, 743, 744], "wifi_readrssi_async": [351, 372, 388, 721, 742, 743, 744], "wifi_readbattery_async": [351, 372, 388, 721, 742, 743, 744], "power_statu": [351, 372, 388, 672, 689, 701], "wifi_getpowergoodstatus_async": [351, 372, 388, 721, 742, 743, 744], "charge_statu": [351, 372, 388, 672, 689, 701], "wifi_getchargestatus_async": [351, 372, 388, 721, 742, 743, 744], "dbm": [351, 372, 388, 672, 689, 701, 742, 743, 744], "mv": [351, 372, 388, 672, 689, 701, 742, 743, 744], "set_led_statu": [355, 376, 392, 676, 693, 705], "wifi_resetled_async": [355, 376, 392, 721, 742, 743, 744], "green": [355, 376, 392, 676, 693, 705, 742, 743, 744], "wifi_setgreenled_async": [355, 376, 392, 721, 742, 743, 744], "blue": [355, 376, 392, 676, 693, 705, 742, 743, 744], "wifi_setblueled_async": [355, 376, 392, 721, 742, 743, 744], "red": [355, 376, 392, 676, 693, 705, 742, 743, 744], "wifi_setredled_async": [355, 376, 392, 721, 742, 743, 744], "ahrs_getacceler": [361, 678, 721, 743], "three": [361, 362, 363, 364, 678, 679, 680, 681, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "orient": [361, 363, 364, 365, 680, 681, 682, 743], "angular": [361, 362, 363, 364, 679, 680, 743], "333": [361, 362, 363, 364, 365, 678, 679, 680, 681, 682], "ahrs_open_async": [361, 362, 363, 364, 365, 721, 743], "ahrs_start_async": [361, 362, 363, 364, 365, 721, 743], "ahrs_list": [361, 362, 363, 364, 365, 680, 682], "ahrs_getacceleration_async": [361, 721, 743], "ahrs_stop_async": [361, 362, 363, 364, 365, 721, 743], "ahrs_close_async": [361, 362, 363, 364, 365, 721, 743], "ahrs_getangularveloc": [362, 679, 721, 743], "ahrs_getangularvelocity_async": [362, 364, 721, 743], "ahrs_getestim": [363, 680, 682, 721, 743], "ahrs_getestimate_async": [363, 365, 721, 743], "ahrs_getorient": [364, 681, 721, 743], "ahrs_visu": [365, 682], "3d": [365, 682], "stl": [365, 682], "mesh": [365, 682], "mpl_toolkit": [365, 682], "mplot3d": [365, 682], "pil": [365, 682], "imag": [365, 682, 709], "matplotlib": [365, 682, 707], "pyplot": [365, 682], "plt": [365, 682], "gridspec": [365, 682], "mpimg": [365, 682], "font_manag": [365, 682], "rcparam": [365, 682], "transform": [365, 682], "affine2d": [365, 682], "data_path": [365, 682], "materi": [365, 682, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "viz_data": [365, 682], "img_path": [365, 682], "avion_": [365, 682], "font": [365, 682], "findsystemfont": [365, 682], "fontmanag": [365, 682], "addfont": [365, 682], "famili": [365, 682], "global": [365, 682], "mono": [365, 682], "bmh": [365, 682], "bmh_burgundi": [365, 682], "a70f34": [365, 682], "bmh_blue": [365, 682], "3d90be": [365, 682], "bmh_purpl": [365, 682], "7c6ca4": [365, 682], "img_wpc": [365, 682], "imread": [365, 682], "trademark": [365, 682, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "jpg": [365, 682, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "img_wpc_pil": [365, 682], "plane": [365, 682], "constant": [365, 682], "img_yaw": [365, 682], "yaw": [365, 682], "png": [365, 682, 707, 708, 709, 710, 711, 713, 714, 715, 716], "img_pitch": [365, 682], "pitch": [365, 682, 724, 734], "img_rol": [365, 682], "roll": [365, 682], "size_yaw": [365, 682], "arrai": [365, 682, 707], "shape": [365, 682], "center_yaw": [365, 682], "diag_yaw": [365, 682], "sqrt": [365, 682], "sum": [365, 682], "alpha_yaw": [365, 682], "size_pitch": [365, 682], "center_pitch": [365, 682], "diag_pitch": [365, 682], "alpha_pitch": [365, 682], "size_rol": [365, 682], "center_rol": [365, 682], "diag_rol": [365, 682], "alpha_rol": [365, 682], "dictionari": [365, 682, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "plane_dict": [365, 682], "dict": [365, 682], "img": [365, 682], "size": [365, 682, 735, 736, 737, 738, 740, 741, 748], "center": [365, 682, 707, 717, 724, 734], "diag": [365, 682], "alpha": [365, 682, 707], "model_dict": [365, 682], "cat": [365, 682], "label": [365, 682, 707], "view": [365, 682], "400": [365, 682], "rat": [365, 682], "default_model": [365, 682], "degree_to_radian": [365, 682], "pi": [365, 682], "180": [365, 682], "radian_to_degre": [365, 682], "wpc_initializefigur": [365, 682], "nb_row": [365, 682], "nb_col": [365, 682], "share_x": [365, 682], "share_i": [365, 682], "option": [365, 682], "fig": [365, 682], "figur": [365, 682], "figsiz": [365, 682], "clf": [365, 682], "g": [365, 682, 745], "width_ratio": [365, 682], "height_ratio": [365, 682], "d": [365, 682, 708, 709, 721, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 747, 750], "ax_main": [365, 682], "add_subplot": [365, 682], "set_titl": [365, 682], "plot": [365, 682, 707], "ax_plane_yaw": [365, 682], "ax_plane_pitch": [365, 682], "ax_plane_rol": [365, 682], "ax_value_yaw": [365, 682], "ax_value_pitch": [365, 682], "ax_value_rol": [365, 682], "pil_width": [365, 682], "width": [365, 682, 709, 724, 734], "pil_height": [365, 682], "height": [365, 682, 709], "new_pil_imag": [365, 682], "resiz": [365, 682], "figimag": [365, 682], "xo": [365, 682], "bbox": [365, 682], "xmin": [365, 682, 707], "yo": [365, 682], "ymin": [365, 682], "zorder": [365, 682], "ax_dict": [365, 682], "plane_yaw": [365, 682], "plane_pitch": [365, 682], "plane_rol": [365, 682], "value_yaw": [365, 682], "value_pitch": [365, 682], "value_rol": [365, 682], "grid": [365, 682, 707], "further": [365, 682], "ax_grid": [365, 682], "empti": [365, 682], "row": [365, 682, 712], "column": [365, 682, 712], "subplot": [365, 682], "ax_mat": [365, 682], "sharex": [365, 682], "sharei": [365, 682], "squeez": [365, 682], "would": [365, 682], "share": [365, 682], "same": [365, 682], "ensur": [365, 682], "2d": [365, 682], "ax_arr": [365, 682], "flatten": [365, 682], "ax": [365, 682, 707, 724, 734, 745], "add": [365, 682, 712], "wpc_initialize_plan": [365, 682], "angle_typ": [365, 682], "set_axis_off": [365, 682], "d_plane": [365, 682], "img_plan": [365, 682], "im": [365, 682], "imshow": [365, 682], "size_plan": [365, 682], "center_plan": [365, 682], "diag_plan": [365, 682], "alpha_plan": [365, 682], "tt": [365, 682], "toler": [365, 682], "threshold": [365, 682], "percent": [365, 682, 724, 734], "cut": [365, 682], "circl": [365, 682], "set_xlim": [365, 682, 707], "set_ylim": [365, 682, 707], "cc": [365, 682], "fill": [365, 682], "color": [365, 682, 707, 712], "black": [365, 682], "linewidth": [365, 682, 707], "linestyl": [365, 682, 707], "dashdot": [365, 682], "add_artist": [365, 682], "wpc_showfigur": [365, 682], "w": [365, 682], "h": [365, 682], "get_size_inch": [365, 682], "set_size_inch": [365, 682], "ion": [365, 682], "turn": [365, 682, 737, 742, 743, 744], "interact": [365, 682], "wpc_getrotmat": [365, 682], "use_deg": [365, 682], "rot_mat_x": [365, 682], "co": [365, 682], "sin": [365, 682], "rot_mat_i": [365, 682], "rot_mat_z": [365, 682], "rot_mat": [365, 682], "dot": [365, 682], "back": [365, 682], "rxryrz": [365, 682], "wpc_showempti": [365, 682], "tag": [365, 682], "im_yaw": [365, 682], "im_pitch": [365, 682], "im_rol": [365, 682], "im_dict": [365, 682], "from_fil": [365, 682], "data_orig": [365, 682], "vector": [365, 682, 723, 724, 734], "poli": [365, 682], "art3d": [365, 682], "poly3dcollect": [365, 682], "edgecolor": [365, 682], "lw": [365, 682], "lightsteelblu": [365, 682], "add_collection3d": [365, 682], "scale": [365, 682], "view_init": [365, 682], "elev": [365, 682], "azim": [365, 682], "auto_scale_xyz": [365, 682], "fusion": [365, 682], "weight": [365, 682], "bold": [365, 682], "subplots_adjust": [365, 682], "left": [365, 682, 707], "95": [365, 682], "bottom": [365, 682], "top": [365, 682], "canva": [365, 682, 707], "manag": [365, 682], "set_window_titl": [365, 682], "wpc_draw3dmodel": [365, 682], "rotat": [365, 682], "set_vert": [365, 682], "wpc_plot_plan": [365, 682], "remov": [365, 682, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "calcul": [365, 682, 709, 724, 734], "angl": [365, 682], "radian": [365, 682], "deg2rad": [365, 682], "convert": [365, 682, 709, 710, 711], "en": [365, 682], "rotation_matrix": [365, 682], "rotate_deg_around": [365, 682], "rad2deg": [365, 682], "set_transform": [365, 682], "transdata": [365, 682], "wpc_text_button": [365, 682], "clear": [365, 682, 707, 712, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "add_patch": [365, 682], "rectangl": [365, 682], "facecolor": [365, 682, 707], "ebebeb": [365, 682], "transax": [365, 682], "2f": [365, 682, 707], "text": [365, 682, 707, 708, 709, 710, 711, 713, 714, 715, 716], "fontsiz": [365, 682, 707], "32": [365, 682, 735, 737, 738, 740, 741, 749], "va": [365, 682], "fignum_exist": [365, 682], "tight_layout": [365, 682], "paus": [365, 682], "bcst_enumeratenetworkdevic": [398, 712, 721, 722], "sys_getdriverinfo": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 713, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "motion_rstencoderposi": [399, 400, 401, 402, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 429, 432, 433, 721, 723, 724, 734], "motion_getlimitstatu": [399, 400, 424, 426, 721, 723, 724, 734], "motion_start": [401, 402], "net_getipaddrandsubmask": [407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "net_getmacaddr": [407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getserialnumb": [408, 435, 445, 456, 466, 471, 476, 482, 489, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 674, 691, 703, 713, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_reboot": [409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setrtc": [410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_getrtc": [410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706, 713, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "motion_opencfgfil": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 721, 723, 724, 734], "opencfgfil": [411, 413, 417, 420, 423, 424, 425, 426, 429, 432, 433], "motion_loadcfgfil": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 721, 723, 724, 734], "loadcfgfil": [411, 413, 417, 420, 423, 424, 425, 426, 429, 432, 433], "motion_cfgaxi": [411, 413, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433, 721, 724, 734], "motion_cfghom": [411, 424, 426, 429, 721, 724, 734], "motion_cfgaxismov": [411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 429, 430, 432, 433, 721, 724, 734], "motion_startsingleaxismov": [411, 412, 413, 414, 415, 416, 417, 418, 420, 429, 432, 433, 721, 724, 734], "motion_getmovestatu": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 721, 724, 734], "motion_getlogicalposi": [411, 427, 429, 721, 724, 734], "motion_getencoderposi": [411, 429, 721, 724, 734], "motion_stop": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 432, 433, 721, 724, 734], "motion_cfgjerkandaccelmod": [412, 418, 721, 724, 734], "motion_cfgalarm": [413, 721, 724, 734], "motion_cfgbreakpoint": [414, 721, 724, 734], "motion_enablebreakpoint": [414, 721, 724, 734], "motion_cfgcaptur": [415, 721, 724, 734], "motion_enablecaptur": [415, 721, 724, 734], "motion_readcapturepoint": [415, 721, 724, 734], "motion_cfginposi": [417, 721, 724, 734], "motion_cfgcircularinterpo": [418, 721, 724, 734], "motion_startcircularinterpo": [418, 721, 724, 734], "motion_cfg2axislinearinterpo": [419, 721, 724, 734], "motion_startlinearinterpo": [419, 422, 721, 724, 734], "motion_3axishronous_mov": 420, "motion_cfghelicalinterpo": [421, 721, 724, 734], "motion_starthelicalinterpo": [421, 721, 724, 734], "motion_cfg3axislinearinterpo": [422, 721, 724, 734], "cfglimit": 423, "motion_startmultiaxismov": [423, 721, 724, 734], "motion_cfgfindref": [424, 425, 426, 721, 724, 734], "motion_findref": [424, 425, 426, 721, 724, 734], "motion_gethomestatu": [424, 426, 721, 724, 734], "motion_checkref": [424, 425, 426, 721, 724, 734], "motion_cfgencod": [425, 432, 433, 721, 723, 724, 734], "motion_setlogicalposi": [427, 721, 724, 734], "motion_overrideaxisposi": [429, 721, 724, 734], "motion_savecfgfil": [430, 721, 723, 724, 734], "motion_overrideaxisveloc": [432, 433, 721, 724, 734], "motion_overrideaxisaccel": [433, 721, 724, 734], "ai_open": [438, 439, 441, 442, 443, 469, 474, 506, 507, 508, 509, 510, 511, 512, 513, 514, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 557, 558, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "ai_setmod": [438, 439, 441, 442, 443, 506, 507, 508, 509, 510, 511, 514, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 721, 725, 734, 735, 736, 742, 743, 744], "ai_setsamplingr": [438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 721, 725, 734, 735, 736, 742, 743, 744], "ai_setnumsampl": [438, 506, 528, 551, 666, 683, 695, 707, 721, 725, 734, 735, 736, 742, 743, 744], "ai_start": [438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 721, 725, 734, 735, 736, 742, 743, 744], "ai_readstream": [438, 439, 441, 506, 507, 508, 509, 510, 511, 512, 513, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 721, 725, 734, 735, 736, 742, 743, 744], "length": [438, 528, 551, 666, 683, 695, 712, 748], "error": [438, 528, 551, 666, 683, 695, 707, 708, 709, 710, 711, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "wrong": [438, 528, 551, 666, 683, 695], "ai_stop": [438, 439, 441, 506, 507, 508, 509, 514, 528, 529, 531, 551, 552, 554, 666, 667, 669, 683, 684, 686, 695, 696, 698, 707, 721, 725, 734, 735, 736, 742, 743, 744], "ai_clos": [438, 439, 441, 442, 443, 469, 474, 506, 507, 508, 509, 510, 511, 512, 513, 514, 528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 557, 558, 666, 667, 669, 670, 671, 683, 684, 686, 687, 688, 695, 696, 698, 699, 700, 707, 721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "ai_readondemand": [442, 443, 469, 474, 506, 507, 509, 510, 511, 512, 513, 532, 533, 555, 556, 557, 558, 670, 671, 687, 688, 699, 700, 707, 721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "do_openpin": [448, 450, 452, 459, 461, 463, 535, 537, 539, 543, 544, 564, 566, 568, 581, 583, 585, 589, 590, 598, 600, 602, 606, 607, 615, 617, 619, 627, 629, 631, 635, 636, 647, 649, 651, 655, 656, 711, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_writepin": [448, 452, 459, 463, 518, 522, 535, 539, 543, 544, 564, 568, 581, 585, 589, 590, 598, 602, 606, 607, 615, 619, 627, 631, 635, 636, 647, 651, 655, 656, 711, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_openpin": [448, 459, 535, 564, 581, 598, 615, 627, 647, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_readpin": [448, 459, 518, 535, 564, 581, 598, 615, 627, 647, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_closepin": [448, 450, 452, 459, 461, 463, 535, 537, 539, 543, 544, 564, 566, 568, 581, 583, 585, 589, 590, 598, 600, 602, 606, 607, 615, 617, 619, 627, 629, 631, 635, 636, 647, 649, 651, 655, 656, 711, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_closepin": [448, 459, 535, 564, 581, 598, 615, 627, 647, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_openport": [449, 451, 453, 460, 462, 464, 536, 538, 540, 565, 567, 569, 582, 584, 586, 599, 601, 603, 616, 618, 620, 628, 630, 632, 648, 650, 652, 709, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_openport": [449, 460, 536, 565, 582, 599, 616, 628, 648, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_writeport": [449, 453, 460, 464, 480, 519, 523, 536, 540, 565, 569, 582, 586, 599, 603, 616, 620, 628, 632, 648, 652, 709, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_readport": [449, 460, 519, 536, 565, 582, 599, 616, 628, 648, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_closeport": [449, 451, 453, 460, 462, 464, 536, 538, 540, 565, 567, 569, 582, 584, 586, 599, 601, 603, 616, 618, 620, 628, 630, 632, 648, 650, 652, 709, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "di_closeport": [449, 460, 536, 565, 582, 599, 616, 628, 648, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_togglepin": [450, 461, 520, 537, 566, 583, 600, 617, 629, 649, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_toggleport": [451, 462, 521, 538, 567, 584, 601, 618, 630, 650, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "pwm_open": [454, 542, 571, 588, 605, 621, 634, 654, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_setfrequ": [454, 542, 571, 588, 605, 621, 634, 654, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_setdutycycl": [454, 542, 571, 588, 605, 621, 634, 654, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_start": [454, 542, 571, 588, 605, 621, 634, 654, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_stop": [454, 542, 571, 588, 605, 621, 634, 654, 721, 726, 735, 736, 737, 738, 739, 740, 741], "pwm_close": [454, 542, 571, 588, 605, 621, 634, 654, 721, 726, 735, 736, 737, 738, 739, 740, 741], "relay_open": [479, 480, 721, 730], "relay_read": [479, 721, 730], "relay_clos": [479, 480, 721, 730], "ao_open": [485, 486, 487, 512, 513, 514, 516, 517, 557, 558, 560, 561, 562, 708, 721, 731, 734, 736], "ao_setmod": [485, 560, 721, 731, 734, 736], "ao_setsamplingr": [485, 560, 721, 731, 734, 736], "ao_setenablechannel": [485, 560, 721, 731, 734, 736], "ao_setform": [485, 560, 721, 731, 734, 736], "ao_setformparam": [485, 560, 721, 731, 734, 736], "ao_openstream": [485, 560, 721, 731, 734, 736], "ao_startstream": [485, 560, 721, 731, 734, 736], "ao_closestream": [485, 560, 721, 731, 734, 736], "ao_clos": [485, 486, 487, 512, 513, 514, 516, 517, 557, 558, 560, 561, 562, 708, 721, 731, 734, 736], "ao_writeallchannel": [486, 512, 516, 557, 561, 708, 721, 731, 734, 736], "ao_writeonechannel": [487, 513, 514, 517, 558, 562, 721, 731, 734, 736], "dpot_open": [492, 493, 494, 721, 732], "dpot_clos": [492, 493, 494, 721, 732], "thermal_open": [503, 504, 505, 641, 642, 643, 661, 662, 663, 714, 715, 721, 733, 740, 741], "thermal_setoversampl": [503, 504, 661, 662, 715, 721, 733, 741], "thermal_settyp": [503, 504, 661, 662, 714, 715, 721, 733, 740, 741], "thermal_readsensor": [503, 504, 641, 642, 661, 662, 714, 715, 721, 733, 740, 741], "thermal_clos": [503, 504, 505, 641, 642, 643, 661, 662, 663, 714, 715, 721, 733, 740, 741], "thermal_getstatu": [505, 643, 663, 721, 733, 740, 741], "sys_setaiomod": [506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ai_enablec": [506, 507, 508, 509, 510, 511, 512, 513, 514, 721, 725, 734, 735, 736, 742, 743, 744], "sys_getmod": [506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setdiomod": [518, 519, 520, 521, 522, 523, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "dio_loadstartup": [518, 519, 520, 521, 522, 523, 721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "ai_enablechannel": [528, 529, 531, 532, 533, 551, 552, 554, 555, 556, 557, 558, 721, 725, 734, 735, 736, 742, 743, 744], "counter_open": [534, 563, 580, 597, 614, 626, 646, 721, 735, 736, 737, 738, 739, 740, 741], "counter_start": [534, 563, 580, 597, 614, 626, 646, 721, 735, 736, 737, 738, 739, 740, 741], "counter_stop": [534, 563, 580, 597, 614, 626, 646, 721, 735, 736, 737, 738, 739, 740, 741], "counter_clos": [534, 563, 580, 597, 614, 626, 646, 721, 735, 736, 737, 738, 739, 740, 741], "i2c_open": [541, 570, 587, 604, 633, 653, 710, 721, 735, 736, 737, 738, 740, 741], "i2c_setclockr": [541, 570, 587, 604, 633, 653, 710, 721, 735, 736, 737, 738, 740, 741], "i2c_writ": [541, 570, 587, 604, 633, 653, 710, 721, 735, 736, 737, 738, 740, 741], "pointer": [541, 570, 587, 604, 633, 653], "i2c_read": [541, 570, 587, 604, 633, 653, 710, 721, 735, 736, 737, 738, 740, 741], "i2c_clos": [541, 570, 587, 604, 633, 653, 710, 721, 735, 736, 737, 738, 740, 741], "spi_open": [543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 721, 735, 737, 738, 740, 741], "spi_setdatas": [543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 721, 735, 737, 738, 740, 741], "spi_setfirstbit": [543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 721, 735, 737, 738, 740, 741], "spi_setprescal": [543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 721, 735, 737, 738, 740, 741], "spi_setmod": [543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 721, 735, 737, 738, 740, 741], "spi_readandwrit": [543, 589, 606, 635, 655, 711, 721, 735, 737, 738, 740, 741], "spi_clos": [543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 721, 735, 737, 738, 740, 741], "sys_getpinmodeinport": [545, 572, 591, 608, 622, 637, 657, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "uart_open": [549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 721, 735, 736, 737, 738, 740, 741], "uart_setbaudr": [549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 721, 735, 736, 737, 738, 740, 741], "uart_setdatabit": [549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 721, 735, 736, 737, 738, 740, 741], "uart_setpar": [549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 721, 735, 736, 737, 738, 740, 741], "uart_setnumstopbit": [549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 721, 735, 736, 737, 738, 740, 741], "uart_clos": [549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 721, 735, 736, 737, 738, 740, 741], "can_open": [578, 579, 721, 737], "can_setspe": [578, 579, 721, 737], "can_start": [578, 579, 721, 737], "can_stop": [578, 579, 721, 737], "can_clos": [578, 579, 721, 737], "wifi_readrssi": [672, 689, 701, 721, 742, 743, 744], "wifi_readbatteri": [672, 689, 701, 721, 742, 743, 744], "wifi_getpowergoodstatu": [672, 689, 701, 721, 742, 743, 744], "wifi_getchargestatu": [672, 689, 701, 721, 742, 743, 744], "wifi_resetl": [676, 693, 705, 721, 742, 743, 744], "wifi_setgreenl": [676, 693, 705, 721, 742, 743, 744], "wifi_setbluel": [676, 693, 705, 721, 742, 743, 744], "wifi_setblule": [676, 693, 705], "wifi_setredl": [676, 693, 705, 721, 742, 743, 744], "ahrs_open": [678, 679, 680, 681, 682, 721, 743], "ahrs_start": [678, 679, 680, 681, 682, 721, 743], "ahrs_stop": [678, 679, 680, 681, 682, 721, 743], "ahrs_clos": [678, 679, 680, 681, 682, 721, 743], "example_analog_input": 707, "daq": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 725, 734, 746, 747, 748, 750], "o": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721], "sy": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "third": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "parti": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "anim": 707, "pyqt5": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "qtwidget": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "qtgui": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "qwidget": 707, "qmessagebox": [707, 709, 713], "ui_design": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "ui_example_gui_ai": 707, "ui_mainwindow": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "class": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "matplotlibwidget": 707, "__init__": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "self": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "parent": 707, "super": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "mainwindow": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "qmainwindow": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "ui": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "setupui": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "path": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 748], "file_path": [707, 708, 709, 710, 711, 713, 714, 715, 716], "dirnam": [707, 708, 709, 710, 711, 713, 714, 715, 716], "__file__": [707, 708, 709, 710, 711, 713, 714, 715, 716], "trademark_path": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "blue_led_path": [707, 708, 709, 710, 711, 713, 714, 715, 716], "led_blu": [707, 708, 709, 710, 711, 713, 714, 715, 716], "red_led_path": [707, 708, 709, 710, 711, 713, 714, 715, 716], "led_r": [707, 708, 709, 710, 711, 713, 714, 715, 716], "green_led_path": [707, 708, 709, 710, 711, 713, 714, 715, 716], "led_green": [707, 708, 709, 710, 711, 713, 714, 715, 716], "gray_led_path": [707, 708, 709, 710, 711, 713, 714, 715, 716], "led_grai": [707, 708, 709, 710, 711, 713, 714, 715, 716], "lb_trademark": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "setpixmap": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "qpixmap": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "lb_led": [707, 708, 709, 710, 711, 713, 714, 715, 716], "flag": [707, 708, 709, 710, 711, 713, 714, 715, 716], "connect_flag": [707, 708, 709, 710, 711, 713, 714, 715, 716], "declar": [707, 708, 709, 710, 711, 713, 714, 715, 716], "plot_y_min": 707, "plot_y_max": 707, "channel_list": [707, 731, 734, 736], "append": [707, 708, 710, 711, 712], "plot_total_tim": 707, "callback": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "event": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "btn_connect": [707, 708, 709, 710, 711, 713, 714, 715, 716], "click": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "connectev": [707, 708, 709, 710, 711, 713, 714, 715, 716], "btn_disconnect": [707, 708, 709, 710, 711, 713, 714, 715, 716], "disconnectev": [707, 708, 709, 710, 711, 713, 714, 715, 716], "btn_aistart": 707, "startaiev": 707, "btn_aistop": 707, "stopaiev": 707, "lineedit_samplingr": 707, "returnpress": 707, "setsamplingrateev": 707, "lineedit_numsampl": 707, "setnumofsampleev": 707, "combobox_aimod": 707, "currentindexchang": 707, "chooseaimodeev": 707, "lineedit_yscalemax": 707, "setyscalemaxev": 707, "lineedit_yscalemin": 707, "setyscaleminev": 707, "kill": 707, "ai_lock": 707, "lock": 707, "acquir": [707, 725, 734, 735, 736, 742, 743, 744], "ai_stream_thread": 707, "aistreamthread": 707, "plotiniti": 707, "plotanim": 707, "closeev": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "selecthandl": [707, 708, 709, 710, 711, 713, 714, 715, 716], "handle_idx": [707, 708, 709, 710, 711, 713, 714, 715, 716], "combobox_handl": [707, 708, 709, 710, 711, 713, 714, 715, 716], "currentindex": [707, 708, 709, 710, 711, 713, 714, 715, 716], "updateparam": [707, 708, 709, 710, 711, 713, 714, 715, 716], "gui": [707, 708, 709, 710, 711, 713, 714, 715, 716], "lineedit_ip": [707, 708, 709, 710, 711, 713, 714, 715, 716], "combobox_port": [707, 708, 709, 710, 711, 714, 715, 716], "ai_sampling_r": 707, "float": [707, 708, 724, 725, 726, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ai_n_sampl": 707, "param": [707, 708, 709, 710, 711, 713, 714, 715, 716], "setdisplayplotnum": 707, "checkconnectionstatu": [707, 709, 713], "checkboxstatu": 707, "x": [707, 724, 734], "mplwidget": 707, "rearrag": 707, "accord": 707, "amount": [707, 725, 726, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "funcanim": 707, "plotchart": 707, "plotgetaxisdata": 707, "interv": 707, "repeat": 707, "draw": 707, "checkbox": 707, "mainui": 707, "window": 707, "list_ch": 707, "cb_ch0": 707, "cb_ch1": 707, "cb_ch2": 707, "cb_ch3": 707, "cb_ch4": 707, "cb_ch5": 707, "cb_ch6": 707, "cb_ch7": 707, "ischeck": [707, 709], "xmax": 707, "x_max": 707, "x_min": 707, "max": [707, 735, 745], "x_list": 707, "xtick": 707, "dx": 707, "tick": 707, "arang": 707, "yield": [707, 726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "marker": 707, "markers": 707, "err_xlist": 707, "err_ylist": 707, "y": [707, 724, 734], "xtickslabel": 707, "set_xtick": 707, "new_tick": 707, "plotconvertxtick": 707, "set_xticklabel": 707, "set_xlabel": 707, "12": [707, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "set_ylabel": 707, "v": [707, 728, 729], "legend": 707, "loc": 707, "shadow": 707, "bbox_to_anchor": 707, "75": 707, "f0f0f0": 707, "bac3d1": 707, "num": 707, "yscalemax": 707, "yscalemin": 707, "messag": [707, 709, 713, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "server": [707, 709, 713], "app": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "qapplic": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "wpc_main_ui": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "exit": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "exec_": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716], "example_analog_output": 708, "analog": [708, 731, 742, 743, 744, 745], "ui_example_gui_ao": 708, "devid": [708, 714, 715, 716], "fct_list": 708, "hrztslider_cb0": 708, "hrztslider_cb1": 708, "hrztslider_cb2": 708, "hrztslider_cb3": 708, "hrztslider_cb4": 708, "hrztslider_cb5": 708, "hrztslider_cb6": 708, "hrztslider_cb7": 708, "obj_hrztslid": 708, "getattr": [708, 709], "horizontalslid": 708, "setrang": 708, "setsinglestep": 708, "valuechang": 708, "btn_updat": 708, "writeaovalu": 708, "btn_setal": 708, "setlineeditvalueev": 708, "scaledvalu": 708, "lineedit0": 708, "settext": [708, 710, 711, 713, 714, 715, 716], "lineedit1": 708, "lineedit2": 708, "lineedit3": 708, "lineedit4": 708, "lineedit5": 708, "lineedit6": 708, "lineedit7": 708, "voltage_list": 708, "obj_lineedit": 708, "lineedit": 708, "lineedit_setal": 708, "example_digital_output": 709, "ui_example_gui_do": 709, "state_c": 709, "255": [709, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "switch_blue_path": 709, "switch_blu": 709, "switch_gray_path": 709, "switch_grai": 709, "backward": 709, "slash": 709, "replac": [709, 710, 711], "obj_chbox_st": 709, "checkbox_st": 709, "statechang": 709, "statedoev": 709, "setstylesheet": [709, 712], "qcheckbox": 709, "indic": [709, 724, 725, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 748], "60px": 709, "uncheck": 709, "url": 709, "mcu": 709, "example_i2c": 710, "ui_example_gui_i2c": 710, "btn_write": [710, 711, 716], "writeev": [710, 711, 716], "btn_read": [710, 711, 716], "readev": [710, 711, 716], "btn_set": [710, 711, 714, 715], "setclockev": 710, "clock_mod": 710, "combobox_clockr": 710, "hex": [710, 711], "write_addr": 710, "lineedit_writeaddr": 710, "lineedit_writ": [710, 711, 716], "write_data": [710, 711, 716, 735, 736, 737, 738, 740, 741], "converstrtointlist": [710, 711], "byte_read": 710, "lineedit_byteread": [710, 716], "read_addr": 710, "lineedit_readaddr": 710, "lineedit_read": [710, 711, 716], "str_": [710, 711, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "split": [710, 711, 712], "comma": [710, 711], "write_data_strlist": [710, 711], "write_data_int": [710, 711], "item": [710, 711], "example_spi": 711, "ui_example_gui_spi": 711, "setev": [711, 714, 715], "combobox_mod": 711, "combobox_prescal": 711, "example_find_all_devic": 712, "find": [712, 718, 719, 723, 724, 734], "qtablewidget": 712, "qtcore": 712, "qt": 712, "ui_example_gui_find_all_devic": 712, "column_width": 712, "160": 712, "getcwd": 712, "tabl": 712, "initibroadcastt": 712, "button": 712, "btn_broadcast": 712, "broadcastnetworkev": 712, "broadcast_list": 712, "tablewidget_brst": 712, "setcolumnwidth": 712, "background": 712, "217536": 712, "loaddata": 712, "setrowcount": 712, "setitem": 712, "qtablewidgetitem": 712, "firmware_v": 712, "restoreoverridecursor": 712, "waitcursor": 712, "setoverridecursor": 712, "broadcast": [712, 722], "broadcast_info": 712, "device_amount": 712, "model_vers": 712, "str_list": 712, "_": 712, "example_get_device_info": 713, "ui_example_gui_get_device_info": 713, "btn_deviceinfo": 713, "getdeviceinfoev": 713, "sys_getipaddrandsubmask": [713, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getmacaddr": [713, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "lineedit_sbk": 713, "lineedit_serialnum": 713, "lineedit_mac": 713, "lineedit_model": 713, "lineedit_vers": 713, "lineedit_rtc": 713, "tcp": [713, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744, 748], "example_rtd": 714, "ui_example_gui_rtd": 714, "btn_rtd": 714, "rtdevent": 714, "combobox_typ": [714, 715], "noisereject": [714, 715], "combobox_noisereject": [714, 715], "lineedit_sensor0": [714, 715], "lineedit_sensor1": [714, 715], "example_thermo": 715, "ui_example_gui_thermocoupl": 715, "btn_temp": 715, "tempev": 715, "combobox_oversampl": 715, "example_uart": 716, "ui_example_gui_uart": 716, "lb_ledport": 716, "btn_open": 716, "openportev": 716, "btn_close": 716, "closeportev": 716, "combobox_baudr": 716, "currenttext": 716, "databit": 716, "combobox_databit": 716, "combobox_par": 716, "stopbit": 716, "combobox_stopbit": 716, "test": [717, 723, 724, 734], "panel": 717, "finder": [717, 721], "logger": [718, 719], "multi": [718, 719, 724, 734, 745], "waveform": [718, 719], "loopback": [718, 719], "blinki": [718, 719], "hello": [718, 719], "tutori": 718, "multipl": [718, 724, 734], "drive": [718, 719, 723, 748, 750], "posit": [718, 719, 723, 724, 734, 742, 743, 744, 749], "blend": [718, 719], "scan": [718, 719, 723], "logic": [718, 719, 723, 724, 734, 749], "1axi": [718, 719], "alarm": [718, 719, 723, 724, 734], "breakpoint": [718, 719, 724, 734, 748], "captur": [718, 719, 724, 734, 745, 748], "inposit": [718, 719, 724, 734], "2axi": [718, 719], "circular": [718, 719, 724, 734, 745], "interpo": [718, 719], "linear": [718, 719, 724, 734, 745], "3axi": [718, 719], "helic": [718, 719, 724, 734, 745], "pwm": [718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748], "relai": [718, 719, 730, 745, 748, 750], "dpot": [718, 719, 732, 748, 750], "tc": [718, 719, 733, 740, 741, 750], "i2c": [718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "spi": [718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750], "uart": [718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 750], "rtd": [718, 719, 733, 740, 741, 750], "ahr": [718, 719, 743, 748, 750], "getacceler": [718, 719], "getestim": [718, 719], "getangularveloc": [718, 719], "getorient": [718, 719], "visual": [718, 719], "control": [720, 724, 745], "motion card": 720, "wifi": [720, 745, 746, 747, 750], "descript": 721, "bcst_checkmacandreboot": [721, 722], "bcst_checkmacandreboot_async": [721, 722], "bcst_checkmacandsetip": [721, 722], "bcst_checkmacandsetip_async": [721, 722], "e3": [721, 746, 750], "A": [721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 745, 746, 750], "pinout": 721, "ai_getport": [721, 725, 728, 729, 734, 735, 736, 742, 743, 744], "net_getgatewai": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "net_getgateway_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "net_setipaddrandsubmask": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "net_setipaddrandsubmask_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getgatewai": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getgateway_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getipaddrandsubmask_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getmacaddr_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_getpythonvers": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_getpythonversion_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setdimod": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setdimode_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setdomod": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setdomode_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setipaddrandsubmask": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_setipaddrandsubmask_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "sys_setidlemod": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setidlemode_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setmotionmod": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setmotionmode_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setswitchmod": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "sys_setswitchmode_async": [721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "wifi_getconfigur": [721, 742, 743, 744], "wifi_getconfiguration_async": [721, 742, 743, 744], "wifi_getwifibandwidth": [721, 742, 743, 744], "wifi_getwifibandwidth_async": [721, 742, 743, 744], "ah": [721, 746, 750], "ahrs_getorientation_async": [721, 743], "ahrs_reset": [721, 743], "ahrs_reset_async": [721, 743], "f4": [721, 746, 750], "ao_getport": [721, 731, 734, 736], "ao_getvalu": [721, 731, 734, 736], "ao_getvalues_async": [721, 731, 734, 736], "di_getpinmap": [721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "do_getpinmap": [721, 726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "motion_cfg4axislinearinterpo": [721, 724, 734], "motion_cfg4axislinearinterpo_async": [721, 724, 734], "edriv": [721, 745, 750], "st": [721, 745, 750], "motion_cfgaxisdirect": [721, 723], "motion_cfgaxisdirection_async": [721, 723], "motion_getalarmstatu": [721, 723], "motion_getalarmstatus_async": [721, 723], "motion_getparamet": [721, 723], "motion_readcurrentveloc": [721, 723], "motion_readcurrentvelocity_async": [721, 723], "motion_readencoderposit": [721, 723], "motion_readencoderposition_async": [721, 723], "motion_resetfactori": [721, 723], "motion_resetfactory_async": [721, 723], "motion_startfindzpolar": [721, 723], "motion_startfindzpolarity_async": [721, 723], "ethan": [721, 746, 747, 750], "ia": [721, 750], "l": [721, 750], "p": [721, 750], "thermal_getpinmap": [721, 733, 740, 741], "f1": [721, 746, 747, 750], "i2c_getpinmap": [721, 735, 736, 737, 738, 740, 741], "i2c_reset": [721, 735, 736, 737, 738, 740, 741], "i2c_reset_async": [721, 735, 736, 737, 738, 740, 741], "i2c_setaddresss": [721, 735, 736, 737, 738, 740, 741], "i2c_setaddresssize_async": [721, 735, 736, 737, 738, 740, 741], "spi_getpinmap": [721, 735, 737, 738, 740, 741], "spi_read": [721, 735, 737, 738, 740, 741], "spi_read_async": [721, 735, 737, 738, 740, 741], "spi_reset": [721, 735, 737, 738, 740, 741], "spi_reset_async": [721, 735, 737, 738, 740, 741], "uart_getpinmap": [721, 735, 736, 737, 738, 740, 741], "uart_reset": [721, 735, 736, 737, 738, 740, 741], "uart_reset_async": [721, 735, 736, 737, 738, 740, 741], "snk": 721, "aod": [721, 746, 747, 750], "td": [721, 747, 750], "rd": [721, 747, 750], "cd": [721, 747, 750], "can_getport": [721, 737], "can_setrxfilterormask": [721, 737], "can_setrxfilterormask_async": [721, 737], "can_setrxfilteringon": [721, 737], "can_setrxfilteringon_async": [721, 737], "verbos": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "mac_addr": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "reboot": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "separ": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "colon": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "successfulli": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "otherwis": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "here": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "subnet_mask": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "period": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "dev_info_list": 722, "element": [722, 725, 734, 735, 736, 737, 742, 743, 744], "contain": 722, "subnet": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "mask": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 742, 743, 744], "bool": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "whether": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "out": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "disonnect": 722, "motor": [723, 745, 750], "phase": [723, 731, 734, 735, 736, 737, 738, 740, 741, 745], "stepper": [723, 745, 748], "axis_dir": [723, 724, 734], "dirction": 723, "origin": 723, "invers": 723, "specifi": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748], "report": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "encoder_dir": [723, 724, 734], "limit_polar": [723, 724, 734], "prevent": 723, "mechan": [723, 730, 745], "compon": 723, "exceed": 723, "boundari": 723, "activ": [723, 724, 726, 734, 735, 736, 737, 738, 739, 740, 741, 749], "given": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "singal": [723, 724, 734], "instantan": [723, 724, 734], "finish": [723, 724, 734], "still": 723, "runnung": 723, "filenam": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "current": [723, 724, 728, 729, 731, 734, 736, 745], "veloicti": 723, "factori": 723, "count": [723, 724, 734, 735, 736, 737, 738, 739, 740, 741], "s2": [723, 724, 734], "distanc": [723, 724, 734], "locat": [723, 724, 734], "request": [723, 724, 734, 735, 736, 737, 738, 740, 741], "z": [723, 724, 734], "getewai": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "web": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744, 745], "gatewai": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "network_info": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "deprec": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "v1": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "Will": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "ref": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 742, 743, 744], "mani": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pin1": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pin7": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "disabl": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "adc": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "softwar": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "repres": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 750], "year": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "month": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "dai": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "hour": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "minut": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "charact": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "ce": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "31": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "24": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "23": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "59": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "success": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "switch": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "base": [724, 728, 729, 745], "modular": [724, 745], "inter": [724, 745], "clear_old": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "old": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "alread": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "exist": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "value_mat": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "value_list": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "object": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "destin": [724, 734], "axis4": [724, 734], "dest_posi4": [724, 734], "four": [724, 734], "en_alarm": [724, 734], "alarm_polar": [724, 734], "selector": [724, 734], "stepper_output": [724, 734], "servo_on_polar": [724, 734], "puls": [724, 734, 745, 748, 749], "clockwis": [724, 734], "counterclockwis": [724, 734], "One": [724, 734, 749], "cw": [724, 734, 745, 749], "ccw": [724, 734, 745, 749], "breakpoint_polar": [724, 734], "start_posi": [724, 734], "capture_typ": [724, 734], "rise": [724, 734, 749], "edg": [724, 734, 749], "fall": [724, 734, 749], "respect": [724, 734], "encoder_z_polar": [724, 734], "search_typ": [724, 734], "search_dir": [724, 734], "search": [724, 734, 748], "adjust": [724, 734], "en_axis3": [724, 734], "en_axis4": [724, 734], "rotation_numb": [724, 734], "calculation_timeout": [724, 734], "en_hom": [724, 734], "home_polar": [724, 734], "en_inposi": [724, 734], "inposi_polar": [724, 734], "accel_mod": [724, 734], "accerler": [724, 734], "increas": [724, 734], "decreas": [724, 734], "per": [724, 734, 735, 736, 737, 738, 740, 741], "unit": [724, 734], "acceleration_mod": [724, 734], "trapezoid": [724, 734], "curv": [724, 734, 745], "sequenc": [724, 734], "en_break": [724, 734], "en_captur": [724, 734], "emcod": [724, 734], "new": [724, 734], "axis_list": [724, 734], "halt": [724, 734, 749], "8ch": [725, 726, 728, 729, 731, 736, 742, 743, 744, 745], "chip": [725, 734, 735, 736, 742, 743, 744, 746, 748], "volt": [725, 731, 734, 735, 736, 742, 743, 744], "measur": [725, 734, 735, 736, 742, 743, 744], "num_sampl": [725, 731, 734, 735, 736, 742, 743, 744], "pc": [725, 734, 735, 736, 737, 742, 743, 744], "stock": [725, 734, 735, 736, 737, 742, 743, 744], "queue": [725, 734, 735, 736, 737, 742, 743, 744, 748], "call": [725, 734, 735, 736, 737, 742, 743, 744, 746], "fewer": [725, 734, 735, 736, 742, 743, 744], "expect": [725, 734, 735, 736, 742, 743, 744], "ones": [725, 734, 735, 736, 742, 743, 744], "expir": [725, 734, 735, 736, 742, 743, 744], "arriv": [725, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744], "becom": [725, 734, 735, 736, 737, 742, 743, 744], "ineffect": [725, 734, 735, 736, 737, 742, 743, 744], "alreadi": [725, 734, 735, 736, 737, 742, 743, 744, 748], "sample_list": [725, 734, 735, 736, 742, 743, 744], "been": [725, 731, 734, 735, 736, 742, 743, 744], "made": [725, 731, 734, 735, 736, 742, 743, 744], "24v": [726, 734, 739, 745], "6ch": [726, 730, 745], "enable_list": [726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "about": [726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "direction_list": [726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "intput": [726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "associ": [726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "pinmap": [726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "kei": [726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "integ": [726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "thei": [726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "p0": [726, 727, 730, 734, 735, 736, 737, 738, 739, 740, 741], "p1": [726, 727, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741], "ex_d": 727, "ma": [728, 729], "20ma": [729, 745], "10v": [729, 731, 734, 742, 743, 744, 745], "qualiti": [730, 745], "relay_count": 730, "where": [731, 734, 736], "which": [731, 734, 736, 740], "accordingli": [731, 734, 736], "averag": [731, 734, 736], "4ch": [732, 745], "resistor": [732, 745], "ratio": 732, "7ch": [733, 745], "tupl": [733, 735, 736, 737, 738, 740, 741], "constitut": [733, 735, 736, 737, 738, 740, 741], "physic": [733, 735, 736, 737, 738, 740, 741], "thermal1": [733, 740, 741], "five": [733, 740, 741], "p2": [733, 735, 736, 737, 738, 740, 741], "thermal_port": [733, 740, 741], "circuit": [733, 740, 741], "fault": [733, 740, 741], "manual": [733, 740, 741], "temperatur": [733, 740, 741], "celsiu": [733, 740, 741], "type_": [733, 740, 741], "24ch": [734, 745], "12ch": [734, 739, 745], "5v": [734, 736, 745], "ttl": [734, 745], "26ch": [735, 738, 745], "3v": [735, 736, 737, 738, 740, 741, 745], "16khz": 735, "i2c1": [735, 736, 737, 738, 740, 741], "i2c2": [735, 736, 737, 738, 740, 741], "p3": [735, 736, 737, 738, 740, 741], "i2c_port": [735, 736, 737, 738, 740, 741], "read_address": [735, 736, 737, 738, 740, 741], "bytes_to_read": [735, 736, 737, 738, 740, 741], "i2c_data": [735, 736, 737, 738, 740, 741], "400000": [735, 736, 737, 738, 740, 741, 749], "plu": [735, 736, 737, 738, 740, 741, 749], "1000000": [735, 736, 737, 738, 740, 741, 749], "3400000": [735, 736, 737, 738, 740, 741, 749], "write_address": [735, 736, 737, 738, 740, 741], "transfer": [735, 736, 737, 738, 740, 741, 748], "spi1": [735, 737, 738, 740, 741, 749], "spi2": [735, 737, 738, 740, 741, 749], "spi_port": [735, 737, 738, 740, 741], "spi_data": [735, 737, 738, 740, 741], "128": [735, 737, 738, 740, 741, 749], "uart1": [735, 736, 737, 738, 740, 741], "uart2": [735, 736, 737, 738, 740, 741], "uart_port": [735, 736, 737, 738, 740, 741], "baud_rat": [735, 736, 737, 738, 740, 741], "baud": [735, 736, 737, 738, 740, 741, 748], "serial_num": [735, 736, 737, 738, 739, 740, 741], "16ch": [736, 745], "20ch": [737, 745], "num_fram": 737, "millisecond": 737, "canfram": 737, "give": 737, "identifi": 737, "extended_id": 737, "tell": 737, "id_": 737, "filter": [737, 748], "recept": 737, "buffer": 737, "29": 737, "ignor": 737, "on_off": 737, "speed_mod": 737, "dsnk": [739, 747, 750], "14ch": [739, 745], "2ch": [740, 741, 745], "pt": [740, 745], "21ch": [740, 741, 745], "being": [742, 743, 744], "wifidaq": [742, 743, 744], "reconnect": [742, 743, 744], "ap": [742, 743, 744], "stai": [742, 743, 744], "wifi_configur": [742, 743, 744], "retri": [742, 743, 744], "fulli": [742, 743, 744], "bandwidth": [742, 743, 744], "ht20": [742, 743, 744], "ht40": [742, 743, 744], "volatg": [742, 743, 744], "level": [742, 743, 744], "strength": [742, 743, 744], "port1": [742, 743, 744], "port2": [742, 743, 744], "1336": [742, 743, 744], "built": [743, 745], "9dof": [743, 745], "imu": [743, 745], "postur": [743, 745], "est": [743, 745], "estim": 743, "photo": 745, "quick": 745, "amplifi": 745, "differenti": 745, "8mpp": 745, "abz": 745, "12mhz": 745, "break": 745, "51": 745, "revolutio": 745, "36v": 745, "maximum": [745, 748], "suppli": 745, "1a": 745, "5a": 745, "peak": 745, "fwd": 745, "rev": 745, "nomin": 745, "8mhz": 745, "stall": 745, "detect": 745, "intellig": 745, "energi": 745, "diagnost": 745, "ramp": 745, "smooth": 745, "idc": 745, "50p": 745, "multiplex": 745, "4x6": 745, "matrix": 745, "20khz": 745, "24vdc": 745, "opto": 745, "isol": 745, "ethanex_d": 745, "1khz": 745, "NO": 745, "nc": 745, "220vdc": 745, "vac": 745, "2m": 745, "exclud": 745, "bounc": 745, "1m": [745, 749], "variabl": 745, "300": 745, "50k": 745, "ohm": 745, "settl": 745, "160m": 745, "1ch": 745, "400khz": 745, "full": 745, "bu": 745, "industri": 745, "sink": 745, "extern": [745, 748], "1mbp": 745, "v2": 745, "0b": 745, "10khz": 745, "802": 745, "ghz": 745, "16k": 746, "8k": 746, "3k": 746, "4k": 746, "2k": 746, "6k": 746, "0k": 746, "12k": 746, "fix": 746, "20k": 746, "below": 746, "1k": 746, "5k": 746, "ctr": 747, "seri": [747, 750], "520003": 748, "warn": 748, "occurr": 748, "overflow": 748, "520002": 748, "520001": 748, "520000": 748, "519000": 748, "librari": 748, "libusb": 748, "dll": 748, "look": 748, "7000": 748, "7001": 748, "7002": 748, "hal": 748, "7003": 748, "7004": 748, "7005": 748, "7006": 748, "7007": 748, "7008": 748, "7009": 748, "7010": 748, "7011": 748, "7012": 748, "7013": 748, "ol": 748, "7014": 748, "core": 748, "7015": 748, "7016": 748, "7017": 748, "7018": 748, "7019": 748, "7020": 748, "7021": 748, "7022": 748, "7023": 748, "7024": 748, "7025": 748, "udp": 748, "7026": 748, "bootload": 748, "7027": 748, "parser": 748, "7028": 748, "8000": 748, "8001": 748, "fail": 748, "plugin": 748, "8002": 748, "8003": 748, "lost": 748, "8004": 748, "packet": 748, "8005": 748, "valid": 748, "recogn": 748, "8006": 748, "inconsist": 748, "between": 748, "8007": 748, "8008": 748, "8009": 748, "accept": 748, "8010": 748, "extens": 748, "8011": 748, "No": 748, "directori": 748, "8100": 748, "occupi": 748, "8101": 748, "8102": 748, "8103": 748, "8104": 748, "8105": 748, "8200": 748, "8201": 748, "8202": 748, "8203": 748, "8204": 748, "8300": 748, "8301": 748, "8302": 748, "span": 748, "8303": 748, "8304": 748, "8305": 748, "8400": 748, "8401": 748, "8500": 748, "8501": 748, "8502": 748, "8503": 748, "8600": 748, "8601": 748, "8602": 748, "8700": 748, "8701": 748, "exce": 748, "8702": 748, "8703": 748, "8704": 748, "8705": 748, "8800": 748, "8801": 748, "8802": 748, "8803": 748, "8804": 748, "8805": 748, "8900": 748, "8901": 748, "8902": 748, "invalid": 748, "8903": 748, "tx": 748, "8904": 748, "prioriti": 748, "9100": 748, "9101": 748, "9102": 748, "9103": 748, "9104": 748, "9105": 748, "9106": 748, "9107": 748, "9108": 748, "9109": 748, "9110": 748, "9111": 748, "9112": 748, "9113": 748, "9200": 748, "9300": 748, "9301": 748, "rectangular": 749, "125k": 749, "250k": 749, "500k": 749, "bp": 749, "peripher": 749, "f_pclk2": 749, "72": 749, "f_pclk1": 749, "36": 749, "18": 749, "25": 749, "562": 749, "281": 749, "140": 749, "625": 749, "big": 749, "littl": 749, "remark": 750, "stand": 750}, "objects": {"": [[720, 0, 0, "-", "pywpc"]], "pywpc": [[722, 1, 1, "", "DeviceFinder"], [723, 1, 1, "", "EDriveST"], [724, 1, 1, "", "EMotion"], [725, 1, 1, "", "EthanA"], [726, 1, 1, "", "EthanD"], [727, 1, 1, "", "EthanEXD"], [728, 1, 1, "", "EthanI"], [729, 1, 1, "", "EthanIA"], [730, 1, 1, "", "EthanL"], [731, 1, 1, "", "EthanO"], [732, 1, 1, "", "EthanP"], [733, 1, 1, "", "EthanT"], [734, 1, 1, "", "STEM"], [735, 1, 1, "", "USBDAQF1AD"], [736, 1, 1, "", "USBDAQF1AOD"], [737, 1, 1, "", "USBDAQF1CD"], [738, 1, 1, "", "USBDAQF1D"], [739, 1, 1, "", "USBDAQF1DSNK"], [740, 1, 1, "", "USBDAQF1RD"], [741, 1, 1, "", "USBDAQF1TD"], [742, 1, 1, "", "WifiDAQE3A"], [743, 1, 1, "", "WifiDAQE3AH"], [744, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[722, 2, 1, "", "Bcst_checkMACAndReboot"], [722, 2, 1, "", "Bcst_checkMACAndReboot_async"], [722, 2, 1, "", "Bcst_checkMACAndSetIP"], [722, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [722, 2, 1, "", "Bcst_enumerateNetworkDevices"], [722, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [722, 2, 1, "", "Bcst_enumerateUSBDevices"], [722, 2, 1, "", "close"], [722, 2, 1, "", "connect"], [722, 2, 1, "", "disconnect"]], "pywpc.EDriveST": [[723, 2, 1, "", "Motion_cfgAxisDirection"], [723, 2, 1, "", "Motion_cfgAxisDirection_async"], [723, 2, 1, "", "Motion_cfgEncoder"], [723, 2, 1, "", "Motion_cfgEncoder_async"], [723, 2, 1, "", "Motion_cfgLimit"], [723, 2, 1, "", "Motion_cfgLimit_async"], [723, 2, 1, "", "Motion_close"], [723, 2, 1, "", "Motion_close_async"], [723, 2, 1, "", "Motion_enableServoOff"], [723, 2, 1, "", "Motion_enableServoOff_async"], [723, 2, 1, "", "Motion_enableServoOn"], [723, 2, 1, "", "Motion_enableServoOn_async"], [723, 2, 1, "", "Motion_getAlarmStatus"], [723, 2, 1, "", "Motion_getAlarmStatus_async"], [723, 2, 1, "", "Motion_getLimitStatus"], [723, 2, 1, "", "Motion_getLimitStatus_async"], [723, 2, 1, "", "Motion_getParameters"], [723, 2, 1, "", "Motion_getProcessState"], [723, 2, 1, "", "Motion_getProcessState_async"], [723, 2, 1, "", "Motion_loadCfgFile"], [723, 2, 1, "", "Motion_loadCfgFile_async"], [723, 2, 1, "", "Motion_open"], [723, 2, 1, "", "Motion_openCfgFile"], [723, 2, 1, "", "Motion_openCfgFile_async"], [723, 2, 1, "", "Motion_open_async"], [723, 2, 1, "", "Motion_readCurrentVelocity"], [723, 2, 1, "", "Motion_readCurrentVelocity_async"], [723, 2, 1, "", "Motion_readEncoderPosition"], [723, 2, 1, "", "Motion_readEncoderPosition_async"], [723, 2, 1, "", "Motion_resetFactory"], [723, 2, 1, "", "Motion_resetFactory_async"], [723, 2, 1, "", "Motion_rstEncoderPosi"], [723, 2, 1, "", "Motion_rstEncoderPosi_async"], [723, 2, 1, "", "Motion_saveCfgFile"], [723, 2, 1, "", "Motion_saveCfgFile_async"], [723, 2, 1, "", "Motion_startFindHome"], [723, 2, 1, "", "Motion_startFindHome_async"], [723, 2, 1, "", "Motion_startFindLimit"], [723, 2, 1, "", "Motion_startFindLimit_async"], [723, 2, 1, "", "Motion_startFindZPolarity"], [723, 2, 1, "", "Motion_startFindZPolarity_async"], [723, 2, 1, "", "Motion_startPositionMove"], [723, 2, 1, "", "Motion_startPositionMove_async"], [723, 2, 1, "", "Motion_startScanMove"], [723, 2, 1, "", "Motion_startScanMove_async"], [723, 2, 1, "", "Motion_startVelocticyMove"], [723, 2, 1, "", "Motion_startVelocticyMove_async"], [723, 2, 1, "", "Motion_stopProcess"], [723, 2, 1, "", "Motion_stopProcess_async"], [723, 2, 1, "", "Net_getGateway"], [723, 2, 1, "", "Net_getGateway_async"], [723, 2, 1, "", "Net_getIPAddrAndSubmask"], [723, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [723, 2, 1, "", "Net_getMACAddr"], [723, 2, 1, "", "Net_getMACAddr_async"], [723, 2, 1, "", "Net_setIPAddrAndSubmask"], [723, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [723, 2, 1, "", "Sys_getDriverInfo"], [723, 2, 1, "", "Sys_getDriverInfo_async"], [723, 2, 1, "", "Sys_getGateway"], [723, 2, 1, "", "Sys_getGateway_async"], [723, 2, 1, "", "Sys_getIPAddrAndSubmask"], [723, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [723, 2, 1, "", "Sys_getMACAddr"], [723, 2, 1, "", "Sys_getMACAddr_async"], [723, 2, 1, "", "Sys_getMode"], [723, 2, 1, "", "Sys_getMode_async"], [723, 2, 1, "", "Sys_getPinModeInPort"], [723, 2, 1, "", "Sys_getPinModeInPort_async"], [723, 2, 1, "", "Sys_getPythonVersion"], [723, 2, 1, "", "Sys_getPythonVersion_async"], [723, 2, 1, "", "Sys_getRTC"], [723, 2, 1, "", "Sys_getRTC_async"], [723, 2, 1, "", "Sys_getSerialNumber"], [723, 2, 1, "", "Sys_getSerialNumber_async"], [723, 2, 1, "", "Sys_reboot"], [723, 2, 1, "", "Sys_reboot_async"], [723, 2, 1, "", "Sys_setAIOMode"], [723, 2, 1, "", "Sys_setAIOMode_async"], [723, 2, 1, "", "Sys_setDIMode"], [723, 2, 1, "", "Sys_setDIMode_async"], [723, 2, 1, "", "Sys_setDIOMode"], [723, 2, 1, "", "Sys_setDIOMode_async"], [723, 2, 1, "", "Sys_setDOMode"], [723, 2, 1, "", "Sys_setDOMode_async"], [723, 2, 1, "", "Sys_setIPAddrAndSubmask"], [723, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [723, 2, 1, "", "Sys_setIdleMode"], [723, 2, 1, "", "Sys_setIdleMode_async"], [723, 2, 1, "", "Sys_setMotionMode"], [723, 2, 1, "", "Sys_setMotionMode_async"], [723, 2, 1, "", "Sys_setRTC"], [723, 2, 1, "", "Sys_setRTC_async"], [723, 2, 1, "", "Sys_setSwitchMode"], [723, 2, 1, "", "Sys_setSwitchMode_async"], [723, 2, 1, "", "close"], [723, 2, 1, "", "connect"], [723, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[724, 2, 1, "", "Logger_openFile"], [724, 2, 1, "", "Logger_write2DList"], [724, 2, 1, "", "Logger_writeHeader"], [724, 2, 1, "", "Logger_writeList"], [724, 2, 1, "", "Logger_writeValue"], [724, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [724, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [724, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [724, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [724, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [724, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [724, 2, 1, "", "Motion_cfgAlarm"], [724, 2, 1, "", "Motion_cfgAlarm_async"], [724, 2, 1, "", "Motion_cfgAxis"], [724, 2, 1, "", "Motion_cfgAxisMove"], [724, 2, 1, "", "Motion_cfgAxisMove_async"], [724, 2, 1, "", "Motion_cfgAxis_async"], [724, 2, 1, "", "Motion_cfgBreakPoint"], [724, 2, 1, "", "Motion_cfgBreakPoint_async"], [724, 2, 1, "", "Motion_cfgCapture"], [724, 2, 1, "", "Motion_cfgCapture_async"], [724, 2, 1, "", "Motion_cfgCircularInterpo"], [724, 2, 1, "", "Motion_cfgCircularInterpo_async"], [724, 2, 1, "", "Motion_cfgEncoder"], [724, 2, 1, "", "Motion_cfgEncoder_async"], [724, 2, 1, "", "Motion_cfgFindRef"], [724, 2, 1, "", "Motion_cfgFindRef_async"], [724, 2, 1, "", "Motion_cfgHelicalInterpo"], [724, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [724, 2, 1, "", "Motion_cfgHome"], [724, 2, 1, "", "Motion_cfgHome_async"], [724, 2, 1, "", "Motion_cfgInposi"], [724, 2, 1, "", "Motion_cfgInposi_async"], [724, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [724, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [724, 2, 1, "", "Motion_cfgLimit"], [724, 2, 1, "", "Motion_cfgLimit_async"], [724, 2, 1, "", "Motion_checkRef"], [724, 2, 1, "", "Motion_checkRef_async"], [724, 2, 1, "", "Motion_close"], [724, 2, 1, "", "Motion_close_async"], [724, 2, 1, "", "Motion_enableBreakPoint"], [724, 2, 1, "", "Motion_enableBreakPoint_async"], [724, 2, 1, "", "Motion_enableCapture"], [724, 2, 1, "", "Motion_enableCapture_async"], [724, 2, 1, "", "Motion_enableServoOff"], [724, 2, 1, "", "Motion_enableServoOff_async"], [724, 2, 1, "", "Motion_enableServoOn"], [724, 2, 1, "", "Motion_enableServoOn_async"], [724, 2, 1, "", "Motion_findRef"], [724, 2, 1, "", "Motion_findRef_async"], [724, 2, 1, "", "Motion_getEncoderPosi"], [724, 2, 1, "", "Motion_getEncoderPosi_async"], [724, 2, 1, "", "Motion_getHomeStatus"], [724, 2, 1, "", "Motion_getHomeStatus_async"], [724, 2, 1, "", "Motion_getLimitStatus"], [724, 2, 1, "", "Motion_getLimitStatus_async"], [724, 2, 1, "", "Motion_getLogicalPosi"], [724, 2, 1, "", "Motion_getLogicalPosi_async"], [724, 2, 1, "", "Motion_getMoveStatus"], [724, 2, 1, "", "Motion_getMoveStatus_async"], [724, 2, 1, "", "Motion_loadCfgFile"], [724, 2, 1, "", "Motion_loadCfgFile_async"], [724, 2, 1, "", "Motion_open"], [724, 2, 1, "", "Motion_openCfgFile"], [724, 2, 1, "", "Motion_openCfgFile_async"], [724, 2, 1, "", "Motion_open_async"], [724, 2, 1, "", "Motion_overrideAxisAccel"], [724, 2, 1, "", "Motion_overrideAxisAccel_async"], [724, 2, 1, "", "Motion_overrideAxisPosi"], [724, 2, 1, "", "Motion_overrideAxisPosi_async"], [724, 2, 1, "", "Motion_overrideAxisVelocity"], [724, 2, 1, "", "Motion_overrideAxisVelocity_async"], [724, 2, 1, "", "Motion_readCapturePoint"], [724, 2, 1, "", "Motion_readCapturePoint_async"], [724, 2, 1, "", "Motion_rstEncoderPosi"], [724, 2, 1, "", "Motion_rstEncoderPosi_async"], [724, 2, 1, "", "Motion_saveCfgFile"], [724, 2, 1, "", "Motion_saveCfgFile_async"], [724, 2, 1, "", "Motion_setLogicalPosi"], [724, 2, 1, "", "Motion_setLogicalPosi_async"], [724, 2, 1, "", "Motion_startCircularInterpo"], [724, 2, 1, "", "Motion_startCircularInterpo_async"], [724, 2, 1, "", "Motion_startHelicalInterpo"], [724, 2, 1, "", "Motion_startHelicalInterpo_async"], [724, 2, 1, "", "Motion_startLinearInterpo"], [724, 2, 1, "", "Motion_startLinearInterpo_async"], [724, 2, 1, "", "Motion_startMultiAxisMove"], [724, 2, 1, "", "Motion_startMultiAxisMove_async"], [724, 2, 1, "", "Motion_startSingleAxisMove"], [724, 2, 1, "", "Motion_startSingleAxisMove_async"], [724, 2, 1, "", "Motion_stop"], [724, 2, 1, "", "Motion_stop_async"], [724, 2, 1, "", "Net_getGateway"], [724, 2, 1, "", "Net_getGateway_async"], [724, 2, 1, "", "Net_getIPAddrAndSubmask"], [724, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [724, 2, 1, "", "Net_getMACAddr"], [724, 2, 1, "", "Net_getMACAddr_async"], [724, 2, 1, "", "Net_setIPAddrAndSubmask"], [724, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [724, 2, 1, "", "Sys_getDriverInfo"], [724, 2, 1, "", "Sys_getDriverInfo_async"], [724, 2, 1, "", "Sys_getGateway"], [724, 2, 1, "", "Sys_getGateway_async"], [724, 2, 1, "", "Sys_getIPAddrAndSubmask"], [724, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [724, 2, 1, "", "Sys_getMACAddr"], [724, 2, 1, "", "Sys_getMACAddr_async"], [724, 2, 1, "", "Sys_getMode"], [724, 2, 1, "", "Sys_getMode_async"], [724, 2, 1, "", "Sys_getPinModeInPort"], [724, 2, 1, "", "Sys_getPinModeInPort_async"], [724, 2, 1, "", "Sys_getPythonVersion"], [724, 2, 1, "", "Sys_getPythonVersion_async"], [724, 2, 1, "", "Sys_getRTC"], [724, 2, 1, "", "Sys_getRTC_async"], [724, 2, 1, "", "Sys_getSerialNumber"], [724, 2, 1, "", "Sys_getSerialNumber_async"], [724, 2, 1, "", "Sys_reboot"], [724, 2, 1, "", "Sys_reboot_async"], [724, 2, 1, "", "Sys_setAIOMode"], [724, 2, 1, "", "Sys_setAIOMode_async"], [724, 2, 1, "", "Sys_setDIMode"], [724, 2, 1, "", "Sys_setDIMode_async"], [724, 2, 1, "", "Sys_setDIOMode"], [724, 2, 1, "", "Sys_setDIOMode_async"], [724, 2, 1, "", "Sys_setDOMode"], [724, 2, 1, "", "Sys_setDOMode_async"], [724, 2, 1, "", "Sys_setIPAddrAndSubmask"], [724, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [724, 2, 1, "", "Sys_setIdleMode"], [724, 2, 1, "", "Sys_setIdleMode_async"], [724, 2, 1, "", "Sys_setMotionMode"], [724, 2, 1, "", "Sys_setMotionMode_async"], [724, 2, 1, "", "Sys_setRTC"], [724, 2, 1, "", "Sys_setRTC_async"], [724, 2, 1, "", "Sys_setSwitchMode"], [724, 2, 1, "", "Sys_setSwitchMode_async"], [724, 2, 1, "", "close"], [724, 2, 1, "", "connect"], [724, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[725, 2, 1, "", "AI_close"], [725, 2, 1, "", "AI_close_async"], [725, 2, 1, "", "AI_enableCS"], [725, 2, 1, "", "AI_enableCS_async"], [725, 2, 1, "", "AI_enableChannel"], [725, 2, 1, "", "AI_enableChannel_async"], [725, 2, 1, "", "AI_getPort"], [725, 2, 1, "", "AI_open"], [725, 2, 1, "", "AI_open_async"], [725, 2, 1, "", "AI_readOnDemand"], [725, 2, 1, "", "AI_readOnDemand_async"], [725, 2, 1, "", "AI_readStreaming"], [725, 2, 1, "", "AI_readStreaming_async"], [725, 2, 1, "", "AI_setMode"], [725, 2, 1, "", "AI_setMode_async"], [725, 2, 1, "", "AI_setNumSamples"], [725, 2, 1, "", "AI_setNumSamples_async"], [725, 2, 1, "", "AI_setSamplingRate"], [725, 2, 1, "", "AI_setSamplingRate_async"], [725, 2, 1, "", "AI_start"], [725, 2, 1, "", "AI_start_async"], [725, 2, 1, "", "AI_stop"], [725, 2, 1, "", "AI_stop_async"], [725, 2, 1, "", "Logger_openFile"], [725, 2, 1, "", "Logger_write2DList"], [725, 2, 1, "", "Logger_writeHeader"], [725, 2, 1, "", "Logger_writeList"], [725, 2, 1, "", "Logger_writeValue"], [725, 2, 1, "", "Net_getGateway"], [725, 2, 1, "", "Net_getGateway_async"], [725, 2, 1, "", "Net_getIPAddrAndSubmask"], [725, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [725, 2, 1, "", "Net_getMACAddr"], [725, 2, 1, "", "Net_getMACAddr_async"], [725, 2, 1, "", "Net_setIPAddrAndSubmask"], [725, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [725, 2, 1, "", "Sys_getDriverInfo"], [725, 2, 1, "", "Sys_getDriverInfo_async"], [725, 2, 1, "", "Sys_getGateway"], [725, 2, 1, "", "Sys_getGateway_async"], [725, 2, 1, "", "Sys_getIPAddrAndSubmask"], [725, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [725, 2, 1, "", "Sys_getMACAddr"], [725, 2, 1, "", "Sys_getMACAddr_async"], [725, 2, 1, "", "Sys_getMode"], [725, 2, 1, "", "Sys_getMode_async"], [725, 2, 1, "", "Sys_getPinModeInPort"], [725, 2, 1, "", "Sys_getPinModeInPort_async"], [725, 2, 1, "", "Sys_getPythonVersion"], [725, 2, 1, "", "Sys_getPythonVersion_async"], [725, 2, 1, "", "Sys_getRTC"], [725, 2, 1, "", "Sys_getRTC_async"], [725, 2, 1, "", "Sys_getSerialNumber"], [725, 2, 1, "", "Sys_getSerialNumber_async"], [725, 2, 1, "", "Sys_reboot"], [725, 2, 1, "", "Sys_reboot_async"], [725, 2, 1, "", "Sys_setAIOMode"], [725, 2, 1, "", "Sys_setAIOMode_async"], [725, 2, 1, "", "Sys_setDIMode"], [725, 2, 1, "", "Sys_setDIMode_async"], [725, 2, 1, "", "Sys_setDIOMode"], [725, 2, 1, "", "Sys_setDIOMode_async"], [725, 2, 1, "", "Sys_setDOMode"], [725, 2, 1, "", "Sys_setDOMode_async"], [725, 2, 1, "", "Sys_setIPAddrAndSubmask"], [725, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [725, 2, 1, "", "Sys_setIdleMode"], [725, 2, 1, "", "Sys_setIdleMode_async"], [725, 2, 1, "", "Sys_setMotionMode"], [725, 2, 1, "", "Sys_setMotionMode_async"], [725, 2, 1, "", "Sys_setRTC"], [725, 2, 1, "", "Sys_setRTC_async"], [725, 2, 1, "", "Sys_setSwitchMode"], [725, 2, 1, "", "Sys_setSwitchMode_async"], [725, 2, 1, "", "close"], [725, 2, 1, "", "connect"], [725, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[726, 2, 1, "", "DIO_loadStartup"], [726, 2, 1, "", "DIO_loadStartup_async"], [726, 2, 1, "", "DI_closePins"], [726, 2, 1, "", "DI_closePins_async"], [726, 2, 1, "", "DI_closePort"], [726, 2, 1, "", "DI_closePort_async"], [726, 2, 1, "", "DI_getPinMap"], [726, 2, 1, "", "DI_openPins"], [726, 2, 1, "", "DI_openPins_async"], [726, 2, 1, "", "DI_openPort"], [726, 2, 1, "", "DI_openPort_async"], [726, 2, 1, "", "DI_readPins"], [726, 2, 1, "", "DI_readPins_async"], [726, 2, 1, "", "DI_readPort"], [726, 2, 1, "", "DI_readPort_async"], [726, 2, 1, "", "DO_closePins"], [726, 2, 1, "", "DO_closePins_async"], [726, 2, 1, "", "DO_closePort"], [726, 2, 1, "", "DO_closePort_async"], [726, 2, 1, "", "DO_getPinMap"], [726, 2, 1, "", "DO_openPins"], [726, 2, 1, "", "DO_openPins_async"], [726, 2, 1, "", "DO_openPort"], [726, 2, 1, "", "DO_openPort_async"], [726, 2, 1, "", "DO_togglePins"], [726, 2, 1, "", "DO_togglePins_async"], [726, 2, 1, "", "DO_togglePort"], [726, 2, 1, "", "DO_togglePort_async"], [726, 2, 1, "", "DO_writePins"], [726, 2, 1, "", "DO_writePins_async"], [726, 2, 1, "", "DO_writePort"], [726, 2, 1, "", "DO_writePort_async"], [726, 2, 1, "", "Logger_openFile"], [726, 2, 1, "", "Logger_write2DList"], [726, 2, 1, "", "Logger_writeHeader"], [726, 2, 1, "", "Logger_writeList"], [726, 2, 1, "", "Logger_writeValue"], [726, 2, 1, "", "Net_getGateway"], [726, 2, 1, "", "Net_getGateway_async"], [726, 2, 1, "", "Net_getIPAddrAndSubmask"], [726, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [726, 2, 1, "", "Net_getMACAddr"], [726, 2, 1, "", "Net_getMACAddr_async"], [726, 2, 1, "", "Net_setIPAddrAndSubmask"], [726, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [726, 2, 1, "", "PWM_close"], [726, 2, 1, "", "PWM_close_async"], [726, 2, 1, "", "PWM_open"], [726, 2, 1, "", "PWM_open_async"], [726, 2, 1, "", "PWM_setDutyCycle"], [726, 2, 1, "", "PWM_setDutyCycle_async"], [726, 2, 1, "", "PWM_setFrequency"], [726, 2, 1, "", "PWM_setFrequency_async"], [726, 2, 1, "", "PWM_start"], [726, 2, 1, "", "PWM_start_async"], [726, 2, 1, "", "PWM_stop"], [726, 2, 1, "", "PWM_stop_async"], [726, 2, 1, "", "Sys_getDriverInfo"], [726, 2, 1, "", "Sys_getDriverInfo_async"], [726, 2, 1, "", "Sys_getGateway"], [726, 2, 1, "", "Sys_getGateway_async"], [726, 2, 1, "", "Sys_getIPAddrAndSubmask"], [726, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [726, 2, 1, "", "Sys_getMACAddr"], [726, 2, 1, "", "Sys_getMACAddr_async"], [726, 2, 1, "", "Sys_getMode"], [726, 2, 1, "", "Sys_getMode_async"], [726, 2, 1, "", "Sys_getPinModeInPort"], [726, 2, 1, "", "Sys_getPinModeInPort_async"], [726, 2, 1, "", "Sys_getPythonVersion"], [726, 2, 1, "", "Sys_getPythonVersion_async"], [726, 2, 1, "", "Sys_getRTC"], [726, 2, 1, "", "Sys_getRTC_async"], [726, 2, 1, "", "Sys_getSerialNumber"], [726, 2, 1, "", "Sys_getSerialNumber_async"], [726, 2, 1, "", "Sys_reboot"], [726, 2, 1, "", "Sys_reboot_async"], [726, 2, 1, "", "Sys_setAIOMode"], [726, 2, 1, "", "Sys_setAIOMode_async"], [726, 2, 1, "", "Sys_setDIMode"], [726, 2, 1, "", "Sys_setDIMode_async"], [726, 2, 1, "", "Sys_setDIOMode"], [726, 2, 1, "", "Sys_setDIOMode_async"], [726, 2, 1, "", "Sys_setDOMode"], [726, 2, 1, "", "Sys_setDOMode_async"], [726, 2, 1, "", "Sys_setIPAddrAndSubmask"], [726, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [726, 2, 1, "", "Sys_setIdleMode"], [726, 2, 1, "", "Sys_setIdleMode_async"], [726, 2, 1, "", "Sys_setMotionMode"], [726, 2, 1, "", "Sys_setMotionMode_async"], [726, 2, 1, "", "Sys_setRTC"], [726, 2, 1, "", "Sys_setRTC_async"], [726, 2, 1, "", "Sys_setSwitchMode"], [726, 2, 1, "", "Sys_setSwitchMode_async"], [726, 2, 1, "", "close"], [726, 2, 1, "", "connect"], [726, 2, 1, "", "disconnect"]], "pywpc.EthanEXD": [[727, 2, 1, "", "DIO_loadStartup"], [727, 2, 1, "", "DIO_loadStartup_async"], [727, 2, 1, "", "DI_closePins"], [727, 2, 1, "", "DI_closePins_async"], [727, 2, 1, "", "DI_closePort"], [727, 2, 1, "", "DI_closePort_async"], [727, 2, 1, "", "DI_getPinMap"], [727, 2, 1, "", "DI_openPins"], [727, 2, 1, "", "DI_openPins_async"], [727, 2, 1, "", "DI_openPort"], [727, 2, 1, "", "DI_openPort_async"], [727, 2, 1, "", "DI_readPins"], [727, 2, 1, "", "DI_readPins_async"], [727, 2, 1, "", "DI_readPort"], [727, 2, 1, "", "DI_readPort_async"], [727, 2, 1, "", "DO_closePins"], [727, 2, 1, "", "DO_closePins_async"], [727, 2, 1, "", "DO_closePort"], [727, 2, 1, "", "DO_closePort_async"], [727, 2, 1, "", "DO_getPinMap"], [727, 2, 1, "", "DO_openPins"], [727, 2, 1, "", "DO_openPins_async"], [727, 2, 1, "", "DO_openPort"], [727, 2, 1, "", "DO_openPort_async"], [727, 2, 1, "", "DO_togglePins"], [727, 2, 1, "", "DO_togglePins_async"], [727, 2, 1, "", "DO_togglePort"], [727, 2, 1, "", "DO_togglePort_async"], [727, 2, 1, "", "DO_writePins"], [727, 2, 1, "", "DO_writePins_async"], [727, 2, 1, "", "DO_writePort"], [727, 2, 1, "", "DO_writePort_async"], [727, 2, 1, "", "Logger_openFile"], [727, 2, 1, "", "Logger_write2DList"], [727, 2, 1, "", "Logger_writeHeader"], [727, 2, 1, "", "Logger_writeList"], [727, 2, 1, "", "Logger_writeValue"], [727, 2, 1, "", "Net_getGateway"], [727, 2, 1, "", "Net_getGateway_async"], [727, 2, 1, "", "Net_getIPAddrAndSubmask"], [727, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [727, 2, 1, "", "Net_getMACAddr"], [727, 2, 1, "", "Net_getMACAddr_async"], [727, 2, 1, "", "Net_setIPAddrAndSubmask"], [727, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [727, 2, 1, "", "Sys_getDriverInfo"], [727, 2, 1, "", "Sys_getDriverInfo_async"], [727, 2, 1, "", "Sys_getGateway"], [727, 2, 1, "", "Sys_getGateway_async"], [727, 2, 1, "", "Sys_getIPAddrAndSubmask"], [727, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [727, 2, 1, "", "Sys_getMACAddr"], [727, 2, 1, "", "Sys_getMACAddr_async"], [727, 2, 1, "", "Sys_getMode"], [727, 2, 1, "", "Sys_getMode_async"], [727, 2, 1, "", "Sys_getPinModeInPort"], [727, 2, 1, "", "Sys_getPinModeInPort_async"], [727, 2, 1, "", "Sys_getPythonVersion"], [727, 2, 1, "", "Sys_getPythonVersion_async"], [727, 2, 1, "", "Sys_getRTC"], [727, 2, 1, "", "Sys_getRTC_async"], [727, 2, 1, "", "Sys_getSerialNumber"], [727, 2, 1, "", "Sys_getSerialNumber_async"], [727, 2, 1, "", "Sys_reboot"], [727, 2, 1, "", "Sys_reboot_async"], [727, 2, 1, "", "Sys_setAIOMode"], [727, 2, 1, "", "Sys_setAIOMode_async"], [727, 2, 1, "", "Sys_setDIMode"], [727, 2, 1, "", "Sys_setDIMode_async"], [727, 2, 1, "", "Sys_setDIOMode"], [727, 2, 1, "", "Sys_setDIOMode_async"], [727, 2, 1, "", "Sys_setDOMode"], [727, 2, 1, "", "Sys_setDOMode_async"], [727, 2, 1, "", "Sys_setIPAddrAndSubmask"], [727, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [727, 2, 1, "", "Sys_setIdleMode"], [727, 2, 1, "", "Sys_setIdleMode_async"], [727, 2, 1, "", "Sys_setMotionMode"], [727, 2, 1, "", "Sys_setMotionMode_async"], [727, 2, 1, "", "Sys_setRTC"], [727, 2, 1, "", "Sys_setRTC_async"], [727, 2, 1, "", "Sys_setSwitchMode"], [727, 2, 1, "", "Sys_setSwitchMode_async"], [727, 2, 1, "", "close"], [727, 2, 1, "", "connect"], [727, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[728, 2, 1, "", "AI_close"], [728, 2, 1, "", "AI_close_async"], [728, 2, 1, "", "AI_getPort"], [728, 2, 1, "", "AI_open"], [728, 2, 1, "", "AI_open_async"], [728, 2, 1, "", "AI_readOnDemand"], [728, 2, 1, "", "AI_readOnDemand_async"], [728, 2, 1, "", "Logger_openFile"], [728, 2, 1, "", "Logger_write2DList"], [728, 2, 1, "", "Logger_writeHeader"], [728, 2, 1, "", "Logger_writeList"], [728, 2, 1, "", "Logger_writeValue"], [728, 2, 1, "", "Net_getGateway"], [728, 2, 1, "", "Net_getGateway_async"], [728, 2, 1, "", "Net_getIPAddrAndSubmask"], [728, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [728, 2, 1, "", "Net_getMACAddr"], [728, 2, 1, "", "Net_getMACAddr_async"], [728, 2, 1, "", "Net_setIPAddrAndSubmask"], [728, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [728, 2, 1, "", "Sys_getDriverInfo"], [728, 2, 1, "", "Sys_getDriverInfo_async"], [728, 2, 1, "", "Sys_getGateway"], [728, 2, 1, "", "Sys_getGateway_async"], [728, 2, 1, "", "Sys_getIPAddrAndSubmask"], [728, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [728, 2, 1, "", "Sys_getMACAddr"], [728, 2, 1, "", "Sys_getMACAddr_async"], [728, 2, 1, "", "Sys_getMode"], [728, 2, 1, "", "Sys_getMode_async"], [728, 2, 1, "", "Sys_getPinModeInPort"], [728, 2, 1, "", "Sys_getPinModeInPort_async"], [728, 2, 1, "", "Sys_getPythonVersion"], [728, 2, 1, "", "Sys_getPythonVersion_async"], [728, 2, 1, "", "Sys_getRTC"], [728, 2, 1, "", "Sys_getRTC_async"], [728, 2, 1, "", "Sys_getSerialNumber"], [728, 2, 1, "", "Sys_getSerialNumber_async"], [728, 2, 1, "", "Sys_reboot"], [728, 2, 1, "", "Sys_reboot_async"], [728, 2, 1, "", "Sys_setAIOMode"], [728, 2, 1, "", "Sys_setAIOMode_async"], [728, 2, 1, "", "Sys_setDIMode"], [728, 2, 1, "", "Sys_setDIMode_async"], [728, 2, 1, "", "Sys_setDIOMode"], [728, 2, 1, "", "Sys_setDIOMode_async"], [728, 2, 1, "", "Sys_setDOMode"], [728, 2, 1, "", "Sys_setDOMode_async"], [728, 2, 1, "", "Sys_setIPAddrAndSubmask"], [728, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [728, 2, 1, "", "Sys_setIdleMode"], [728, 2, 1, "", "Sys_setIdleMode_async"], [728, 2, 1, "", "Sys_setMotionMode"], [728, 2, 1, "", "Sys_setMotionMode_async"], [728, 2, 1, "", "Sys_setRTC"], [728, 2, 1, "", "Sys_setRTC_async"], [728, 2, 1, "", "Sys_setSwitchMode"], [728, 2, 1, "", "Sys_setSwitchMode_async"], [728, 2, 1, "", "close"], [728, 2, 1, "", "connect"], [728, 2, 1, "", "disconnect"]], "pywpc.EthanIA": [[729, 2, 1, "", "AI_close"], [729, 2, 1, "", "AI_close_async"], [729, 2, 1, "", "AI_getPort"], [729, 2, 1, "", "AI_open"], [729, 2, 1, "", "AI_open_async"], [729, 2, 1, "", "AI_readOnDemand"], [729, 2, 1, "", "AI_readOnDemand_async"], [729, 2, 1, "", "Logger_openFile"], [729, 2, 1, "", "Logger_write2DList"], [729, 2, 1, "", "Logger_writeHeader"], [729, 2, 1, "", "Logger_writeList"], [729, 2, 1, "", "Logger_writeValue"], [729, 2, 1, "", "Net_getGateway"], [729, 2, 1, "", "Net_getGateway_async"], [729, 2, 1, "", "Net_getIPAddrAndSubmask"], [729, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [729, 2, 1, "", "Net_getMACAddr"], [729, 2, 1, "", "Net_getMACAddr_async"], [729, 2, 1, "", "Net_setIPAddrAndSubmask"], [729, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [729, 2, 1, "", "Sys_getDriverInfo"], [729, 2, 1, "", "Sys_getDriverInfo_async"], [729, 2, 1, "", "Sys_getGateway"], [729, 2, 1, "", "Sys_getGateway_async"], [729, 2, 1, "", "Sys_getIPAddrAndSubmask"], [729, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [729, 2, 1, "", "Sys_getMACAddr"], [729, 2, 1, "", "Sys_getMACAddr_async"], [729, 2, 1, "", "Sys_getMode"], [729, 2, 1, "", "Sys_getMode_async"], [729, 2, 1, "", "Sys_getPinModeInPort"], [729, 2, 1, "", "Sys_getPinModeInPort_async"], [729, 2, 1, "", "Sys_getPythonVersion"], [729, 2, 1, "", "Sys_getPythonVersion_async"], [729, 2, 1, "", "Sys_getRTC"], [729, 2, 1, "", "Sys_getRTC_async"], [729, 2, 1, "", "Sys_getSerialNumber"], [729, 2, 1, "", "Sys_getSerialNumber_async"], [729, 2, 1, "", "Sys_reboot"], [729, 2, 1, "", "Sys_reboot_async"], [729, 2, 1, "", "Sys_setAIOMode"], [729, 2, 1, "", "Sys_setAIOMode_async"], [729, 2, 1, "", "Sys_setDIMode"], [729, 2, 1, "", "Sys_setDIMode_async"], [729, 2, 1, "", "Sys_setDIOMode"], [729, 2, 1, "", "Sys_setDIOMode_async"], [729, 2, 1, "", "Sys_setDOMode"], [729, 2, 1, "", "Sys_setDOMode_async"], [729, 2, 1, "", "Sys_setIPAddrAndSubmask"], [729, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [729, 2, 1, "", "Sys_setIdleMode"], [729, 2, 1, "", "Sys_setIdleMode_async"], [729, 2, 1, "", "Sys_setMotionMode"], [729, 2, 1, "", "Sys_setMotionMode_async"], [729, 2, 1, "", "Sys_setRTC"], [729, 2, 1, "", "Sys_setRTC_async"], [729, 2, 1, "", "Sys_setSwitchMode"], [729, 2, 1, "", "Sys_setSwitchMode_async"], [729, 2, 1, "", "close"], [729, 2, 1, "", "connect"], [729, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[730, 2, 1, "", "DIO_loadStartup"], [730, 2, 1, "", "DIO_loadStartup_async"], [730, 2, 1, "", "DI_closePins"], [730, 2, 1, "", "DI_closePins_async"], [730, 2, 1, "", "DI_closePort"], [730, 2, 1, "", "DI_closePort_async"], [730, 2, 1, "", "DI_getPinMap"], [730, 2, 1, "", "DI_openPins"], [730, 2, 1, "", "DI_openPins_async"], [730, 2, 1, "", "DI_openPort"], [730, 2, 1, "", "DI_openPort_async"], [730, 2, 1, "", "DI_readPins"], [730, 2, 1, "", "DI_readPins_async"], [730, 2, 1, "", "DI_readPort"], [730, 2, 1, "", "DI_readPort_async"], [730, 2, 1, "", "DO_closePins"], [730, 2, 1, "", "DO_closePins_async"], [730, 2, 1, "", "DO_closePort"], [730, 2, 1, "", "DO_closePort_async"], [730, 2, 1, "", "DO_getPinMap"], [730, 2, 1, "", "DO_openPins"], [730, 2, 1, "", "DO_openPins_async"], [730, 2, 1, "", "DO_openPort"], [730, 2, 1, "", "DO_openPort_async"], [730, 2, 1, "", "DO_togglePins"], [730, 2, 1, "", "DO_togglePins_async"], [730, 2, 1, "", "DO_togglePort"], [730, 2, 1, "", "DO_togglePort_async"], [730, 2, 1, "", "DO_writePins"], [730, 2, 1, "", "DO_writePins_async"], [730, 2, 1, "", "DO_writePort"], [730, 2, 1, "", "DO_writePort_async"], [730, 2, 1, "", "Logger_openFile"], [730, 2, 1, "", "Logger_write2DList"], [730, 2, 1, "", "Logger_writeHeader"], [730, 2, 1, "", "Logger_writeList"], [730, 2, 1, "", "Logger_writeValue"], [730, 2, 1, "", "Net_getGateway"], [730, 2, 1, "", "Net_getGateway_async"], [730, 2, 1, "", "Net_getIPAddrAndSubmask"], [730, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [730, 2, 1, "", "Net_getMACAddr"], [730, 2, 1, "", "Net_getMACAddr_async"], [730, 2, 1, "", "Net_setIPAddrAndSubmask"], [730, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [730, 2, 1, "", "Relay_close"], [730, 2, 1, "", "Relay_close_async"], [730, 2, 1, "", "Relay_open"], [730, 2, 1, "", "Relay_open_async"], [730, 2, 1, "", "Relay_read"], [730, 2, 1, "", "Relay_read_async"], [730, 2, 1, "", "Sys_getDriverInfo"], [730, 2, 1, "", "Sys_getDriverInfo_async"], [730, 2, 1, "", "Sys_getGateway"], [730, 2, 1, "", "Sys_getGateway_async"], [730, 2, 1, "", "Sys_getIPAddrAndSubmask"], [730, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [730, 2, 1, "", "Sys_getMACAddr"], [730, 2, 1, "", "Sys_getMACAddr_async"], [730, 2, 1, "", "Sys_getMode"], [730, 2, 1, "", "Sys_getMode_async"], [730, 2, 1, "", "Sys_getPinModeInPort"], [730, 2, 1, "", "Sys_getPinModeInPort_async"], [730, 2, 1, "", "Sys_getPythonVersion"], [730, 2, 1, "", "Sys_getPythonVersion_async"], [730, 2, 1, "", "Sys_getRTC"], [730, 2, 1, "", "Sys_getRTC_async"], [730, 2, 1, "", "Sys_getSerialNumber"], [730, 2, 1, "", "Sys_getSerialNumber_async"], [730, 2, 1, "", "Sys_reboot"], [730, 2, 1, "", "Sys_reboot_async"], [730, 2, 1, "", "Sys_setAIOMode"], [730, 2, 1, "", "Sys_setAIOMode_async"], [730, 2, 1, "", "Sys_setDIMode"], [730, 2, 1, "", "Sys_setDIMode_async"], [730, 2, 1, "", "Sys_setDIOMode"], [730, 2, 1, "", "Sys_setDIOMode_async"], [730, 2, 1, "", "Sys_setDOMode"], [730, 2, 1, "", "Sys_setDOMode_async"], [730, 2, 1, "", "Sys_setIPAddrAndSubmask"], [730, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [730, 2, 1, "", "Sys_setIdleMode"], [730, 2, 1, "", "Sys_setIdleMode_async"], [730, 2, 1, "", "Sys_setMotionMode"], [730, 2, 1, "", "Sys_setMotionMode_async"], [730, 2, 1, "", "Sys_setRTC"], [730, 2, 1, "", "Sys_setRTC_async"], [730, 2, 1, "", "Sys_setSwitchMode"], [730, 2, 1, "", "Sys_setSwitchMode_async"], [730, 2, 1, "", "close"], [730, 2, 1, "", "connect"], [730, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[731, 2, 1, "", "AO_close"], [731, 2, 1, "", "AO_closeStreaming"], [731, 2, 1, "", "AO_closeStreaming_async"], [731, 2, 1, "", "AO_close_async"], [731, 2, 1, "", "AO_getPort"], [731, 2, 1, "", "AO_getValues"], [731, 2, 1, "", "AO_getValues_async"], [731, 2, 1, "", "AO_open"], [731, 2, 1, "", "AO_openStreaming"], [731, 2, 1, "", "AO_openStreaming_async"], [731, 2, 1, "", "AO_open_async"], [731, 2, 1, "", "AO_setEnableChannels"], [731, 2, 1, "", "AO_setEnableChannels_async"], [731, 2, 1, "", "AO_setForm"], [731, 2, 1, "", "AO_setFormParam"], [731, 2, 1, "", "AO_setFormParam_async"], [731, 2, 1, "", "AO_setForm_async"], [731, 2, 1, "", "AO_setMode"], [731, 2, 1, "", "AO_setMode_async"], [731, 2, 1, "", "AO_setNumSamples"], [731, 2, 1, "", "AO_setNumSamples_async"], [731, 2, 1, "", "AO_setSamplingRate"], [731, 2, 1, "", "AO_setSamplingRate_async"], [731, 2, 1, "", "AO_startStreaming"], [731, 2, 1, "", "AO_startStreaming_async"], [731, 2, 1, "", "AO_writeAllChannels"], [731, 2, 1, "", "AO_writeAllChannels_async"], [731, 2, 1, "", "AO_writeOneChannel"], [731, 2, 1, "", "AO_writeOneChannel_async"], [731, 2, 1, "", "Logger_openFile"], [731, 2, 1, "", "Logger_write2DList"], [731, 2, 1, "", "Logger_writeHeader"], [731, 2, 1, "", "Logger_writeList"], [731, 2, 1, "", "Logger_writeValue"], [731, 2, 1, "", "Net_getGateway"], [731, 2, 1, "", "Net_getGateway_async"], [731, 2, 1, "", "Net_getIPAddrAndSubmask"], [731, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [731, 2, 1, "", "Net_getMACAddr"], [731, 2, 1, "", "Net_getMACAddr_async"], [731, 2, 1, "", "Net_setIPAddrAndSubmask"], [731, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [731, 2, 1, "", "Sys_getDriverInfo"], [731, 2, 1, "", "Sys_getDriverInfo_async"], [731, 2, 1, "", "Sys_getGateway"], [731, 2, 1, "", "Sys_getGateway_async"], [731, 2, 1, "", "Sys_getIPAddrAndSubmask"], [731, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [731, 2, 1, "", "Sys_getMACAddr"], [731, 2, 1, "", "Sys_getMACAddr_async"], [731, 2, 1, "", "Sys_getMode"], [731, 2, 1, "", "Sys_getMode_async"], [731, 2, 1, "", "Sys_getPinModeInPort"], [731, 2, 1, "", "Sys_getPinModeInPort_async"], [731, 2, 1, "", "Sys_getPythonVersion"], [731, 2, 1, "", "Sys_getPythonVersion_async"], [731, 2, 1, "", "Sys_getRTC"], [731, 2, 1, "", "Sys_getRTC_async"], [731, 2, 1, "", "Sys_getSerialNumber"], [731, 2, 1, "", "Sys_getSerialNumber_async"], [731, 2, 1, "", "Sys_reboot"], [731, 2, 1, "", "Sys_reboot_async"], [731, 2, 1, "", "Sys_setAIOMode"], [731, 2, 1, "", "Sys_setAIOMode_async"], [731, 2, 1, "", "Sys_setDIMode"], [731, 2, 1, "", "Sys_setDIMode_async"], [731, 2, 1, "", "Sys_setDIOMode"], [731, 2, 1, "", "Sys_setDIOMode_async"], [731, 2, 1, "", "Sys_setDOMode"], [731, 2, 1, "", "Sys_setDOMode_async"], [731, 2, 1, "", "Sys_setIPAddrAndSubmask"], [731, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [731, 2, 1, "", "Sys_setIdleMode"], [731, 2, 1, "", "Sys_setIdleMode_async"], [731, 2, 1, "", "Sys_setMotionMode"], [731, 2, 1, "", "Sys_setMotionMode_async"], [731, 2, 1, "", "Sys_setRTC"], [731, 2, 1, "", "Sys_setRTC_async"], [731, 2, 1, "", "Sys_setSwitchMode"], [731, 2, 1, "", "Sys_setSwitchMode_async"], [731, 2, 1, "", "close"], [731, 2, 1, "", "connect"], [731, 2, 1, "", "disconnect"]], "pywpc.EthanP": [[732, 2, 1, "", "DPOT_close"], [732, 2, 1, "", "DPOT_close_async"], [732, 2, 1, "", "DPOT_open"], [732, 2, 1, "", "DPOT_open_async"], [732, 2, 1, "", "DPOT_readByChannel"], [732, 2, 1, "", "DPOT_readByChannel_async"], [732, 2, 1, "", "DPOT_writeAllChannel"], [732, 2, 1, "", "DPOT_writeAllChannel_async"], [732, 2, 1, "", "DPOT_writeByChannel"], [732, 2, 1, "", "DPOT_writeByChannel_async"], [732, 2, 1, "", "Logger_openFile"], [732, 2, 1, "", "Logger_write2DList"], [732, 2, 1, "", "Logger_writeHeader"], [732, 2, 1, "", "Logger_writeList"], [732, 2, 1, "", "Logger_writeValue"], [732, 2, 1, "", "Net_getGateway"], [732, 2, 1, "", "Net_getGateway_async"], [732, 2, 1, "", "Net_getIPAddrAndSubmask"], [732, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [732, 2, 1, "", "Net_getMACAddr"], [732, 2, 1, "", "Net_getMACAddr_async"], [732, 2, 1, "", "Net_setIPAddrAndSubmask"], [732, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [732, 2, 1, "", "Sys_getDriverInfo"], [732, 2, 1, "", "Sys_getDriverInfo_async"], [732, 2, 1, "", "Sys_getGateway"], [732, 2, 1, "", "Sys_getGateway_async"], [732, 2, 1, "", "Sys_getIPAddrAndSubmask"], [732, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [732, 2, 1, "", "Sys_getMACAddr"], [732, 2, 1, "", "Sys_getMACAddr_async"], [732, 2, 1, "", "Sys_getMode"], [732, 2, 1, "", "Sys_getMode_async"], [732, 2, 1, "", "Sys_getPinModeInPort"], [732, 2, 1, "", "Sys_getPinModeInPort_async"], [732, 2, 1, "", "Sys_getPythonVersion"], [732, 2, 1, "", "Sys_getPythonVersion_async"], [732, 2, 1, "", "Sys_getRTC"], [732, 2, 1, "", "Sys_getRTC_async"], [732, 2, 1, "", "Sys_getSerialNumber"], [732, 2, 1, "", "Sys_getSerialNumber_async"], [732, 2, 1, "", "Sys_reboot"], [732, 2, 1, "", "Sys_reboot_async"], [732, 2, 1, "", "Sys_setAIOMode"], [732, 2, 1, "", "Sys_setAIOMode_async"], [732, 2, 1, "", "Sys_setDIMode"], [732, 2, 1, "", "Sys_setDIMode_async"], [732, 2, 1, "", "Sys_setDIOMode"], [732, 2, 1, "", "Sys_setDIOMode_async"], [732, 2, 1, "", "Sys_setDOMode"], [732, 2, 1, "", "Sys_setDOMode_async"], [732, 2, 1, "", "Sys_setIPAddrAndSubmask"], [732, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [732, 2, 1, "", "Sys_setIdleMode"], [732, 2, 1, "", "Sys_setIdleMode_async"], [732, 2, 1, "", "Sys_setMotionMode"], [732, 2, 1, "", "Sys_setMotionMode_async"], [732, 2, 1, "", "Sys_setRTC"], [732, 2, 1, "", "Sys_setRTC_async"], [732, 2, 1, "", "Sys_setSwitchMode"], [732, 2, 1, "", "Sys_setSwitchMode_async"], [732, 2, 1, "", "close"], [732, 2, 1, "", "connect"], [732, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[733, 2, 1, "", "Logger_openFile"], [733, 2, 1, "", "Logger_write2DList"], [733, 2, 1, "", "Logger_writeHeader"], [733, 2, 1, "", "Logger_writeList"], [733, 2, 1, "", "Logger_writeValue"], [733, 2, 1, "", "Net_getGateway"], [733, 2, 1, "", "Net_getGateway_async"], [733, 2, 1, "", "Net_getIPAddrAndSubmask"], [733, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [733, 2, 1, "", "Net_getMACAddr"], [733, 2, 1, "", "Net_getMACAddr_async"], [733, 2, 1, "", "Net_setIPAddrAndSubmask"], [733, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [733, 2, 1, "", "Sys_getDriverInfo"], [733, 2, 1, "", "Sys_getDriverInfo_async"], [733, 2, 1, "", "Sys_getGateway"], [733, 2, 1, "", "Sys_getGateway_async"], [733, 2, 1, "", "Sys_getIPAddrAndSubmask"], [733, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [733, 2, 1, "", "Sys_getMACAddr"], [733, 2, 1, "", "Sys_getMACAddr_async"], [733, 2, 1, "", "Sys_getMode"], [733, 2, 1, "", "Sys_getMode_async"], [733, 2, 1, "", "Sys_getPinModeInPort"], [733, 2, 1, "", "Sys_getPinModeInPort_async"], [733, 2, 1, "", "Sys_getPythonVersion"], [733, 2, 1, "", "Sys_getPythonVersion_async"], [733, 2, 1, "", "Sys_getRTC"], [733, 2, 1, "", "Sys_getRTC_async"], [733, 2, 1, "", "Sys_getSerialNumber"], [733, 2, 1, "", "Sys_getSerialNumber_async"], [733, 2, 1, "", "Sys_reboot"], [733, 2, 1, "", "Sys_reboot_async"], [733, 2, 1, "", "Sys_setAIOMode"], [733, 2, 1, "", "Sys_setAIOMode_async"], [733, 2, 1, "", "Sys_setDIMode"], [733, 2, 1, "", "Sys_setDIMode_async"], [733, 2, 1, "", "Sys_setDIOMode"], [733, 2, 1, "", "Sys_setDIOMode_async"], [733, 2, 1, "", "Sys_setDOMode"], [733, 2, 1, "", "Sys_setDOMode_async"], [733, 2, 1, "", "Sys_setIPAddrAndSubmask"], [733, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [733, 2, 1, "", "Sys_setIdleMode"], [733, 2, 1, "", "Sys_setIdleMode_async"], [733, 2, 1, "", "Sys_setMotionMode"], [733, 2, 1, "", "Sys_setMotionMode_async"], [733, 2, 1, "", "Sys_setRTC"], [733, 2, 1, "", "Sys_setRTC_async"], [733, 2, 1, "", "Sys_setSwitchMode"], [733, 2, 1, "", "Sys_setSwitchMode_async"], [733, 2, 1, "", "Thermal_close"], [733, 2, 1, "", "Thermal_close_async"], [733, 2, 1, "", "Thermal_getPinMap"], [733, 2, 1, "", "Thermal_getStatus"], [733, 2, 1, "", "Thermal_getStatus_async"], [733, 2, 1, "", "Thermal_open"], [733, 2, 1, "", "Thermal_open_async"], [733, 2, 1, "", "Thermal_readSensor"], [733, 2, 1, "", "Thermal_readSensor_async"], [733, 2, 1, "", "Thermal_setOverSampling"], [733, 2, 1, "", "Thermal_setOverSampling_async"], [733, 2, 1, "", "Thermal_setType"], [733, 2, 1, "", "Thermal_setType_async"], [733, 2, 1, "", "close"], [733, 2, 1, "", "connect"], [733, 2, 1, "", "disconnect"]], "pywpc.STEM": [[734, 2, 1, "", "AI_close"], [734, 2, 1, "", "AI_close_async"], [734, 2, 1, "", "AI_enableCS"], [734, 2, 1, "", "AI_enableCS_async"], [734, 2, 1, "", "AI_enableChannel"], [734, 2, 1, "", "AI_enableChannel_async"], [734, 2, 1, "", "AI_getPort"], [734, 2, 1, "", "AI_open"], [734, 2, 1, "", "AI_open_async"], [734, 2, 1, "", "AI_readOnDemand"], [734, 2, 1, "", "AI_readOnDemand_async"], [734, 2, 1, "", "AI_readStreaming"], [734, 2, 1, "", "AI_readStreaming_async"], [734, 2, 1, "", "AI_setMode"], [734, 2, 1, "", "AI_setMode_async"], [734, 2, 1, "", "AI_setNumSamples"], [734, 2, 1, "", "AI_setNumSamples_async"], [734, 2, 1, "", "AI_setSamplingRate"], [734, 2, 1, "", "AI_setSamplingRate_async"], [734, 2, 1, "", "AI_start"], [734, 2, 1, "", "AI_start_async"], [734, 2, 1, "", "AI_stop"], [734, 2, 1, "", "AI_stop_async"], [734, 2, 1, "", "AO_close"], [734, 2, 1, "", "AO_closeStreaming"], [734, 2, 1, "", "AO_closeStreaming_async"], [734, 2, 1, "", "AO_close_async"], [734, 2, 1, "", "AO_getPort"], [734, 2, 1, "", "AO_getValues"], [734, 2, 1, "", "AO_getValues_async"], [734, 2, 1, "", "AO_open"], [734, 2, 1, "", "AO_openStreaming"], [734, 2, 1, "", "AO_openStreaming_async"], [734, 2, 1, "", "AO_open_async"], [734, 2, 1, "", "AO_setEnableChannels"], [734, 2, 1, "", "AO_setEnableChannels_async"], [734, 2, 1, "", "AO_setForm"], [734, 2, 1, "", "AO_setFormParam"], [734, 2, 1, "", "AO_setFormParam_async"], [734, 2, 1, "", "AO_setForm_async"], [734, 2, 1, "", "AO_setMode"], [734, 2, 1, "", "AO_setMode_async"], [734, 2, 1, "", "AO_setNumSamples"], [734, 2, 1, "", "AO_setNumSamples_async"], [734, 2, 1, "", "AO_setSamplingRate"], [734, 2, 1, "", "AO_setSamplingRate_async"], [734, 2, 1, "", "AO_startStreaming"], [734, 2, 1, "", "AO_startStreaming_async"], [734, 2, 1, "", "AO_writeAllChannels"], [734, 2, 1, "", "AO_writeAllChannels_async"], [734, 2, 1, "", "AO_writeOneChannel"], [734, 2, 1, "", "AO_writeOneChannel_async"], [734, 2, 1, "", "DIO_loadStartup"], [734, 2, 1, "", "DIO_loadStartup_async"], [734, 2, 1, "", "DI_closePins"], [734, 2, 1, "", "DI_closePins_async"], [734, 2, 1, "", "DI_closePort"], [734, 2, 1, "", "DI_closePort_async"], [734, 2, 1, "", "DI_getPinMap"], [734, 2, 1, "", "DI_openPins"], [734, 2, 1, "", "DI_openPins_async"], [734, 2, 1, "", "DI_openPort"], [734, 2, 1, "", "DI_openPort_async"], [734, 2, 1, "", "DI_readPins"], [734, 2, 1, "", "DI_readPins_async"], [734, 2, 1, "", "DI_readPort"], [734, 2, 1, "", "DI_readPort_async"], [734, 2, 1, "", "DO_closePins"], [734, 2, 1, "", "DO_closePins_async"], [734, 2, 1, "", "DO_closePort"], [734, 2, 1, "", "DO_closePort_async"], [734, 2, 1, "", "DO_getPinMap"], [734, 2, 1, "", "DO_openPins"], [734, 2, 1, "", "DO_openPins_async"], [734, 2, 1, "", "DO_openPort"], [734, 2, 1, "", "DO_openPort_async"], [734, 2, 1, "", "DO_togglePins"], [734, 2, 1, "", "DO_togglePins_async"], [734, 2, 1, "", "DO_togglePort"], [734, 2, 1, "", "DO_togglePort_async"], [734, 2, 1, "", "DO_writePins"], [734, 2, 1, "", "DO_writePins_async"], [734, 2, 1, "", "DO_writePort"], [734, 2, 1, "", "DO_writePort_async"], [734, 2, 1, "", "Logger_openFile"], [734, 2, 1, "", "Logger_write2DList"], [734, 2, 1, "", "Logger_writeHeader"], [734, 2, 1, "", "Logger_writeList"], [734, 2, 1, "", "Logger_writeValue"], [734, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [734, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [734, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [734, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [734, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [734, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [734, 2, 1, "", "Motion_cfgAlarm"], [734, 2, 1, "", "Motion_cfgAlarm_async"], [734, 2, 1, "", "Motion_cfgAxis"], [734, 2, 1, "", "Motion_cfgAxisMove"], [734, 2, 1, "", "Motion_cfgAxisMove_async"], [734, 2, 1, "", "Motion_cfgAxis_async"], [734, 2, 1, "", "Motion_cfgBreakPoint"], [734, 2, 1, "", "Motion_cfgBreakPoint_async"], [734, 2, 1, "", "Motion_cfgCapture"], [734, 2, 1, "", "Motion_cfgCapture_async"], [734, 2, 1, "", "Motion_cfgCircularInterpo"], [734, 2, 1, "", "Motion_cfgCircularInterpo_async"], [734, 2, 1, "", "Motion_cfgEncoder"], [734, 2, 1, "", "Motion_cfgEncoder_async"], [734, 2, 1, "", "Motion_cfgFindRef"], [734, 2, 1, "", "Motion_cfgFindRef_async"], [734, 2, 1, "", "Motion_cfgHelicalInterpo"], [734, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [734, 2, 1, "", "Motion_cfgHome"], [734, 2, 1, "", "Motion_cfgHome_async"], [734, 2, 1, "", "Motion_cfgInposi"], [734, 2, 1, "", "Motion_cfgInposi_async"], [734, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [734, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [734, 2, 1, "", "Motion_cfgLimit"], [734, 2, 1, "", "Motion_cfgLimit_async"], [734, 2, 1, "", "Motion_checkRef"], [734, 2, 1, "", "Motion_checkRef_async"], [734, 2, 1, "", "Motion_close"], [734, 2, 1, "", "Motion_close_async"], [734, 2, 1, "", "Motion_enableBreakPoint"], [734, 2, 1, "", "Motion_enableBreakPoint_async"], [734, 2, 1, "", "Motion_enableCapture"], [734, 2, 1, "", "Motion_enableCapture_async"], [734, 2, 1, "", "Motion_enableServoOff"], [734, 2, 1, "", "Motion_enableServoOff_async"], [734, 2, 1, "", "Motion_enableServoOn"], [734, 2, 1, "", "Motion_enableServoOn_async"], [734, 2, 1, "", "Motion_findRef"], [734, 2, 1, "", "Motion_findRef_async"], [734, 2, 1, "", "Motion_getEncoderPosi"], [734, 2, 1, "", "Motion_getEncoderPosi_async"], [734, 2, 1, "", "Motion_getHomeStatus"], [734, 2, 1, "", "Motion_getHomeStatus_async"], [734, 2, 1, "", "Motion_getLimitStatus"], [734, 2, 1, "", "Motion_getLimitStatus_async"], [734, 2, 1, "", "Motion_getLogicalPosi"], [734, 2, 1, "", "Motion_getLogicalPosi_async"], [734, 2, 1, "", "Motion_getMoveStatus"], [734, 2, 1, "", "Motion_getMoveStatus_async"], [734, 2, 1, "", "Motion_loadCfgFile"], [734, 2, 1, "", "Motion_loadCfgFile_async"], [734, 2, 1, "", "Motion_open"], [734, 2, 1, "", "Motion_openCfgFile"], [734, 2, 1, "", "Motion_openCfgFile_async"], [734, 2, 1, "", "Motion_open_async"], [734, 2, 1, "", "Motion_overrideAxisAccel"], [734, 2, 1, "", "Motion_overrideAxisAccel_async"], [734, 2, 1, "", "Motion_overrideAxisPosi"], [734, 2, 1, "", "Motion_overrideAxisPosi_async"], [734, 2, 1, "", "Motion_overrideAxisVelocity"], [734, 2, 1, "", "Motion_overrideAxisVelocity_async"], [734, 2, 1, "", "Motion_readCapturePoint"], [734, 2, 1, "", "Motion_readCapturePoint_async"], [734, 2, 1, "", "Motion_rstEncoderPosi"], [734, 2, 1, "", "Motion_rstEncoderPosi_async"], [734, 2, 1, "", "Motion_saveCfgFile"], [734, 2, 1, "", "Motion_saveCfgFile_async"], [734, 2, 1, "", "Motion_setLogicalPosi"], [734, 2, 1, "", "Motion_setLogicalPosi_async"], [734, 2, 1, "", "Motion_startCircularInterpo"], [734, 2, 1, "", "Motion_startCircularInterpo_async"], [734, 2, 1, "", "Motion_startHelicalInterpo"], [734, 2, 1, "", "Motion_startHelicalInterpo_async"], [734, 2, 1, "", "Motion_startLinearInterpo"], [734, 2, 1, "", "Motion_startLinearInterpo_async"], [734, 2, 1, "", "Motion_startMultiAxisMove"], [734, 2, 1, "", "Motion_startMultiAxisMove_async"], [734, 2, 1, "", "Motion_startSingleAxisMove"], [734, 2, 1, "", "Motion_startSingleAxisMove_async"], [734, 2, 1, "", "Motion_stop"], [734, 2, 1, "", "Motion_stop_async"], [734, 2, 1, "", "Net_getGateway"], [734, 2, 1, "", "Net_getGateway_async"], [734, 2, 1, "", "Net_getIPAddrAndSubmask"], [734, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [734, 2, 1, "", "Net_getMACAddr"], [734, 2, 1, "", "Net_getMACAddr_async"], [734, 2, 1, "", "Net_setIPAddrAndSubmask"], [734, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [734, 2, 1, "", "Sys_getDriverInfo"], [734, 2, 1, "", "Sys_getDriverInfo_async"], [734, 2, 1, "", "Sys_getGateway"], [734, 2, 1, "", "Sys_getGateway_async"], [734, 2, 1, "", "Sys_getIPAddrAndSubmask"], [734, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [734, 2, 1, "", "Sys_getMACAddr"], [734, 2, 1, "", "Sys_getMACAddr_async"], [734, 2, 1, "", "Sys_getMode"], [734, 2, 1, "", "Sys_getMode_async"], [734, 2, 1, "", "Sys_getPinModeInPort"], [734, 2, 1, "", "Sys_getPinModeInPort_async"], [734, 2, 1, "", "Sys_getPythonVersion"], [734, 2, 1, "", "Sys_getPythonVersion_async"], [734, 2, 1, "", "Sys_getRTC"], [734, 2, 1, "", "Sys_getRTC_async"], [734, 2, 1, "", "Sys_getSerialNumber"], [734, 2, 1, "", "Sys_getSerialNumber_async"], [734, 2, 1, "", "Sys_reboot"], [734, 2, 1, "", "Sys_reboot_async"], [734, 2, 1, "", "Sys_setAIOMode"], [734, 2, 1, "", "Sys_setAIOMode_async"], [734, 2, 1, "", "Sys_setDIMode"], [734, 2, 1, "", "Sys_setDIMode_async"], [734, 2, 1, "", "Sys_setDIOMode"], [734, 2, 1, "", "Sys_setDIOMode_async"], [734, 2, 1, "", "Sys_setDOMode"], [734, 2, 1, "", "Sys_setDOMode_async"], [734, 2, 1, "", "Sys_setIPAddrAndSubmask"], [734, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [734, 2, 1, "", "Sys_setIdleMode"], [734, 2, 1, "", "Sys_setIdleMode_async"], [734, 2, 1, "", "Sys_setMotionMode"], [734, 2, 1, "", "Sys_setMotionMode_async"], [734, 2, 1, "", "Sys_setRTC"], [734, 2, 1, "", "Sys_setRTC_async"], [734, 2, 1, "", "Sys_setSwitchMode"], [734, 2, 1, "", "Sys_setSwitchMode_async"], [734, 2, 1, "", "close"], [734, 2, 1, "", "connect"], [734, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[735, 2, 1, "", "AI_close"], [735, 2, 1, "", "AI_close_async"], [735, 2, 1, "", "AI_enableCS"], [735, 2, 1, "", "AI_enableCS_async"], [735, 2, 1, "", "AI_enableChannel"], [735, 2, 1, "", "AI_enableChannel_async"], [735, 2, 1, "", "AI_getPort"], [735, 2, 1, "", "AI_open"], [735, 2, 1, "", "AI_open_async"], [735, 2, 1, "", "AI_readOnDemand"], [735, 2, 1, "", "AI_readOnDemand_async"], [735, 2, 1, "", "AI_readStreaming"], [735, 2, 1, "", "AI_readStreaming_async"], [735, 2, 1, "", "AI_setMode"], [735, 2, 1, "", "AI_setMode_async"], [735, 2, 1, "", "AI_setNumSamples"], [735, 2, 1, "", "AI_setNumSamples_async"], [735, 2, 1, "", "AI_setSamplingRate"], [735, 2, 1, "", "AI_setSamplingRate_async"], [735, 2, 1, "", "AI_start"], [735, 2, 1, "", "AI_start_async"], [735, 2, 1, "", "AI_stop"], [735, 2, 1, "", "AI_stop_async"], [735, 2, 1, "", "Counter_close"], [735, 2, 1, "", "Counter_close_async"], [735, 2, 1, "", "Counter_open"], [735, 2, 1, "", "Counter_open_async"], [735, 2, 1, "", "Counter_read"], [735, 2, 1, "", "Counter_read_async"], [735, 2, 1, "", "Counter_start"], [735, 2, 1, "", "Counter_start_async"], [735, 2, 1, "", "Counter_stop"], [735, 2, 1, "", "Counter_stop_async"], [735, 2, 1, "", "DIO_loadStartup"], [735, 2, 1, "", "DIO_loadStartup_async"], [735, 2, 1, "", "DI_closePins"], [735, 2, 1, "", "DI_closePins_async"], [735, 2, 1, "", "DI_closePort"], [735, 2, 1, "", "DI_closePort_async"], [735, 2, 1, "", "DI_getPinMap"], [735, 2, 1, "", "DI_openPins"], [735, 2, 1, "", "DI_openPins_async"], [735, 2, 1, "", "DI_openPort"], [735, 2, 1, "", "DI_openPort_async"], [735, 2, 1, "", "DI_readPins"], [735, 2, 1, "", "DI_readPins_async"], [735, 2, 1, "", "DI_readPort"], [735, 2, 1, "", "DI_readPort_async"], [735, 2, 1, "", "DO_closePins"], [735, 2, 1, "", "DO_closePins_async"], [735, 2, 1, "", "DO_closePort"], [735, 2, 1, "", "DO_closePort_async"], [735, 2, 1, "", "DO_getPinMap"], [735, 2, 1, "", "DO_openPins"], [735, 2, 1, "", "DO_openPins_async"], [735, 2, 1, "", "DO_openPort"], [735, 2, 1, "", "DO_openPort_async"], [735, 2, 1, "", "DO_togglePins"], [735, 2, 1, "", "DO_togglePins_async"], [735, 2, 1, "", "DO_togglePort"], [735, 2, 1, "", "DO_togglePort_async"], [735, 2, 1, "", "DO_writePins"], [735, 2, 1, "", "DO_writePins_async"], [735, 2, 1, "", "DO_writePort"], [735, 2, 1, "", "DO_writePort_async"], [735, 2, 1, "", "I2C_close"], [735, 2, 1, "", "I2C_close_async"], [735, 2, 1, "", "I2C_getPinMap"], [735, 2, 1, "", "I2C_open"], [735, 2, 1, "", "I2C_open_async"], [735, 2, 1, "", "I2C_read"], [735, 2, 1, "", "I2C_read_async"], [735, 2, 1, "", "I2C_reset"], [735, 2, 1, "", "I2C_reset_async"], [735, 2, 1, "", "I2C_setAddressSize"], [735, 2, 1, "", "I2C_setAddressSize_async"], [735, 2, 1, "", "I2C_setClockRate"], [735, 2, 1, "", "I2C_setClockRate_async"], [735, 2, 1, "", "I2C_write"], [735, 2, 1, "", "I2C_write_async"], [735, 2, 1, "", "Logger_openFile"], [735, 2, 1, "", "Logger_write2DList"], [735, 2, 1, "", "Logger_writeHeader"], [735, 2, 1, "", "Logger_writeList"], [735, 2, 1, "", "Logger_writeValue"], [735, 2, 1, "", "PWM_close"], [735, 2, 1, "", "PWM_close_async"], [735, 2, 1, "", "PWM_open"], [735, 2, 1, "", "PWM_open_async"], [735, 2, 1, "", "PWM_setDutyCycle"], [735, 2, 1, "", "PWM_setDutyCycle_async"], [735, 2, 1, "", "PWM_setFrequency"], [735, 2, 1, "", "PWM_setFrequency_async"], [735, 2, 1, "", "PWM_start"], [735, 2, 1, "", "PWM_start_async"], [735, 2, 1, "", "PWM_stop"], [735, 2, 1, "", "PWM_stop_async"], [735, 2, 1, "", "SPI_close"], [735, 2, 1, "", "SPI_close_async"], [735, 2, 1, "", "SPI_getPinMap"], [735, 2, 1, "", "SPI_open"], [735, 2, 1, "", "SPI_open_async"], [735, 2, 1, "", "SPI_read"], [735, 2, 1, "", "SPI_readAndWrite"], [735, 2, 1, "", "SPI_readAndWrite_async"], [735, 2, 1, "", "SPI_read_async"], [735, 2, 1, "", "SPI_reset"], [735, 2, 1, "", "SPI_reset_async"], [735, 2, 1, "", "SPI_setDataSize"], [735, 2, 1, "", "SPI_setDataSize_async"], [735, 2, 1, "", "SPI_setFirstBit"], [735, 2, 1, "", "SPI_setFirstBit_async"], [735, 2, 1, "", "SPI_setMode"], [735, 2, 1, "", "SPI_setMode_async"], [735, 2, 1, "", "SPI_setPrescaler"], [735, 2, 1, "", "SPI_setPrescaler_async"], [735, 2, 1, "", "SPI_write"], [735, 2, 1, "", "SPI_write_async"], [735, 2, 1, "", "Sys_getDriverInfo"], [735, 2, 1, "", "Sys_getDriverInfo_async"], [735, 2, 1, "", "Sys_getMode"], [735, 2, 1, "", "Sys_getMode_async"], [735, 2, 1, "", "Sys_getPinModeInPort"], [735, 2, 1, "", "Sys_getPinModeInPort_async"], [735, 2, 1, "", "Sys_getPythonVersion"], [735, 2, 1, "", "Sys_getPythonVersion_async"], [735, 2, 1, "", "Sys_getRTC"], [735, 2, 1, "", "Sys_getRTC_async"], [735, 2, 1, "", "Sys_getSerialNumber"], [735, 2, 1, "", "Sys_getSerialNumber_async"], [735, 2, 1, "", "Sys_reboot"], [735, 2, 1, "", "Sys_reboot_async"], [735, 2, 1, "", "Sys_setAIOMode"], [735, 2, 1, "", "Sys_setAIOMode_async"], [735, 2, 1, "", "Sys_setDIMode"], [735, 2, 1, "", "Sys_setDIMode_async"], [735, 2, 1, "", "Sys_setDIOMode"], [735, 2, 1, "", "Sys_setDIOMode_async"], [735, 2, 1, "", "Sys_setDOMode"], [735, 2, 1, "", "Sys_setDOMode_async"], [735, 2, 1, "", "Sys_setIdleMode"], [735, 2, 1, "", "Sys_setIdleMode_async"], [735, 2, 1, "", "Sys_setMotionMode"], [735, 2, 1, "", "Sys_setMotionMode_async"], [735, 2, 1, "", "Sys_setRTC"], [735, 2, 1, "", "Sys_setRTC_async"], [735, 2, 1, "", "Sys_setSwitchMode"], [735, 2, 1, "", "Sys_setSwitchMode_async"], [735, 2, 1, "", "UART_close"], [735, 2, 1, "", "UART_close_async"], [735, 2, 1, "", "UART_getPinMap"], [735, 2, 1, "", "UART_open"], [735, 2, 1, "", "UART_open_async"], [735, 2, 1, "", "UART_read"], [735, 2, 1, "", "UART_read_async"], [735, 2, 1, "", "UART_reset"], [735, 2, 1, "", "UART_reset_async"], [735, 2, 1, "", "UART_setBaudRate"], [735, 2, 1, "", "UART_setBaudRate_async"], [735, 2, 1, "", "UART_setDataBit"], [735, 2, 1, "", "UART_setDataBit_async"], [735, 2, 1, "", "UART_setNumStopBit"], [735, 2, 1, "", "UART_setNumStopBit_async"], [735, 2, 1, "", "UART_setParity"], [735, 2, 1, "", "UART_setParity_async"], [735, 2, 1, "", "UART_write"], [735, 2, 1, "", "UART_write_async"], [735, 2, 1, "", "close"], [735, 2, 1, "", "connect"], [735, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[736, 2, 1, "", "AI_close"], [736, 2, 1, "", "AI_close_async"], [736, 2, 1, "", "AI_enableCS"], [736, 2, 1, "", "AI_enableCS_async"], [736, 2, 1, "", "AI_enableChannel"], [736, 2, 1, "", "AI_enableChannel_async"], [736, 2, 1, "", "AI_getPort"], [736, 2, 1, "", "AI_open"], [736, 2, 1, "", "AI_open_async"], [736, 2, 1, "", "AI_readOnDemand"], [736, 2, 1, "", "AI_readOnDemand_async"], [736, 2, 1, "", "AI_readStreaming"], [736, 2, 1, "", "AI_readStreaming_async"], [736, 2, 1, "", "AI_setMode"], [736, 2, 1, "", "AI_setMode_async"], [736, 2, 1, "", "AI_setNumSamples"], [736, 2, 1, "", "AI_setNumSamples_async"], [736, 2, 1, "", "AI_setSamplingRate"], [736, 2, 1, "", "AI_setSamplingRate_async"], [736, 2, 1, "", "AI_start"], [736, 2, 1, "", "AI_start_async"], [736, 2, 1, "", "AI_stop"], [736, 2, 1, "", "AI_stop_async"], [736, 2, 1, "", "AO_close"], [736, 2, 1, "", "AO_closeStreaming"], [736, 2, 1, "", "AO_closeStreaming_async"], [736, 2, 1, "", "AO_close_async"], [736, 2, 1, "", "AO_getPort"], [736, 2, 1, "", "AO_getValues"], [736, 2, 1, "", "AO_getValues_async"], [736, 2, 1, "", "AO_open"], [736, 2, 1, "", "AO_openStreaming"], [736, 2, 1, "", "AO_openStreaming_async"], [736, 2, 1, "", "AO_open_async"], [736, 2, 1, "", "AO_setEnableChannels"], [736, 2, 1, "", "AO_setEnableChannels_async"], [736, 2, 1, "", "AO_setForm"], [736, 2, 1, "", "AO_setFormParam"], [736, 2, 1, "", "AO_setFormParam_async"], [736, 2, 1, "", "AO_setForm_async"], [736, 2, 1, "", "AO_setMode"], [736, 2, 1, "", "AO_setMode_async"], [736, 2, 1, "", "AO_setNumSamples"], [736, 2, 1, "", "AO_setNumSamples_async"], [736, 2, 1, "", "AO_setSamplingRate"], [736, 2, 1, "", "AO_setSamplingRate_async"], [736, 2, 1, "", "AO_startStreaming"], [736, 2, 1, "", "AO_startStreaming_async"], [736, 2, 1, "", "AO_writeAllChannels"], [736, 2, 1, "", "AO_writeAllChannels_async"], [736, 2, 1, "", "AO_writeOneChannel"], [736, 2, 1, "", "AO_writeOneChannel_async"], [736, 2, 1, "", "Counter_close"], [736, 2, 1, "", "Counter_close_async"], [736, 2, 1, "", "Counter_open"], [736, 2, 1, "", "Counter_open_async"], [736, 2, 1, "", "Counter_read"], [736, 2, 1, "", "Counter_read_async"], [736, 2, 1, "", "Counter_start"], [736, 2, 1, "", "Counter_start_async"], [736, 2, 1, "", "Counter_stop"], [736, 2, 1, "", "Counter_stop_async"], [736, 2, 1, "", "DIO_loadStartup"], [736, 2, 1, "", "DIO_loadStartup_async"], [736, 2, 1, "", "DI_closePins"], [736, 2, 1, "", "DI_closePins_async"], [736, 2, 1, "", "DI_closePort"], [736, 2, 1, "", "DI_closePort_async"], [736, 2, 1, "", "DI_getPinMap"], [736, 2, 1, "", "DI_openPins"], [736, 2, 1, "", "DI_openPins_async"], [736, 2, 1, "", "DI_openPort"], [736, 2, 1, "", "DI_openPort_async"], [736, 2, 1, "", "DI_readPins"], [736, 2, 1, "", "DI_readPins_async"], [736, 2, 1, "", "DI_readPort"], [736, 2, 1, "", "DI_readPort_async"], [736, 2, 1, "", "DO_closePins"], [736, 2, 1, "", "DO_closePins_async"], [736, 2, 1, "", "DO_closePort"], [736, 2, 1, "", "DO_closePort_async"], [736, 2, 1, "", "DO_getPinMap"], [736, 2, 1, "", "DO_openPins"], [736, 2, 1, "", "DO_openPins_async"], [736, 2, 1, "", "DO_openPort"], [736, 2, 1, "", "DO_openPort_async"], [736, 2, 1, "", "DO_togglePins"], [736, 2, 1, "", "DO_togglePins_async"], [736, 2, 1, "", "DO_togglePort"], [736, 2, 1, "", "DO_togglePort_async"], [736, 2, 1, "", "DO_writePins"], [736, 2, 1, "", "DO_writePins_async"], [736, 2, 1, "", "DO_writePort"], [736, 2, 1, "", "DO_writePort_async"], [736, 2, 1, "", "I2C_close"], [736, 2, 1, "", "I2C_close_async"], [736, 2, 1, "", "I2C_getPinMap"], [736, 2, 1, "", "I2C_open"], [736, 2, 1, "", "I2C_open_async"], [736, 2, 1, "", "I2C_read"], [736, 2, 1, "", "I2C_read_async"], [736, 2, 1, "", "I2C_reset"], [736, 2, 1, "", "I2C_reset_async"], [736, 2, 1, "", "I2C_setAddressSize"], [736, 2, 1, "", "I2C_setAddressSize_async"], [736, 2, 1, "", "I2C_setClockRate"], [736, 2, 1, "", "I2C_setClockRate_async"], [736, 2, 1, "", "I2C_write"], [736, 2, 1, "", "I2C_write_async"], [736, 2, 1, "", "Logger_openFile"], [736, 2, 1, "", "Logger_write2DList"], [736, 2, 1, "", "Logger_writeHeader"], [736, 2, 1, "", "Logger_writeList"], [736, 2, 1, "", "Logger_writeValue"], [736, 2, 1, "", "PWM_close"], [736, 2, 1, "", "PWM_close_async"], [736, 2, 1, "", "PWM_open"], [736, 2, 1, "", "PWM_open_async"], [736, 2, 1, "", "PWM_setDutyCycle"], [736, 2, 1, "", "PWM_setDutyCycle_async"], [736, 2, 1, "", "PWM_setFrequency"], [736, 2, 1, "", "PWM_setFrequency_async"], [736, 2, 1, "", "PWM_start"], [736, 2, 1, "", "PWM_start_async"], [736, 2, 1, "", "PWM_stop"], [736, 2, 1, "", "PWM_stop_async"], [736, 2, 1, "", "Sys_getDriverInfo"], [736, 2, 1, "", "Sys_getDriverInfo_async"], [736, 2, 1, "", "Sys_getMode"], [736, 2, 1, "", "Sys_getMode_async"], [736, 2, 1, "", "Sys_getPinModeInPort"], [736, 2, 1, "", "Sys_getPinModeInPort_async"], [736, 2, 1, "", "Sys_getPythonVersion"], [736, 2, 1, "", "Sys_getPythonVersion_async"], [736, 2, 1, "", "Sys_getRTC"], [736, 2, 1, "", "Sys_getRTC_async"], [736, 2, 1, "", "Sys_getSerialNumber"], [736, 2, 1, "", "Sys_getSerialNumber_async"], [736, 2, 1, "", "Sys_reboot"], [736, 2, 1, "", "Sys_reboot_async"], [736, 2, 1, "", "Sys_setAIOMode"], [736, 2, 1, "", "Sys_setAIOMode_async"], [736, 2, 1, "", "Sys_setDIMode"], [736, 2, 1, "", "Sys_setDIMode_async"], [736, 2, 1, "", "Sys_setDIOMode"], [736, 2, 1, "", "Sys_setDIOMode_async"], [736, 2, 1, "", "Sys_setDOMode"], [736, 2, 1, "", "Sys_setDOMode_async"], [736, 2, 1, "", "Sys_setIdleMode"], [736, 2, 1, "", "Sys_setIdleMode_async"], [736, 2, 1, "", "Sys_setMotionMode"], [736, 2, 1, "", "Sys_setMotionMode_async"], [736, 2, 1, "", "Sys_setRTC"], [736, 2, 1, "", "Sys_setRTC_async"], [736, 2, 1, "", "Sys_setSwitchMode"], [736, 2, 1, "", "Sys_setSwitchMode_async"], [736, 2, 1, "", "UART_close"], [736, 2, 1, "", "UART_close_async"], [736, 2, 1, "", "UART_getPinMap"], [736, 2, 1, "", "UART_open"], [736, 2, 1, "", "UART_open_async"], [736, 2, 1, "", "UART_read"], [736, 2, 1, "", "UART_read_async"], [736, 2, 1, "", "UART_reset"], [736, 2, 1, "", "UART_reset_async"], [736, 2, 1, "", "UART_setBaudRate"], [736, 2, 1, "", "UART_setBaudRate_async"], [736, 2, 1, "", "UART_setDataBit"], [736, 2, 1, "", "UART_setDataBit_async"], [736, 2, 1, "", "UART_setNumStopBit"], [736, 2, 1, "", "UART_setNumStopBit_async"], [736, 2, 1, "", "UART_setParity"], [736, 2, 1, "", "UART_setParity_async"], [736, 2, 1, "", "UART_write"], [736, 2, 1, "", "UART_write_async"], [736, 2, 1, "", "close"], [736, 2, 1, "", "connect"], [736, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[737, 2, 1, "", "CAN_close"], [737, 2, 1, "", "CAN_close_async"], [737, 2, 1, "", "CAN_getPort"], [737, 2, 1, "", "CAN_open"], [737, 2, 1, "", "CAN_open_async"], [737, 2, 1, "", "CAN_read"], [737, 2, 1, "", "CAN_read_async"], [737, 2, 1, "", "CAN_setRXFilterOrMask"], [737, 2, 1, "", "CAN_setRXFilterOrMask_async"], [737, 2, 1, "", "CAN_setRXFilteringOn"], [737, 2, 1, "", "CAN_setRXFilteringOn_async"], [737, 2, 1, "", "CAN_setSpeed"], [737, 2, 1, "", "CAN_setSpeed_async"], [737, 2, 1, "", "CAN_start"], [737, 2, 1, "", "CAN_start_async"], [737, 2, 1, "", "CAN_stop"], [737, 2, 1, "", "CAN_stop_async"], [737, 2, 1, "", "CAN_write"], [737, 2, 1, "", "CAN_write_async"], [737, 2, 1, "", "Counter_close"], [737, 2, 1, "", "Counter_close_async"], [737, 2, 1, "", "Counter_open"], [737, 2, 1, "", "Counter_open_async"], [737, 2, 1, "", "Counter_read"], [737, 2, 1, "", "Counter_read_async"], [737, 2, 1, "", "Counter_start"], [737, 2, 1, "", "Counter_start_async"], [737, 2, 1, "", "Counter_stop"], [737, 2, 1, "", "Counter_stop_async"], [737, 2, 1, "", "DIO_loadStartup"], [737, 2, 1, "", "DIO_loadStartup_async"], [737, 2, 1, "", "DI_closePins"], [737, 2, 1, "", "DI_closePins_async"], [737, 2, 1, "", "DI_closePort"], [737, 2, 1, "", "DI_closePort_async"], [737, 2, 1, "", "DI_getPinMap"], [737, 2, 1, "", "DI_openPins"], [737, 2, 1, "", "DI_openPins_async"], [737, 2, 1, "", "DI_openPort"], [737, 2, 1, "", "DI_openPort_async"], [737, 2, 1, "", "DI_readPins"], [737, 2, 1, "", "DI_readPins_async"], [737, 2, 1, "", "DI_readPort"], [737, 2, 1, "", "DI_readPort_async"], [737, 2, 1, "", "DO_closePins"], [737, 2, 1, "", "DO_closePins_async"], [737, 2, 1, "", "DO_closePort"], [737, 2, 1, "", "DO_closePort_async"], [737, 2, 1, "", "DO_getPinMap"], [737, 2, 1, "", "DO_openPins"], [737, 2, 1, "", "DO_openPins_async"], [737, 2, 1, "", "DO_openPort"], [737, 2, 1, "", "DO_openPort_async"], [737, 2, 1, "", "DO_togglePins"], [737, 2, 1, "", "DO_togglePins_async"], [737, 2, 1, "", "DO_togglePort"], [737, 2, 1, "", "DO_togglePort_async"], [737, 2, 1, "", "DO_writePins"], [737, 2, 1, "", "DO_writePins_async"], [737, 2, 1, "", "DO_writePort"], [737, 2, 1, "", "DO_writePort_async"], [737, 2, 1, "", "I2C_close"], [737, 2, 1, "", "I2C_close_async"], [737, 2, 1, "", "I2C_getPinMap"], [737, 2, 1, "", "I2C_open"], [737, 2, 1, "", "I2C_open_async"], [737, 2, 1, "", "I2C_read"], [737, 2, 1, "", "I2C_read_async"], [737, 2, 1, "", "I2C_reset"], [737, 2, 1, "", "I2C_reset_async"], [737, 2, 1, "", "I2C_setAddressSize"], [737, 2, 1, "", "I2C_setAddressSize_async"], [737, 2, 1, "", "I2C_setClockRate"], [737, 2, 1, "", "I2C_setClockRate_async"], [737, 2, 1, "", "I2C_write"], [737, 2, 1, "", "I2C_write_async"], [737, 2, 1, "", "Logger_openFile"], [737, 2, 1, "", "Logger_write2DList"], [737, 2, 1, "", "Logger_writeHeader"], [737, 2, 1, "", "Logger_writeList"], [737, 2, 1, "", "Logger_writeValue"], [737, 2, 1, "", "PWM_close"], [737, 2, 1, "", "PWM_close_async"], [737, 2, 1, "", "PWM_open"], [737, 2, 1, "", "PWM_open_async"], [737, 2, 1, "", "PWM_setDutyCycle"], [737, 2, 1, "", "PWM_setDutyCycle_async"], [737, 2, 1, "", "PWM_setFrequency"], [737, 2, 1, "", "PWM_setFrequency_async"], [737, 2, 1, "", "PWM_start"], [737, 2, 1, "", "PWM_start_async"], [737, 2, 1, "", "PWM_stop"], [737, 2, 1, "", "PWM_stop_async"], [737, 2, 1, "", "SPI_close"], [737, 2, 1, "", "SPI_close_async"], [737, 2, 1, "", "SPI_getPinMap"], [737, 2, 1, "", "SPI_open"], [737, 2, 1, "", "SPI_open_async"], [737, 2, 1, "", "SPI_read"], [737, 2, 1, "", "SPI_readAndWrite"], [737, 2, 1, "", "SPI_readAndWrite_async"], [737, 2, 1, "", "SPI_read_async"], [737, 2, 1, "", "SPI_reset"], [737, 2, 1, "", "SPI_reset_async"], [737, 2, 1, "", "SPI_setDataSize"], [737, 2, 1, "", "SPI_setDataSize_async"], [737, 2, 1, "", "SPI_setFirstBit"], [737, 2, 1, "", "SPI_setFirstBit_async"], [737, 2, 1, "", "SPI_setMode"], [737, 2, 1, "", "SPI_setMode_async"], [737, 2, 1, "", "SPI_setPrescaler"], [737, 2, 1, "", "SPI_setPrescaler_async"], [737, 2, 1, "", "SPI_write"], [737, 2, 1, "", "SPI_write_async"], [737, 2, 1, "", "Sys_getDriverInfo"], [737, 2, 1, "", "Sys_getDriverInfo_async"], [737, 2, 1, "", "Sys_getMode"], [737, 2, 1, "", "Sys_getMode_async"], [737, 2, 1, "", "Sys_getPinModeInPort"], [737, 2, 1, "", "Sys_getPinModeInPort_async"], [737, 2, 1, "", "Sys_getPythonVersion"], [737, 2, 1, "", "Sys_getPythonVersion_async"], [737, 2, 1, "", "Sys_getRTC"], [737, 2, 1, "", "Sys_getRTC_async"], [737, 2, 1, "", "Sys_getSerialNumber"], [737, 2, 1, "", "Sys_getSerialNumber_async"], [737, 2, 1, "", "Sys_reboot"], [737, 2, 1, "", "Sys_reboot_async"], [737, 2, 1, "", "Sys_setAIOMode"], [737, 2, 1, "", "Sys_setAIOMode_async"], [737, 2, 1, "", "Sys_setDIMode"], [737, 2, 1, "", "Sys_setDIMode_async"], [737, 2, 1, "", "Sys_setDIOMode"], [737, 2, 1, "", "Sys_setDIOMode_async"], [737, 2, 1, "", "Sys_setDOMode"], [737, 2, 1, "", "Sys_setDOMode_async"], [737, 2, 1, "", "Sys_setIdleMode"], [737, 2, 1, "", "Sys_setIdleMode_async"], [737, 2, 1, "", "Sys_setMotionMode"], [737, 2, 1, "", "Sys_setMotionMode_async"], [737, 2, 1, "", "Sys_setRTC"], [737, 2, 1, "", "Sys_setRTC_async"], [737, 2, 1, "", "Sys_setSwitchMode"], [737, 2, 1, "", "Sys_setSwitchMode_async"], [737, 2, 1, "", "UART_close"], [737, 2, 1, "", "UART_close_async"], [737, 2, 1, "", "UART_getPinMap"], [737, 2, 1, "", "UART_open"], [737, 2, 1, "", "UART_open_async"], [737, 2, 1, "", "UART_read"], [737, 2, 1, "", "UART_read_async"], [737, 2, 1, "", "UART_reset"], [737, 2, 1, "", "UART_reset_async"], [737, 2, 1, "", "UART_setBaudRate"], [737, 2, 1, "", "UART_setBaudRate_async"], [737, 2, 1, "", "UART_setDataBit"], [737, 2, 1, "", "UART_setDataBit_async"], [737, 2, 1, "", "UART_setNumStopBit"], [737, 2, 1, "", "UART_setNumStopBit_async"], [737, 2, 1, "", "UART_setParity"], [737, 2, 1, "", "UART_setParity_async"], [737, 2, 1, "", "UART_write"], [737, 2, 1, "", "UART_write_async"], [737, 2, 1, "", "close"], [737, 2, 1, "", "connect"], [737, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[738, 2, 1, "", "Counter_close"], [738, 2, 1, "", "Counter_close_async"], [738, 2, 1, "", "Counter_open"], [738, 2, 1, "", "Counter_open_async"], [738, 2, 1, "", "Counter_read"], [738, 2, 1, "", "Counter_read_async"], [738, 2, 1, "", "Counter_start"], [738, 2, 1, "", "Counter_start_async"], [738, 2, 1, "", "Counter_stop"], [738, 2, 1, "", "Counter_stop_async"], [738, 2, 1, "", "DIO_loadStartup"], [738, 2, 1, "", "DIO_loadStartup_async"], [738, 2, 1, "", "DI_closePins"], [738, 2, 1, "", "DI_closePins_async"], [738, 2, 1, "", "DI_closePort"], [738, 2, 1, "", "DI_closePort_async"], [738, 2, 1, "", "DI_getPinMap"], [738, 2, 1, "", "DI_openPins"], [738, 2, 1, "", "DI_openPins_async"], [738, 2, 1, "", "DI_openPort"], [738, 2, 1, "", "DI_openPort_async"], [738, 2, 1, "", "DI_readPins"], [738, 2, 1, "", "DI_readPins_async"], [738, 2, 1, "", "DI_readPort"], [738, 2, 1, "", "DI_readPort_async"], [738, 2, 1, "", "DO_closePins"], [738, 2, 1, "", "DO_closePins_async"], [738, 2, 1, "", "DO_closePort"], [738, 2, 1, "", "DO_closePort_async"], [738, 2, 1, "", "DO_getPinMap"], [738, 2, 1, "", "DO_openPins"], [738, 2, 1, "", "DO_openPins_async"], [738, 2, 1, "", "DO_openPort"], [738, 2, 1, "", "DO_openPort_async"], [738, 2, 1, "", "DO_togglePins"], [738, 2, 1, "", "DO_togglePins_async"], [738, 2, 1, "", "DO_togglePort"], [738, 2, 1, "", "DO_togglePort_async"], [738, 2, 1, "", "DO_writePins"], [738, 2, 1, "", "DO_writePins_async"], [738, 2, 1, "", "DO_writePort"], [738, 2, 1, "", "DO_writePort_async"], [738, 2, 1, "", "I2C_close"], [738, 2, 1, "", "I2C_close_async"], [738, 2, 1, "", "I2C_getPinMap"], [738, 2, 1, "", "I2C_open"], [738, 2, 1, "", "I2C_open_async"], [738, 2, 1, "", "I2C_read"], [738, 2, 1, "", "I2C_read_async"], [738, 2, 1, "", "I2C_reset"], [738, 2, 1, "", "I2C_reset_async"], [738, 2, 1, "", "I2C_setAddressSize"], [738, 2, 1, "", "I2C_setAddressSize_async"], [738, 2, 1, "", "I2C_setClockRate"], [738, 2, 1, "", "I2C_setClockRate_async"], [738, 2, 1, "", "I2C_write"], [738, 2, 1, "", "I2C_write_async"], [738, 2, 1, "", "Logger_openFile"], [738, 2, 1, "", "Logger_write2DList"], [738, 2, 1, "", "Logger_writeHeader"], [738, 2, 1, "", "Logger_writeList"], [738, 2, 1, "", "Logger_writeValue"], [738, 2, 1, "", "PWM_close"], [738, 2, 1, "", "PWM_close_async"], [738, 2, 1, "", "PWM_open"], [738, 2, 1, "", "PWM_open_async"], [738, 2, 1, "", "PWM_setDutyCycle"], [738, 2, 1, "", "PWM_setDutyCycle_async"], [738, 2, 1, "", "PWM_setFrequency"], [738, 2, 1, "", "PWM_setFrequency_async"], [738, 2, 1, "", "PWM_start"], [738, 2, 1, "", "PWM_start_async"], [738, 2, 1, "", "PWM_stop"], [738, 2, 1, "", "PWM_stop_async"], [738, 2, 1, "", "SPI_close"], [738, 2, 1, "", "SPI_close_async"], [738, 2, 1, "", "SPI_getPinMap"], [738, 2, 1, "", "SPI_open"], [738, 2, 1, "", "SPI_open_async"], [738, 2, 1, "", "SPI_read"], [738, 2, 1, "", "SPI_readAndWrite"], [738, 2, 1, "", "SPI_readAndWrite_async"], [738, 2, 1, "", "SPI_read_async"], [738, 2, 1, "", "SPI_reset"], [738, 2, 1, "", "SPI_reset_async"], [738, 2, 1, "", "SPI_setDataSize"], [738, 2, 1, "", "SPI_setDataSize_async"], [738, 2, 1, "", "SPI_setFirstBit"], [738, 2, 1, "", "SPI_setFirstBit_async"], [738, 2, 1, "", "SPI_setMode"], [738, 2, 1, "", "SPI_setMode_async"], [738, 2, 1, "", "SPI_setPrescaler"], [738, 2, 1, "", "SPI_setPrescaler_async"], [738, 2, 1, "", "SPI_write"], [738, 2, 1, "", "SPI_write_async"], [738, 2, 1, "", "Sys_getDriverInfo"], [738, 2, 1, "", "Sys_getDriverInfo_async"], [738, 2, 1, "", "Sys_getMode"], [738, 2, 1, "", "Sys_getMode_async"], [738, 2, 1, "", "Sys_getPinModeInPort"], [738, 2, 1, "", "Sys_getPinModeInPort_async"], [738, 2, 1, "", "Sys_getPythonVersion"], [738, 2, 1, "", "Sys_getPythonVersion_async"], [738, 2, 1, "", "Sys_getRTC"], [738, 2, 1, "", "Sys_getRTC_async"], [738, 2, 1, "", "Sys_getSerialNumber"], [738, 2, 1, "", "Sys_getSerialNumber_async"], [738, 2, 1, "", "Sys_reboot"], [738, 2, 1, "", "Sys_reboot_async"], [738, 2, 1, "", "Sys_setAIOMode"], [738, 2, 1, "", "Sys_setAIOMode_async"], [738, 2, 1, "", "Sys_setDIMode"], [738, 2, 1, "", "Sys_setDIMode_async"], [738, 2, 1, "", "Sys_setDIOMode"], [738, 2, 1, "", "Sys_setDIOMode_async"], [738, 2, 1, "", "Sys_setDOMode"], [738, 2, 1, "", "Sys_setDOMode_async"], [738, 2, 1, "", "Sys_setIdleMode"], [738, 2, 1, "", "Sys_setIdleMode_async"], [738, 2, 1, "", "Sys_setMotionMode"], [738, 2, 1, "", "Sys_setMotionMode_async"], [738, 2, 1, "", "Sys_setRTC"], [738, 2, 1, "", "Sys_setRTC_async"], [738, 2, 1, "", "Sys_setSwitchMode"], [738, 2, 1, "", "Sys_setSwitchMode_async"], [738, 2, 1, "", "UART_close"], [738, 2, 1, "", "UART_close_async"], [738, 2, 1, "", "UART_getPinMap"], [738, 2, 1, "", "UART_open"], [738, 2, 1, "", "UART_open_async"], [738, 2, 1, "", "UART_read"], [738, 2, 1, "", "UART_read_async"], [738, 2, 1, "", "UART_reset"], [738, 2, 1, "", "UART_reset_async"], [738, 2, 1, "", "UART_setBaudRate"], [738, 2, 1, "", "UART_setBaudRate_async"], [738, 2, 1, "", "UART_setDataBit"], [738, 2, 1, "", "UART_setDataBit_async"], [738, 2, 1, "", "UART_setNumStopBit"], [738, 2, 1, "", "UART_setNumStopBit_async"], [738, 2, 1, "", "UART_setParity"], [738, 2, 1, "", "UART_setParity_async"], [738, 2, 1, "", "UART_write"], [738, 2, 1, "", "UART_write_async"], [738, 2, 1, "", "close"], [738, 2, 1, "", "connect"], [738, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[739, 2, 1, "", "Counter_close"], [739, 2, 1, "", "Counter_close_async"], [739, 2, 1, "", "Counter_open"], [739, 2, 1, "", "Counter_open_async"], [739, 2, 1, "", "Counter_read"], [739, 2, 1, "", "Counter_read_async"], [739, 2, 1, "", "Counter_start"], [739, 2, 1, "", "Counter_start_async"], [739, 2, 1, "", "Counter_stop"], [739, 2, 1, "", "Counter_stop_async"], [739, 2, 1, "", "DIO_loadStartup"], [739, 2, 1, "", "DIO_loadStartup_async"], [739, 2, 1, "", "DI_closePins"], [739, 2, 1, "", "DI_closePins_async"], [739, 2, 1, "", "DI_closePort"], [739, 2, 1, "", "DI_closePort_async"], [739, 2, 1, "", "DI_getPinMap"], [739, 2, 1, "", "DI_openPins"], [739, 2, 1, "", "DI_openPins_async"], [739, 2, 1, "", "DI_openPort"], [739, 2, 1, "", "DI_openPort_async"], [739, 2, 1, "", "DI_readPins"], [739, 2, 1, "", "DI_readPins_async"], [739, 2, 1, "", "DI_readPort"], [739, 2, 1, "", "DI_readPort_async"], [739, 2, 1, "", "DO_closePins"], [739, 2, 1, "", "DO_closePins_async"], [739, 2, 1, "", "DO_closePort"], [739, 2, 1, "", "DO_closePort_async"], [739, 2, 1, "", "DO_getPinMap"], [739, 2, 1, "", "DO_openPins"], [739, 2, 1, "", "DO_openPins_async"], [739, 2, 1, "", "DO_openPort"], [739, 2, 1, "", "DO_openPort_async"], [739, 2, 1, "", "DO_togglePins"], [739, 2, 1, "", "DO_togglePins_async"], [739, 2, 1, "", "DO_togglePort"], [739, 2, 1, "", "DO_togglePort_async"], [739, 2, 1, "", "DO_writePins"], [739, 2, 1, "", "DO_writePins_async"], [739, 2, 1, "", "DO_writePort"], [739, 2, 1, "", "DO_writePort_async"], [739, 2, 1, "", "Logger_openFile"], [739, 2, 1, "", "Logger_write2DList"], [739, 2, 1, "", "Logger_writeHeader"], [739, 2, 1, "", "Logger_writeList"], [739, 2, 1, "", "Logger_writeValue"], [739, 2, 1, "", "PWM_close"], [739, 2, 1, "", "PWM_close_async"], [739, 2, 1, "", "PWM_open"], [739, 2, 1, "", "PWM_open_async"], [739, 2, 1, "", "PWM_setDutyCycle"], [739, 2, 1, "", "PWM_setDutyCycle_async"], [739, 2, 1, "", "PWM_setFrequency"], [739, 2, 1, "", "PWM_setFrequency_async"], [739, 2, 1, "", "PWM_start"], [739, 2, 1, "", "PWM_start_async"], [739, 2, 1, "", "PWM_stop"], [739, 2, 1, "", "PWM_stop_async"], [739, 2, 1, "", "Sys_getDriverInfo"], [739, 2, 1, "", "Sys_getDriverInfo_async"], [739, 2, 1, "", "Sys_getMode"], [739, 2, 1, "", "Sys_getMode_async"], [739, 2, 1, "", "Sys_getPinModeInPort"], [739, 2, 1, "", "Sys_getPinModeInPort_async"], [739, 2, 1, "", "Sys_getPythonVersion"], [739, 2, 1, "", "Sys_getPythonVersion_async"], [739, 2, 1, "", "Sys_getRTC"], [739, 2, 1, "", "Sys_getRTC_async"], [739, 2, 1, "", "Sys_getSerialNumber"], [739, 2, 1, "", "Sys_getSerialNumber_async"], [739, 2, 1, "", "Sys_reboot"], [739, 2, 1, "", "Sys_reboot_async"], [739, 2, 1, "", "Sys_setAIOMode"], [739, 2, 1, "", "Sys_setAIOMode_async"], [739, 2, 1, "", "Sys_setDIMode"], [739, 2, 1, "", "Sys_setDIMode_async"], [739, 2, 1, "", "Sys_setDIOMode"], [739, 2, 1, "", "Sys_setDIOMode_async"], [739, 2, 1, "", "Sys_setDOMode"], [739, 2, 1, "", "Sys_setDOMode_async"], [739, 2, 1, "", "Sys_setIdleMode"], [739, 2, 1, "", "Sys_setIdleMode_async"], [739, 2, 1, "", "Sys_setMotionMode"], [739, 2, 1, "", "Sys_setMotionMode_async"], [739, 2, 1, "", "Sys_setRTC"], [739, 2, 1, "", "Sys_setRTC_async"], [739, 2, 1, "", "Sys_setSwitchMode"], [739, 2, 1, "", "Sys_setSwitchMode_async"], [739, 2, 1, "", "close"], [739, 2, 1, "", "connect"], [739, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[740, 2, 1, "", "Counter_close"], [740, 2, 1, "", "Counter_close_async"], [740, 2, 1, "", "Counter_open"], [740, 2, 1, "", "Counter_open_async"], [740, 2, 1, "", "Counter_read"], [740, 2, 1, "", "Counter_read_async"], [740, 2, 1, "", "Counter_start"], [740, 2, 1, "", "Counter_start_async"], [740, 2, 1, "", "Counter_stop"], [740, 2, 1, "", "Counter_stop_async"], [740, 2, 1, "", "DIO_loadStartup"], [740, 2, 1, "", "DIO_loadStartup_async"], [740, 2, 1, "", "DI_closePins"], [740, 2, 1, "", "DI_closePins_async"], [740, 2, 1, "", "DI_closePort"], [740, 2, 1, "", "DI_closePort_async"], [740, 2, 1, "", "DI_getPinMap"], [740, 2, 1, "", "DI_openPins"], [740, 2, 1, "", "DI_openPins_async"], [740, 2, 1, "", "DI_openPort"], [740, 2, 1, "", "DI_openPort_async"], [740, 2, 1, "", "DI_readPins"], [740, 2, 1, "", "DI_readPins_async"], [740, 2, 1, "", "DI_readPort"], [740, 2, 1, "", "DI_readPort_async"], [740, 2, 1, "", "DO_closePins"], [740, 2, 1, "", "DO_closePins_async"], [740, 2, 1, "", "DO_closePort"], [740, 2, 1, "", "DO_closePort_async"], [740, 2, 1, "", "DO_getPinMap"], [740, 2, 1, "", "DO_openPins"], [740, 2, 1, "", "DO_openPins_async"], [740, 2, 1, "", "DO_openPort"], [740, 2, 1, "", "DO_openPort_async"], [740, 2, 1, "", "DO_togglePins"], [740, 2, 1, "", "DO_togglePins_async"], [740, 2, 1, "", "DO_togglePort"], [740, 2, 1, "", "DO_togglePort_async"], [740, 2, 1, "", "DO_writePins"], [740, 2, 1, "", "DO_writePins_async"], [740, 2, 1, "", "DO_writePort"], [740, 2, 1, "", "DO_writePort_async"], [740, 2, 1, "", "I2C_close"], [740, 2, 1, "", "I2C_close_async"], [740, 2, 1, "", "I2C_getPinMap"], [740, 2, 1, "", "I2C_open"], [740, 2, 1, "", "I2C_open_async"], [740, 2, 1, "", "I2C_read"], [740, 2, 1, "", "I2C_read_async"], [740, 2, 1, "", "I2C_reset"], [740, 2, 1, "", "I2C_reset_async"], [740, 2, 1, "", "I2C_setAddressSize"], [740, 2, 1, "", "I2C_setAddressSize_async"], [740, 2, 1, "", "I2C_setClockRate"], [740, 2, 1, "", "I2C_setClockRate_async"], [740, 2, 1, "", "I2C_write"], [740, 2, 1, "", "I2C_write_async"], [740, 2, 1, "", "Logger_openFile"], [740, 2, 1, "", "Logger_write2DList"], [740, 2, 1, "", "Logger_writeHeader"], [740, 2, 1, "", "Logger_writeList"], [740, 2, 1, "", "Logger_writeValue"], [740, 2, 1, "", "PWM_close"], [740, 2, 1, "", "PWM_close_async"], [740, 2, 1, "", "PWM_open"], [740, 2, 1, "", "PWM_open_async"], [740, 2, 1, "", "PWM_setDutyCycle"], [740, 2, 1, "", "PWM_setDutyCycle_async"], [740, 2, 1, "", "PWM_setFrequency"], [740, 2, 1, "", "PWM_setFrequency_async"], [740, 2, 1, "", "PWM_start"], [740, 2, 1, "", "PWM_start_async"], [740, 2, 1, "", "PWM_stop"], [740, 2, 1, "", "PWM_stop_async"], [740, 2, 1, "", "SPI_close"], [740, 2, 1, "", "SPI_close_async"], [740, 2, 1, "", "SPI_getPinMap"], [740, 2, 1, "", "SPI_open"], [740, 2, 1, "", "SPI_open_async"], [740, 2, 1, "", "SPI_read"], [740, 2, 1, "", "SPI_readAndWrite"], [740, 2, 1, "", "SPI_readAndWrite_async"], [740, 2, 1, "", "SPI_read_async"], [740, 2, 1, "", "SPI_reset"], [740, 2, 1, "", "SPI_reset_async"], [740, 2, 1, "", "SPI_setDataSize"], [740, 2, 1, "", "SPI_setDataSize_async"], [740, 2, 1, "", "SPI_setFirstBit"], [740, 2, 1, "", "SPI_setFirstBit_async"], [740, 2, 1, "", "SPI_setMode"], [740, 2, 1, "", "SPI_setMode_async"], [740, 2, 1, "", "SPI_setPrescaler"], [740, 2, 1, "", "SPI_setPrescaler_async"], [740, 2, 1, "", "SPI_write"], [740, 2, 1, "", "SPI_write_async"], [740, 2, 1, "", "Sys_getDriverInfo"], [740, 2, 1, "", "Sys_getDriverInfo_async"], [740, 2, 1, "", "Sys_getMode"], [740, 2, 1, "", "Sys_getMode_async"], [740, 2, 1, "", "Sys_getPinModeInPort"], [740, 2, 1, "", "Sys_getPinModeInPort_async"], [740, 2, 1, "", "Sys_getPythonVersion"], [740, 2, 1, "", "Sys_getPythonVersion_async"], [740, 2, 1, "", "Sys_getRTC"], [740, 2, 1, "", "Sys_getRTC_async"], [740, 2, 1, "", "Sys_getSerialNumber"], [740, 2, 1, "", "Sys_getSerialNumber_async"], [740, 2, 1, "", "Sys_reboot"], [740, 2, 1, "", "Sys_reboot_async"], [740, 2, 1, "", "Sys_setAIOMode"], [740, 2, 1, "", "Sys_setAIOMode_async"], [740, 2, 1, "", "Sys_setDIMode"], [740, 2, 1, "", "Sys_setDIMode_async"], [740, 2, 1, "", "Sys_setDIOMode"], [740, 2, 1, "", "Sys_setDIOMode_async"], [740, 2, 1, "", "Sys_setDOMode"], [740, 2, 1, "", "Sys_setDOMode_async"], [740, 2, 1, "", "Sys_setIdleMode"], [740, 2, 1, "", "Sys_setIdleMode_async"], [740, 2, 1, "", "Sys_setMotionMode"], [740, 2, 1, "", "Sys_setMotionMode_async"], [740, 2, 1, "", "Sys_setRTC"], [740, 2, 1, "", "Sys_setRTC_async"], [740, 2, 1, "", "Sys_setSwitchMode"], [740, 2, 1, "", "Sys_setSwitchMode_async"], [740, 2, 1, "", "Thermal_close"], [740, 2, 1, "", "Thermal_close_async"], [740, 2, 1, "", "Thermal_getPinMap"], [740, 2, 1, "", "Thermal_getStatus"], [740, 2, 1, "", "Thermal_getStatus_async"], [740, 2, 1, "", "Thermal_open"], [740, 2, 1, "", "Thermal_open_async"], [740, 2, 1, "", "Thermal_readSensor"], [740, 2, 1, "", "Thermal_readSensor_async"], [740, 2, 1, "", "Thermal_setType"], [740, 2, 1, "", "Thermal_setType_async"], [740, 2, 1, "", "UART_close"], [740, 2, 1, "", "UART_close_async"], [740, 2, 1, "", "UART_getPinMap"], [740, 2, 1, "", "UART_open"], [740, 2, 1, "", "UART_open_async"], [740, 2, 1, "", "UART_read"], [740, 2, 1, "", "UART_read_async"], [740, 2, 1, "", "UART_reset"], [740, 2, 1, "", "UART_reset_async"], [740, 2, 1, "", "UART_setBaudRate"], [740, 2, 1, "", "UART_setBaudRate_async"], [740, 2, 1, "", "UART_setDataBit"], [740, 2, 1, "", "UART_setDataBit_async"], [740, 2, 1, "", "UART_setNumStopBit"], [740, 2, 1, "", "UART_setNumStopBit_async"], [740, 2, 1, "", "UART_setParity"], [740, 2, 1, "", "UART_setParity_async"], [740, 2, 1, "", "UART_write"], [740, 2, 1, "", "UART_write_async"], [740, 2, 1, "", "close"], [740, 2, 1, "", "connect"], [740, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[741, 2, 1, "", "Counter_close"], [741, 2, 1, "", "Counter_close_async"], [741, 2, 1, "", "Counter_open"], [741, 2, 1, "", "Counter_open_async"], [741, 2, 1, "", "Counter_read"], [741, 2, 1, "", "Counter_read_async"], [741, 2, 1, "", "Counter_start"], [741, 2, 1, "", "Counter_start_async"], [741, 2, 1, "", "Counter_stop"], [741, 2, 1, "", "Counter_stop_async"], [741, 2, 1, "", "DIO_loadStartup"], [741, 2, 1, "", "DIO_loadStartup_async"], [741, 2, 1, "", "DI_closePins"], [741, 2, 1, "", "DI_closePins_async"], [741, 2, 1, "", "DI_closePort"], [741, 2, 1, "", "DI_closePort_async"], [741, 2, 1, "", "DI_getPinMap"], [741, 2, 1, "", "DI_openPins"], [741, 2, 1, "", "DI_openPins_async"], [741, 2, 1, "", "DI_openPort"], [741, 2, 1, "", "DI_openPort_async"], [741, 2, 1, "", "DI_readPins"], [741, 2, 1, "", "DI_readPins_async"], [741, 2, 1, "", "DI_readPort"], [741, 2, 1, "", "DI_readPort_async"], [741, 2, 1, "", "DO_closePins"], [741, 2, 1, "", "DO_closePins_async"], [741, 2, 1, "", "DO_closePort"], [741, 2, 1, "", "DO_closePort_async"], [741, 2, 1, "", "DO_getPinMap"], [741, 2, 1, "", "DO_openPins"], [741, 2, 1, "", "DO_openPins_async"], [741, 2, 1, "", "DO_openPort"], [741, 2, 1, "", "DO_openPort_async"], [741, 2, 1, "", "DO_togglePins"], [741, 2, 1, "", "DO_togglePins_async"], [741, 2, 1, "", "DO_togglePort"], [741, 2, 1, "", "DO_togglePort_async"], [741, 2, 1, "", "DO_writePins"], [741, 2, 1, "", "DO_writePins_async"], [741, 2, 1, "", "DO_writePort"], [741, 2, 1, "", "DO_writePort_async"], [741, 2, 1, "", "I2C_close"], [741, 2, 1, "", "I2C_close_async"], [741, 2, 1, "", "I2C_getPinMap"], [741, 2, 1, "", "I2C_open"], [741, 2, 1, "", "I2C_open_async"], [741, 2, 1, "", "I2C_read"], [741, 2, 1, "", "I2C_read_async"], [741, 2, 1, "", "I2C_reset"], [741, 2, 1, "", "I2C_reset_async"], [741, 2, 1, "", "I2C_setAddressSize"], [741, 2, 1, "", "I2C_setAddressSize_async"], [741, 2, 1, "", "I2C_setClockRate"], [741, 2, 1, "", "I2C_setClockRate_async"], [741, 2, 1, "", "I2C_write"], [741, 2, 1, "", "I2C_write_async"], [741, 2, 1, "", "Logger_openFile"], [741, 2, 1, "", "Logger_write2DList"], [741, 2, 1, "", "Logger_writeHeader"], [741, 2, 1, "", "Logger_writeList"], [741, 2, 1, "", "Logger_writeValue"], [741, 2, 1, "", "PWM_close"], [741, 2, 1, "", "PWM_close_async"], [741, 2, 1, "", "PWM_open"], [741, 2, 1, "", "PWM_open_async"], [741, 2, 1, "", "PWM_setDutyCycle"], [741, 2, 1, "", "PWM_setDutyCycle_async"], [741, 2, 1, "", "PWM_setFrequency"], [741, 2, 1, "", "PWM_setFrequency_async"], [741, 2, 1, "", "PWM_start"], [741, 2, 1, "", "PWM_start_async"], [741, 2, 1, "", "PWM_stop"], [741, 2, 1, "", "PWM_stop_async"], [741, 2, 1, "", "SPI_close"], [741, 2, 1, "", "SPI_close_async"], [741, 2, 1, "", "SPI_getPinMap"], [741, 2, 1, "", "SPI_open"], [741, 2, 1, "", "SPI_open_async"], [741, 2, 1, "", "SPI_read"], [741, 2, 1, "", "SPI_readAndWrite"], [741, 2, 1, "", "SPI_readAndWrite_async"], [741, 2, 1, "", "SPI_read_async"], [741, 2, 1, "", "SPI_reset"], [741, 2, 1, "", "SPI_reset_async"], [741, 2, 1, "", "SPI_setDataSize"], [741, 2, 1, "", "SPI_setDataSize_async"], [741, 2, 1, "", "SPI_setFirstBit"], [741, 2, 1, "", "SPI_setFirstBit_async"], [741, 2, 1, "", "SPI_setMode"], [741, 2, 1, "", "SPI_setMode_async"], [741, 2, 1, "", "SPI_setPrescaler"], [741, 2, 1, "", "SPI_setPrescaler_async"], [741, 2, 1, "", "SPI_write"], [741, 2, 1, "", "SPI_write_async"], [741, 2, 1, "", "Sys_getDriverInfo"], [741, 2, 1, "", "Sys_getDriverInfo_async"], [741, 2, 1, "", "Sys_getMode"], [741, 2, 1, "", "Sys_getMode_async"], [741, 2, 1, "", "Sys_getPinModeInPort"], [741, 2, 1, "", "Sys_getPinModeInPort_async"], [741, 2, 1, "", "Sys_getPythonVersion"], [741, 2, 1, "", "Sys_getPythonVersion_async"], [741, 2, 1, "", "Sys_getRTC"], [741, 2, 1, "", "Sys_getRTC_async"], [741, 2, 1, "", "Sys_getSerialNumber"], [741, 2, 1, "", "Sys_getSerialNumber_async"], [741, 2, 1, "", "Sys_reboot"], [741, 2, 1, "", "Sys_reboot_async"], [741, 2, 1, "", "Sys_setAIOMode"], [741, 2, 1, "", "Sys_setAIOMode_async"], [741, 2, 1, "", "Sys_setDIMode"], [741, 2, 1, "", "Sys_setDIMode_async"], [741, 2, 1, "", "Sys_setDIOMode"], [741, 2, 1, "", "Sys_setDIOMode_async"], [741, 2, 1, "", "Sys_setDOMode"], [741, 2, 1, "", "Sys_setDOMode_async"], [741, 2, 1, "", "Sys_setIdleMode"], [741, 2, 1, "", "Sys_setIdleMode_async"], [741, 2, 1, "", "Sys_setMotionMode"], [741, 2, 1, "", "Sys_setMotionMode_async"], [741, 2, 1, "", "Sys_setRTC"], [741, 2, 1, "", "Sys_setRTC_async"], [741, 2, 1, "", "Sys_setSwitchMode"], [741, 2, 1, "", "Sys_setSwitchMode_async"], [741, 2, 1, "", "Thermal_close"], [741, 2, 1, "", "Thermal_close_async"], [741, 2, 1, "", "Thermal_getPinMap"], [741, 2, 1, "", "Thermal_getStatus"], [741, 2, 1, "", "Thermal_getStatus_async"], [741, 2, 1, "", "Thermal_open"], [741, 2, 1, "", "Thermal_open_async"], [741, 2, 1, "", "Thermal_readSensor"], [741, 2, 1, "", "Thermal_readSensor_async"], [741, 2, 1, "", "Thermal_setOverSampling"], [741, 2, 1, "", "Thermal_setOverSampling_async"], [741, 2, 1, "", "Thermal_setType"], [741, 2, 1, "", "Thermal_setType_async"], [741, 2, 1, "", "UART_close"], [741, 2, 1, "", "UART_close_async"], [741, 2, 1, "", "UART_getPinMap"], [741, 2, 1, "", "UART_open"], [741, 2, 1, "", "UART_open_async"], [741, 2, 1, "", "UART_read"], [741, 2, 1, "", "UART_read_async"], [741, 2, 1, "", "UART_reset"], [741, 2, 1, "", "UART_reset_async"], [741, 2, 1, "", "UART_setBaudRate"], [741, 2, 1, "", "UART_setBaudRate_async"], [741, 2, 1, "", "UART_setDataBit"], [741, 2, 1, "", "UART_setDataBit_async"], [741, 2, 1, "", "UART_setNumStopBit"], [741, 2, 1, "", "UART_setNumStopBit_async"], [741, 2, 1, "", "UART_setParity"], [741, 2, 1, "", "UART_setParity_async"], [741, 2, 1, "", "UART_write"], [741, 2, 1, "", "UART_write_async"], [741, 2, 1, "", "close"], [741, 2, 1, "", "connect"], [741, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[742, 2, 1, "", "AI_close"], [742, 2, 1, "", "AI_close_async"], [742, 2, 1, "", "AI_enableCS"], [742, 2, 1, "", "AI_enableCS_async"], [742, 2, 1, "", "AI_enableChannel"], [742, 2, 1, "", "AI_enableChannel_async"], [742, 2, 1, "", "AI_getPort"], [742, 2, 1, "", "AI_open"], [742, 2, 1, "", "AI_open_async"], [742, 2, 1, "", "AI_readOnDemand"], [742, 2, 1, "", "AI_readOnDemand_async"], [742, 2, 1, "", "AI_readStreaming"], [742, 2, 1, "", "AI_readStreaming_async"], [742, 2, 1, "", "AI_setMode"], [742, 2, 1, "", "AI_setMode_async"], [742, 2, 1, "", "AI_setNumSamples"], [742, 2, 1, "", "AI_setNumSamples_async"], [742, 2, 1, "", "AI_setSamplingRate"], [742, 2, 1, "", "AI_setSamplingRate_async"], [742, 2, 1, "", "AI_start"], [742, 2, 1, "", "AI_start_async"], [742, 2, 1, "", "AI_stop"], [742, 2, 1, "", "AI_stop_async"], [742, 2, 1, "", "Logger_openFile"], [742, 2, 1, "", "Logger_write2DList"], [742, 2, 1, "", "Logger_writeHeader"], [742, 2, 1, "", "Logger_writeList"], [742, 2, 1, "", "Logger_writeValue"], [742, 2, 1, "", "Net_getGateway"], [742, 2, 1, "", "Net_getGateway_async"], [742, 2, 1, "", "Net_getIPAddrAndSubmask"], [742, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [742, 2, 1, "", "Net_getMACAddr"], [742, 2, 1, "", "Net_getMACAddr_async"], [742, 2, 1, "", "Net_setIPAddrAndSubmask"], [742, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [742, 2, 1, "", "Sys_getDriverInfo"], [742, 2, 1, "", "Sys_getDriverInfo_async"], [742, 2, 1, "", "Sys_getGateway"], [742, 2, 1, "", "Sys_getGateway_async"], [742, 2, 1, "", "Sys_getIPAddrAndSubmask"], [742, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [742, 2, 1, "", "Sys_getMACAddr"], [742, 2, 1, "", "Sys_getMACAddr_async"], [742, 2, 1, "", "Sys_getMode"], [742, 2, 1, "", "Sys_getMode_async"], [742, 2, 1, "", "Sys_getPinModeInPort"], [742, 2, 1, "", "Sys_getPinModeInPort_async"], [742, 2, 1, "", "Sys_getPythonVersion"], [742, 2, 1, "", "Sys_getPythonVersion_async"], [742, 2, 1, "", "Sys_getRTC"], [742, 2, 1, "", "Sys_getRTC_async"], [742, 2, 1, "", "Sys_getSerialNumber"], [742, 2, 1, "", "Sys_getSerialNumber_async"], [742, 2, 1, "", "Sys_reboot"], [742, 2, 1, "", "Sys_reboot_async"], [742, 2, 1, "", "Sys_setAIOMode"], [742, 2, 1, "", "Sys_setAIOMode_async"], [742, 2, 1, "", "Sys_setDIMode"], [742, 2, 1, "", "Sys_setDIMode_async"], [742, 2, 1, "", "Sys_setDIOMode"], [742, 2, 1, "", "Sys_setDIOMode_async"], [742, 2, 1, "", "Sys_setDOMode"], [742, 2, 1, "", "Sys_setDOMode_async"], [742, 2, 1, "", "Sys_setIPAddrAndSubmask"], [742, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [742, 2, 1, "", "Sys_setIdleMode"], [742, 2, 1, "", "Sys_setIdleMode_async"], [742, 2, 1, "", "Sys_setMotionMode"], [742, 2, 1, "", "Sys_setMotionMode_async"], [742, 2, 1, "", "Sys_setRTC"], [742, 2, 1, "", "Sys_setRTC_async"], [742, 2, 1, "", "Sys_setSwitchMode"], [742, 2, 1, "", "Sys_setSwitchMode_async"], [742, 2, 1, "", "Wifi_getChargeStatus"], [742, 2, 1, "", "Wifi_getChargeStatus_async"], [742, 2, 1, "", "Wifi_getConfiguration"], [742, 2, 1, "", "Wifi_getConfiguration_async"], [742, 2, 1, "", "Wifi_getPowerGoodStatus"], [742, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [742, 2, 1, "", "Wifi_getWifiBandWidth"], [742, 2, 1, "", "Wifi_getWifiBandWidth_async"], [742, 2, 1, "", "Wifi_readBattery"], [742, 2, 1, "", "Wifi_readBattery_async"], [742, 2, 1, "", "Wifi_readRSSI"], [742, 2, 1, "", "Wifi_readRSSI_async"], [742, 2, 1, "", "Wifi_resetLED"], [742, 2, 1, "", "Wifi_resetLED_async"], [742, 2, 1, "", "Wifi_setBlueLED"], [742, 2, 1, "", "Wifi_setBlueLED_async"], [742, 2, 1, "", "Wifi_setGreenLED"], [742, 2, 1, "", "Wifi_setGreenLED_async"], [742, 2, 1, "", "Wifi_setRedLED"], [742, 2, 1, "", "Wifi_setRedLED_async"], [742, 2, 1, "", "close"], [742, 2, 1, "", "connect"], [742, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3AH": [[743, 2, 1, "", "AHRS_close"], [743, 2, 1, "", "AHRS_close_async"], [743, 2, 1, "", "AHRS_getAcceleration"], [743, 2, 1, "", "AHRS_getAcceleration_async"], [743, 2, 1, "", "AHRS_getAngularVelocity"], [743, 2, 1, "", "AHRS_getAngularVelocity_async"], [743, 2, 1, "", "AHRS_getEstimate"], [743, 2, 1, "", "AHRS_getEstimate_async"], [743, 2, 1, "", "AHRS_getOrientation"], [743, 2, 1, "", "AHRS_getOrientation_async"], [743, 2, 1, "", "AHRS_open"], [743, 2, 1, "", "AHRS_open_async"], [743, 2, 1, "", "AHRS_reset"], [743, 2, 1, "", "AHRS_reset_async"], [743, 2, 1, "", "AHRS_start"], [743, 2, 1, "", "AHRS_start_async"], [743, 2, 1, "", "AHRS_stop"], [743, 2, 1, "", "AHRS_stop_async"], [743, 2, 1, "", "AI_close"], [743, 2, 1, "", "AI_close_async"], [743, 2, 1, "", "AI_enableCS"], [743, 2, 1, "", "AI_enableCS_async"], [743, 2, 1, "", "AI_enableChannel"], [743, 2, 1, "", "AI_enableChannel_async"], [743, 2, 1, "", "AI_getPort"], [743, 2, 1, "", "AI_open"], [743, 2, 1, "", "AI_open_async"], [743, 2, 1, "", "AI_readOnDemand"], [743, 2, 1, "", "AI_readOnDemand_async"], [743, 2, 1, "", "AI_readStreaming"], [743, 2, 1, "", "AI_readStreaming_async"], [743, 2, 1, "", "AI_setMode"], [743, 2, 1, "", "AI_setMode_async"], [743, 2, 1, "", "AI_setNumSamples"], [743, 2, 1, "", "AI_setNumSamples_async"], [743, 2, 1, "", "AI_setSamplingRate"], [743, 2, 1, "", "AI_setSamplingRate_async"], [743, 2, 1, "", "AI_start"], [743, 2, 1, "", "AI_start_async"], [743, 2, 1, "", "AI_stop"], [743, 2, 1, "", "AI_stop_async"], [743, 2, 1, "", "Logger_openFile"], [743, 2, 1, "", "Logger_write2DList"], [743, 2, 1, "", "Logger_writeHeader"], [743, 2, 1, "", "Logger_writeList"], [743, 2, 1, "", "Logger_writeValue"], [743, 2, 1, "", "Net_getGateway"], [743, 2, 1, "", "Net_getGateway_async"], [743, 2, 1, "", "Net_getIPAddrAndSubmask"], [743, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [743, 2, 1, "", "Net_getMACAddr"], [743, 2, 1, "", "Net_getMACAddr_async"], [743, 2, 1, "", "Net_setIPAddrAndSubmask"], [743, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [743, 2, 1, "", "Sys_getDriverInfo"], [743, 2, 1, "", "Sys_getDriverInfo_async"], [743, 2, 1, "", "Sys_getGateway"], [743, 2, 1, "", "Sys_getGateway_async"], [743, 2, 1, "", "Sys_getIPAddrAndSubmask"], [743, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [743, 2, 1, "", "Sys_getMACAddr"], [743, 2, 1, "", "Sys_getMACAddr_async"], [743, 2, 1, "", "Sys_getMode"], [743, 2, 1, "", "Sys_getMode_async"], [743, 2, 1, "", "Sys_getPinModeInPort"], [743, 2, 1, "", "Sys_getPinModeInPort_async"], [743, 2, 1, "", "Sys_getPythonVersion"], [743, 2, 1, "", "Sys_getPythonVersion_async"], [743, 2, 1, "", "Sys_getRTC"], [743, 2, 1, "", "Sys_getRTC_async"], [743, 2, 1, "", "Sys_getSerialNumber"], [743, 2, 1, "", "Sys_getSerialNumber_async"], [743, 2, 1, "", "Sys_reboot"], [743, 2, 1, "", "Sys_reboot_async"], [743, 2, 1, "", "Sys_setAIOMode"], [743, 2, 1, "", "Sys_setAIOMode_async"], [743, 2, 1, "", "Sys_setDIMode"], [743, 2, 1, "", "Sys_setDIMode_async"], [743, 2, 1, "", "Sys_setDIOMode"], [743, 2, 1, "", "Sys_setDIOMode_async"], [743, 2, 1, "", "Sys_setDOMode"], [743, 2, 1, "", "Sys_setDOMode_async"], [743, 2, 1, "", "Sys_setIPAddrAndSubmask"], [743, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [743, 2, 1, "", "Sys_setIdleMode"], [743, 2, 1, "", "Sys_setIdleMode_async"], [743, 2, 1, "", "Sys_setMotionMode"], [743, 2, 1, "", "Sys_setMotionMode_async"], [743, 2, 1, "", "Sys_setRTC"], [743, 2, 1, "", "Sys_setRTC_async"], [743, 2, 1, "", "Sys_setSwitchMode"], [743, 2, 1, "", "Sys_setSwitchMode_async"], [743, 2, 1, "", "Wifi_getChargeStatus"], [743, 2, 1, "", "Wifi_getChargeStatus_async"], [743, 2, 1, "", "Wifi_getConfiguration"], [743, 2, 1, "", "Wifi_getConfiguration_async"], [743, 2, 1, "", "Wifi_getPowerGoodStatus"], [743, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [743, 2, 1, "", "Wifi_getWifiBandWidth"], [743, 2, 1, "", "Wifi_getWifiBandWidth_async"], [743, 2, 1, "", "Wifi_readBattery"], [743, 2, 1, "", "Wifi_readBattery_async"], [743, 2, 1, "", "Wifi_readRSSI"], [743, 2, 1, "", "Wifi_readRSSI_async"], [743, 2, 1, "", "Wifi_resetLED"], [743, 2, 1, "", "Wifi_resetLED_async"], [743, 2, 1, "", "Wifi_setBlueLED"], [743, 2, 1, "", "Wifi_setBlueLED_async"], [743, 2, 1, "", "Wifi_setGreenLED"], [743, 2, 1, "", "Wifi_setGreenLED_async"], [743, 2, 1, "", "Wifi_setRedLED"], [743, 2, 1, "", "Wifi_setRedLED_async"], [743, 2, 1, "", "close"], [743, 2, 1, "", "connect"], [743, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[744, 2, 1, "", "AI_close"], [744, 2, 1, "", "AI_close_async"], [744, 2, 1, "", "AI_enableCS"], [744, 2, 1, "", "AI_enableCS_async"], [744, 2, 1, "", "AI_enableChannel"], [744, 2, 1, "", "AI_enableChannel_async"], [744, 2, 1, "", "AI_getPort"], [744, 2, 1, "", "AI_open"], [744, 2, 1, "", "AI_open_async"], [744, 2, 1, "", "AI_readOnDemand"], [744, 2, 1, "", "AI_readOnDemand_async"], [744, 2, 1, "", "AI_readStreaming"], [744, 2, 1, "", "AI_readStreaming_async"], [744, 2, 1, "", "AI_setMode"], [744, 2, 1, "", "AI_setMode_async"], [744, 2, 1, "", "AI_setNumSamples"], [744, 2, 1, "", "AI_setNumSamples_async"], [744, 2, 1, "", "AI_setSamplingRate"], [744, 2, 1, "", "AI_setSamplingRate_async"], [744, 2, 1, "", "AI_start"], [744, 2, 1, "", "AI_start_async"], [744, 2, 1, "", "AI_stop"], [744, 2, 1, "", "AI_stop_async"], [744, 2, 1, "", "Logger_openFile"], [744, 2, 1, "", "Logger_write2DList"], [744, 2, 1, "", "Logger_writeHeader"], [744, 2, 1, "", "Logger_writeList"], [744, 2, 1, "", "Logger_writeValue"], [744, 2, 1, "", "Net_getGateway"], [744, 2, 1, "", "Net_getGateway_async"], [744, 2, 1, "", "Net_getIPAddrAndSubmask"], [744, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [744, 2, 1, "", "Net_getMACAddr"], [744, 2, 1, "", "Net_getMACAddr_async"], [744, 2, 1, "", "Net_setIPAddrAndSubmask"], [744, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [744, 2, 1, "", "Sys_getDriverInfo"], [744, 2, 1, "", "Sys_getDriverInfo_async"], [744, 2, 1, "", "Sys_getGateway"], [744, 2, 1, "", "Sys_getGateway_async"], [744, 2, 1, "", "Sys_getIPAddrAndSubmask"], [744, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [744, 2, 1, "", "Sys_getMACAddr"], [744, 2, 1, "", "Sys_getMACAddr_async"], [744, 2, 1, "", "Sys_getMode"], [744, 2, 1, "", "Sys_getMode_async"], [744, 2, 1, "", "Sys_getPinModeInPort"], [744, 2, 1, "", "Sys_getPinModeInPort_async"], [744, 2, 1, "", "Sys_getPythonVersion"], [744, 2, 1, "", "Sys_getPythonVersion_async"], [744, 2, 1, "", "Sys_getRTC"], [744, 2, 1, "", "Sys_getRTC_async"], [744, 2, 1, "", "Sys_getSerialNumber"], [744, 2, 1, "", "Sys_getSerialNumber_async"], [744, 2, 1, "", "Sys_reboot"], [744, 2, 1, "", "Sys_reboot_async"], [744, 2, 1, "", "Sys_setAIOMode"], [744, 2, 1, "", "Sys_setAIOMode_async"], [744, 2, 1, "", "Sys_setDIMode"], [744, 2, 1, "", "Sys_setDIMode_async"], [744, 2, 1, "", "Sys_setDIOMode"], [744, 2, 1, "", "Sys_setDIOMode_async"], [744, 2, 1, "", "Sys_setDOMode"], [744, 2, 1, "", "Sys_setDOMode_async"], [744, 2, 1, "", "Sys_setIPAddrAndSubmask"], [744, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [744, 2, 1, "", "Sys_setIdleMode"], [744, 2, 1, "", "Sys_setIdleMode_async"], [744, 2, 1, "", "Sys_setMotionMode"], [744, 2, 1, "", "Sys_setMotionMode_async"], [744, 2, 1, "", "Sys_setRTC"], [744, 2, 1, "", "Sys_setRTC_async"], [744, 2, 1, "", "Sys_setSwitchMode"], [744, 2, 1, "", "Sys_setSwitchMode_async"], [744, 2, 1, "", "Wifi_getChargeStatus"], [744, 2, 1, "", "Wifi_getChargeStatus_async"], [744, 2, 1, "", "Wifi_getConfiguration"], [744, 2, 1, "", "Wifi_getConfiguration_async"], [744, 2, 1, "", "Wifi_getPowerGoodStatus"], [744, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [744, 2, 1, "", "Wifi_getWifiBandWidth"], [744, 2, 1, "", "Wifi_getWifiBandWidth_async"], [744, 2, 1, "", "Wifi_readBattery"], [744, 2, 1, "", "Wifi_readBattery_async"], [744, 2, 1, "", "Wifi_readRSSI"], [744, 2, 1, "", "Wifi_readRSSI_async"], [744, 2, 1, "", "Wifi_resetLED"], [744, 2, 1, "", "Wifi_resetLED_async"], [744, 2, 1, "", "Wifi_setBlueLED"], [744, 2, 1, "", "Wifi_setBlueLED_async"], [744, 2, 1, "", "Wifi_setGreenLED"], [744, 2, 1, "", "Wifi_setGreenLED_async"], [744, 2, 1, "", "Wifi_setRedLED"], [744, 2, 1, "", "Wifi_setRedLED_async"], [744, 2, 1, "", "close"], [744, 2, 1, "", "connect"], [744, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 720], "architectur": [0, 720], "instal": [0, 720], "upgrad": [0, 720], "quick": [0, 720], "start": [0, 720], "refer": [0, 720, 749], "licens": [0, 720], "find": [1, 2, 3, 31, 32, 33, 398, 399, 400, 424, 425, 426, 749], "all": [1, 121, 132, 159, 163, 212, 216, 398, 486, 493, 512, 516, 557, 561], "devic": [1, 398, 712, 713, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "drive": [2, 3, 4, 5, 6, 7, 8, 9, 399, 400, 401, 402, 403, 404, 405, 406], "home": [2, 31, 399, 424], "limit": [3, 33, 400, 426], "posit": [4, 5, 34, 36, 401, 402, 427, 429], "blend": [4, 8, 36, 39, 40, 401, 405, 429, 432, 433], "move": [5, 6, 9, 18, 19, 20, 21, 22, 23, 24, 27, 30, 402, 403, 406, 411, 412, 413, 414, 415, 416, 417, 420, 423], "scan": [6, 403], "servo": [7, 38, 404, 431], "veloc": [8, 9, 39, 405, 406, 432], "acceler": [8, 40, 405, 433], "system": [10, 12, 41, 43, 55, 57, 70, 72, 84, 86, 93, 95, 102, 104, 112, 114, 123, 125, 134, 136, 142, 144, 171, 173, 196, 198, 227, 229, 250, 252, 271, 273, 289, 291, 308, 310, 332, 334, 351, 352, 354, 372, 373, 375, 388, 389, 391, 407, 409, 434, 436, 444, 446, 455, 457, 465, 467, 470, 472, 475, 477, 481, 483, 488, 490, 495, 497, 499, 501, 524, 526, 545, 547, 572, 574, 591, 593, 608, 610, 622, 624, 637, 639, 657, 659, 672, 673, 675, 689, 690, 692, 701, 702, 704, 717], "get": [10, 11, 13, 34, 41, 42, 44, 55, 56, 58, 70, 71, 73, 84, 85, 87, 93, 94, 96, 102, 103, 105, 112, 113, 115, 123, 124, 126, 134, 135, 137, 142, 143, 145, 171, 172, 174, 196, 197, 199, 227, 228, 230, 250, 251, 253, 271, 272, 274, 289, 290, 292, 308, 309, 311, 332, 333, 335, 351, 352, 353, 356, 372, 373, 374, 377, 388, 389, 390, 393, 407, 408, 410, 427, 434, 435, 437, 444, 445, 447, 455, 456, 458, 465, 466, 468, 470, 471, 473, 475, 476, 478, 481, 482, 484, 488, 489, 491, 495, 496, 498, 499, 500, 502, 524, 525, 527, 545, 546, 548, 572, 573, 575, 591, 592, 594, 608, 609, 611, 622, 623, 625, 637, 638, 640, 657, 658, 660, 672, 673, 674, 677, 689, 690, 691, 694, 701, 702, 703, 706], "network": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 712, 713], "info": [10, 41, 55, 70, 84, 93, 102, 112, 123, 134, 142, 171, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 495, 499, 524, 673, 690, 702, 713], "serial": [11, 42, 56, 71, 85, 94, 103, 113, 124, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 674, 691, 703], "number": [11, 42, 56, 71, 85, 94, 103, 113, 124, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 674, 691, 703], "hello": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "world": [12, 43, 57, 72, 86, 95, 104, 114, 125, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 375, 391, 409, 436, 446, 457, 467, 472, 477, 483, 490, 497, 501, 526, 547, 574, 593, 610, 624, 639, 659, 675, 692, 704], "set": [13, 44, 58, 73, 87, 96, 105, 111, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 355, 356, 376, 377, 392, 393, 410, 437, 447, 458, 468, 473, 478, 480, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 676, 677, 693, 694, 705, 706, 749], "rtc": [13, 44, 58, 73, 87, 96, 105, 115, 126, 137, 145, 174, 199, 230, 253, 274, 292, 311, 335, 356, 377, 393, 410, 437, 447, 458, 468, 473, 478, 484, 491, 498, 502, 527, 548, 575, 594, 611, 625, 640, 660, 677, 694, 706], "tutori": [14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 175, 176, 177, 178, 200, 201, 202, 203, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 357, 358, 359, 360, 378, 379, 380, 381, 394, 395, 396, 397], "multipl": [14, 15, 45, 46, 59, 60, 74, 75, 88, 89, 97, 98, 106, 107, 116, 117, 127, 128, 138, 139, 149, 150, 175, 176, 200, 201, 231, 232, 254, 255, 275, 276, 293, 294, 315, 316, 339, 340, 357, 358, 378, 379, 394, 395], "loop": [14, 15, 16, 17, 45, 46, 47, 48, 53, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 138, 139, 140, 141, 149, 150, 151, 152, 157, 175, 176, 177, 178, 183, 200, 201, 202, 203, 210, 231, 232, 233, 234, 254, 255, 256, 257, 275, 276, 277, 278, 293, 294, 295, 296, 315, 316, 317, 318, 339, 340, 341, 342, 349, 357, 358, 359, 360, 370, 378, 379, 380, 381, 386, 394, 395, 396, 397, 442, 510, 532, 555, 670, 687, 699], "async": [14, 16, 27, 45, 47, 59, 61, 74, 76, 88, 90, 97, 99, 106, 108, 116, 118, 127, 129, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396, 420, 718], "thread": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 139, 141, 150, 152, 176, 178, 201, 203, 232, 234, 255, 257, 276, 278, 294, 296, 316, 318, 340, 342, 358, 360, 379, 381, 395, 397], "singl": [16, 17, 47, 48, 61, 62, 76, 77, 90, 91, 99, 100, 108, 109, 118, 119, 129, 130, 140, 141, 151, 152, 177, 178, 202, 203, 233, 234, 256, 257, 277, 278, 295, 296, 317, 318, 341, 342, 359, 360, 380, 381, 396, 397], "motion": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 749], "1axi": [18, 19, 20, 21, 22, 23, 24, 411, 412, 413, 414, 415, 416, 417], "scurv": [19, 412], "alarm": [20, 413], "breakpoint": [21, 414], "captur": [22, 415, 749], "config": [23, 35, 37, 416, 428, 430], "file": [23, 35, 37, 416, 428, 430], "inposit": [24, 417], "2axi": [25, 26, 418, 419], "circular": [25, 418], "interpo": [25, 26, 28, 29, 418, 419, 421, 422], "linear": [26, 29, 419, 422], "3axi": [27, 28, 29, 30, 420, 421, 422, 423], "helic": [28, 421], "sync": [30, 423, 717, 719], "index": [32, 425], "logic": [34, 427], "load": [35, 428], "save": [37, 430], "ai": [49, 50, 51, 52, 53, 54, 92, 101, 153, 154, 155, 156, 157, 158, 161, 179, 180, 181, 182, 183, 184, 206, 207, 208, 209, 210, 211, 214, 345, 346, 347, 348, 349, 350, 366, 367, 368, 369, 370, 371, 382, 383, 384, 385, 386, 387, 438, 439, 440, 441, 442, 443, 469, 474, 506, 507, 508, 509, 510, 511, 514, 528, 529, 530, 531, 532, 533, 551, 552, 553, 554, 555, 556, 559, 666, 667, 668, 669, 670, 671, 683, 684, 685, 686, 687, 688, 695, 696, 697, 698, 699, 700, 707, 717, 746, 749], "n": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695], "sampl": [49, 153, 179, 206, 345, 366, 382, 438, 506, 528, 551, 666, 683, 695, 746], "onc": [49, 54, 92, 101, 153, 158, 179, 184, 206, 211, 345, 350, 366, 371, 382, 387, 438, 443, 469, 474, 506, 511, 528, 533, 551, 556, 666, 671, 683, 688, 695, 700], "continu": [50, 51, 52, 154, 155, 156, 180, 181, 182, 207, 208, 209, 346, 347, 348, 367, 368, 369, 383, 384, 385, 439, 440, 441, 507, 508, 509, 529, 530, 531, 552, 553, 554, 667, 668, 669, 684, 685, 686, 696, 697, 698], "multi": [51, 155, 181, 208, 347, 368, 384, 440, 508, 530, 553, 668, 685, 697], "slot": [51, 155, 181, 208, 347, 368, 384, 440, 508, 530, 553, 668, 685, 697], "logger": [52, 147, 156, 182, 209, 313, 337, 348, 369, 385, 441, 504, 509, 531, 554, 642, 662, 669, 686, 698], "demand": [53, 54, 92, 101, 157, 158, 183, 184, 210, 211, 349, 350, 370, 371, 386, 387, 442, 443, 469, 474, 510, 511, 532, 533, 555, 556, 670, 671, 687, 688, 699, 700], "dio": [63, 64, 78, 79, 165, 166, 186, 187, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "loopback": [63, 64, 78, 79, 159, 160, 165, 166, 186, 187, 212, 213, 219, 220, 240, 241, 261, 262, 282, 283, 298, 299, 322, 323, 448, 449, 459, 460, 512, 513, 518, 519, 535, 536, 557, 558, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "pin": [63, 65, 67, 78, 80, 82, 165, 167, 169, 186, 188, 190, 196, 219, 221, 223, 227, 240, 242, 244, 250, 261, 263, 265, 271, 282, 284, 286, 289, 298, 300, 302, 308, 322, 324, 326, 332, 448, 450, 452, 459, 461, 463, 518, 520, 522, 535, 537, 539, 545, 564, 566, 568, 572, 581, 583, 585, 591, 598, 600, 602, 608, 615, 617, 619, 622, 627, 629, 631, 637, 647, 649, 651, 657], "port": [64, 66, 68, 79, 81, 83, 166, 168, 170, 187, 189, 191, 220, 222, 224, 241, 243, 245, 262, 264, 266, 283, 285, 287, 299, 301, 303, 323, 325, 327, 449, 451, 453, 460, 462, 464, 519, 521, 523, 536, 538, 540, 565, 567, 569, 582, 584, 586, 599, 601, 603, 616, 618, 620, 628, 630, 632, 648, 650, 652, 750], "do": [65, 66, 67, 68, 80, 81, 82, 83, 167, 168, 169, 170, 188, 189, 190, 191, 221, 222, 223, 224, 242, 243, 244, 245, 263, 264, 265, 266, 284, 285, 286, 287, 300, 301, 302, 303, 324, 325, 326, 327, 450, 451, 452, 453, 461, 462, 463, 464, 520, 521, 522, 523, 537, 538, 539, 540, 566, 567, 568, 569, 583, 584, 585, 586, 600, 601, 602, 603, 617, 618, 619, 620, 629, 630, 631, 632, 649, 650, 651, 652, 709, 717], "blinki": [65, 66, 80, 81, 167, 168, 188, 189, 221, 222, 242, 243, 263, 264, 284, 285, 300, 301, 324, 325, 450, 451, 461, 462, 520, 521, 537, 538, 566, 567, 583, 584, 600, 601, 617, 618, 629, 630, 649, 650], "write": [67, 68, 82, 83, 121, 122, 132, 133, 163, 164, 169, 170, 190, 191, 192, 194, 195, 205, 216, 217, 223, 224, 225, 236, 238, 244, 245, 246, 248, 249, 259, 265, 266, 267, 269, 270, 280, 286, 287, 302, 303, 304, 306, 307, 320, 326, 327, 328, 330, 331, 344, 452, 453, 463, 464, 486, 487, 493, 494, 516, 517, 522, 523, 539, 540, 541, 543, 544, 550, 561, 562, 568, 569, 570, 577, 579, 585, 586, 587, 589, 590, 596, 602, 603, 604, 606, 607, 613, 619, 620, 631, 632, 633, 635, 636, 645, 651, 652, 653, 655, 656, 665], "pwm": [69, 193, 226, 247, 268, 288, 305, 329, 454, 542, 571, 588, 605, 621, 634, 654], "gener": [69, 120, 162, 193, 215, 226, 247, 268, 288, 305, 329, 454, 485, 515, 542, 560, 571, 588, 605, 621, 634, 654], "relai": [110, 111, 479, 480], "read": [110, 131, 146, 147, 148, 185, 192, 194, 204, 218, 225, 235, 237, 239, 246, 248, 258, 260, 267, 269, 279, 281, 297, 304, 306, 312, 313, 314, 319, 321, 328, 330, 336, 337, 338, 343, 479, 492, 503, 504, 505, 534, 541, 543, 549, 563, 570, 576, 578, 580, 587, 589, 595, 597, 604, 606, 612, 614, 626, 633, 635, 641, 642, 643, 644, 646, 653, 655, 661, 662, 663, 664], "counter": [110, 185, 218, 239, 260, 281, 297, 321, 479, 534, 563, 580, 597, 614, 626, 646], "channel": [111, 121, 122, 131, 132, 133, 146, 147, 148, 159, 160, 163, 164, 212, 213, 216, 217, 312, 313, 314, 336, 337, 338, 480, 486, 487, 492, 493, 494, 503, 504, 505, 512, 513, 516, 517, 557, 558, 561, 562, 641, 642, 643, 661, 662, 663, 747, 749], "ao": [120, 121, 122, 161, 162, 163, 164, 214, 215, 216, 217, 485, 486, 487, 514, 515, 516, 517, 559, 560, 561, 562, 708, 717, 749], "waveform": [120, 162, 215, 485, 515, 560], "one": [122, 160, 164, 213, 217, 487, 513, 517, 558, 562], "dpot": [131, 132, 133, 492, 493, 494], "tc": [146, 147, 148, 336, 337, 338, 503, 504, 505, 661, 662, 663, 715, 717], "data": [146, 147, 312, 313, 336, 337, 503, 504, 641, 642, 661, 662, 749], "statu": [148, 314, 338, 351, 355, 372, 376, 388, 392, 505, 643, 663, 672, 676, 689, 693, 701, 705], "aio": [159, 160, 212, 213, 512, 513, 557, 558], "output": [161, 214, 514, 559, 749], "while": [161, 214, 514, 559], "stream": [161, 214, 514, 559], "i2c": [192, 225, 246, 267, 304, 328, 541, 570, 587, 604, 633, 653, 710, 717, 749], "spi": [194, 195, 248, 249, 269, 270, 306, 307, 330, 331, 543, 544, 589, 590, 606, 607, 635, 636, 655, 656, 711, 717, 749], "mode": [196, 227, 250, 271, 289, 308, 332, 545, 572, 591, 608, 622, 637, 657, 749], "uart": [204, 205, 235, 236, 258, 259, 279, 280, 319, 320, 343, 344, 549, 550, 576, 577, 595, 596, 612, 613, 644, 645, 664, 665, 716, 717, 749], "can": [237, 238, 578, 579, 749], "rtd": [312, 313, 314, 641, 642, 643, 714, 717], "wifi": [351, 372, 388, 672, 689, 701, 718, 719, 721, 742, 743, 744], "daq": [351, 372, 388, 672, 689, 701, 718, 719, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "led": [355, 376, 392, 676, 693, 705], "ahr": [361, 362, 363, 364, 365, 678, 679, 680, 681, 682], "getacceler": [361, 678], "getangularveloc": [362, 679], "getestim": [363, 680], "getorient": [364, 681], "visual": [365, 682], "test": [707, 708, 709, 710, 711, 714, 715, 716], "panel": [707, 708, 709, 710, 711, 714, 715, 716], "finder": [712, 718, 719, 722], "center": 713, "exampl": [717, 718, 719], "code": [717, 718, 719, 748], "gui": 717, "temperatur": 717, "consol": [718, 719], "stem": [718, 719, 734], "edriv": [718, 719, 723], "st": [718, 719, 723], "emot": [718, 719, 724], "ethan": [718, 719, 725, 726, 727, 728, 729, 730, 731, 732, 733], "A": [718, 719, 725, 742, 744], "d": [718, 719, 726, 727, 738, 739], "ex": [718, 719, 727], "i": [718, 719, 728, 747, 750], "ia": [718, 719, 729], "l": [718, 719, 730], "o": [718, 719, 731, 747, 750], "p": [718, 719, 732], "t": [718, 719, 733], "usb": [718, 719, 721, 735, 736, 737, 738, 739, 740, 741], "f1": [718, 719, 735, 736, 737, 738, 739, 740, 741], "ad": [718, 719, 735], "aod": [718, 719, 736], "cd": [718, 719, 737], "snk": [718, 719, 739], "rd": [718, 719, 740], "td": [718, 719, 741], "e3": [718, 719, 742, 743], "ah": [718, 719, 743], "f4": [718, 719, 744], "product": [721, 745], "usag": 721, "util": 721, "ethernet": 721, "api": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "function": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 750], "descript": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "pinout": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "featur": 745, "max": 746, "rate": 746, "tabl": [746, 747, 748, 749, 750], "error": 748, "form": 749, "speed": 749, "type": 749, "address": 749, "direct": 749, "enabl": 749, "oper": 749, "polar": 749, "search": 749, "stepper": 749, "stop": 749, "clock": 749, "size": 749, "endian": 749, "thermal": 749, "oversampl": 749, "pariti": 749, "bit": 749}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Overview": [[0, "overview"], [720, "overview"]], "Architecture": [[0, "architecture"], [720, "architecture"]], "Install and Upgrade": [[0, "install-and-upgrade"], [720, "install-and-upgrade"]], "Quick Start": [[0, "quick-start"], [720, "quick-start"]], "References": [[0, "references"], [720, "references"]], "License": [[0, "license"], [720, "license"]], "Find all devices": [[1, "find-all-devices"], [398, "find-all-devices"]], "Drive find home": [[2, "drive-find-home"], [399, "drive-find-home"]], "Drive find limit": [[3, "drive-find-limit"], [400, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [401, "drive-position-blending"]], "Drive position move": [[5, "drive-position-move"], [402, "drive-position-move"]], "Drive scan move": [[6, "drive-scan-move"], [403, "drive-scan-move"]], "Drive servo on": [[7, "drive-servo-on"], [404, "drive-servo-on"]], "Drive velocity blending acceleration": [[8, "drive-velocity-blending-acceleration"], [405, "drive-velocity-blending-acceleration"]], "Drive velocity move": [[9, "drive-velocity-move"], [406, "drive-velocity-move"]], "System get network info": [[10, "system-get-network-info"], [41, "system-get-network-info"], [55, "system-get-network-info"], [70, "system-get-network-info"], [84, "system-get-network-info"], [93, "system-get-network-info"], [102, "system-get-network-info"], [112, "system-get-network-info"], [123, "system-get-network-info"], [134, "system-get-network-info"], [142, "system-get-network-info"], [171, "system-get-network-info"], [352, "system-get-network-info"], [373, "system-get-network-info"], [389, "system-get-network-info"], [407, "system-get-network-info"], [434, "system-get-network-info"], [444, "system-get-network-info"], [455, "system-get-network-info"], [465, "system-get-network-info"], [470, "system-get-network-info"], [475, "system-get-network-info"], [481, "system-get-network-info"], [488, "system-get-network-info"], [495, "system-get-network-info"], [499, "system-get-network-info"], [524, "system-get-network-info"], [673, "system-get-network-info"], [690, "system-get-network-info"], [702, "system-get-network-info"]], "Get serial number": [[11, "get-serial-number"], [42, "get-serial-number"], [56, "get-serial-number"], [71, "get-serial-number"], [85, "get-serial-number"], [94, "get-serial-number"], [103, "get-serial-number"], [113, "get-serial-number"], [124, "get-serial-number"], [135, "get-serial-number"], [143, "get-serial-number"], [172, "get-serial-number"], [197, "get-serial-number"], [228, "get-serial-number"], [251, "get-serial-number"], [272, "get-serial-number"], [290, "get-serial-number"], [309, "get-serial-number"], [333, "get-serial-number"], [353, "get-serial-number"], [374, "get-serial-number"], [390, "get-serial-number"], [408, "get-serial-number"], [435, "get-serial-number"], [445, "get-serial-number"], [456, "get-serial-number"], [466, "get-serial-number"], [471, "get-serial-number"], [476, "get-serial-number"], [482, "get-serial-number"], [489, "get-serial-number"], [496, "get-serial-number"], [500, "get-serial-number"], [525, "get-serial-number"], [546, "get-serial-number"], [573, "get-serial-number"], [592, "get-serial-number"], [609, "get-serial-number"], [623, "get-serial-number"], [638, "get-serial-number"], [658, "get-serial-number"], [674, "get-serial-number"], [691, "get-serial-number"], [703, "get-serial-number"]], "System hello world": [[12, "system-hello-world"], [43, "system-hello-world"], [57, "system-hello-world"], [72, "system-hello-world"], [86, "system-hello-world"], [95, "system-hello-world"], [104, "system-hello-world"], [114, "system-hello-world"], [125, "system-hello-world"], [136, "system-hello-world"], [144, "system-hello-world"], [173, "system-hello-world"], [198, "system-hello-world"], [229, "system-hello-world"], [252, "system-hello-world"], [273, "system-hello-world"], [291, "system-hello-world"], [310, "system-hello-world"], [334, "system-hello-world"], [354, "system-hello-world"], [375, "system-hello-world"], [391, "system-hello-world"], [409, "system-hello-world"], [436, "system-hello-world"], [446, "system-hello-world"], [457, "system-hello-world"], [467, "system-hello-world"], [472, "system-hello-world"], [477, "system-hello-world"], [483, "system-hello-world"], [490, "system-hello-world"], [497, "system-hello-world"], [501, "system-hello-world"], [526, "system-hello-world"], [547, "system-hello-world"], [574, "system-hello-world"], [593, "system-hello-world"], [610, "system-hello-world"], [624, "system-hello-world"], [639, "system-hello-world"], [659, "system-hello-world"], [675, "system-hello-world"], [692, "system-hello-world"], [704, "system-hello-world"]], "Set and get RTC": [[13, "set-and-get-rtc"], [44, "set-and-get-rtc"], [58, "set-and-get-rtc"], [73, "set-and-get-rtc"], [87, "set-and-get-rtc"], [96, "set-and-get-rtc"], [105, "set-and-get-rtc"], [115, "set-and-get-rtc"], [126, "set-and-get-rtc"], [137, "set-and-get-rtc"], [145, "set-and-get-rtc"], [174, "set-and-get-rtc"], [199, "set-and-get-rtc"], [230, "set-and-get-rtc"], [253, "set-and-get-rtc"], [274, "set-and-get-rtc"], [292, "set-and-get-rtc"], [311, "set-and-get-rtc"], [335, "set-and-get-rtc"], [356, "set-and-get-rtc"], [377, "set-and-get-rtc"], [393, "set-and-get-rtc"], [410, "set-and-get-rtc"], [437, "set-and-get-rtc"], [447, "set-and-get-rtc"], [458, "set-and-get-rtc"], [468, "set-and-get-rtc"], [473, "set-and-get-rtc"], [478, "set-and-get-rtc"], [484, "set-and-get-rtc"], [491, "set-and-get-rtc"], [498, "set-and-get-rtc"], [502, "set-and-get-rtc"], [527, "set-and-get-rtc"], [548, "set-and-get-rtc"], [575, "set-and-get-rtc"], [594, "set-and-get-rtc"], [611, "set-and-get-rtc"], [625, "set-and-get-rtc"], [640, "set-and-get-rtc"], [660, "set-and-get-rtc"], [677, "set-and-get-rtc"], [694, "set-and-get-rtc"], [706, "set-and-get-rtc"]], "Tutorial multiple loops async": [[14, "tutorial-multiple-loops-async"], [45, "tutorial-multiple-loops-async"], [59, "tutorial-multiple-loops-async"], [74, "tutorial-multiple-loops-async"], [88, "tutorial-multiple-loops-async"], [97, "tutorial-multiple-loops-async"], [106, "tutorial-multiple-loops-async"], [116, "tutorial-multiple-loops-async"], [127, "tutorial-multiple-loops-async"], [138, "tutorial-multiple-loops-async"], [149, "tutorial-multiple-loops-async"], [175, "tutorial-multiple-loops-async"], [200, "tutorial-multiple-loops-async"], [231, "tutorial-multiple-loops-async"], [254, "tutorial-multiple-loops-async"], [275, "tutorial-multiple-loops-async"], [293, "tutorial-multiple-loops-async"], [315, "tutorial-multiple-loops-async"], [339, "tutorial-multiple-loops-async"], [357, "tutorial-multiple-loops-async"], [378, "tutorial-multiple-loops-async"], [394, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[15, "tutorial-multiple-loops-thread"], [46, "tutorial-multiple-loops-thread"], [60, "tutorial-multiple-loops-thread"], [75, "tutorial-multiple-loops-thread"], [89, "tutorial-multiple-loops-thread"], [98, "tutorial-multiple-loops-thread"], [107, "tutorial-multiple-loops-thread"], [117, "tutorial-multiple-loops-thread"], [128, "tutorial-multiple-loops-thread"], [139, "tutorial-multiple-loops-thread"], [150, "tutorial-multiple-loops-thread"], [176, "tutorial-multiple-loops-thread"], [201, "tutorial-multiple-loops-thread"], [232, "tutorial-multiple-loops-thread"], [255, "tutorial-multiple-loops-thread"], [276, "tutorial-multiple-loops-thread"], [294, "tutorial-multiple-loops-thread"], [316, "tutorial-multiple-loops-thread"], [340, "tutorial-multiple-loops-thread"], [358, "tutorial-multiple-loops-thread"], [379, "tutorial-multiple-loops-thread"], [395, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[16, "tutorial-single-loop-async"], [47, "tutorial-single-loop-async"], [61, "tutorial-single-loop-async"], [76, "tutorial-single-loop-async"], [90, "tutorial-single-loop-async"], [99, "tutorial-single-loop-async"], [108, "tutorial-single-loop-async"], [118, "tutorial-single-loop-async"], [129, "tutorial-single-loop-async"], [140, "tutorial-single-loop-async"], [151, "tutorial-single-loop-async"], [177, "tutorial-single-loop-async"], [202, "tutorial-single-loop-async"], [233, "tutorial-single-loop-async"], [256, "tutorial-single-loop-async"], [277, "tutorial-single-loop-async"], [295, "tutorial-single-loop-async"], [317, "tutorial-single-loop-async"], [341, "tutorial-single-loop-async"], [359, "tutorial-single-loop-async"], [380, "tutorial-single-loop-async"], [396, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[17, "tutorial-single-loop-thread"], [48, "tutorial-single-loop-thread"], [62, "tutorial-single-loop-thread"], [77, "tutorial-single-loop-thread"], [91, "tutorial-single-loop-thread"], [100, "tutorial-single-loop-thread"], [109, "tutorial-single-loop-thread"], [119, "tutorial-single-loop-thread"], [130, "tutorial-single-loop-thread"], [141, "tutorial-single-loop-thread"], [152, "tutorial-single-loop-thread"], [178, "tutorial-single-loop-thread"], [203, "tutorial-single-loop-thread"], [234, "tutorial-single-loop-thread"], [257, "tutorial-single-loop-thread"], [278, "tutorial-single-loop-thread"], [296, "tutorial-single-loop-thread"], [318, "tutorial-single-loop-thread"], [342, "tutorial-single-loop-thread"], [360, "tutorial-single-loop-thread"], [381, "tutorial-single-loop-thread"], [397, "tutorial-single-loop-thread"]], "Motion 1axis move": [[18, "motion-1axis-move"], [411, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[19, "motion-1axis-move-with-scurve"], [412, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[20, "motion-1axis-move-with-alarm-in"], [413, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[21, "motion-1axis-move-with-breakpoint"], [414, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[22, "motion-1axis-move-with-capture"], [415, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[23, "motion-1axis-move-with-config-file"], [416, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[24, "motion-1axis-move-with-inposition"], [417, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[25, "motion-2axis-circular-interpo"], [418, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[26, "motion-2axis-linear-interpo"], [419, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[27, "motion-3axis-async-move"], [420, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[28, "motion-3axis-helical-interpo"], [421, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[29, "motion-3axis-linear-interpo"], [422, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[30, "motion-3axis-sync-move"], [423, "motion-3axis-sync-move"]], "Motion find home": [[31, "motion-find-home"], [424, "motion-find-home"]], "Motion find index": [[32, "motion-find-index"], [425, "motion-find-index"]], "Motion find limit": [[33, "motion-find-limit"], [426, "motion-find-limit"]], "Motion get logical position": [[34, "motion-get-logical-position"], [427, "motion-get-logical-position"]], "Motion load config file": [[35, "motion-load-config-file"], [428, "motion-load-config-file"]], "Motion position blending": [[36, "motion-position-blending"], [429, "motion-position-blending"]], "Motion save config file": [[37, "motion-save-config-file"], [430, "motion-save-config-file"]], "Motion servo on": [[38, "motion-servo-on"], [431, "motion-servo-on"]], "Motion velocity blending": [[39, "motion-velocity-blending"], [432, "motion-velocity-blending"]], "Motion acceleration blending": [[40, "motion-acceleration-blending"], [433, "motion-acceleration-blending"]], "AI N samples once": [[49, "ai-n-samples-once"], [153, "ai-n-samples-once"], [179, "ai-n-samples-once"], [206, "ai-n-samples-once"], [345, "ai-n-samples-once"], [366, "ai-n-samples-once"], [382, "ai-n-samples-once"], [438, "ai-n-samples-once"], [506, "ai-n-samples-once"], [528, "ai-n-samples-once"], [551, "ai-n-samples-once"], [666, "ai-n-samples-once"], [683, "ai-n-samples-once"], [695, "ai-n-samples-once"]], "AI continuous": [[50, "ai-continuous"], [154, "ai-continuous"], [180, "ai-continuous"], [207, "ai-continuous"], [346, "ai-continuous"], [367, "ai-continuous"], [383, "ai-continuous"], [439, "ai-continuous"], [507, "ai-continuous"], [529, "ai-continuous"], [552, "ai-continuous"], [667, "ai-continuous"], [684, "ai-continuous"], [696, "ai-continuous"]], "AI continuous multi slot": [[51, "ai-continuous-multi-slot"], [155, "ai-continuous-multi-slot"], [181, "ai-continuous-multi-slot"], [208, "ai-continuous-multi-slot"], [347, "ai-continuous-multi-slot"], [368, "ai-continuous-multi-slot"], [384, "ai-continuous-multi-slot"], [440, "ai-continuous-multi-slot"], [508, "ai-continuous-multi-slot"], [530, "ai-continuous-multi-slot"], [553, "ai-continuous-multi-slot"], [668, "ai-continuous-multi-slot"], [685, "ai-continuous-multi-slot"], [697, "ai-continuous-multi-slot"]], "AI continuous with logger": [[52, "ai-continuous-with-logger"], [156, "ai-continuous-with-logger"], [182, "ai-continuous-with-logger"], [209, "ai-continuous-with-logger"], [348, "ai-continuous-with-logger"], [369, "ai-continuous-with-logger"], [385, "ai-continuous-with-logger"], [441, "ai-continuous-with-logger"], [509, "ai-continuous-with-logger"], [531, "ai-continuous-with-logger"], [554, "ai-continuous-with-logger"], [669, "ai-continuous-with-logger"], [686, "ai-continuous-with-logger"], [698, "ai-continuous-with-logger"]], "AI on demand in loop": [[53, "ai-on-demand-in-loop"], [157, "ai-on-demand-in-loop"], [183, "ai-on-demand-in-loop"], [210, "ai-on-demand-in-loop"], [349, "ai-on-demand-in-loop"], [370, "ai-on-demand-in-loop"], [386, "ai-on-demand-in-loop"], [442, "ai-on-demand-in-loop"], [510, "ai-on-demand-in-loop"], [532, "ai-on-demand-in-loop"], [555, "ai-on-demand-in-loop"], [670, "ai-on-demand-in-loop"], [687, "ai-on-demand-in-loop"], [699, "ai-on-demand-in-loop"]], "AI on demand once": [[54, "ai-on-demand-once"], [92, "ai-on-demand-once"], [101, "ai-on-demand-once"], [158, "ai-on-demand-once"], [184, "ai-on-demand-once"], [211, "ai-on-demand-once"], [350, "ai-on-demand-once"], [371, "ai-on-demand-once"], [387, "ai-on-demand-once"], [443, "ai-on-demand-once"], [469, "ai-on-demand-once"], [474, "ai-on-demand-once"], [511, "ai-on-demand-once"], [533, "ai-on-demand-once"], [556, "ai-on-demand-once"], [671, "ai-on-demand-once"], [688, "ai-on-demand-once"], [700, "ai-on-demand-once"]], "DIO loopback pins": [[63, "dio-loopback-pins"], [78, "dio-loopback-pins"], [165, "dio-loopback-pins"], [186, "dio-loopback-pins"], [219, "dio-loopback-pins"], [240, "dio-loopback-pins"], [261, "dio-loopback-pins"], [282, "dio-loopback-pins"], [298, "dio-loopback-pins"], [322, "dio-loopback-pins"], [448, "dio-loopback-pins"], [459, "dio-loopback-pins"], [518, "dio-loopback-pins"], [535, "dio-loopback-pins"], [564, "dio-loopback-pins"], [581, "dio-loopback-pins"], [598, "dio-loopback-pins"], [615, "dio-loopback-pins"], [627, "dio-loopback-pins"], [647, "dio-loopback-pins"]], "DIO loopback port": [[64, "dio-loopback-port"], [79, "dio-loopback-port"], [166, "dio-loopback-port"], [187, "dio-loopback-port"], [220, "dio-loopback-port"], [241, "dio-loopback-port"], [262, "dio-loopback-port"], [283, "dio-loopback-port"], [299, "dio-loopback-port"], [323, "dio-loopback-port"], [449, "dio-loopback-port"], [460, "dio-loopback-port"], [519, "dio-loopback-port"], [536, "dio-loopback-port"], [565, "dio-loopback-port"], [582, "dio-loopback-port"], [599, "dio-loopback-port"], [616, "dio-loopback-port"], [628, "dio-loopback-port"], [648, "dio-loopback-port"]], "DO blinky pins": [[65, "do-blinky-pins"], [80, "do-blinky-pins"], [167, "do-blinky-pins"], [188, "do-blinky-pins"], [221, "do-blinky-pins"], [242, "do-blinky-pins"], [263, "do-blinky-pins"], [284, "do-blinky-pins"], [300, "do-blinky-pins"], [324, "do-blinky-pins"], [450, "do-blinky-pins"], [461, "do-blinky-pins"], [520, "do-blinky-pins"], [537, "do-blinky-pins"], [566, "do-blinky-pins"], [583, "do-blinky-pins"], [600, "do-blinky-pins"], [617, "do-blinky-pins"], [629, "do-blinky-pins"], [649, "do-blinky-pins"]], "DO blinky port": [[66, "do-blinky-port"], [81, "do-blinky-port"], [168, "do-blinky-port"], [189, "do-blinky-port"], [222, "do-blinky-port"], [243, "do-blinky-port"], [264, "do-blinky-port"], [285, "do-blinky-port"], [301, "do-blinky-port"], [325, "do-blinky-port"], [451, "do-blinky-port"], [462, "do-blinky-port"], [521, "do-blinky-port"], [538, "do-blinky-port"], [567, "do-blinky-port"], [584, "do-blinky-port"], [601, "do-blinky-port"], [618, "do-blinky-port"], [630, "do-blinky-port"], [650, "do-blinky-port"]], "DO write pins": [[67, "do-write-pins"], [82, "do-write-pins"], [169, "do-write-pins"], [190, "do-write-pins"], [223, "do-write-pins"], [244, "do-write-pins"], [265, "do-write-pins"], [286, "do-write-pins"], [302, "do-write-pins"], [326, "do-write-pins"], [452, "do-write-pins"], [463, "do-write-pins"], [522, "do-write-pins"], [539, "do-write-pins"], [568, "do-write-pins"], [585, "do-write-pins"], [602, "do-write-pins"], [619, "do-write-pins"], [631, "do-write-pins"], [651, "do-write-pins"]], "DO write port": [[68, "do-write-port"], [83, "do-write-port"], [170, "do-write-port"], [191, "do-write-port"], [224, "do-write-port"], [245, "do-write-port"], [266, "do-write-port"], [287, "do-write-port"], [303, "do-write-port"], [327, "do-write-port"], [453, "do-write-port"], [464, "do-write-port"], [523, "do-write-port"], [540, "do-write-port"], [569, "do-write-port"], [586, "do-write-port"], [603, "do-write-port"], [620, "do-write-port"], [632, "do-write-port"], [652, "do-write-port"]], "PWM generate": [[69, "pwm-generate"], [193, "pwm-generate"], [226, "pwm-generate"], [247, "pwm-generate"], [268, "pwm-generate"], [288, "pwm-generate"], [305, "pwm-generate"], [329, "pwm-generate"], [454, "pwm-generate"], [542, "pwm-generate"], [571, "pwm-generate"], [588, "pwm-generate"], [605, "pwm-generate"], [621, "pwm-generate"], [634, "pwm-generate"], [654, "pwm-generate"]], "Relay read counters": [[110, "relay-read-counters"], [479, "relay-read-counters"]], "Relay set channel": [[111, "relay-set-channel"], [480, "relay-set-channel"]], "AO waveform generation": [[120, "ao-waveform-generation"], [162, "ao-waveform-generation"], [215, "ao-waveform-generation"], [485, "ao-waveform-generation"], [515, "ao-waveform-generation"], [560, "ao-waveform-generation"]], "AO write all channels": [[121, "ao-write-all-channels"], [163, "ao-write-all-channels"], [216, "ao-write-all-channels"], [486, "ao-write-all-channels"], [516, "ao-write-all-channels"], [561, "ao-write-all-channels"]], "AO write one channel": [[122, "ao-write-one-channel"], [164, "ao-write-one-channel"], [217, "ao-write-one-channel"], [487, "ao-write-one-channel"], [517, "ao-write-one-channel"], [562, "ao-write-one-channel"]], "DPOT read by channel": [[131, "dpot-read-by-channel"], [492, "dpot-read-by-channel"]], "DPOT write all channels": [[132, "dpot-write-all-channels"], [493, "dpot-write-all-channels"]], "DPOT write by channel": [[133, "dpot-write-by-channel"], [494, "dpot-write-by-channel"]], "TC read channel data": [[146, "tc-read-channel-data"], [336, "tc-read-channel-data"], [503, "tc-read-channel-data"], [661, "tc-read-channel-data"]], "TC read channel data with logger": [[147, "tc-read-channel-data-with-logger"], [337, "tc-read-channel-data-with-logger"], [504, "tc-read-channel-data-with-logger"], [662, "tc-read-channel-data-with-logger"]], "TC read channel status": [[148, "tc-read-channel-status"], [338, "tc-read-channel-status"], [505, "tc-read-channel-status"], [663, "tc-read-channel-status"]], "AIO all channels loopback": [[159, "aio-all-channels-loopback"], [212, "aio-all-channels-loopback"], [512, "aio-all-channels-loopback"], [557, "aio-all-channels-loopback"]], "AIO one channel loopback": [[160, "aio-one-channel-loopback"], [213, "aio-one-channel-loopback"], [513, "aio-one-channel-loopback"], [558, "aio-one-channel-loopback"]], "AO output while AI streaming": [[161, "ao-output-while-ai-streaming"], [214, "ao-output-while-ai-streaming"], [514, "ao-output-while-ai-streaming"], [559, "ao-output-while-ai-streaming"]], "Counter read": [[185, "counter-read"], [218, "counter-read"], [239, "counter-read"], [260, "counter-read"], [281, "counter-read"], [297, "counter-read"], [321, "counter-read"], [534, "counter-read"], [563, "counter-read"], [580, "counter-read"], [597, "counter-read"], [614, "counter-read"], [626, "counter-read"], [646, "counter-read"]], "I2C write and read": [[192, "i2c-write-and-read"], [225, "i2c-write-and-read"], [246, "i2c-write-and-read"], [267, "i2c-write-and-read"], [304, "i2c-write-and-read"], [328, "i2c-write-and-read"], [541, "i2c-write-and-read"], [570, "i2c-write-and-read"], [587, "i2c-write-and-read"], [604, "i2c-write-and-read"], [633, "i2c-write-and-read"], [653, "i2c-write-and-read"]], "SPI read and write": [[194, "spi-read-and-write"], [248, "spi-read-and-write"], [269, "spi-read-and-write"], [306, "spi-read-and-write"], [330, "spi-read-and-write"], [543, "spi-read-and-write"], [589, "spi-read-and-write"], [606, "spi-read-and-write"], [635, "spi-read-and-write"], [655, "spi-read-and-write"]], "SPI write": [[195, "spi-write"], [249, "spi-write"], [270, "spi-write"], [307, "spi-write"], [331, "spi-write"], [544, "spi-write"], [590, "spi-write"], [607, "spi-write"], [636, "spi-write"], [656, "spi-write"]], "System get pin mode": [[196, "system-get-pin-mode"], [227, "system-get-pin-mode"], [250, "system-get-pin-mode"], [271, "system-get-pin-mode"], [289, "system-get-pin-mode"], [308, "system-get-pin-mode"], [332, "system-get-pin-mode"], [545, "system-get-pin-mode"], [572, "system-get-pin-mode"], [591, "system-get-pin-mode"], [608, "system-get-pin-mode"], [622, "system-get-pin-mode"], [637, "system-get-pin-mode"], [657, "system-get-pin-mode"]], "UART read": [[204, "uart-read"], [235, "uart-read"], [258, "uart-read"], [279, "uart-read"], [319, "uart-read"], [343, "uart-read"], [549, "uart-read"], [576, "uart-read"], [595, "uart-read"], [612, "uart-read"], [644, "uart-read"], [664, "uart-read"]], "UART write": [[205, "uart-write"], [236, "uart-write"], [259, "uart-write"], [280, "uart-write"], [320, "uart-write"], [344, "uart-write"], [550, "uart-write"], [577, "uart-write"], [596, "uart-write"], [613, "uart-write"], [645, "uart-write"], [665, "uart-write"]], "CAN read": [[237, "can-read"], [578, "can-read"]], "CAN write": [[238, "can-write"], [579, "can-write"]], "RTD read channel data": [[312, "rtd-read-channel-data"], [641, "rtd-read-channel-data"]], "RTD read channel data with logger": [[313, "rtd-read-channel-data-with-logger"], [642, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[314, "rtd-read-channel-status"], [643, "rtd-read-channel-status"]], "System get Wifi DAQ status": [[351, "system-get-wifi-daq-status"], [372, "system-get-wifi-daq-status"], [388, "system-get-wifi-daq-status"], [672, "system-get-wifi-daq-status"], [689, "system-get-wifi-daq-status"], [701, "system-get-wifi-daq-status"]], "Set LED status": [[355, "set-led-status"], [376, "set-led-status"], [392, "set-led-status"], [676, "set-led-status"], [693, "set-led-status"], [705, "set-led-status"]], "AHRS getAcceleration": [[361, "ahrs-getacceleration"], [678, "ahrs-getacceleration"]], "AHRS getAngularVelocity": [[362, "ahrs-getangularvelocity"], [679, "ahrs-getangularvelocity"]], "AHRS getEstimation": [[363, "ahrs-getestimation"], [680, "ahrs-getestimation"]], "AHRS getOrientation": [[364, "ahrs-getorientation"], [681, "ahrs-getorientation"]], "AHRS visualize": [[365, "ahrs-visualize"], [682, "ahrs-visualize"]], "AI test panel": [[707, "ai-test-panel"]], "AO test panel": [[708, "ao-test-panel"]], "DO test panel": [[709, "do-test-panel"]], "I2C test panel": [[710, "i2c-test-panel"]], "SPI test panel": [[711, "spi-test-panel"]], "Network device finder": [[712, "network-device-finder"]], "Device network info center": [[713, "device-network-info-center"]], "RTD test panel": [[714, "rtd-test-panel"]], "TC test panel": [[715, "tc-test-panel"]], "UART test panel": [[716, "uart-test-panel"]], "Example Codes - GUI (sync)": [[717, "example-codes-gui-sync"]], "AI": [[717, "ai"]], "AO": [[717, "ao"]], "DO": [[717, "do"]], "I2C": [[717, "i2c"]], "SPI": [[717, "spi"]], "System": [[717, "system"]], "Temperature-RTD": [[717, "temperature-rtd"]], "Temperature-TC": [[717, "temperature-tc"]], "UART": [[717, "uart"]], "Example Codes - Console (async)": [[718, "example-codes-console-async"]], "Device finder": [[718, "device-finder"], [719, "device-finder"], [722, "device-finder"]], "STEM": [[718, "stem"], [719, "stem"], [734, "stem"]], "EDrive-ST": [[718, "edrive-st"], [719, "edrive-st"], [723, "edrive-st"]], "EMotion": [[718, "emotion"], [719, "emotion"], [724, "emotion"]], "Ethan-A": [[718, "ethan-a"], [719, "ethan-a"], [725, "ethan-a"]], "Ethan-D": [[718, "ethan-d"], [719, "ethan-d"], [726, "ethan-d"]], "Ethan-EX-D": [[718, "ethan-ex-d"], [719, "ethan-ex-d"], [727, "ethan-ex-d"]], "Ethan-I": [[718, "ethan-i"], [719, "ethan-i"], [728, "ethan-i"]], "Ethan-IA": [[718, "ethan-ia"], [719, "ethan-ia"], [729, "ethan-ia"]], "Ethan-L": [[718, "ethan-l"], [719, "ethan-l"], [730, "ethan-l"]], "Ethan-O": [[718, "ethan-o"], [719, "ethan-o"], [731, "ethan-o"]], "Ethan-P": [[718, "ethan-p"], [719, "ethan-p"], [732, "ethan-p"]], "Ethan-T": [[718, "ethan-t"], [719, "ethan-t"], [733, "ethan-t"]], "USB-DAQ-F1-AD": [[718, "usb-daq-f1-ad"], [719, "usb-daq-f1-ad"], [735, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[718, "usb-daq-f1-aod"], [719, "usb-daq-f1-aod"], [736, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[718, "usb-daq-f1-cd"], [719, "usb-daq-f1-cd"], [737, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[718, "usb-daq-f1-d"], [719, "usb-daq-f1-d"], [738, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[718, "usb-daq-f1-d-snk"], [719, "usb-daq-f1-d-snk"], [739, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[718, "usb-daq-f1-rd"], [719, "usb-daq-f1-rd"], [740, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[718, "usb-daq-f1-td"], [719, "usb-daq-f1-td"], [741, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[718, "wifi-daq-e3-a"], [719, "wifi-daq-e3-a"], [742, "wifi-daq-e3-a"]], "Wifi-DAQ-E3-AH": [[718, "wifi-daq-e3-ah"], [719, "wifi-daq-e3-ah"], [743, "wifi-daq-e3-ah"]], "Wifi-DAQ-F4-A": [[718, "wifi-daq-f4-a"], [719, "wifi-daq-f4-a"], [744, "wifi-daq-f4-a"]], "Example Codes - Console (sync)": [[719, "example-codes-console-sync"]], "Products Usage": [[721, "products-usage"]], "Utilities": [[721, "utilities"]], "Wifi devices": [[721, "wifi-devices"]], "Ethernet devices": [[721, "ethernet-devices"]], "USB devices": [[721, "usb-devices"]], "API function description": [[722, "api-function-description"], [723, "api-function-description"], [724, "api-function-description"], [725, "api-function-description"], [726, "api-function-description"], [727, "api-function-description"], [728, "api-function-description"], [729, "api-function-description"], [730, "api-function-description"], [731, "api-function-description"], [732, "api-function-description"], [733, "api-function-description"], [734, "api-function-description"], [735, "api-function-description"], [736, "api-function-description"], [737, "api-function-description"], [738, "api-function-description"], [739, "api-function-description"], [740, "api-function-description"], [741, "api-function-description"], [742, "api-function-description"], [743, "api-function-description"], [744, "api-function-description"]], "Device pinout": [[723, "device-pinout"], [724, "device-pinout"], [725, "device-pinout"], [726, "device-pinout"], [727, "device-pinout"], [728, "device-pinout"], [729, "device-pinout"], [730, "device-pinout"], [731, "device-pinout"], [732, "device-pinout"], [733, "device-pinout"], [734, "device-pinout"], [735, "device-pinout"], [736, "device-pinout"], [737, "device-pinout"], [738, "device-pinout"], [739, "device-pinout"], [740, "device-pinout"], [741, "device-pinout"], [742, "device-pinout"], [743, "device-pinout"], [744, "device-pinout"]], "Products Feature": [[745, "products-feature"]], "AI Max Sampling Rate Table": [[746, "ai-max-sampling-rate-table"]], "I/O Channel Function Table": [[747, "i-o-channel-function-table"]], "Error Code Table": [[748, "error-code-table"]], "Setting Table": [[749, "setting-table"]], "AI Mode": [[749, "ai-mode"]], "AO Form": [[749, "ao-form"]], "AO Mode": [[749, "ao-mode"]], "CAN Speed": [[749, "can-speed"]], "CAN Type": [[749, "can-type"]], "I2C Address": [[749, "i2c-address"]], "I2C Speed": [[749, "i2c-speed"]], "Motion Capture Mode": [[749, "motion-capture-mode"]], "Motion Capture Type": [[749, "motion-capture-type"]], "Motion Direction": [[749, "motion-direction"]], "Motion Enable": [[749, "motion-enable"]], "Motion Find Reference Type": [[749, "motion-find-reference-type"]], "Motion Operation Mode": [[749, "motion-operation-mode"]], "Motion Polarity": [[749, "motion-polarity"]], "Motion Search Direction": [[749, "motion-search-direction"]], "Motion Stepper Output": [[749, "motion-stepper-output"]], "Motion Stop Type": [[749, "motion-stop-type"]], "SPI Clock": [[749, "spi-clock"]], "SPI Data Size": [[749, "spi-data-size"]], "SPI Endianness": [[749, "spi-endianness"]], "SPI Mode": [[749, "spi-mode"]], "Thermal Channel": [[749, "thermal-channel"]], "Thermal OverSampling": [[749, "thermal-oversampling"]], "Thermal Type": [[749, "thermal-type"]], "UART Data Size": [[749, "uart-data-size"]], "UART Parity": [[749, "uart-parity"]], "UART Stop Bit": [[749, "uart-stop-bit"]], "I/O Port Function Table": [[750, "i-o-port-function-table"]]}, "indexentries": {"module": [[720, "module-pywpc"]], "pywpc": [[720, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[722, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[722, "pywpc.DeviceFinder.disconnect"]], "edrivest (class in pywpc)": [[723, "pywpc.EDriveST"]], "motion_cfgaxisdirection() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_cfgAxisDirection"]], "motion_cfgaxisdirection_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_cfgAxisDirection_async"]], "motion_cfgencoder() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_cfgEncoder_async"]], "motion_cfglimit() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_cfgLimit_async"]], "motion_close() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_close"]], "motion_close_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_close_async"]], "motion_enableservooff() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_enableServoOn_async"]], "motion_getalarmstatus() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getAlarmStatus"]], "motion_getalarmstatus_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getAlarmStatus_async"]], "motion_getlimitstatus() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getLimitStatus_async"]], "motion_getparameters() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getParameters"]], "motion_getprocessstate() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getProcessState"]], "motion_getprocessstate_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_getProcessState_async"]], "motion_loadcfgfile() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_loadCfgFile_async"]], "motion_open() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_open"]], "motion_opencfgfile() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_open_async"]], "motion_readcurrentvelocity() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_readCurrentVelocity"]], "motion_readcurrentvelocity_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_readCurrentVelocity_async"]], "motion_readencoderposition() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_readEncoderPosition"]], "motion_readencoderposition_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_readEncoderPosition_async"]], "motion_resetfactory() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_resetFactory"]], "motion_resetfactory_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_resetFactory_async"]], "motion_rstencoderposi() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_saveCfgFile_async"]], "motion_startfindhome() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startFindHome"]], "motion_startfindhome_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startFindHome_async"]], "motion_startfindlimit() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startFindLimit"]], "motion_startfindlimit_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startFindLimit_async"]], "motion_startfindzpolarity() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startFindZPolarity"]], "motion_startfindzpolarity_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startFindZPolarity_async"]], "motion_startpositionmove() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startPositionMove"]], "motion_startpositionmove_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startPositionMove_async"]], "motion_startscanmove() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startScanMove"]], "motion_startscanmove_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startScanMove_async"]], "motion_startvelocticymove() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startVelocticyMove"]], "motion_startvelocticymove_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_startVelocticyMove_async"]], "motion_stopprocess() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_stopProcess"]], "motion_stopprocess_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Motion_stopProcess_async"]], "net_getgateway() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_reboot"]], "sys_reboot_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.Sys_setSwitchMode_async"]], "close() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.close"]], "connect() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.connect"]], "disconnect() (pywpc.edrivest method)": [[723, "pywpc.EDriveST.disconnect"]], "emotion (class in pywpc)": [[724, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[724, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[724, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[724, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[724, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[724, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_reboot"]], "sys_reboot_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[724, "pywpc.EMotion.Sys_setSwitchMode_async"]], "close() (pywpc.emotion method)": [[724, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[724, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[724, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_enableCS_async"]], "ai_enablechannel() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_enableChannel_async"]], "ai_getport() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_getPort"]], "ai_open() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[725, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[725, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[725, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[725, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[725, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[725, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_reboot"]], "sys_reboot_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[725, "pywpc.EthanA.Sys_setSwitchMode_async"]], "close() (pywpc.ethana method)": [[725, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[725, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[725, "pywpc.EthanA.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[726, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[726, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[726, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[726, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[726, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[726, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[726, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "pwm_close() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_close"]], "pwm_close_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_close_async"]], "pwm_open() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_open"]], "pwm_open_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_setFrequency_async"]], "pwm_start() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_start"]], "pwm_start_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_start_async"]], "pwm_stop() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_stop"]], "pwm_stop_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_reboot"]], "sys_reboot_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[726, "pywpc.EthanD.Sys_setSwitchMode_async"]], "close() (pywpc.ethand method)": [[726, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[726, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[726, "pywpc.EthanD.disconnect"]], "dio_loadstartup() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_closePins"]], "di_closepins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_closePins_async"]], "di_closeport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_closePort"]], "di_closeport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_getPinMap"]], "di_openpins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_openPins"]], "di_openpins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_openPins_async"]], "di_openport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_openPort"]], "di_openport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_openPort_async"]], "di_readpins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_readPins"]], "di_readpins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_readPins_async"]], "di_readport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_readPort"]], "di_readport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DI_readPort_async"]], "do_closepins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_closePins"]], "do_closepins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_closePins_async"]], "do_closeport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_closePort"]], "do_closeport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_getPinMap"]], "do_openpins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_openPins"]], "do_openpins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_openPins_async"]], "do_openport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_openPort"]], "do_openport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_openPort_async"]], "do_togglepins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_togglePort_async"]], "do_writepins() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_writePins"]], "do_writepins_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_writePins_async"]], "do_writeport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_writePort"]], "do_writeport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.DO_writePort_async"]], "ethanexd (class in pywpc)": [[727, "pywpc.EthanEXD"]], "logger_openfile() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Logger_writeList"]], "logger_writevalue() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Logger_writeValue"]], "net_getgateway() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.Sys_setSwitchMode_async"]], "close() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.close"]], "connect() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.connect"]], "disconnect() (pywpc.ethanexd method)": [[727, "pywpc.EthanEXD.disconnect"]], "ai_close() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_close_async"]], "ai_getport() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_getPort"]], "ai_open() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[728, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[728, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[728, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[728, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[728, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[728, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_reboot"]], "sys_reboot_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[728, "pywpc.EthanI.Sys_setSwitchMode_async"]], "close() (pywpc.ethani method)": [[728, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[728, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[728, "pywpc.EthanI.disconnect"]], "ai_close() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_close"]], "ai_close_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_close_async"]], "ai_getport() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_getPort"]], "ai_open() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_open"]], "ai_open_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_open_async"]], "ai_readondemand() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.AI_readOnDemand_async"]], "ethania (class in pywpc)": [[729, "pywpc.EthanIA"]], "logger_openfile() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Logger_writeList"]], "logger_writevalue() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Logger_writeValue"]], "net_getgateway() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_reboot"]], "sys_reboot_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethania method)": [[729, "pywpc.EthanIA.Sys_setSwitchMode_async"]], "close() (pywpc.ethania method)": [[729, "pywpc.EthanIA.close"]], "connect() (pywpc.ethania method)": [[729, "pywpc.EthanIA.connect"]], "disconnect() (pywpc.ethania method)": [[729, "pywpc.EthanIA.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[730, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[730, "pywpc.EthanL.Sys_setSwitchMode_async"]], "close() (pywpc.ethanl method)": [[730, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[730, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[730, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_close_async"]], "ao_getport() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_getPort"]], "ao_getvalues() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_open_async"]], "ao_setenablechannels() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[731, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[731, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[731, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[731, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[731, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[731, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_reboot"]], "sys_reboot_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[731, "pywpc.EthanO.Sys_setSwitchMode_async"]], "close() (pywpc.ethano method)": [[731, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[731, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[731, "pywpc.EthanO.disconnect"]], "dpot_close() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_close"]], "dpot_close_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_close_async"]], "dpot_open() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_open"]], "dpot_open_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_open_async"]], "dpot_readbychannel() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_readByChannel"]], "dpot_readbychannel_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_readByChannel_async"]], "dpot_writeallchannel() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_writeAllChannel"]], "dpot_writeallchannel_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_writeAllChannel_async"]], "dpot_writebychannel() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_writeByChannel"]], "dpot_writebychannel_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.DPOT_writeByChannel_async"]], "ethanp (class in pywpc)": [[732, "pywpc.EthanP"]], "logger_openfile() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Logger_writeList"]], "logger_writevalue() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Logger_writeValue"]], "net_getgateway() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanp method)": [[732, "pywpc.EthanP.Sys_setSwitchMode_async"]], "close() (pywpc.ethanp method)": [[732, "pywpc.EthanP.close"]], "connect() (pywpc.ethanp method)": [[732, "pywpc.EthanP.connect"]], "disconnect() (pywpc.ethanp method)": [[732, "pywpc.EthanP.disconnect"]], "ethant (class in pywpc)": [[733, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[733, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[733, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[733, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[733, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[733, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_reboot"]], "sys_reboot_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[733, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[733, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[733, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[733, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[734, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[734, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_enableCS_async"]], "ai_enablechannel() (pywpc.stem method)": [[734, "pywpc.STEM.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_enableChannel_async"]], "ai_getport() (pywpc.stem method)": [[734, "pywpc.STEM.AI_getPort"]], "ai_open() (pywpc.stem method)": [[734, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[734, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[734, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[734, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[734, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[734, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[734, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[734, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[734, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[734, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[734, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_close_async"]], "ao_getport() (pywpc.stem method)": [[734, "pywpc.STEM.AO_getPort"]], "ao_getvalues() (pywpc.stem method)": [[734, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[734, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[734, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_open_async"]], "ao_setenablechannels() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[734, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[734, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[734, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[734, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[734, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[734, "pywpc.STEM.DIO_loadStartup_async"]], "di_closepins() (pywpc.stem method)": [[734, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[734, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[734, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[734, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[734, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[734, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[734, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[734, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[734, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[734, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[734, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[734, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[734, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[734, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[734, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[734, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[734, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[734, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[734, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[734, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[734, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[734, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[734, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[734, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[734, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[734, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[734, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[734, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[734, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[734, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[734, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[734, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_reboot"]], "sys_reboot_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[734, "pywpc.STEM.Sys_setSwitchMode_async"]], "close() (pywpc.stem method)": [[734, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[734, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[734, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.AI_stop_async"]], "counter_close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[735, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[735, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "counter_close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[736, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[736, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.CAN_write_async"]], "counter_close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[737, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[737, "pywpc.USBDAQF1CD.disconnect"]], "counter_close() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[738, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[738, "pywpc.USBDAQF1D.disconnect"]], "counter_close() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "usbdaqf1dsnk (class in pywpc)": [[739, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[739, "pywpc.USBDAQF1DSNK.disconnect"]], "counter_close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[740, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[740, "pywpc.USBDAQF1RD.disconnect"]], "counter_close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[741, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[741, "pywpc.USBDAQF1TD.disconnect"]], "ai_close() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_getPort"]], "ai_open() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "wifidaqe3a (class in pywpc)": [[742, "pywpc.WifiDAQE3A"]], "wifi_getchargestatus() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[742, "pywpc.WifiDAQE3A.disconnect"]], "ahrs_close() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_close"]], "ahrs_close_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_close_async"]], "ahrs_getacceleration() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getAcceleration"]], "ahrs_getacceleration_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getAcceleration_async"]], "ahrs_getangularvelocity() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getAngularVelocity"]], "ahrs_getangularvelocity_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getAngularVelocity_async"]], "ahrs_getestimate() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getEstimate"]], "ahrs_getestimate_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getEstimate_async"]], "ahrs_getorientation() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getOrientation"]], "ahrs_getorientation_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_getOrientation_async"]], "ahrs_open() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_open"]], "ahrs_open_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_open_async"]], "ahrs_reset() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_reset"]], "ahrs_reset_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_reset_async"]], "ahrs_start() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_start"]], "ahrs_start_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_start_async"]], "ahrs_stop() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_stop"]], "ahrs_stop_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AHRS_stop_async"]], "ai_close() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_close"]], "ai_close_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_getPort"]], "ai_open() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_open"]], "ai_open_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_start"]], "ai_start_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Sys_setSwitchMode_async"]], "wifidaqe3ah (class in pywpc)": [[743, "pywpc.WifiDAQE3AH"]], "wifi_getchargestatus() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.close"]], "connect() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.connect"]], "disconnect() (pywpc.wifidaqe3ah method)": [[743, "pywpc.WifiDAQE3AH.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_getPort"]], "ai_open() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "wifidaqf4a (class in pywpc)": [[744, "pywpc.WifiDAQF4A"]], "wifi_getchargestatus() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[744, "pywpc.WifiDAQF4A.disconnect"]]}})