Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_1axis_move", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_velocity_blending", "examples/Console/Asynchronous/EDrive_ST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDrive_ST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDrive_ST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDrive_ST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDrive_ST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDrive_ST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_1axis_move", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_velocity_blending", "examples/Console/Synchronous/EDrive_ST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDrive_ST/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_in_loop", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/GUI/Asynchronous/AI/AI_integrated_gui", "examples/GUI/Asynchronous/AO/AO_gui", "examples/GUI/Asynchronous/DO/DO_gui", "examples/GUI/Asynchronous/I2C/I2C_gui", "examples/GUI/Asynchronous/SPI/SPI_gui", "examples/GUI/Asynchronous/System/find_all_devices_gui", "examples/GUI/Asynchronous/System/get_device_info_gui", "examples/GUI/Asynchronous/Temperature_RTD/RTD_gui", "examples/GUI/Asynchronous/Temperature_TC/TC_gui", "examples/GUI/Asynchronous/UART/UART_gui", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Asynchronous", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDrive_ST", "products/EMotion", "products/EthanA", "products/EthanD", "products/EthanI", "products/EthanL", "products/EthanO", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQF4A", "products_summary", "ref_SPI", "ref_error", "ref_port"], "filenames": ["README.rst", "examples\\Console\\Asynchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_1axis_move.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_velocity_blending.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EDrive_ST\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Synchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_1axis_move.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_velocity_blending.rst", "examples\\Console\\Synchronous\\EDrive_ST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EDrive_ST\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_N_samples_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\GUI\\Asynchronous\\AI\\AI_integrated_gui.rst", "examples\\GUI\\Asynchronous\\AO\\AO_gui.rst", "examples\\GUI\\Asynchronous\\DO\\DO_gui.rst", "examples\\GUI\\Asynchronous\\I2C\\I2C_gui.rst", "examples\\GUI\\Asynchronous\\SPI\\SPI_gui.rst", "examples\\GUI\\Asynchronous\\System\\find_all_devices_gui.rst", "examples\\GUI\\Asynchronous\\System\\get_device_info_gui.rst", "examples\\GUI\\Asynchronous\\Temperature_RTD\\RTD_gui.rst", "examples\\GUI\\Asynchronous\\Temperature_TC\\TC_gui.rst", "examples\\GUI\\Asynchronous\\UART\\UART_gui.rst", "examples\\GUI\\Synchronous\\AI\\AI_integrated_gui.rst", "examples\\GUI\\Synchronous\\AO\\AO_gui.rst", "examples\\GUI\\Synchronous\\DO\\DO_gui.rst", "examples\\GUI\\Synchronous\\I2C\\I2C_gui.rst", "examples\\GUI\\Synchronous\\SPI\\SPI_gui.rst", "examples\\GUI\\Synchronous\\System\\find_all_devices_gui.rst", "examples\\GUI\\Synchronous\\System\\get_device_info_gui.rst", "examples\\GUI\\Synchronous\\Temperature_RTD\\RTD_gui.rst", "examples\\GUI\\Synchronous\\Temperature_TC\\TC_gui.rst", "examples\\GUI\\Synchronous\\UART\\UART_gui.rst", "examples_GUI_Asynchronous.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products\\DeviceFinder.rst", "products\\EDrive_ST.rst", "products\\EMotion.rst", "products\\EthanA.rst", "products\\EthanD.rst", "products\\EthanI.rst", "products\\EthanL.rst", "products\\EthanO.rst", "products\\EthanT.rst", "products\\STEM.rst", "products\\USBDAQF1AD.rst", "products\\USBDAQF1AOD.rst", "products\\USBDAQF1CD.rst", "products\\USBDAQF1D.rst", "products\\USBDAQF1DSNK.rst", "products\\USBDAQF1RD.rst", "products\\USBDAQF1TD.rst", "products\\WifiDAQE3A.rst", "products\\WifiDAQF4A.rst", "products_summary.rst", "ref_SPI.rst", "ref_error.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive 1axis move", "Drive find limit", "Drive position blending", "Drive servo on", "Drive velocity blending", "Drive velocity blending acceleration", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "System get USB info", "System get pin mode", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get USB info", "System get pin mode", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive 1axis move", "Drive find limit", "Drive position blending", "Drive servo on", "Drive velocity blending", "Drive velocity blending acceleration", "System get network info", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "AI on demand once", "System get network info", "Relay read counters", "Relay set channel", "System get network info", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System get network info", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "UART read", "UART write", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "System get USB info", "System get pin mode", "UART read", "UART write", "CAN read", "CAN write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "UART read", "UART write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "UART read", "UART write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get USB info", "System get pin mode", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "AI N samples in loop", "AI N samples once", "AI continuous", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (async)", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-D", "Ethan-I", "Ethan-L", "Ethan-O", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-F4-A", "Products Feature", "Setting Table", "Error Code Table", "I/O port function table"], "terms": {"wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 522], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 525], "also": [0, 501], "known": [0, 52, 53, 103, 104, 120, 121, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 345, 346, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 501], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "contain": [0, 501, 503], "api": [0, 501, 502], "interact": [0, 501], "basic": [0, 257, 269, 282, 306, 313, 320, 322, 325, 329, 330, 351, 467, 475, 501], "daq": [0, 282, 306, 313, 320, 322, 325, 329, 330, 351, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 506, 511, 512, 524, 525], "card": [0, 501], "ani": [0, 477, 487, 501], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "usb": [0, 1, 275, 501, 522, 524, 525], "wifi": [0, 501, 522, 525], "ethernet": [0, 1, 275, 482, 492, 501, 522], "base": [0, 501, 522], "devic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 501], "It": [0, 52, 53, 98, 99, 103, 104, 120, 121, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 340, 341, 345, 346, 358, 359, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 501, 505, 512], "support": [0, 100, 327, 342, 343, 380, 501, 518, 522, 524], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "3": [0, 2, 3, 4, 6, 7, 11, 34, 39, 41, 43, 44, 50, 52, 54, 56, 57, 61, 67, 74, 77, 78, 82, 85, 86, 90, 92, 94, 95, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 116, 117, 120, 122, 124, 125, 127, 128, 130, 133, 135, 136, 137, 139, 140, 143, 144, 146, 147, 148, 150, 152, 153, 156, 159, 161, 162, 163, 164, 165, 167, 169, 170, 172, 173, 175, 178, 180, 181, 182, 184, 186, 187, 189, 190, 192, 195, 197, 198, 199, 201, 203, 204, 206, 209, 211, 213, 215, 216, 218, 219, 221, 227, 229, 230, 231, 233, 235, 236, 238, 239, 241, 242, 243, 247, 249, 250, 251, 253, 254, 261, 263, 265, 266, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 486, 487, 489, 490, 491, 492, 496, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525], "8": [0, 41, 43, 44, 85, 86, 92, 94, 95, 114, 116, 117, 127, 128, 135, 136, 137, 139, 140, 161, 162, 164, 172, 173, 180, 181, 189, 190, 197, 198, 218, 219, 229, 230, 238, 239, 242, 243, 249, 250, 251, 253, 254, 258, 263, 265, 266, 270, 307, 309, 310, 331, 332, 334, 336, 337, 352, 354, 355, 364, 365, 366, 369, 370, 371, 373, 374, 388, 391, 392, 394, 401, 402, 403, 406, 407, 414, 415, 416, 419, 420, 435, 436, 437, 443, 444, 451, 452, 453, 456, 457, 459, 460, 461, 463, 464, 468, 469, 471, 472, 476, 477, 478, 479, 487, 488, 489, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "10": [0, 54, 55, 70, 105, 106, 122, 123, 135, 150, 151, 161, 164, 167, 168, 180, 184, 185, 197, 201, 202, 213, 214, 229, 233, 234, 249, 316, 317, 324, 347, 348, 360, 361, 369, 384, 385, 391, 394, 397, 398, 406, 410, 411, 419, 423, 424, 431, 432, 443, 447, 448, 459, 477, 487, 501, 513, 514, 515, 516, 518, 519, 522, 523], "under": [0, 501], "window": [0, 477, 487, 501], "oper": [0, 3, 6, 7, 52, 53, 103, 104, 120, 121, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 277, 280, 281, 314, 315, 345, 346, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 501, 504, 505, 512, 522, 524], "systemour": [0, 501], "synchron": [0, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 501], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524], "comput": [0, 501], "process": [0, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 63, 76, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 501, 524], "thread": [0, 9, 11, 22, 25, 37, 39, 48, 50, 59, 61, 65, 67, 72, 74, 80, 82, 88, 90, 110, 112, 131, 133, 157, 159, 176, 178, 193, 195, 207, 209, 225, 227, 245, 247, 259, 261, 271, 273, 292, 295, 487, 499, 501], "mean": [0, 501, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "two": [0, 9, 10, 12, 37, 38, 40, 48, 49, 51, 59, 60, 62, 65, 66, 68, 72, 73, 75, 80, 81, 83, 88, 89, 91, 110, 111, 113, 126, 131, 132, 134, 154, 157, 158, 160, 171, 176, 177, 179, 188, 193, 194, 196, 207, 208, 210, 217, 222, 223, 224, 225, 226, 228, 237, 245, 246, 248, 259, 260, 262, 271, 272, 274, 364, 388, 401, 414, 435, 440, 441, 442, 451, 484, 494, 501, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 523], "more": [0, 501], "runstep": [0, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 76, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 501, 504, 505, 512, 522, 523], "manner": [0, 501], "one": [0, 499, 500, 501, 505, 506, 508, 511, 512, 513, 514, 518, 519, 520, 521], "after": [0, 85, 86, 242, 243, 331, 332, 456, 457, 501, 504, 505, 506, 512, 513, 514, 515, 520, 521], "In": [0, 501, 513, 514, 515, 516, 518, 519, 525], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 506, 508, 510, 512, 513, 514, 515, 520, 521], "execut": [0, 9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 131, 132, 133, 134, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 259, 260, 261, 262, 271, 272, 273, 274, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "block": [0, 501], "until": [0, 501], "previou": [0, 501], "complet": [0, 20, 21, 22, 24, 25, 290, 291, 292, 293, 294, 295, 501, 504, 505, 512], "independ": [0, 501], "each": [0, 54, 55, 70, 105, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 324, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448, 501, 503, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "don": [0, 501], "t": [0, 11, 39, 50, 61, 67, 74, 82, 85, 86, 90, 112, 133, 159, 178, 195, 209, 227, 242, 243, 247, 261, 273, 331, 332, 456, 457, 501, 502, 519, 522, 523, 525], "wait": [0, 3, 4, 5, 6, 7, 22, 25, 33, 41, 42, 43, 44, 54, 55, 56, 57, 70, 76, 85, 86, 92, 93, 94, 95, 105, 106, 114, 115, 116, 117, 122, 123, 124, 125, 135, 137, 138, 139, 140, 145, 150, 151, 152, 153, 161, 163, 164, 167, 168, 169, 170, 180, 184, 185, 186, 187, 197, 201, 202, 203, 204, 213, 214, 215, 216, 222, 223, 229, 233, 234, 235, 236, 242, 243, 249, 251, 252, 253, 254, 263, 264, 265, 266, 277, 278, 279, 280, 281, 292, 295, 303, 304, 305, 307, 308, 309, 310, 316, 317, 318, 319, 324, 326, 331, 332, 334, 335, 336, 337, 347, 348, 352, 353, 354, 355, 360, 361, 362, 363, 369, 371, 372, 373, 374, 379, 384, 385, 386, 387, 391, 393, 394, 397, 398, 399, 400, 406, 410, 411, 412, 413, 419, 423, 424, 425, 426, 431, 432, 433, 434, 440, 441, 443, 447, 448, 449, 450, 456, 457, 459, 461, 462, 463, 464, 469, 470, 471, 472, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "instead": [0, 501, 524], "its": [0, 98, 99, 143, 144, 340, 341, 377, 378, 501, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "own": [0, 501], "without": [0, 501, 522], "gener": [0, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 499, 500, 501, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524], "easier": [0, 501], "understand": [0, 501], "debug": [0, 501], "while": [0, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 92, 94, 95, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 131, 132, 133, 134, 137, 139, 140, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 251, 253, 254, 259, 260, 261, 262, 263, 265, 266, 271, 272, 273, 274, 276, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 307, 309, 310, 334, 336, 337, 345, 346, 347, 348, 349, 350, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472, 477, 487, 501, 525], "scalabl": [0, 501], "allow": [0, 501], "greater": [0, 501], "concurr": [0, 501], "some": [0, 126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 501], "packag": [0, 501], "mai": [0, 501], "compat": [0, 501], "earlier": [0, 501], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 493, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "To": [0, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 501], "updat": [0, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 501, 522], "latest": [0, 501], "pleas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 483, 487, 489, 493, 501, 513, 515, 516, 518, 519, 524], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 314, 315, 340, 341, 345, 346, 358, 359, 364, 377, 378, 382, 383, 388, 395, 396, 401, 408, 409, 414, 421, 422, 429, 430, 435, 445, 446, 451, 501, 504, 505, 506, 508, 510, 512, 513, 514, 515, 520, 521, 525], "manag": [0, 501], "labview": [0, 501, 522], "time": [0, 9, 10, 11, 12, 22, 25, 37, 38, 39, 40, 45, 48, 49, 50, 51, 54, 55, 59, 60, 61, 62, 65, 66, 67, 68, 70, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 96, 106, 110, 111, 112, 113, 118, 122, 123, 129, 131, 132, 133, 134, 141, 150, 151, 155, 157, 158, 159, 160, 163, 167, 168, 174, 176, 177, 178, 179, 184, 185, 191, 193, 194, 195, 196, 201, 202, 205, 207, 208, 209, 210, 213, 214, 220, 225, 226, 227, 228, 233, 234, 240, 245, 246, 247, 248, 255, 259, 260, 261, 262, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 487, 493, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524], "engin": [0, 501], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 501, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "can": [0, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "download": [0, 501], "visit": [0, 501], "ltd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501], "offici": [0, 501], "websit": [0, 501], "link": [0, 501], "site": [0, 501], "httpwww": [0, 501], "comtw": [0, 501], "githubwpc_python_driver_releasuser": [0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 501, 506, 511, 512, 513, 514, 515, 518, 519, 520, 521], "guid": [0, 501], "io": [0, 501], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 525], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "treemain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501], "make": [0, 126, 127, 154, 171, 172, 188, 189, 217, 218, 237, 238, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 501], "sure": [0, 126, 127, 154, 171, 172, 188, 189, 217, 218, 237, 238, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 501], "up": [0, 103, 104, 105, 106, 107, 108, 345, 346, 347, 348, 349, 350, 501], "date": [0, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "youreasi": [0, 501, 522], "fast": [0, 501, 513, 514, 515, 516, 518, 519, 523], "just": [0, 501], "work": [0, 501], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501], "pkg_name": [0, 501], "handle_list": [0, 501], "devicefind": [0, 1, 275, 482, 492, 501, 502, 503], "wifidaqe3a": [0, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 461, 462, 463, 464, 465, 466, 467, 468, 477, 483, 487, 493, 501, 502, 520, 522], "wifidaqf4a": [0, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 469, 470, 471, 472, 473, 474, 475, 476, 501, 502, 521, 522], "stem": [0, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 327, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 380, 501, 502, 522, 524, 525], "emot": [0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 501, 502, 522, 525], "edrive_st": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 276, 277, 278, 279, 280, 281, 282, 501, 502, 504], "ethana": [0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 307, 308, 309, 310, 311, 312, 313, 477, 483, 487, 493, 501, 502, 506, 522], "ethand": [0, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 314, 315, 316, 317, 318, 319, 320, 479, 483, 489, 493, 501, 502, 507, 522], "ethani": [0, 63, 64, 65, 66, 67, 68, 321, 322, 501, 502, 508, 522], "ethanl": [0, 69, 70, 71, 72, 73, 74, 75, 323, 324, 325, 501, 502, 509, 522], "ethano": [0, 76, 77, 78, 79, 80, 81, 82, 83, 326, 327, 328, 329, 501, 502, 510, 522], "ethant": [0, 84, 85, 86, 87, 88, 89, 90, 91, 330, 331, 332, 333, 501, 502, 511, 522], "usbdaqf1d": [0, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 479, 480, 481, 486, 489, 490, 491, 496, 501, 502, 516, 522], "usbdaqf1dsnk": [0, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 421, 422, 423, 424, 425, 426, 427, 428, 479, 489, 501, 502, 517, 522], "usbdaqf1ad": [0, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 477, 479, 480, 481, 486, 487, 489, 490, 491, 496, 501, 502, 513, 522], "usbdaqf1aod": [0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 477, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 496, 501, 502, 514, 522], "usbdaqf1td": [0, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 479, 480, 481, 485, 486, 489, 490, 491, 495, 496, 501, 502, 519, 522], "usbdaqf1rd": [0, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 479, 480, 481, 484, 486, 489, 490, 491, 494, 496, 501, 502, 518, 522], "usbdaqf1cd": [0, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 479, 480, 481, 486, 489, 490, 491, 496, 501, 502, 515, 522], "pip": [0, 501], "later": [0, 501], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 503, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "txt": [0, 501], "dependinclud": [0, 501], "pyqt5": [0, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501], "pyqt5design": [0, 501], "qasync": [0, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 501], "so": [0, 501], "r": [0, 85, 86, 242, 243, 331, 332, 456, 457, 501, 511, 519, 522, 523], "control": [0, 501, 522], "motion": [0, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "ethan": [0, 501, 502, 525], "A": [0, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 525], "d": [0, 478, 479, 488, 489, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 525], "l": [0, 501, 502, 525], "interfac": [0, 126, 127, 128, 135, 136, 154, 161, 162, 163, 164, 171, 172, 173, 180, 181, 188, 189, 190, 197, 198, 217, 218, 219, 229, 230, 237, 238, 239, 249, 250, 364, 365, 366, 369, 370, 388, 391, 392, 393, 394, 401, 402, 403, 406, 407, 414, 415, 416, 419, 420, 435, 436, 437, 443, 444, 451, 452, 453, 459, 460, 501, 522], "f1": [0, 501, 502, 525], "digit": [0, 52, 53, 54, 55, 56, 57, 70, 77, 78, 98, 99, 101, 102, 106, 120, 121, 122, 123, 124, 125, 127, 128, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 172, 173, 182, 183, 184, 185, 186, 187, 189, 190, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 218, 219, 231, 232, 233, 234, 235, 236, 238, 239, 314, 315, 316, 317, 318, 319, 324, 327, 328, 340, 341, 343, 344, 347, 348, 358, 359, 360, 361, 362, 363, 365, 366, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 402, 403, 408, 409, 410, 411, 412, 413, 415, 416, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437, 445, 446, 447, 448, 449, 450, 452, 453, 479, 481, 489, 491, 501, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 522], "dsnk": [0, 501, 517, 525], "24v": [0, 501, 507, 509, 517, 522], "ad": [0, 501, 502, 525], "ai": [0, 98, 99, 143, 144, 340, 341, 377, 378, 499, 500, 501, 506, 508, 512, 513, 514, 520, 521, 524, 525], "td": [0, 501, 502, 525], "thermocoupl": [0, 85, 86, 242, 243, 331, 332, 456, 457, 485, 495, 501, 511, 518, 519, 522, 525], "rd": [0, 501, 502, 525], "rtd": [0, 499, 500, 501, 511, 518, 519, 525], "cd": [0, 501, 502, 525], "aod": [0, 501, 502, 525], "ao": [0, 98, 99, 143, 144, 340, 341, 377, 378, 499, 500, 501, 510, 512, 514, 524, 525], "e3": [0, 501, 502, 525], "f4": [0, 501, 502, 525], "motor": [0, 501, 522, 525], "seri": [0, 501, 525], "modul": [0, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 501, 504, 505, 506, 508, 509, 510, 512, 513, 514, 515, 520, 521, 522, 525], "drive": [0, 499, 500, 501, 504, 524, 525], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525], "edriv": [0, 2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281, 501, 502, 522, 525], "st": [0, 2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281, 501, 502, 522, 525], "di": [0, 52, 53, 103, 104, 120, 121, 130, 148, 149, 156, 165, 166, 175, 182, 183, 192, 199, 200, 206, 211, 212, 221, 231, 232, 241, 314, 315, 345, 346, 358, 359, 368, 382, 383, 390, 395, 396, 405, 408, 409, 418, 421, 422, 428, 429, 430, 439, 445, 446, 455, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "do": [0, 52, 53, 103, 104, 120, 121, 127, 128, 130, 148, 149, 156, 165, 166, 172, 173, 175, 182, 183, 189, 190, 192, 199, 200, 206, 211, 212, 218, 219, 221, 231, 232, 238, 239, 241, 314, 315, 345, 346, 358, 359, 365, 366, 368, 382, 383, 390, 395, 396, 402, 403, 405, 408, 409, 415, 416, 418, 421, 422, 428, 429, 430, 436, 437, 439, 445, 446, 452, 453, 455, 481, 491, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "1": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525], "2": [0, 6, 7, 9, 22, 24, 25, 28, 34, 35, 37, 41, 42, 43, 44, 48, 52, 56, 59, 65, 70, 72, 76, 77, 78, 80, 85, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 117, 120, 124, 127, 128, 131, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 152, 157, 161, 162, 163, 164, 165, 169, 172, 173, 176, 180, 181, 182, 186, 189, 190, 193, 197, 198, 199, 203, 207, 211, 215, 218, 219, 225, 229, 230, 231, 235, 238, 239, 242, 243, 245, 249, 250, 251, 252, 253, 254, 259, 263, 264, 265, 266, 271, 280, 281, 292, 294, 295, 298, 304, 305, 307, 308, 309, 310, 314, 318, 324, 326, 327, 328, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 362, 365, 366, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 386, 391, 392, 393, 394, 395, 399, 402, 403, 406, 407, 408, 412, 415, 416, 419, 420, 421, 425, 429, 433, 436, 437, 443, 444, 445, 449, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 469, 470, 471, 472, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525], "4": [0, 20, 52, 78, 85, 86, 99, 102, 103, 104, 105, 106, 107, 108, 120, 126, 130, 136, 144, 147, 148, 154, 156, 162, 165, 171, 175, 181, 182, 188, 192, 198, 199, 206, 211, 217, 221, 230, 231, 237, 241, 242, 243, 250, 290, 314, 328, 331, 332, 341, 344, 345, 346, 347, 348, 349, 350, 358, 368, 370, 378, 381, 382, 390, 392, 395, 405, 407, 408, 418, 420, 421, 428, 429, 439, 444, 445, 455, 456, 457, 460, 479, 480, 481, 482, 486, 489, 490, 491, 492, 496, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 314, 316, 331, 332, 345, 346, 347, 348, 349, 350, 358, 360, 382, 384, 395, 397, 408, 410, 421, 423, 429, 431, 445, 447, 456, 457, 468, 476, 479, 489, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525], "valu": [0, 70, 92, 93, 94, 95, 96, 97, 98, 99, 127, 143, 144, 172, 189, 218, 238, 324, 334, 335, 336, 337, 338, 339, 340, 341, 364, 365, 377, 378, 388, 401, 402, 414, 415, 435, 436, 451, 452, 477, 478, 481, 487, 488, 491, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525], "ar": [0, 98, 99, 103, 104, 105, 106, 107, 108, 143, 144, 340, 341, 345, 346, 347, 348, 349, 350, 377, 378, 501, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525], "repres": [0, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525], "slot": [0, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525], "aio": [0, 92, 93, 94, 95, 96, 97, 101, 102, 334, 335, 336, 337, 338, 339, 343, 344, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525], "addition": [0, 41, 42, 43, 44, 45, 46, 63, 92, 93, 94, 95, 96, 97, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 321, 334, 335, 336, 337, 338, 339, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 501, 525], "dio": [0, 54, 55, 56, 57, 105, 106, 107, 108, 122, 123, 124, 125, 127, 128, 150, 151, 152, 153, 167, 168, 169, 170, 172, 173, 184, 185, 186, 187, 189, 190, 201, 202, 203, 204, 213, 214, 215, 216, 218, 219, 233, 234, 235, 236, 238, 239, 316, 317, 318, 319, 347, 348, 349, 350, 360, 361, 362, 363, 365, 366, 384, 385, 386, 387, 397, 398, 399, 400, 402, 403, 410, 411, 412, 413, 415, 416, 423, 424, 425, 426, 431, 432, 433, 434, 436, 437, 447, 448, 449, 450, 452, 453, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "assign": [0, 103, 104, 105, 106, 107, 108, 345, 346, 347, 348, 349, 350, 501, 525], "tc": [0, 499, 500, 501, 511, 518, 519, 525], "uart": [0, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525], "spi": [0, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "i2c": [0, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525], "remark": [0, 501, 525], "stand": [0, 501, 510, 512, 514, 525], "take": [0, 126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 501, 525], "avail": [0, 1, 275, 482, 492, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525], "conda": [0, 501], "command": [0, 501, 520, 521, 522], "manual": [0, 501, 511, 518, 519], "consol": [0, 501], "howbuild": [0, 501], "ex": [0, 501], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 499, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "miniconda": [0, 501], "virtual": [0, 501], "environ": [0, 501], "releas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 522], "an": [0, 483, 493, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "mit": [0, 501], "style": [0, 501], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "incorpor": [0, 501], "project": [0, 9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 131, 132, 133, 134, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 259, 260, 261, 262, 271, 272, 273, 274, 501], "differ": [0, 54, 55, 105, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "non": [0, 501], "commerci": [0, 501], "find_devic": [1, 275], "find_all_devic": [1, 275], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "demonstr": [1, 8, 9, 10, 11, 12, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 520, 521], "correctserial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 493, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 487, 493, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521, 524], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 427, 428, 429, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 504, 505, 512, 513, 514, 515, 516, 518, 519], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 483, 487, 489, 493, 505, 512, 513, 515, 516, 518, 519, 524], "readmmdget": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "detailusagcopyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "2023": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 513, 514, 515, 516, 518, 519], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "async": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "creathandl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "connect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524], "perform": [1, 10, 11, 12, 38, 39, 40, 49, 50, 51, 52, 53, 60, 61, 62, 66, 67, 68, 73, 74, 75, 81, 82, 83, 89, 90, 91, 103, 104, 111, 112, 113, 120, 121, 132, 133, 134, 148, 149, 158, 159, 160, 165, 166, 177, 178, 179, 182, 183, 194, 195, 196, 199, 200, 208, 209, 210, 211, 212, 226, 227, 228, 231, 232, 246, 247, 248, 260, 261, 262, 272, 273, 274, 275, 282, 306, 313, 314, 315, 320, 322, 325, 329, 330, 345, 346, 351, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 482, 492, 504, 505, 512], "inform": [1, 8, 36, 47, 58, 64, 71, 79, 84, 103, 104, 105, 106, 107, 108, 109, 129, 155, 174, 191, 205, 220, 240, 257, 258, 269, 270, 275, 282, 306, 313, 320, 322, 325, 329, 330, 345, 346, 347, 348, 349, 350, 351, 367, 389, 404, 417, 427, 438, 454, 467, 468, 475, 476, 477, 479, 482, 483, 487, 489, 492, 493, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "dev_list": [1, 275], "bcst_enumerateusbdevic": [1, 275, 502, 503], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "printgenericerrornetwork": [1, 129, 155, 174, 191, 205, 220, 240, 257, 269, 275, 367, 389, 404, 417, 427, 438, 454, 467, 475, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521, 524], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "bcst_enumeratenetworkdevices_async": [1, 482, 502, 503], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "close": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 292, 295, 477, 487], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 316, 317, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448], "els": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 290, 291, 294, 324, 393, 477, 479, 483, 487, 489, 493], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "ipython": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "spyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "drive_1axis_mov": [2, 276], "192": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 504, 505, 506, 507, 508, 509, 510, 511, 512], "168": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 504, 505, 506, 507, 508, 509, 510, 511, 512], "110": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 504, 505, 506, 507, 508, 509, 510, 511, 512], "paramet": [2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 63, 69, 70, 76, 77, 78, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 487, 489, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "set": [2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 63, 69, 76, 77, 78, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 204, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263, 264, 265, 266, 267, 268, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "target_posit": [2, 4, 276, 278], "10000": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 32, 276, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 301, 302, 478, 488, 504, 505, 512], "relative_position_mod": [2, 4, 276, 278], "stop_decel": [2, 3, 4, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 304, 305], "timeout": [2, 3, 4, 6, 7, 11, 39, 41, 43, 44, 50, 61, 67, 74, 82, 90, 92, 94, 95, 112, 114, 116, 117, 133, 137, 139, 140, 159, 178, 195, 209, 227, 247, 251, 253, 254, 261, 263, 265, 266, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "second": [2, 3, 4, 5, 6, 7, 9, 10, 12, 22, 25, 37, 38, 40, 41, 42, 43, 44, 48, 49, 51, 54, 55, 56, 57, 59, 60, 62, 65, 66, 68, 70, 72, 73, 75, 76, 80, 81, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 105, 106, 110, 111, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 259, 260, 262, 263, 264, 265, 266, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "polar": [2, 3, 4, 6, 7, 13, 14, 15, 16, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 276, 277, 278, 280, 281, 283, 284, 285, 286, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305, 504, 505, 512, 513, 515, 516, 518, 519, 524], "enabl": [2, 3, 4, 6, 7, 13, 14, 15, 16, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 76, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 145, 276, 277, 278, 280, 281, 283, 284, 285, 286, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305, 326, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 347, 348, 349, 350, 379, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "active_low": [2, 3, 4, 6, 7, 13, 14, 15, 16, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 276, 277, 278, 280, 281, 283, 284, 285, 286, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305], "active_high": [2, 3, 4, 6, 7, 13, 14, 15, 16, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 276, 277, 278, 280, 281, 283, 284, 285, 286, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305], "en_forward": [2, 3, 4, 6, 7, 276, 277, 278, 280, 281, 504, 505, 512], "en_revers": [2, 3, 4, 6, 7, 276, 277, 278, 280, 281, 504, 505, 512], "orginal_direct": [2, 3, 276, 277], "model": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 492, 493, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "driver_info": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 493, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_getdriverinfo_async": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 483, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "nameopen": [2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 63, 69, 70, 76, 77, 78, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 204, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "drive_open_async": [2, 3, 4, 5, 6, 7, 502, 504], "drive_open": [2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281, 502, 504], "configur": [2, 3, 4, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 41, 42, 43, 44, 45, 46, 76, 85, 86, 92, 93, 94, 95, 96, 97, 100, 114, 115, 116, 117, 118, 119, 126, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 145, 154, 161, 162, 163, 164, 171, 172, 173, 180, 181, 188, 189, 190, 197, 198, 217, 218, 219, 229, 230, 237, 238, 239, 242, 243, 249, 250, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 326, 331, 332, 334, 335, 336, 337, 338, 339, 342, 352, 353, 354, 355, 356, 357, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 379, 388, 391, 392, 393, 394, 401, 402, 403, 406, 407, 414, 415, 416, 419, 420, 435, 436, 437, 443, 444, 451, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 504, 505, 506, 510, 512, 513, 514, 520, 521, 522], "drive_cfgaxismove_async": [2, 4, 6, 7, 502, 504], "drive_cfgaxismov": [2, 4, 6, 7, 276, 278, 280, 281, 502, 504], "drive_cfgaxisdirection_async": [2, 3, 502, 504], "drive_cfgaxisdirect": [2, 3, 276, 277, 502, 504], "drive_cfgencoderdirection_async": [2, 3, 502, 504], "drive_cfgencoderdirect": [2, 3, 276, 277, 502, 504], "drive_cfglimit_async": [2, 3, 4, 6, 7, 502, 504], "drive_cfglimit": [2, 3, 4, 6, 7, 276, 277, 278, 280, 281, 502, 504], "reset": [2, 3, 4, 6, 7, 276, 277, 278, 280, 281, 504, 505, 512, 513, 514, 515, 516, 518, 519], "drive_rstencoderposi_async": [2, 3, 4, 6, 7, 502, 504], "edst_reset": [2, 3, 4, 6, 7, 276, 277, 278, 280, 281], "servo": [2, 3, 4, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 28, 31, 34, 35, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 296, 297, 298, 301, 304, 305, 499, 500, 504, 505, 512, 522], "drive_enableservoon_async": [2, 3, 4, 5, 6, 7, 502, 504], "drive_enableservoon": [2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281, 502, 504], "start": [2, 4, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 34, 35, 38, 40, 41, 42, 43, 44, 49, 51, 60, 62, 66, 68, 73, 75, 76, 81, 83, 89, 91, 92, 93, 94, 95, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 132, 134, 137, 138, 139, 140, 145, 158, 160, 163, 164, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 251, 252, 253, 254, 260, 262, 263, 264, 265, 266, 272, 274, 276, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 304, 305, 307, 308, 309, 310, 326, 334, 335, 336, 337, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 371, 372, 373, 374, 379, 393, 394, 461, 462, 463, 464, 469, 470, 471, 472, 477, 487, 504, 505, 506, 510, 512, 513, 514, 515, 520, 521], "drive_start_async": [2, 4, 6, 7, 502, 504], "drive_start": [2, 4, 6, 7, 276, 278, 280, 281, 502, 504], "move_statu": [2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 276, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301], "drive_getmovestatus_async": [2, 4, 502, 504], "posi": [2, 4, 29, 276, 278, 299], "drive_readencoderposition_async": [2, 4, 502, 504], "encoder_posi": [2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 34, 35, 276, 278, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 301, 304, 305, 504, 505, 512], "logical_posi": [2, 4, 13, 31, 276, 278, 283, 301], "stop": [2, 3, 4, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 135, 136, 137, 138, 139, 140, 161, 162, 163, 164, 180, 181, 197, 198, 229, 230, 249, 250, 251, 252, 253, 254, 263, 264, 265, 266, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 304, 305, 307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 369, 370, 371, 372, 373, 374, 391, 392, 393, 394, 406, 407, 419, 420, 443, 444, 459, 460, 461, 462, 463, 464, 469, 470, 471, 472, 477, 486, 487, 496, 504, 505, 506, 512, 513, 514, 515, 516, 518, 519, 520, 521, 524], "drive_stop_async": [2, 3, 4, 6, 7, 502, 504], "drive_stop": [2, 3, 4, 6, 7, 276, 277, 278, 280, 281, 502, 504], "off": [2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 25, 26, 27, 28, 31, 33, 34, 35, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 296, 297, 298, 301, 303, 304, 305, 504, 505, 512, 515], "drive_enableservooff_async": [2, 3, 4, 5, 6, 7, 502, 504], "drive_enableservooff": [2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281, 502, 504], "drive_close_async": [2, 3, 4, 5, 6, 7, 502, 504], "drive_clos": [2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281, 502, 504], "drive_find_limit": [3, 277], "forward": [3, 6, 7, 26, 28, 277, 280, 281, 296, 298, 479, 489, 504, 505, 512, 523], "revers": [3, 6, 7, 26, 28, 277, 280, 281, 296, 298, 504, 505, 512, 523], "drive_cfgfindref_async": [3, 502, 504], "drive_cfgfindref": [3, 277, 502, 504], "refer": [3, 26, 27, 28, 98, 99, 143, 144, 277, 296, 297, 298, 340, 341, 377, 378, 504, 505, 512], "drive_findreference_async": [3, 502, 504], "drive_findrefer": [3, 277, 502, 504], "statu": [3, 26, 28, 54, 55, 56, 57, 105, 106, 122, 123, 124, 125, 150, 151, 152, 153, 167, 168, 169, 170, 184, 185, 186, 187, 201, 202, 203, 204, 213, 214, 215, 216, 233, 234, 235, 236, 258, 270, 277, 296, 298, 316, 317, 318, 319, 347, 348, 360, 361, 362, 363, 384, 385, 386, 387, 397, 398, 399, 400, 410, 411, 412, 413, 423, 424, 425, 426, 431, 432, 433, 434, 447, 448, 449, 450, 468, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "limit_statu": [3, 277], "drive_getlimitstatus_async": [3, 502, 504], "reverse_hit": [3, 26, 28, 277, 296, 298], "forward_hit": [3, 26, 28, 277, 296, 298], "move": [3, 4, 6, 7, 20, 21, 24, 277, 278, 280, 281, 290, 291, 293, 294, 304, 305, 499, 500, 504, 505, 512, 522], "sleep": [3, 4, 5, 6, 7, 9, 10, 11, 12, 22, 25, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 131, 132, 133, 134, 135, 137, 138, 139, 140, 145, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 170, 176, 177, 178, 179, 180, 184, 185, 186, 187, 193, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 222, 223, 225, 226, 227, 228, 229, 233, 234, 235, 236, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 277, 278, 279, 280, 281, 292, 295, 303, 304, 305, 307, 308, 309, 310, 316, 317, 318, 319, 324, 326, 331, 332, 334, 335, 336, 337, 347, 348, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374, 379, 384, 385, 386, 387, 388, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 406, 410, 411, 412, 413, 414, 415, 416, 419, 423, 424, 425, 426, 431, 432, 433, 434, 435, 436, 437, 440, 441, 443, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 461, 462, 463, 464, 469, 470, 471, 472, 477, 479, 480, 487], "delai": [3, 4, 5, 6, 7, 9, 10, 11, 12, 22, 25, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 131, 132, 133, 134, 135, 137, 138, 139, 140, 145, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 170, 176, 177, 178, 179, 180, 184, 185, 186, 187, 193, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 222, 223, 225, 226, 227, 228, 229, 233, 234, 235, 236, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 279, 280, 281, 292, 295, 303, 304, 305, 307, 308, 309, 310, 316, 317, 318, 319, 324, 326, 331, 332, 334, 335, 336, 337, 347, 348, 352, 353, 354, 355, 360, 361, 362, 363, 369, 371, 372, 373, 374, 379, 384, 385, 386, 387, 391, 393, 394, 397, 398, 399, 400, 406, 410, 411, 412, 413, 419, 423, 424, 425, 426, 431, 432, 433, 434, 440, 441, 443, 447, 448, 449, 450, 456, 457, 459, 461, 462, 463, 464, 469, 470, 471, 472, 479, 480, 506, 512, 513, 514, 515, 516, 518, 519, 520, 521], "": [3, 4, 5, 6, 7, 22, 25, 33, 41, 42, 43, 44, 54, 55, 56, 57, 70, 76, 85, 86, 92, 93, 94, 95, 105, 106, 114, 115, 116, 117, 122, 123, 124, 125, 135, 137, 138, 139, 140, 145, 150, 151, 152, 153, 161, 163, 164, 167, 168, 169, 170, 180, 184, 185, 186, 187, 197, 201, 202, 203, 204, 213, 214, 215, 216, 222, 223, 229, 233, 234, 235, 236, 242, 243, 249, 251, 252, 253, 254, 263, 264, 265, 266, 279, 280, 281, 292, 295, 303, 304, 305, 307, 308, 309, 310, 316, 317, 318, 319, 324, 326, 331, 332, 334, 335, 336, 337, 347, 348, 352, 353, 354, 355, 360, 361, 362, 363, 369, 371, 372, 373, 374, 379, 384, 385, 386, 387, 391, 393, 394, 397, 398, 399, 400, 406, 410, 411, 412, 413, 419, 423, 424, 425, 426, 431, 432, 433, 434, 440, 441, 443, 447, 448, 449, 450, 456, 457, 459, 461, 462, 463, 464, 469, 470, 471, 472, 477, 487, 504, 505, 506, 508, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 523], "drive_position_blend": [4, 278], "30000": [4, 278], "new_posit": [4, 31, 278, 301, 504, 505, 512], "read": [4, 28, 41, 42, 43, 44, 45, 46, 52, 53, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 114, 115, 116, 117, 118, 119, 120, 121, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 278, 296, 298, 307, 308, 309, 310, 311, 312, 314, 315, 321, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 480, 481, 484, 485, 486, 490, 491, 494, 495, 496, 499, 500, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "encod": [4, 13, 15, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 278, 283, 285, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305, 504, 505, 512, 522, 523, 524], "overwrit": [4, 278], "drive_overrideposition_async": [4, 502, 504], "drive_overrideposit": [4, 278, 502, 504], "drive_servo_on": [5, 279], "5": [5, 7, 33, 35, 45, 52, 54, 55, 70, 76, 77, 78, 85, 86, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 118, 120, 122, 123, 135, 136, 141, 143, 144, 145, 146, 147, 148, 150, 151, 161, 162, 163, 165, 167, 168, 180, 181, 182, 184, 185, 197, 198, 199, 201, 202, 211, 213, 214, 229, 230, 231, 233, 234, 242, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 281, 303, 305, 311, 314, 316, 317, 324, 326, 327, 328, 331, 332, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 356, 358, 360, 361, 369, 370, 375, 377, 378, 379, 380, 381, 382, 384, 385, 391, 392, 393, 395, 397, 398, 406, 407, 408, 410, 411, 419, 420, 421, 423, 424, 429, 431, 432, 443, 444, 445, 447, 448, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 486, 487, 489, 490, 491, 492, 496, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524], "drive_velocity_blend": [6, 280], "velocity_mod": [6, 7, 34, 35, 280, 281, 304, 305], "new_velo": [6, 7, 34, 35, 280, 281, 304, 305, 504, 505, 512], "5000": [6, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 31, 32, 34, 35, 280, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 301, 302, 304, 305], "drive_overridevelocity_async": [6, 7, 502, 504], "drive_overrideveloc": [6, 7, 280, 281, 502, 504], "3000": [6, 7, 34, 35, 280, 281, 304, 305], "drive_velocity_blending_acceler": [7, 281], "new_accel": [7, 35, 281, 305, 504, 505, 512], "100": [7, 16, 23, 29, 35, 41, 43, 44, 92, 94, 95, 114, 116, 117, 137, 139, 140, 222, 223, 251, 253, 254, 263, 265, 266, 281, 286, 293, 299, 305, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 440, 441, 461, 463, 464, 469, 471, 472, 477, 487, 518, 522], "new_decel": [7, 35, 281, 305, 504, 505, 512], "drive_overrideaccel_async": [7, 502, 504], "drive_overrideaccel": [7, 281, 502, 504], "6000": [7, 35, 281, 305], "100000": [7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 34, 35, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 304, 305, 504, 505, 512, 513, 514, 515, 516, 518, 519, 523], "system_eth": [8, 36, 47, 58, 64, 71, 79, 84, 109, 282, 306, 313, 320, 322, 325, 329, 330, 351], "get_network_info": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476], "hardwar": [8, 36, 47, 58, 64, 71, 79, 84, 109, 129, 155, 174, 191, 205, 220, 240, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 367, 389, 404, 417, 427, 438, 454, 468, 476, 504, 505, 512], "first": [8, 36, 47, 58, 64, 71, 79, 84, 85, 86, 87, 109, 126, 127, 128, 129, 130, 135, 136, 154, 155, 156, 161, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 188, 189, 190, 191, 192, 197, 198, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 331, 332, 333, 351, 364, 365, 366, 367, 368, 369, 370, 388, 389, 390, 391, 392, 393, 394, 401, 402, 403, 404, 405, 406, 407, 414, 415, 416, 417, 418, 419, 420, 427, 428, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 468, 476, 477, 479, 483, 487, 489, 493, 513, 515, 516, 518, 519, 523, 524], "last": [8, 36, 47, 58, 64, 71, 79, 84, 85, 86, 87, 109, 126, 127, 128, 129, 130, 135, 136, 154, 155, 156, 161, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 188, 189, 190, 191, 192, 197, 198, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 331, 332, 333, 351, 364, 365, 366, 367, 368, 369, 370, 388, 389, 390, 391, 392, 393, 394, 401, 402, 403, 404, 405, 406, 407, 414, 415, 416, 417, 418, 419, 420, 427, 428, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 468, 476], "submask": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476, 482, 483, 492, 493], "mac": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476, 482, 483, 492, 493, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "ip_addr": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "net_getipaddrandsubmask_async": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "net_getmacaddr_async": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "multiple_loops_async": [9, 37, 48, 59, 65, 72, 80, 88, 110, 131, 157, 176, 193, 207, 225, 245, 259, 271], "rtc": [9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 129, 131, 132, 133, 134, 155, 157, 158, 159, 160, 174, 176, 177, 178, 179, 191, 193, 194, 195, 196, 205, 207, 208, 209, 210, 220, 225, 226, 227, 228, 240, 245, 246, 247, 248, 258, 259, 260, 261, 262, 270, 271, 272, 273, 274, 367, 389, 404, 417, 427, 438, 454, 468, 476, 483, 493, 524], "string": [9, 10, 37, 38, 48, 49, 59, 60, 65, 66, 72, 73, 80, 81, 88, 89, 110, 111, 131, 132, 136, 157, 158, 162, 176, 177, 181, 193, 194, 198, 207, 208, 225, 226, 230, 245, 246, 250, 259, 260, 271, 272, 370, 392, 407, 420, 444, 460, 480, 481, 490, 491, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "readrtc_loop": [9, 37, 48, 59, 65, 72, 80, 88, 110, 131, 157, 176, 193, 207, 225, 245, 259, 271], "true": [9, 10, 12, 16, 17, 37, 38, 40, 48, 49, 51, 59, 60, 62, 65, 66, 68, 72, 73, 75, 80, 81, 83, 88, 89, 91, 110, 111, 113, 131, 132, 134, 157, 158, 160, 164, 176, 177, 179, 193, 194, 196, 207, 208, 210, 225, 226, 228, 245, 246, 248, 259, 260, 262, 271, 272, 274, 286, 287, 394, 477, 479, 483, 487, 489, 493, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "sys_getrtc_async": [9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 129, 131, 132, 133, 134, 155, 157, 158, 159, 160, 174, 176, 177, 178, 179, 191, 193, 194, 195, 196, 205, 207, 208, 209, 210, 220, 225, 226, 227, 228, 240, 245, 246, 247, 248, 258, 259, 260, 261, 262, 270, 271, 272, 273, 274, 483, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "printstring_loop": [9, 37, 48, 59, 65, 72, 80, 88, 110, 131, 157, 176, 193, 207, 225, 245, 259, 271], "gather": [9, 37, 48, 59, 65, 72, 80, 88, 110, 131, 157, 176, 193, 207, 225, 245, 259, 271], "part": [9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 131, 132, 133, 134, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 259, 260, 261, 262, 271, 272, 273, 274], "never": [9, 11, 37, 39, 48, 50, 59, 61, 65, 67, 72, 74, 80, 82, 88, 90, 110, 112, 131, 133, 157, 159, 176, 178, 193, 195, 207, 209, 225, 227, 245, 247, 259, 261, 271, 273], "becaus": [9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 131, 132, 133, 134, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 259, 260, 261, 262, 271, 272, 273, 274], "multiple_loops_thread": [10, 38, 49, 60, 66, 73, 81, 89, 111, 132, 158, 177, 194, 208, 226, 246, 260, 272], "getrtc": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274], "data": [10, 11, 12, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 60, 61, 62, 63, 66, 67, 68, 73, 74, 75, 77, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 154, 155, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 177, 178, 179, 180, 181, 188, 189, 190, 191, 194, 195, 196, 197, 198, 205, 208, 209, 210, 217, 218, 219, 220, 226, 227, 228, 229, 230, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 307, 308, 309, 310, 311, 312, 321, 327, 334, 335, 336, 337, 338, 339, 340, 341, 343, 352, 353, 354, 355, 356, 357, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 388, 389, 391, 392, 393, 394, 401, 402, 403, 404, 406, 407, 414, 415, 416, 417, 419, 420, 427, 435, 436, 437, 438, 443, 444, 451, 452, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 484, 485, 486, 487, 488, 490, 491, 494, 495, 496, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "str": [10, 11, 12, 38, 39, 40, 49, 50, 51, 60, 61, 62, 66, 67, 68, 73, 74, 75, 81, 82, 83, 89, 90, 91, 111, 112, 113, 132, 133, 134, 158, 159, 160, 177, 178, 179, 194, 195, 196, 208, 209, 210, 226, 227, 228, 246, 247, 248, 260, 261, 262, 272, 273, 274, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "printstr": [10, 38, 49, 60, 66, 73, 81, 89, 111, 132, 158, 177, 194, 208, 226, 246, 260, 272], "rtc_thread": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274], "print_thread": [10, 38, 49, 60, 66, 73, 81, 89, 111, 132, 158, 177, 194, 208, 226, 246, 260, 272], "sync": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274, 499, 522], "queri": [10, 11, 12, 38, 39, 40, 49, 50, 51, 60, 61, 62, 66, 67, 68, 73, 74, 75, 81, 82, 83, 89, 90, 91, 111, 112, 113, 132, 133, 134, 158, 159, 160, 177, 178, 179, 194, 195, 196, 208, 209, 210, 226, 227, 228, 246, 247, 248, 260, 261, 262, 272, 273, 274], "_threadprint": [10, 38, 49, 60, 66, 73, 81, 89, 111, 132, 158, 177, 194, 208, 226, 246, 260, 272], "target": [10, 12, 22, 25, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274, 292, 295, 487, 504, 505, 512], "_threadrtc": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274], "immedi": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274], "i": [10, 12, 20, 21, 22, 24, 25, 29, 38, 40, 41, 42, 43, 44, 45, 49, 51, 54, 55, 56, 57, 60, 62, 66, 68, 70, 73, 75, 81, 83, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 130, 132, 134, 137, 138, 139, 140, 141, 150, 151, 152, 153, 154, 156, 158, 160, 163, 167, 168, 169, 170, 171, 172, 175, 177, 179, 184, 185, 186, 187, 188, 189, 192, 194, 196, 201, 202, 203, 204, 206, 208, 210, 213, 214, 215, 216, 217, 218, 221, 226, 228, 233, 234, 235, 236, 237, 238, 241, 246, 248, 251, 252, 253, 254, 255, 260, 262, 263, 264, 265, 266, 267, 272, 274, 290, 291, 292, 294, 295, 299, 307, 308, 309, 310, 311, 316, 317, 318, 319, 324, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365, 368, 371, 372, 373, 374, 375, 384, 385, 386, 387, 388, 390, 393, 397, 398, 399, 400, 401, 402, 405, 410, 411, 412, 413, 414, 415, 418, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 436, 439, 447, 448, 449, 450, 451, 452, 455, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524], "parallel": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274], "single_loop_async": [11, 39, 50, 61, 67, 74, 82, 90, 112, 133, 159, 178, 195, 209, 227, 247, 261, 273], "loop_func": [11, 39, 41, 43, 44, 50, 61, 67, 74, 82, 90, 92, 94, 95, 112, 114, 116, 117, 133, 137, 139, 140, 159, 178, 195, 209, 227, 247, 251, 253, 254, 261, 263, 265, 266, 273, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472], "sec": [11, 39, 50, 61, 67, 74, 82, 90, 112, 133, 159, 164, 178, 195, 209, 227, 247, 261, 273, 277, 394, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "single_loop_thread": [12, 40, 51, 62, 68, 75, 83, 91, 113, 134, 160, 179, 196, 210, 228, 248, 262, 274], "motion_1axis_mov": [13, 283], "axi": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 477, 487, 504, 505, 512, 520, 521, 524], "two_pulse_mod": [13, 15, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 283, 285, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305], "rel_posi_mod": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 301, 302], "axis_dir_cw": [13, 15, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 283, 285, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305], "encoder_dir_cw": [13, 15, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 283, 285, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305], "forward_enable_tru": [13, 14, 15, 19, 26, 27, 28, 31, 34, 35, 283, 284, 285, 289, 296, 297, 298, 301, 304, 305], "reverse_enable_tru": [13, 14, 15, 19, 26, 27, 28, 31, 34, 35, 283, 284, 285, 289, 296, 297, 298, 301, 304, 305], "home_enable_fals": [13, 26, 28, 31, 283, 296, 298, 301], "motion_open_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 502, 505, 512], "open_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "motion_opencfgfile_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 502, 505, 512], "desktop": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305], "3axisstage_2p": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305], "ini": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 505, 512, 524], "opencfgfile_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35], "load": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 304, 305, 499, 500, 504, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "motion_loadcfgfile_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 502, 505, 512], "loadcfgfile_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35], "motion_cfgaxis_async": [13, 15, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35, 502, 505, 512], "cfgaxis_async": [13, 19, 22, 25, 26, 27, 28, 31, 32, 34, 35], "motion_cfglimit_async": [13, 14, 15, 19, 22, 25, 26, 27, 28, 31, 34, 35, 502, 505, 512], "cfglimit_async": [13, 14, 15, 19, 22, 25, 26, 27, 28, 31, 34, 35], "motion_cfghome_async": [13, 26, 28, 31, 502, 505, 512], "cfghome_async": [13, 26, 28, 31], "motion_cfgaxismove_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 31, 32, 34, 35, 502, 505, 512], "target_posi": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 301, 302, 304, 305, 504, 505, 512], "velo": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 301, 302, 304, 305, 504, 505, 512], "accel": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 301, 302, 304, 305, 504, 505, 512], "decel": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31, 32, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 301, 302, 304, 305, 504, 505, 512], "cfgaxismove_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 31, 32, 34, 35], "motion_rstencoderposi_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 34, 35, 502, 505, 512], "rstencoderposi_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 34, 35], "motion_enableservoon_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 33, 34, 35, 502, 505, 512], "enableservoon_async": [13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 28, 31, 33, 34, 35], "motion_startsingleaxismove_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 34, 35, 502, 505, 512], "startsingleaxismove_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 34, 35], "motion_getmovestatus_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 502, 505, 512], "motion_getlogicalposi_async": [13, 29, 31, 502, 505, 512], "motion_getencoderposi_async": [13, 31, 502, 505, 512], "motion_stop_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 502, 505, 512], "stop_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35], "motion_enableservooff_async": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 33, 34, 35, 502, 505, 512], "enableservooff_async": [13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 28, 31, 33, 34, 35], "motion_close_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 502, 505, 512], "close_async": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "motion_1axis_move_with_s_curve_acceler": [14, 284], "jerk": [14, 20, 284, 290, 505, 512], "accelet": [14, 20, 284, 290], "motion_cfgjerkandaccelmode_async": [14, 20, 502, 505, 512], "cfgjerkandaccelmode_async": [14, 20], "getmovestatus_async": [14, 17, 18, 19, 23], "motion_1axis_move_with_alarm_in": [15, 285], "alarm_enable_fals": [15, 285], "cfgaxisparam_async": 15, "motion_cfgalarm_async": [15, 502, 505, 512], "cfgalarm_async": 15, "getmovestatu": [15, 16], "motion_1axis_move_with_breakpoint": [16, 286], "start_posit": [16, 286], "pulse_width": [16, 286, 505, 512], "pulse_period": [16, 286, 505, 512], "pulse_numb": [16, 286, 505, 512], "motion_cfgbreakpoint_async": [16, 502, 505, 512], "cfgbreakpoint_async": 16, "motion_enablebreakpoint_async": [16, 502, 505, 512], "int": [16, 17, 23, 286, 287, 293, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "enablebreakpoint_async": 16, "motion_1axis_move_with_captur": [17, 287], "rising_edg": [17, 287], "capture_logical_posit": [17, 287], "motion_cfgcapture_async": [17, 502, 505, 512], "cfgcapture_async": 17, "motion_enablecapture_async": [17, 502, 505, 512], "enablecapture_async": 17, "capture_point": [17, 287], "motion_readcapturepoint_async": [17, 502, 505, 512], "readcapturepoint_async": 17, "motion_1axis_move_with_configuration_fil": [18, 288], "motion_1axis_move_with_inposit": [19, 289], "inposi_enable_fals": [19, 289], "motion_cfginposi_async": [19, 502, 505, 512], "cfginposi_async": 19, "motion_2axis_circular_interpol": [20, 290], "interpol": [20, 21, 24, 290, 291, 294, 505, 512, 522], "x_axi": [20, 290, 505, 512], "y_axi": [20, 290, 505, 512], "center_point_x": [20, 290, 505, 512], "2000": [20, 21, 24, 290, 291, 294, 478, 484, 485, 486, 488, 494, 495, 496], "center_point_i": [20, 290, 505, 512], "finish_point_x": [20, 290, 505, 512], "finish_point_i": [20, 290, 505, 512], "circular_dir_cw": [20, 290], "scurv": [20, 290, 499, 500], "motion_cfgcircularinterpo_async": [20, 502, 505, 512], "speed": [20, 21, 23, 24, 163, 164, 290, 291, 293, 294, 393, 394, 505, 512, 513, 514, 515, 516, 518, 519, 522, 524], "1000": [20, 22, 23, 25, 34, 41, 42, 43, 44, 76, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 145, 163, 251, 252, 253, 254, 263, 264, 265, 266, 290, 292, 293, 295, 304, 307, 308, 309, 310, 326, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 379, 393, 461, 462, 463, 464, 469, 470, 471, 472, 518, 522], "cfgcircularinterpo_async": 20, "motion_startcircularinterpo_async": [20, 502, 505, 512], "startcircularinterpo_async": 20, "rang": [20, 29, 41, 42, 43, 44, 45, 54, 55, 70, 92, 93, 94, 95, 96, 105, 106, 114, 115, 116, 117, 118, 122, 123, 130, 137, 138, 139, 140, 141, 150, 151, 156, 163, 167, 168, 175, 184, 185, 192, 201, 202, 206, 213, 214, 221, 233, 234, 241, 251, 252, 253, 254, 255, 263, 264, 265, 266, 267, 290, 299, 307, 308, 309, 310, 311, 316, 317, 324, 334, 335, 336, 337, 338, 347, 348, 352, 353, 354, 355, 356, 360, 361, 368, 371, 372, 373, 374, 375, 384, 385, 390, 393, 397, 398, 405, 410, 411, 418, 423, 424, 428, 431, 432, 439, 447, 448, 455, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 477, 478, 479, 482, 484, 485, 487, 488, 489, 492, 494, 495, 522, 524], "x_axis_move_statu": [20, 290], "y_axis_move_statu": [20, 290], "motion_2axis_linear_interpol": [21, 291], "axis1": [21, 22, 24, 25, 291, 292, 294, 295, 505, 512], "dest_posi1": [21, 24, 291, 294, 505, 512], "axis2": [21, 22, 24, 25, 291, 292, 294, 295, 505, 512], "dest_posi2": [21, 24, 291, 294, 505, 512], "motion_cfg2axislinearinterpo_async": [21, 502, 505, 512], "cfg2axislinearinterpo_async": 21, "motion_startlinearinterpo_async": [21, 24, 502, 505, 512], "startlinearinterpo_async": [21, 24], "axis1_move_statu": [21, 24, 291, 294], "axis2_move_statu": [21, 24, 291, 294], "motion_3axis_asynchronous_mov": 22, "getaxisstatu": [22, 25], "005": [22, 25, 135, 161, 163, 180, 197, 229, 249, 292, 295, 369, 391, 393, 406, 419, 443, 459, 477, 487, 506, 512, 513, 514, 515, 516, 518, 519, 520, 521], "axis1_thread": [22, 25, 292, 295], "axis2_thread": [22, 25, 292, 295], "axis3_thread": [22, 25, 292, 295], "axis3": [22, 24, 25, 292, 294, 295, 505, 512], "forward_enable_fals": [22, 25, 292, 295], "reverse_enable_fals": [22, 25, 292, 295], "defin": [22, 25, 292, 295, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "thread_1": [22, 25, 292, 295], "thread_2": [22, 25, 292, 295], "thread_3": [22, 25, 292, 295], "servoon": [22, 25], "join": [22, 25, 292, 295], "servooff_async": 22, "motion_3axis_helical_interpol": [23, 293], "center_x": [23, 293], "center_i": [23, 293], "finish_x": [23, 293], "finish_i": [23, 293], "pitch_axis3": [23, 293, 505, 512], "pitch_axis4": [23, 293, 505, 512], "rotation_num": [23, 293], "cal_timeout": [23, 293], "helical_dir_cw": [23, 293], "motion_cfghelicalinterpo_async": [23, 502, 505, 512], "fals": [23, 164, 293, 394, 477, 479, 483, 487, 489, 493, 504, 505, 512, 515, 523], "cfghelicalinterpo_async": 23, "motion_starthelicalinterpo_async": [23, 502, 505, 512], "starthelicalinterpo_async": 23, "motion_3axis_linear_interpol": [24, 294], "dest_posi3": [24, 294, 505, 512], "motion_cfg3axislinearinterpo_async": [24, 502, 505, 512], "cfg3axislinearinterpo_async": 24, "axis3_move_statu": [24, 294], "motion_3axis_synchronous_mov": [25, 295], "motion_startmultiaxismove_async": [25, 502, 505, 512], "startmultiaxismove_async": 25, "servooff": 25, "motion_find_hom": [26, 296], "find_hom": [26, 296], "dir_revers": [26, 27, 28, 296, 297, 298], "motion_cfgfindref_async": [26, 27, 28, 502, 505, 512], "search_velo": [26, 27, 28, 296, 297, 298, 504, 505, 512], "search_accl": [26, 27, 28, 296, 297, 298, 504, 505, 512], "approach_velo_perc": [26, 27, 28, 296, 297, 298, 504, 505, 512], "20": [26, 27, 28, 135, 161, 164, 180, 197, 229, 249, 296, 297, 298, 369, 391, 394, 406, 419, 443, 459, 504, 505, 512], "en_reset_posi": [26, 27, 28, 296, 297, 298, 504, 505, 512], "offset_posi": [26, 27, 28, 296, 297, 298, 504, 505, 512], "1500": [26, 27, 28, 296, 297, 298], "cfgfindref_async": [26, 27, 28], "motion_findref_async": [26, 27, 28, 502, 505, 512], "findref_async": [26, 27, 28], "home_statu": [26, 28, 296, 298], "limit": [26, 296, 477, 487, 499, 500, 504, 505, 512, 522, 523], "hit_statu": [26, 28, 296, 298], "motion_getlimitstatus_async": [26, 28, 502, 505, 512], "hit": [26, 28, 296, 298], "motion_gethomestatus_async": [26, 28, 502, 505, 512], "found": [26, 28, 296, 298, 505, 512, 524], "driving_statu": [26, 27, 28, 296, 297, 298], "motion_checkref_async": [26, 27, 28, 502, 505, 512], "motion_find_index": [27, 297], "one_pulse_mod": [27, 297], "find_index": [27, 297], "motion_cfgencoder_async": [27, 34, 35, 502, 505, 512], "cfgencoder_async": [27, 34, 35], "motion_find_limit": [28, 298], "find_limit": [28, 298], "home": [28, 298, 499, 500, 504, 505, 512, 522, 523], "motion_get_logical_posit": [29, 299], "motion_setlogicalposi_async": [29, 502, 505, 512], "setlogicalposi_async": 29, "getlogicalposi": 29, "motion_load_configuration_fil": [30, 300], "motion_position_blend": [31, 301], "motion_overrideaxisposi_async": [31, 502, 505, 512], "overrideaxisposi_async": 31, "motion_save_configuration_fil": [32, 302], "motion_savecfgfile_async": [32, 502, 505, 512], "savecfgfile_async": 32, "motion_servo_on": [33, 303], "motion_velocity_blend": [34, 304], "overrid": [34, 35, 304, 305, 504, 505, 512], "motion_overrideaxisvelocity_async": [34, 35, 502, 505, 512], "overrideaxisvelocity_async": [34, 35], "motion_velocity_blending_acceler": [35, 305], "veloc": [35, 305, 499, 500, 504, 505, 512, 523], "motion_overrideaxisaccel_async": [35, 502, 505, 512], "overrideaxisaccel_async": 35, "ai_n_samples_in_loop": [41, 92, 114, 137, 251, 263, 307, 334, 352, 371, 461, 469], "obtain": [41, 42, 43, 44, 45, 46, 63, 92, 93, 94, 95, 96, 97, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 321, 334, 335, 336, 337, 338, 339, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "util": [41, 43, 44, 45, 92, 94, 95, 96, 114, 116, 117, 118, 137, 139, 140, 141, 251, 253, 254, 255, 263, 265, 266, 267, 307, 309, 310, 311, 334, 336, 337, 338, 352, 354, 355, 356, 371, 373, 374, 375, 461, 463, 464, 465, 469, 471, 472, 473], "retriev": [41, 43, 44, 45, 46, 63, 92, 94, 95, 96, 97, 114, 116, 117, 118, 119, 137, 139, 140, 141, 142, 251, 253, 254, 255, 256, 263, 265, 266, 267, 268, 307, 309, 310, 311, 312, 321, 334, 336, 337, 338, 339, 352, 354, 355, 356, 357, 371, 373, 374, 375, 376, 461, 463, 464, 465, 466, 469, 471, 472, 473, 474, 506, 512, 513, 514, 515, 520, 521], "channel": [41, 43, 44, 76, 92, 94, 95, 114, 116, 117, 137, 139, 140, 145, 251, 253, 254, 263, 265, 266, 307, 309, 310, 326, 334, 336, 337, 352, 354, 355, 371, 373, 374, 379, 461, 463, 464, 469, 471, 472, 477, 484, 485, 487, 494, 495, 499, 500, 506, 510, 511, 512, 513, 514, 518, 519, 520, 521, 524], "m": [41, 43, 44, 85, 86, 92, 94, 95, 114, 116, 117, 137, 139, 140, 222, 223, 242, 243, 251, 253, 254, 263, 265, 266, 307, 309, 310, 331, 332, 334, 336, 337, 352, 354, 355, 371, 373, 374, 440, 441, 456, 457, 461, 463, 464, 469, 471, 472, 477, 487], "begin": [41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "next": [41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 76, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "outlin": [41, 42, 43, 44, 45, 46, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 145, 146, 147, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 379, 380, 381, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "procedur": [41, 42, 43, 44, 45, 46, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 145, 146, 147, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 379, 380, 381, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "stream": [41, 42, 43, 44, 76, 92, 93, 94, 95, 100, 114, 115, 116, 117, 137, 138, 139, 140, 145, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 326, 334, 335, 336, 337, 342, 352, 353, 354, 355, 371, 372, 373, 374, 379, 461, 462, 463, 464, 469, 470, 471, 472, 477, 487, 506, 512, 513, 514, 515, 516, 518, 519, 520, 521], "final": [41, 42, 43, 44, 45, 46, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 145, 146, 147, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 379, 380, 381, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 504, 505, 512], "conclud": [41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "explain": [41, 42, 43, 44, 45, 46, 76, 77, 78, 92, 93, 94, 95, 96, 97, 100, 101, 102, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 145, 146, 147, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 379, 380, 381, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "get_sampl": [41, 43, 44, 92, 94, 95, 114, 116, 117, 137, 139, 140, 251, 253, 254, 263, 265, 266, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472], "600": [41, 43, 44, 92, 94, 95, 114, 116, 117, 137, 139, 140, 251, 253, 254, 263, 265, 266, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472, 477, 487], "05": [41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 364, 365, 366, 371, 372, 373, 374, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 461, 462, 463, 464, 469, 470, 471, 472, 477, 487], "exit_tim": [41, 43, 44, 92, 94, 95, 114, 116, 117, 137, 139, 140, 251, 253, 254, 263, 265, 266, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472], "time_c": [41, 43, 44, 92, 94, 95, 114, 116, 117, 137, 139, 140, 251, 253, 254, 263, 265, 266, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472], "acquisit": [41, 42, 43, 44, 45, 46, 63, 92, 93, 94, 95, 96, 97, 98, 99, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 321, 334, 335, 336, 337, 338, 339, 340, 341, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 377, 378, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 487, 506, 512, 513, 514, 520, 521, 524], "ai_readstreaming_async": [41, 42, 43, 44, 92, 93, 94, 95, 96, 97, 98, 99, 114, 115, 116, 117, 137, 138, 139, 140, 251, 252, 253, 254, 263, 264, 265, 266, 477, 502, 506, 512, 513, 514, 520, 521], "len": [41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 163, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 393, 461, 462, 463, 464, 469, 470, 471, 472, 477, 482, 487, 492, 506, 512, 513, 514, 520, 521], "On": [41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 461, 462, 463, 464, 469, 470, 471, 472, 477, 487, 523], "demand": [41, 42, 43, 44, 92, 93, 94, 95, 98, 99, 114, 115, 116, 117, 137, 138, 139, 140, 143, 144, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 334, 335, 336, 337, 340, 341, 352, 353, 354, 355, 371, 372, 373, 374, 377, 378, 461, 462, 463, 464, 469, 470, 471, 472, 477, 487, 499, 500, 506, 508, 510, 512, 513, 514, 520, 521, 522, 523], "continu": [41, 42, 92, 93, 114, 115, 137, 138, 251, 252, 263, 264, 307, 308, 334, 335, 352, 353, 371, 372, 461, 462, 469, 470, 477, 487, 499, 500, 506, 510, 512, 513, 514, 520, 521, 523], "sampling_r": [41, 42, 43, 44, 76, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 145, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 326, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 379, 461, 462, 463, 464, 469, 470, 471, 472, 506, 510, 512, 513, 514, 520, 521], "400": [41, 92, 114, 137, 251, 263, 307, 334, 352, 371, 461, 469], "ai_open_async": [41, 42, 43, 44, 45, 46, 63, 92, 93, 94, 95, 96, 97, 98, 99, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 477, 502, 506, 508, 512, 513, 514, 520, 521], "ai_setmode_async": [41, 42, 43, 44, 45, 46, 92, 93, 94, 95, 96, 97, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 477, 502, 506, 512, 513, 514, 520, 521], "rate": [41, 42, 43, 44, 76, 92, 93, 94, 95, 114, 115, 116, 117, 126, 137, 138, 139, 140, 145, 154, 171, 188, 217, 237, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 326, 334, 335, 336, 337, 352, 353, 354, 355, 364, 371, 372, 373, 374, 379, 388, 401, 414, 435, 451, 461, 462, 463, 464, 469, 470, 471, 472, 477, 480, 487, 490, 505, 506, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524], "1k": [41, 42, 43, 44, 76, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 145, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 326, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 379, 461, 462, 463, 464, 469, 470, 471, 472], "hz": [41, 42, 43, 44, 76, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 145, 251, 252, 253, 254, 263, 264, 265, 266, 307, 308, 309, 310, 326, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 379, 461, 462, 463, 464, 469, 470, 471, 472, 506, 510, 512, 513, 514, 520, 521], "ai_setsamplingrate_async": [41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 251, 252, 253, 254, 263, 264, 265, 266, 477, 502, 506, 512, 513, 514, 520, 521], "pt": [41, 42, 92, 93, 114, 115, 137, 138, 251, 252, 263, 264, 307, 308, 334, 335, 352, 353, 371, 372, 461, 462, 469, 470, 518, 522], "ai_setnumsamples_async": [41, 42, 92, 93, 114, 115, 137, 138, 251, 252, 263, 264, 477, 502, 506, 512, 513, 514, 520, 521], "ai_start_async": [41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 251, 252, 253, 254, 263, 264, 265, 266, 477, 502, 506, 512, 513, 514, 520, 521], "200": [41, 43, 44, 92, 94, 95, 114, 116, 117, 137, 139, 140, 251, 253, 254, 263, 265, 266, 307, 309, 310, 334, 336, 337, 352, 354, 355, 371, 373, 374, 461, 463, 464, 469, 471, 472, 522], "ai_stop_async": [41, 42, 43, 44, 92, 93, 94, 95, 114, 115, 116, 117, 137, 138, 139, 140, 251, 252, 253, 254, 263, 264, 265, 266, 477, 502, 506, 512, 513, 514, 520, 521], "ai_close_async": [41, 42, 43, 44, 45, 46, 63, 92, 93, 94, 95, 96, 97, 98, 99, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 477, 502, 506, 508, 512, 513, 514, 520, 521], "ai_n_samples_onc": [42, 93, 115, 138, 252, 264, 308, 335, 353, 372, 462, 470], "50": [42, 93, 115, 138, 252, 264, 308, 335, 353, 372, 462, 470], "point": [42, 93, 115, 138, 252, 264, 308, 335, 353, 372, 462, 470, 477, 487, 505, 512, 522], "read_point": [42, 93, 115, 138, 252, 264, 308, 335, 353, 372, 462, 470], "chip_select": [42, 45, 92, 93, 94, 95, 96, 97, 98, 99, 115, 118, 138, 141, 143, 144, 252, 255, 264, 267, 334, 335, 336, 337, 338, 339, 340, 341, 506, 512, 513, 514, 520, 521], "ai_continu": [43, 94, 116, 139, 253, 265, 309, 336, 354, 373, 463, 471], "loop": [43, 44, 54, 55, 94, 95, 105, 106, 116, 117, 122, 123, 139, 140, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 253, 254, 265, 266, 309, 310, 316, 317, 336, 337, 347, 348, 354, 355, 360, 361, 373, 374, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448, 463, 464, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 499, 500], "n": [43, 44, 85, 86, 94, 95, 116, 117, 139, 140, 242, 243, 253, 254, 265, 266, 309, 310, 331, 332, 336, 337, 354, 355, 373, 374, 456, 457, 463, 464, 471, 472, 477, 487, 499, 500, 506, 510, 511, 512, 513, 514, 519, 520, 521, 522, 523], "sampl": [43, 44, 76, 85, 86, 94, 95, 116, 117, 139, 140, 145, 242, 243, 253, 254, 265, 266, 309, 310, 326, 331, 332, 336, 337, 354, 355, 373, 374, 379, 456, 457, 463, 464, 471, 472, 477, 485, 487, 495, 499, 500, 506, 508, 510, 511, 512, 513, 514, 519, 520, 521, 522, 523, 524], "ai_continuous_with_logg": [44, 95, 117, 140, 254, 266, 310, 337, 355, 374, 464, 472], "save": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472, 499, 500, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 522], "csv": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "write": [44, 52, 53, 54, 55, 70, 76, 86, 95, 98, 99, 100, 103, 104, 105, 106, 117, 120, 121, 122, 123, 140, 143, 144, 145, 148, 149, 150, 151, 165, 166, 167, 168, 182, 183, 184, 185, 199, 200, 201, 202, 211, 212, 213, 214, 223, 231, 232, 233, 234, 243, 254, 266, 310, 314, 315, 316, 317, 324, 326, 332, 337, 340, 341, 342, 345, 346, 347, 348, 355, 358, 359, 360, 361, 374, 377, 378, 379, 382, 383, 384, 385, 395, 396, 397, 398, 408, 409, 410, 411, 421, 422, 423, 424, 429, 430, 431, 432, 441, 445, 446, 447, 448, 457, 464, 472, 478, 479, 480, 481, 486, 488, 489, 490, 491, 496, 499, 500, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "logger_write2dlist": [44, 95, 117, 140, 254, 266, 310, 337, 355, 374, 464, 472, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "wpc_test": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472], "logger_openfil": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "header": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "logger_writehead": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "ch0": [44, 77, 78, 87, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 117, 140, 143, 144, 146, 147, 222, 223, 224, 244, 254, 266, 310, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 355, 374, 377, 378, 380, 381, 440, 441, 442, 458, 464, 472, 477, 487], "ch1": [44, 77, 78, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 117, 140, 143, 144, 146, 147, 222, 223, 224, 243, 244, 254, 266, 310, 327, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 355, 374, 377, 378, 380, 381, 440, 441, 442, 457, 458, 464, 472, 477, 487], "ch2": [44, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 117, 140, 143, 144, 146, 147, 254, 266, 310, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 355, 374, 377, 378, 380, 381, 464, 472, 477, 487], "ch3": [44, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 117, 140, 143, 144, 146, 147, 254, 266, 310, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 355, 374, 377, 378, 380, 381, 464, 472, 477, 487], "ch4": [44, 77, 92, 93, 94, 95, 96, 97, 98, 99, 101, 117, 140, 143, 146, 254, 266, 310, 327, 334, 335, 336, 337, 338, 339, 340, 341, 343, 355, 374, 377, 380, 464, 472, 477, 487], "ch5": [44, 77, 92, 93, 94, 95, 96, 97, 98, 99, 101, 117, 140, 143, 146, 254, 266, 310, 327, 334, 335, 336, 337, 338, 339, 340, 341, 343, 355, 374, 377, 380, 464, 472, 477, 487], "ch6": [44, 77, 92, 93, 94, 95, 96, 97, 98, 99, 101, 117, 140, 143, 146, 254, 266, 310, 327, 334, 335, 336, 337, 338, 339, 340, 341, 343, 355, 374, 377, 380, 464, 472, 477, 487], "ch7": [44, 77, 92, 93, 94, 95, 96, 97, 98, 99, 101, 117, 140, 143, 146, 254, 266, 310, 327, 334, 335, 336, 337, 338, 339, 340, 341, 343, 355, 374, 377, 380, 464, 472, 477, 487], "ai_on_demand_in_loop": [45, 96, 118, 141, 255, 267, 311, 338, 356, 375, 465, 473], "ai_readondemand_async": [45, 46, 63, 92, 93, 94, 95, 96, 97, 98, 99, 118, 119, 141, 142, 143, 144, 255, 256, 267, 268, 477, 502, 506, 508, 512, 513, 514, 520, 521], "ai_on_demand_onc": [46, 63, 97, 119, 142, 256, 268, 312, 321, 339, 357, 376, 466, 474], "dio_loopback_pin": [52, 103, 120, 148, 165, 182, 199, 211, 231, 314, 345, 358, 382, 395, 408, 421, 429, 445], "involv": [52, 53, 98, 99, 103, 104, 120, 121, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 340, 341, 345, 346, 358, 359, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446], "send": [52, 53, 98, 99, 103, 104, 120, 121, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 340, 341, 345, 346, 358, 359, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 477, 487, 513, 514, 515, 516, 518, 519], "signal": [52, 53, 54, 55, 56, 57, 76, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 314, 315, 316, 317, 318, 319, 326, 327, 328, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 510, 512, 514, 520, 521], "receiv": [52, 53, 98, 99, 103, 104, 120, 121, 135, 143, 144, 148, 149, 161, 165, 166, 180, 182, 183, 197, 199, 200, 211, 212, 229, 231, 232, 249, 314, 315, 340, 341, 345, 346, 358, 359, 369, 377, 378, 382, 383, 391, 395, 396, 406, 408, 409, 419, 421, 422, 429, 430, 443, 445, 446, 459, 513, 514, 515, 516, 518, 519, 524], "singl": [52, 53, 98, 99, 103, 104, 120, 121, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 340, 341, 345, 346, 358, 359, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 499, 505, 512], "commonli": [52, 53, 98, 99, 103, 104, 120, 121, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 340, 341, 345, 346, 358, 359, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446], "illustr": [52, 53, 54, 55, 56, 57, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 314, 315, 316, 317, 318, 319, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450], "requir": [52, 53, 54, 55, 56, 57, 98, 99, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 143, 144, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 314, 315, 316, 317, 318, 319, 340, 341, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 377, 378, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 522], "lastli": [52, 53, 54, 55, 56, 57, 98, 99, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 143, 144, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 186, 187, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 231, 232, 233, 234, 235, 236, 314, 315, 316, 317, 318, 319, 340, 341, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 377, 378, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 408, 409, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450], "do_port": [52, 53, 70, 103, 104, 105, 106, 107, 108, 120, 121, 127, 128, 148, 149, 165, 166, 172, 173, 182, 183, 189, 190, 199, 200, 211, 212, 218, 219, 231, 232, 238, 239, 314, 315, 324, 345, 346, 347, 348, 349, 350, 358, 359, 365, 366, 382, 383, 395, 396, 402, 403, 408, 409, 415, 416, 421, 422, 429, 430, 436, 437, 445, 446, 452, 453, 481, 491, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_port": [52, 53, 103, 104, 120, 121, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 345, 346, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_pin": [52, 103, 120, 148, 165, 182, 199, 211, 231, 314, 345, 358, 382, 395, 408, 421, 429, 445], "di_pin": [52, 103, 120, 148, 165, 182, 199, 211, 231, 314, 345, 358, 382, 395, 408, 421, 429, 445], "6": [52, 85, 86, 103, 104, 105, 106, 107, 108, 120, 148, 165, 182, 199, 211, 231, 242, 243, 314, 331, 332, 345, 346, 347, 348, 349, 350, 358, 382, 395, 408, 421, 429, 445, 456, 457, 477, 479, 487, 489, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "output": [52, 53, 54, 55, 56, 57, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 127, 128, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 172, 173, 182, 183, 184, 185, 186, 187, 189, 190, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 218, 219, 231, 232, 233, 234, 235, 236, 238, 239, 314, 315, 316, 317, 318, 319, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 365, 366, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 402, 403, 408, 409, 410, 411, 412, 413, 415, 416, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437, 445, 446, 447, 448, 449, 450, 452, 453, 478, 479, 481, 488, 489, 491, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524], "do_openpins_async": [52, 54, 56, 120, 122, 124, 127, 128, 148, 150, 152, 165, 167, 169, 172, 173, 182, 184, 186, 189, 190, 199, 201, 203, 211, 213, 215, 218, 219, 231, 233, 235, 238, 239, 481, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "high": [52, 53, 54, 55, 56, 57, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 127, 128, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 172, 173, 182, 183, 184, 185, 186, 187, 189, 190, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 218, 219, 231, 232, 233, 234, 235, 236, 238, 239, 314, 315, 316, 317, 318, 319, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 365, 366, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 402, 403, 408, 409, 410, 411, 412, 413, 415, 416, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437, 445, 446, 447, 448, 449, 450, 452, 453, 481, 491, 504, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523], "low": [52, 53, 54, 55, 56, 57, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 124, 125, 127, 128, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 172, 173, 182, 183, 184, 185, 186, 187, 189, 190, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 218, 219, 231, 232, 233, 234, 235, 236, 238, 239, 314, 315, 316, 317, 318, 319, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 365, 366, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 402, 403, 408, 409, 410, 411, 412, 413, 415, 416, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437, 445, 446, 447, 448, 449, 450, 452, 453, 481, 491, 504, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 523], "do_writepins_async": [52, 56, 103, 107, 120, 124, 127, 128, 148, 152, 165, 169, 172, 173, 182, 186, 189, 190, 199, 203, 211, 215, 218, 219, 231, 235, 238, 239, 481, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "iutput": [52, 120, 148, 165, 182, 199, 211, 231, 314, 358, 382, 395, 408, 421, 429, 445], "di_openpins_async": [52, 120, 148, 165, 182, 199, 211, 231, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "state": [52, 53, 54, 55, 70, 103, 104, 105, 106, 107, 108, 120, 121, 122, 123, 148, 149, 150, 151, 165, 166, 167, 168, 182, 183, 184, 185, 199, 200, 201, 202, 211, 212, 213, 214, 231, 232, 233, 234, 314, 315, 316, 317, 324, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 382, 383, 384, 385, 395, 396, 397, 398, 408, 409, 410, 411, 421, 422, 423, 424, 429, 430, 431, 432, 445, 446, 447, 448, 479, 489, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "state_list": [52, 53, 103, 104, 120, 121, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 345, 346, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_readpins_async": [52, 103, 120, 148, 165, 182, 199, 211, 231, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_closepins_async": [52, 54, 56, 120, 122, 124, 127, 128, 148, 150, 152, 165, 167, 169, 172, 173, 182, 184, 186, 189, 190, 199, 201, 203, 211, 213, 215, 218, 219, 231, 233, 235, 238, 239, 481, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "input": [52, 53, 120, 121, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524], "di_closepins_async": [52, 120, 148, 165, 182, 199, 211, 231, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_loopback_port": [53, 104, 121, 149, 166, 183, 200, 212, 232, 315, 346, 359, 383, 396, 409, 422, 430, 446], "pin": [53, 77, 78, 98, 99, 101, 102, 104, 121, 127, 128, 143, 144, 146, 147, 149, 166, 172, 173, 183, 189, 190, 200, 212, 218, 219, 232, 238, 239, 315, 327, 328, 340, 341, 343, 344, 346, 359, 365, 366, 377, 378, 380, 381, 383, 396, 402, 403, 409, 415, 416, 422, 430, 436, 437, 446, 452, 453, 481, 491, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "do_openport_async": [53, 55, 57, 121, 123, 125, 149, 151, 153, 166, 168, 170, 183, 185, 187, 200, 202, 204, 212, 214, 216, 232, 234, 236, 479, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_openport_async": [53, 121, 149, 166, 183, 200, 212, 232, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_writeport_async": [53, 57, 70, 104, 108, 121, 125, 149, 153, 166, 170, 183, 187, 200, 204, 212, 216, 232, 236, 479, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_readport_async": [53, 104, 121, 149, 166, 183, 200, 212, 232, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_closeport_async": [53, 55, 57, 121, 123, 125, 149, 151, 153, 166, 168, 170, 183, 185, 187, 200, 202, 204, 212, 214, 216, 232, 234, 236, 479, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_closeport_async": [53, 121, 149, 166, 183, 200, 212, 232, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_blinky_pin": [54, 105, 122, 150, 167, 184, 201, 213, 233, 316, 347, 360, 384, 397, 410, 423, 431, 447], "voltag": [54, 55, 56, 57, 105, 106, 107, 108, 122, 123, 124, 125, 150, 151, 152, 153, 167, 168, 169, 170, 184, 185, 186, 187, 201, 202, 203, 204, 213, 214, 215, 216, 233, 234, 235, 236, 316, 317, 318, 319, 347, 348, 349, 350, 360, 361, 362, 363, 384, 385, 386, 387, 397, 398, 399, 400, 410, 411, 412, 413, 423, 424, 425, 426, 431, 432, 433, 434, 447, 448, 449, 450, 477, 478, 487, 488, 506, 510, 512, 514, 522], "appli": [54, 55, 105, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448], "blink": [54, 55, 105, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448], "effect": [54, 55, 105, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448, 506, 510, 512, 513, 514, 520, 521], "pinindex": [54, 105, 122, 150, 167, 184, 201, 213, 233, 316, 347, 360, 384, 397, 410, 423, 431, 447], "toggl": [54, 55, 70, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 324, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_togglepins_async": [54, 105, 122, 150, 167, 184, 201, 213, 233, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "led": [54, 55, 56, 57, 105, 106, 122, 123, 124, 125, 150, 151, 152, 153, 167, 168, 169, 170, 184, 185, 186, 187, 201, 202, 203, 204, 213, 214, 215, 216, 233, 234, 235, 236, 316, 317, 318, 319, 347, 348, 360, 361, 362, 363, 384, 385, 386, 387, 397, 398, 399, 400, 410, 411, 412, 413, 423, 424, 425, 426, 431, 432, 433, 434, 447, 448, 449, 450, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "do_blinky_port": [55, 106, 123, 151, 168, 185, 202, 214, 234, 317, 348, 361, 385, 398, 411, 424, 432, 448], "do_toggleport_async": [55, 106, 123, 151, 168, 185, 202, 214, 234, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_write_pin": [56, 107, 124, 152, 169, 186, 203, 215, 235, 318, 349, 362, 386, 399, 412, 425, 433, 449], "written": [56, 57, 107, 108, 124, 125, 126, 127, 152, 153, 154, 169, 170, 171, 172, 186, 187, 188, 189, 203, 204, 215, 216, 217, 218, 235, 236, 237, 238, 318, 319, 349, 350, 362, 363, 364, 365, 386, 387, 388, 399, 400, 401, 402, 412, 413, 414, 415, 425, 426, 433, 434, 435, 436, 449, 450, 451, 452, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pin_index": [56, 107, 124, 152, 169, 186, 203, 215, 235, 318, 349, 362, 386, 399, 412, 425, 433, 449], "do_write_port": [57, 108, 125, 153, 170, 187, 204, 216, 236, 319, 350, 363, 387, 400, 413, 426, 434, 450], "ai24bit": [63, 321], "relay_read_count": [69, 323], "index": [69, 323, 499, 500, 504, 505, 509, 512, 515, 523, 524], "relay_open_async": [69, 70, 502, 509], "relay_read_async": [69, 502, 509], "relay_close_async": [69, 70, 502, 509], "relay_set_channel": [70, 324], "ao_waveform_gen": [76, 100, 145, 326, 342, 379], "form_mod": [76, 145, 326, 379], "amplitud": [76, 145, 326, 379, 510, 512, 514], "offset": [76, 145, 326, 379, 504, 505, 510, 512, 514], "period_0": [76, 145, 326, 379], "period_1": [76, 145, 326, 379], "ao_open_async": [76, 77, 78, 98, 99, 101, 102, 143, 144, 145, 146, 147, 478, 502, 510, 512, 514], "ao_setenablechannels_async": [76, 145, 502, 510, 512, 514], "form": [76, 145, 326, 379, 510, 512, 514, 522, 524], "ao_setform_async": [76, 145, 502, 510, 512, 514], "ao_setformparam_async": [76, 145, 502, 510, 512, 514], "ao_setmode_async": [76, 145, 502, 510, 512, 514], "ao_setsamplingrate_async": [76, 145, 502, 510, 512, 514], "info": [76, 103, 104, 105, 106, 107, 108, 145, 326, 345, 346, 347, 348, 349, 350, 379, 477, 487, 497, 498, 499, 500, 510, 512, 514], "ao_openstreaming_async": [76, 145, 502, 510, 512, 514], "ao_startstreaming_async": [76, 145, 502, 510, 512, 514], "ao_closestreaming_async": [76, 145, 502, 510, 512, 514], "ao_close_async": [76, 77, 78, 98, 99, 101, 102, 143, 144, 145, 146, 147, 478, 502, 510, 512, 514], "ao_write_all_channel": [77, 101, 146, 327, 343, 380], "simultan": [77, 98, 101, 143, 146, 327, 340, 343, 377, 380, 478, 488, 506, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522], "5v": [77, 98, 101, 143, 146, 327, 340, 343, 377, 380, 522], "3v": [77, 98, 101, 143, 146, 327, 340, 343, 377, 380, 513, 514, 515, 516, 518, 519, 522], "2v": [77, 98, 101, 143, 146, 327, 340, 343, 377, 380], "0v": [77, 98, 101, 143, 146, 327, 340, 343, 377, 380], "ao_writeallchannels_async": [77, 98, 101, 143, 146, 478, 488, 502, 510, 512, 514], "ao_write_one_channel": [78, 102, 147, 328, 344, 381], "v": [78, 99, 102, 144, 147, 328, 341, 344, 378, 381, 477, 487], "ao_writeonechannel_async": [78, 99, 102, 144, 147, 502, 510, 512, 514], "temperature_tc": [85, 86, 87, 242, 243, 244, 331, 332, 333, 456, 457, 458], "tc_read_channel_data": [85, 242, 331, 456], "show": [85, 86, 87, 126, 127, 128, 130, 135, 136, 154, 156, 161, 162, 163, 164, 171, 172, 173, 175, 180, 181, 188, 189, 190, 192, 197, 198, 206, 217, 218, 219, 221, 222, 223, 224, 229, 230, 237, 238, 239, 241, 242, 243, 244, 249, 250, 331, 332, 333, 364, 365, 366, 368, 369, 370, 388, 390, 391, 392, 393, 394, 401, 402, 403, 405, 406, 407, 414, 415, 416, 418, 419, 420, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 451, 452, 453, 455, 456, 457, 458, 459, 460, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "thermal": [85, 86, 87, 222, 223, 224, 242, 243, 244, 331, 332, 333, 440, 441, 442, 456, 457, 458, 511, 518, 519, 520, 521, 524], "ch": [85, 86, 242, 243, 331, 332, 456, 457], "over_sampling_mod": [85, 86, 242, 243, 331, 332, 456, 457], "16": [85, 86, 127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 242, 243, 331, 332, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 456, 457, 480, 481, 490, 491, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "thermo_typ": [85, 86, 242, 243, 331, 332, 456, 457], "b": [85, 86, 242, 243, 331, 332, 456, 457, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "type": [85, 86, 242, 243, 331, 332, 456, 457, 484, 485, 494, 495, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524], "e": [85, 86, 242, 243, 331, 332, 456, 457, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "j": [85, 86, 242, 243, 331, 332, 456, 457, 477, 487, 511, 519, 522, 523], "k": [85, 86, 242, 243, 331, 332, 456, 457, 477, 487, 511, 519, 522, 523], "thermo": [85, 86, 87, 242, 243, 244, 257, 269, 331, 332, 333, 456, 457, 458, 467, 475, 485, 495, 520, 521], "thermal_open_async": [85, 86, 87, 222, 223, 224, 242, 243, 244, 484, 485, 502, 511, 518, 519], "over": [85, 86, 242, 243, 331, 332, 456, 457, 485, 495, 511, 519], "thermal_setoversampling_async": [85, 86, 242, 243, 485, 502, 511, 519], "thermal_settype_async": [85, 86, 242, 243, 484, 485, 494, 502, 511, 518, 519], "least": [85, 86, 222, 223, 242, 243, 331, 332, 440, 441, 456, 457], "500": [85, 86, 163, 164, 242, 243, 331, 332, 393, 394, 456, 457, 515], "oversampl": [85, 86, 242, 243, 331, 332, 456, 457, 485, 495, 511, 519], "thermal_readsensor_async": [85, 86, 222, 223, 242, 243, 484, 485, 502, 511, 518, 519], "sensor": [85, 86, 126, 154, 171, 188, 217, 222, 223, 237, 242, 243, 331, 332, 364, 388, 401, 414, 435, 440, 441, 451, 456, 457, 484, 485, 494, 495, 511, 518, 519, 520, 521, 522], "thermal_close_async": [85, 86, 87, 222, 223, 224, 242, 243, 244, 484, 485, 502, 511, 518, 519], "tc_read_channel_data_with_logg": [86, 243, 332, 457], "them": [86, 223, 243, 332, 441, 457, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "logger_writevalu": [86, 243, 332, 457, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "tc_read_channel_statu": [87, 244, 333, 458], "thermal_getstatus_async": [87, 224, 244, 502, 511, 518, 519], "If": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 504, 505, 506, 509, 510, 512, 513, 514, 515, 520, 521], "product": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 525], "invok": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350], "function": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 502, 522, 524], "sys_setaiomode_async": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "ai_enablecs_async": [92, 93, 94, 95, 96, 97, 98, 99, 502, 506, 512, 513, 514, 520, 521], "subsequ": [92, 93, 94, 95, 96, 97, 98, 99, 334, 335, 336, 337, 338, 339, 340, 341], "displai": [92, 93, 94, 95, 96, 97, 98, 99, 143, 144, 334, 335, 336, 337, 338, 339, 340, 341, 377, 378], "follow": [92, 93, 94, 95, 96, 97, 98, 99, 143, 144, 334, 335, 336, 337, 338, 339, 340, 341, 377, 378], "cs0": [92, 93, 94, 95, 96, 97, 98, 99, 334, 335, 336, 337, 338, 339, 340, 341], "cs2": [92, 93, 94, 95, 96, 97, 98, 99, 334, 335, 336, 337, 338, 339, 340, 341], "sample0": [92, 93, 94, 95, 96, 97, 98, 99, 334, 335, 336, 337, 338, 339, 340, 341], "sample1": [92, 93, 94, 95, 96, 97, 98, 99, 334, 335, 336, 337, 338, 339, 340, 341], "samplen": [92, 93, 94, 95, 96, 97, 98, 99, 334, 335, 336, 337, 338, 339, 340, 341], "slot_mod": [92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350], "sys_getmode_async": [92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "aio_all_channels_loopback": [98, 143, 340, 377], "across": [98, 143, 340, 377], "The": [98, 99, 103, 104, 105, 106, 107, 108, 126, 143, 144, 154, 171, 188, 217, 237, 340, 341, 345, 346, 347, 348, 349, 350, 364, 377, 378, 388, 401, 414, 435, 451, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "wire": [98, 99, 143, 144, 340, 341, 377, 378, 518, 522], "initi": [98, 99, 143, 144, 340, 341, 377, 378, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 505, 512], "correspond": [98, 99, 143, 144, 340, 341, 377, 378, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "onc": [98, 99, 143, 144, 340, 341, 377, 378, 499, 500], "again": [98, 99, 130, 143, 144, 156, 175, 192, 206, 221, 241, 340, 341, 368, 377, 378, 390, 405, 418, 428, 439, 455], "aio_one_channel_loopback": [99, 144, 341, 378], "specif": [99, 144, 341, 378, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "vaul": [99, 144, 341, 378], "ha": [100, 327, 342, 343, 380, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "yet": [100, 327, 342, 343, 380], "sys_setdiomode_async": [103, 104, 105, 106, 107, 108, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "dio_loadstartup_async": [103, 104, 105, 106, 107, 108, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "direct": [103, 104, 105, 106, 107, 108, 345, 346, 347, 348, 349, 350, 504, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 522, 524], "state_list_async": 103, "default": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "i2c_write_read": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "commun": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 513, 514, 515, 516, 518, 519], "master": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453], "24c08c": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "slave": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 513, 514, 515, 516, 518, 519], "byte": [126, 127, 128, 135, 136, 154, 161, 162, 163, 164, 171, 172, 173, 180, 181, 188, 189, 190, 197, 198, 217, 218, 219, 229, 230, 237, 238, 239, 249, 250, 364, 365, 366, 369, 370, 388, 391, 392, 393, 394, 401, 402, 403, 406, 407, 414, 415, 416, 419, 420, 435, 436, 437, 443, 444, 451, 452, 453, 459, 460, 480, 481, 486, 490, 491, 496, 513, 514, 515, 516, 518, 519], "address": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 480, 490, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 524], "eeprom": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 524], "we": [126, 127, 154, 171, 172, 188, 189, 217, 218, 237, 238, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452], "have": [126, 127, 154, 171, 172, 188, 189, 217, 218, 237, 238, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 506, 510, 512, 513, 514, 520, 521], "howev": [126, 127, 154, 171, 172, 188, 189, 217, 218, 237, 238, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452], "expeci": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "wore": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "device_address": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "0x50": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "01010000": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "word_address": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451], "0x00": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453], "i2c_open_async": [126, 154, 171, 188, 217, 237, 480, 502, 513, 514, 515, 516, 518, 519], "clock": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451, 480, 490, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "standard": [126, 154, 164, 171, 188, 217, 237, 364, 388, 394, 401, 414, 435, 451, 513, 514, 515, 516, 518, 519, 523], "i2c_setclockrate_async": [126, 154, 171, 188, 217, 237, 480, 502, 513, 514, 515, 516, 518, 519], "via": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 364, 365, 366, 388, 401, 402, 403, 414, 415, 416, 435, 436, 437, 451, 452, 453, 513, 514, 515, 516, 518, 519], "wren": [126, 127, 128, 154, 171, 172, 173, 188, 189, 190, 217, 218, 219, 237, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491], "i2c_write_async": [126, 154, 171, 188, 217, 237, 480, 502, 513, 514, 515, 516, 518, 519], "0xaa": [126, 154, 171, 188, 217, 237], "0x55": [126, 128, 154, 171, 173, 188, 190, 217, 219, 237, 239, 366, 403, 416, 437, 453], "data_list": [126, 154, 171, 188, 217, 237], "i2c_read_async": [126, 154, 171, 188, 217, 237, 480, 502, 513, 514, 515, 516, 518, 519], "i2c_close_async": [126, 154, 171, 188, 217, 237, 480, 502, 513, 514, 515, 516, 518, 519], "spi_read_and_writ": [127, 172, 189, 218, 238, 365, 402, 415, 436, 452], "25lc640": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453], "datas": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453], "bit": [127, 128, 135, 136, 161, 162, 172, 173, 180, 181, 189, 190, 197, 198, 218, 219, 229, 230, 238, 239, 249, 250, 365, 366, 369, 370, 391, 392, 402, 403, 406, 407, 415, 416, 419, 420, 436, 437, 443, 444, 452, 453, 459, 460, 486, 496, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524], "first_bit": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453], "msb": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 513, 515, 516, 518, 519, 523], "lsb": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 523], "prescal": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491, 513, 515, 516, 518, 519, 523, 524], "64": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 513, 515, 516, 518, 519, 523], "cpol": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 513, 515, 516, 518, 519, 523], "cpha": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 513, 515, 516, 518, 519, 523], "do_index": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491], "elif": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 477, 479, 480, 481, 483, 486, 487, 489, 490, 491, 493, 496], "0x02": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491], "dummi": [127, 172, 189, 218, 238, 365, 402, 415, 436, 452], "0x01": [127, 172, 189, 218, 238, 365, 402, 415, 436, 452], "0x03": [127, 172, 189, 218, 238, 365, 402, 415, 436, 452], "0x06": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491], "pin0": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "spi_open_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 481, 502, 513, 515, 516, 518, 519], "spi_setdatasize_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 502, 513, 515, 516, 518, 519], "spi_setfirstbit_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 502, 513, 515, 516, 518, 519], "spi_setprescaler_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 481, 502, 513, 515, 516, 518, 519], "spi_setmode_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 481, 502, 513, 515, 516, 518, 519], "spi_write_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 481, 502, 513, 515, 516, 518, 519], "0x0a": [127, 172, 189, 218, 238], "0x0001": [127, 172, 189, 218, 238], "spi_readandwrite_async": [127, 172, 189, 218, 238, 481, 502, 513, 515, 516, 518, 519], "02x": [127, 172, 189, 218, 238, 364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 481, 491], "format": [127, 136, 162, 172, 181, 189, 198, 218, 230, 238, 250, 370, 392, 407, 420, 444, 460, 477, 481, 487, 491, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "spi_close_async": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 481, 502, 513, 515, 516, 518, 519], "spi_writ": [128, 173, 190, 219, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 491, 502, 513, 515, 516, 518, 519], "0x0002": [128, 173, 190, 219, 239, 366, 403, 416, 437, 453], "system_usb": [129, 130, 155, 156, 174, 175, 191, 192, 205, 206, 220, 221, 240, 241, 367, 368, 389, 390, 404, 405, 417, 418, 427, 428, 438, 439, 454, 455], "get_usb_info": [129, 155, 174, 191, 205, 220, 240, 367, 389, 404, 417, 427, 438, 454], "serial_num": [129, 155, 174, 191, 205, 220, 240, 367, 389, 404, 417, 427, 438, 454, 513, 514, 515, 516, 517, 518, 519], "sys_getserialnumber_async": [129, 155, 174, 191, 205, 220, 240, 483, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "get_pin_mod": [130, 156, 175, 192, 206, 221, 241, 368, 390, 405, 418, 428, 439, 455], "idl": [130, 156, 175, 192, 206, 221, 241, 368, 390, 405, 418, 428, 439, 455, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pinmod": [130, 156, 175, 192, 206, 221, 241, 368, 390, 405, 418, 428, 439, 455, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pin_mod": [130, 156, 175, 192, 206, 221, 241, 368, 390, 405, 418, 428, 439, 455, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_getpinmodeinport_async": [130, 156, 175, 192, 206, 221, 241, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "uart_read": [135, 161, 180, 197, 229, 249, 369, 391, 406, 419, 443, 459, 496, 502, 513, 514, 515, 516, 518, 519], "anoth": [135, 136, 161, 162, 163, 164, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 393, 394, 406, 407, 419, 420, 443, 444, 459, 460], "baudrat": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 486, 496], "9600": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460], "data_bit_mod": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460], "9": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 513, 514, 515, 516, 518, 519, 523], "parity_mod": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460], "none": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 282, 306, 313, 320, 322, 325, 329, 330, 351, 367, 368, 369, 370, 389, 390, 391, 392, 404, 405, 406, 407, 417, 418, 419, 420, 427, 428, 438, 439, 443, 444, 454, 455, 459, 460, 467, 468, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "even": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 513, 514, 515, 516, 518, 519, 523], "pariti": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 486, 496, 513, 514, 515, 516, 518, 519, 524], "odd": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 513, 514, 515, 516, 518, 519, 523], "stop_bit_mod": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460], "read_byt": [135, 161, 180, 197, 229, 249, 369, 391, 406, 419, 443, 459, 486, 496], "uart_open_async": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 486, 502, 513, 514, 515, 516, 518, 519], "uart_setbaudrate_async": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 486, 502, 513, 514, 515, 516, 518, 519], "uart_setdatabit_async": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 486, 502, 513, 514, 515, 516, 518, 519], "uart_setparity_async": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 486, 502, 513, 514, 515, 516, 518, 519], "uart_setnumstopbit_async": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 486, 502, 513, 514, 515, 516, 518, 519], "informaion": [135, 161, 180, 197, 229, 249, 369, 391, 406, 419, 443, 459], "uart_read_async": [135, 161, 180, 197, 229, 249, 486, 502, 513, 514, 515, 516, 518, 519], "uart_close_async": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 486, 502, 513, 514, 515, 516, 518, 519], "uart_writ": [136, 162, 181, 198, 230, 250, 370, 392, 407, 420, 444, 460, 496, 502, 513, 514, 515, 516, 518, 519], "12345": [136, 162, 181, 198, 230, 250, 370, 392, 407, 420, 444, 460], "uart_write_async": [136, 162, 181, 198, 230, 250, 486, 502, 513, 514, 515, 516, 518, 519], "chungle": [136, 162, 181, 198, 230, 250, 370, 392, 407, 420, 444, 460], "peopl": [136, 162, 181, 198, 230, 250, 370, 392, 407, 420, 444, 460], "list": [136, 162, 181, 198, 230, 250, 370, 392, 407, 420, 444, 460, 477, 480, 481, 482, 487, 490, 491, 492, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "can_read": [163, 393, 502, 515], "125": [163, 164, 393, 394, 515, 523], "khz": [163, 164, 393, 394, 515, 523], "250": [163, 164, 393, 394, 515], "mhz": [163, 164, 393, 394, 515, 523], "can_open_async": [163, 164, 502, 515], "can_setspeed_async": [163, 164, 502, 515], "can_start_async": [163, 164, 502, 515], "frame": [163, 393, 513, 515, 516, 518, 519], "frame_list": [163, 393, 515], "can_read_async": [163, 502, 515], "01": [163, 365, 366, 393, 402, 403, 415, 416, 436, 437, 452, 453], "can_stop_async": [163, 164, 502, 515], "can_close_async": [163, 164, 502, 515], "can_writ": [164, 394, 502, 515], "can_length": [164, 394], "extend": [164, 394, 477, 487, 515, 523], "can_typ": [164, 394], "remot": [164, 394, 515, 523], "id": [164, 394, 515], "can_write_async": [164, 502, 515], "33": [164, 394], "22": [164, 394], "11": [164, 394, 515, 522], "88": [164, 394], "77": [164, 394], "55": [164, 394], "66": [164, 394], "less": [164, 394], "than": [164, 394, 506, 512, 513, 514, 520, 521, 524], "temperature_rtd": [222, 223, 224, 440, 441, 442], "rtd_read_channel_data": [222, 440], "data0": [222, 223, 440, 441], "data1": [222, 223, 440, 441], "rtd_read_channel_data_with_logg": [223, 441], "logger_writelist": [223, 441, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "rtd_read_channel_statu": [224, 442], "35": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "system_wifi": [257, 258, 269, 270, 467, 468, 475, 476], "get_wifi_daq_statu": [257, 269, 467, 475], "rssi": [257, 269, 467, 475, 520, 521], "batteri": [257, 269, 467, 475, 520, 521], "wifi_readrssi_async": [257, 269, 502, 520, 521], "wifi_readbattery_async": [257, 269, 502, 520, 521], "wifi_readthermo_async": [257, 269, 502, 520, 521], "dbm": [257, 269, 467, 475, 520, 521], "mv": [257, 269, 467, 475, 520, 521], "sys_setrtc_async": [258, 270, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "15": [258, 270, 468, 476], "bcst_enumeratenetworkdevic": [275, 492, 502, 503], "sys_getdriverinfo": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 493, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "drive_rstencoderposi": [276, 277, 278, 280, 281, 502, 504], "drive_getmovestatu": [276, 278, 502, 504], "drive_readencoderposit": [276, 278, 502, 504], "drive_getlimitstatu": [277, 502, 504], "net_getipaddrandsubmask": [282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "net_getmacaddr": [282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "motion_open": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 502, 505, 512], "motion_opencfgfil": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 502, 505, 512], "opencfgfil": [283, 285, 289, 292, 295, 296, 297, 298, 301, 304, 305], "motion_loadcfgfil": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 305, 502, 505, 512], "loadcfgfil": [283, 285, 289, 292, 295, 296, 297, 298, 301, 304, 305], "motion_cfgaxi": [283, 285, 289, 292, 295, 296, 297, 298, 301, 302, 304, 305, 502, 505, 512], "motion_cfglimit": [283, 284, 285, 289, 292, 295, 296, 297, 298, 301, 304, 305, 502, 505, 512], "motion_cfghom": [283, 296, 298, 301, 502, 505, 512], "motion_cfgaxismov": [283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 301, 302, 304, 305, 502, 505, 512], "motion_rstencoderposi": [283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 301, 304, 305, 502, 505, 512], "motion_enableservoon": [283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 301, 303, 304, 305, 502, 505, 512], "motion_startsingleaxismov": [283, 284, 285, 286, 287, 288, 289, 290, 292, 301, 304, 305, 502, 505, 512], "motion_getmovestatu": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 502, 505, 512], "motion_getlogicalposi": [283, 299, 301, 502, 505, 512], "motion_getencoderposi": [283, 301, 502, 505, 512], "motion_stop": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 304, 305, 502, 505, 512], "motion_enableservooff": [283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 301, 303, 304, 305, 502, 505, 512], "motion_clos": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 502, 505, 512], "motion_cfgjerkandaccelmod": [284, 290, 502, 505, 512], "motion_cfgalarm": [285, 502, 505, 512], "motion_cfgbreakpoint": [286, 502, 505, 512], "motion_enablebreakpoint": [286, 502, 505, 512], "motion_cfgcaptur": [287, 502, 505, 512], "motion_enablecaptur": [287, 502, 505, 512], "motion_readcapturepoint": [287, 502, 505, 512], "motion_cfginposi": [289, 502, 505, 512], "motion_cfgcircularinterpo": [290, 502, 505, 512], "motion_startcircularinterpo": [290, 502, 505, 512], "motion_cfg2axislinearinterpo": [291, 502, 505, 512], "motion_startlinearinterpo": [291, 294, 502, 505, 512], "motion_3axishronous_mov": 292, "motion_cfghelicalinterpo": [293, 502, 505, 512], "motion_starthelicalinterpo": [293, 502, 505, 512], "motion_cfg3axislinearinterpo": [294, 502, 505, 512], "cfglimit": 295, "motion_startmultiaxismov": [295, 502, 505, 512], "motion_cfgfindref": [296, 297, 298, 502, 505, 512], "motion_findref": [296, 297, 298, 502, 505, 512], "motion_getlimitstatu": [296, 298, 502, 505, 512], "motion_gethomestatu": [296, 298, 502, 505, 512], "motion_checkref": [296, 297, 298, 502, 505, 512], "motion_cfgencod": [297, 304, 305, 502, 505, 512], "motion_setlogicalposi": [299, 502, 505, 512], "motion_overrideaxisposi": [301, 502, 505, 512], "motion_savecfgfil": [302, 502, 505, 512], "motion_overrideaxisveloc": [304, 305, 502, 505, 512], "motion_overrideaxisaccel": [305, 502, 505, 512], "ai_readstream": [307, 308, 309, 310, 334, 335, 336, 337, 338, 339, 340, 341, 352, 353, 354, 355, 371, 372, 373, 374, 461, 462, 463, 464, 469, 470, 471, 472, 487, 502, 506, 512, 513, 514, 520, 521], "ai_open": [307, 308, 309, 310, 311, 312, 321, 334, 335, 336, 337, 338, 339, 340, 341, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 377, 378, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 487, 502, 506, 508, 512, 513, 514, 520, 521], "ai_setmod": [307, 308, 309, 310, 311, 312, 334, 335, 336, 337, 338, 339, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 487, 502, 506, 512, 513, 514, 520, 521], "ai_setsamplingr": [307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 461, 462, 463, 464, 469, 470, 471, 472, 487, 502, 506, 512, 513, 514, 520, 521], "ai_setnumsampl": [307, 308, 334, 335, 352, 353, 371, 372, 461, 462, 469, 470, 487, 502, 506, 512, 513, 514, 520, 521], "ai_start": [307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 461, 462, 463, 464, 469, 470, 471, 472, 487, 502, 506, 512, 513, 514, 520, 521], "ai_stop": [307, 308, 309, 310, 334, 335, 336, 337, 352, 353, 354, 355, 371, 372, 373, 374, 461, 462, 463, 464, 469, 470, 471, 472, 487, 502, 506, 512, 513, 514, 520, 521], "ai_clos": [307, 308, 309, 310, 311, 312, 321, 334, 335, 336, 337, 338, 339, 340, 341, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 377, 378, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 487, 502, 506, 508, 512, 513, 514, 520, 521], "ai_readondemand": [311, 312, 321, 334, 335, 336, 337, 338, 339, 340, 341, 356, 357, 375, 376, 377, 378, 465, 466, 473, 474, 487, 502, 506, 508, 512, 513, 514, 520, 521], "do_openpin": [314, 316, 318, 358, 360, 362, 365, 366, 382, 384, 386, 395, 397, 399, 402, 403, 408, 410, 412, 415, 416, 421, 423, 425, 429, 431, 433, 436, 437, 445, 447, 449, 452, 453, 491, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_writepin": [314, 318, 345, 349, 358, 362, 365, 366, 382, 386, 395, 399, 402, 403, 408, 412, 415, 416, 421, 425, 429, 433, 436, 437, 445, 449, 452, 453, 491, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_openpin": [314, 358, 382, 395, 408, 421, 429, 445, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_readpin": [314, 345, 358, 382, 395, 408, 421, 429, 445, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_closepin": [314, 316, 318, 358, 360, 362, 365, 366, 382, 384, 386, 395, 397, 399, 402, 403, 408, 410, 412, 415, 416, 421, 423, 425, 429, 431, 433, 436, 437, 445, 447, 449, 452, 453, 491, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_closepin": [314, 358, 382, 395, 408, 421, 429, 445, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_openport": [315, 317, 319, 359, 361, 363, 383, 385, 387, 396, 398, 400, 409, 411, 413, 422, 424, 426, 430, 432, 434, 446, 448, 450, 489, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_openport": [315, 359, 383, 396, 409, 422, 430, 446, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_writeport": [315, 319, 324, 346, 350, 359, 363, 383, 387, 396, 400, 409, 413, 422, 426, 430, 434, 446, 450, 489, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_readport": [315, 346, 359, 383, 396, 409, 422, 430, 446, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_closeport": [315, 317, 319, 359, 361, 363, 383, 385, 387, 396, 398, 400, 409, 411, 413, 422, 424, 426, 430, 432, 434, 446, 448, 450, 489, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_closeport": [315, 359, 383, 396, 409, 422, 430, 446, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_togglepin": [316, 347, 360, 384, 397, 410, 423, 431, 447, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_toggleport": [317, 348, 361, 385, 398, 411, 424, 432, 448, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "relay_open": [323, 324, 502, 509], "relay_read": [323, 502, 509], "relay_clos": [323, 324, 502, 509], "ao_open": [326, 327, 328, 340, 341, 343, 344, 377, 378, 379, 380, 381, 488, 502, 510, 512, 514], "ao_setenablechannel": [326, 379, 502, 510, 512, 514], "ao_setform": [326, 379, 502, 510, 512, 514], "ao_setformparam": [326, 379, 502, 510, 512, 514], "ao_setmod": [326, 379, 502, 510, 512, 514], "ao_setsamplingr": [326, 379, 502, 510, 512, 514], "ao_openstream": [326, 379, 502, 510, 512, 514], "ao_startstream": [326, 379, 502, 510, 512, 514], "ao_closestream": [326, 379, 502, 510, 512, 514], "ao_clos": [326, 327, 328, 340, 341, 343, 344, 377, 378, 379, 380, 381, 488, 502, 510, 512, 514], "ao_writeallchannel": [327, 340, 343, 377, 380, 488, 502, 510, 512, 514], "ao_writeonechannel": [328, 341, 344, 378, 381, 502, 510, 512, 514], "thermal_open": [331, 332, 333, 440, 441, 442, 456, 457, 458, 494, 495, 502, 511, 518, 519], "thermal_setoversampl": [331, 332, 456, 457, 495, 502, 511, 519], "thermal_settyp": [331, 332, 456, 457, 494, 495, 502, 511, 518, 519], "thermal_readsensor": [331, 332, 440, 441, 456, 457, 494, 495, 502, 511, 518, 519], "thermal_clos": [331, 332, 333, 440, 441, 442, 456, 457, 458, 485, 494, 495, 502, 511, 518, 519], "thermal_getstatu": [333, 442, 458, 502, 511, 518, 519], "sys_setaiomod": [334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "ai_enablec": [334, 335, 336, 337, 338, 339, 340, 341, 502, 506, 512, 513, 514, 520, 521], "sys_getmod": [334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "port_mod": 335, "sys_setdiomod": [345, 346, 347, 348, 349, 350, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "dio_loadstartup": [345, 346, 347, 348, 349, 350, 502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "random": [364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452], "numpi": [364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 477, 487], "np": [364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 477, 487], "randint": [364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452], "256": [364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452, 513, 515, 516, 518, 519, 523], "i2c_open": [364, 388, 401, 414, 435, 451, 490, 502, 513, 514, 515, 516, 518, 519], "i2c_setclockr": [364, 388, 401, 414, 435, 451, 490, 502, 513, 514, 515, 516, 518, 519], "i2c_writ": [364, 388, 401, 414, 435, 451, 490, 502, 513, 514, 515, 516, 518, 519], "0x": [364, 365, 388, 401, 402, 414, 415, 435, 436, 451, 452], "pointer": [364, 388, 401, 414, 435, 451], "i2c_read": [364, 388, 401, 414, 435, 451, 490, 502, 513, 514, 515, 516, 518, 519], "i2c_clos": [364, 388, 401, 414, 435, 451, 490, 502, 513, 514, 515, 516, 518, 519], "addr": [365, 402, 415, 436, 452], "spi_open": [365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 491, 502, 513, 515, 516, 518, 519], "spi_setdatas": [365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 502, 513, 515, 516, 518, 519], "spi_setfirstbit": [365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 502, 513, 515, 516, 518, 519], "spi_setprescal": [365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 491, 502, 513, 515, 516, 518, 519], "spi_setmod": [365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 491, 502, 513, 515, 516, 518, 519], "spi_readandwrit": [365, 402, 415, 436, 452, 491, 502, 513, 515, 516, 518, 519], "spi_clos": [365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 491, 502, 513, 515, 516, 518, 519], "sys_getserialnumb": [367, 389, 404, 417, 427, 438, 454, 493, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_getrtc": [367, 389, 404, 417, 427, 438, 454, 468, 476, 493, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_getpinmodeinport": [368, 390, 405, 418, 428, 439, 455, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "uart_open": [369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 496, 502, 513, 514, 515, 516, 518, 519], "uart_setbaudr": [369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 496, 502, 513, 514, 515, 516, 518, 519], "uart_setdatabit": [369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 496, 502, 513, 514, 515, 516, 518, 519], "uart_setpar": [369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 496, 502, 513, 514, 515, 516, 518, 519], "uart_setnumstopbit": [369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 496, 502, 513, 514, 515, 516, 518, 519], "uart_clos": [369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 496, 502, 513, 514, 515, 516, 518, 519], "can_open": [393, 394, 502, 515], "can_setspe": [393, 394, 502, 515], "can_start": [393, 394, 502, 515], "can_stop": [393, 394, 502, 515], "can_clos": [393, 394, 502, 515], "wifi_readrssi": [467, 475, 502, 520, 521], "wifi_readbatteri": [467, 475, 502, 520, 521], "wifi_readthermo": [467, 475, 502, 520, 521], "sys_setrtc": [468, 476, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "example_analog_input": [477, 487], "o": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502], "qeventloop": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "asyncslot": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "third": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "parti": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "matplotlib": [477, 487], "anim": [477, 487], "qtwidget": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "qtgui": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "qwidget": [477, 487], "qmessagebox": [477, 479, 483, 487, 489, 493], "ui_design": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "ui_example_gui_ai": [477, 487], "ui_mainwindow": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "class": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "matplotlibwidget": [477, 487], "__init__": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "self": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "parent": [477, 487], "super": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "mainwindow": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "qmainwindow": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "ui": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "setupui": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "materi": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "path": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 524], "file_path": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "dirnam": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "__file__": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "trademark_path": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "trademark": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "jpg": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "blue_led_path": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "led_blu": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "png": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "red_led_path": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "led_r": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "green_led_path": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "led_green": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "gray_led_path": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "led_grai": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "lb_trademark": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "setpixmap": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "qpixmap": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "lb_led": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "flag": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "connect_flag": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "declar": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "plot": [477, 487], "plot_y_min": [477, 487], "plot_y_max": [477, 487], "channel_list": [477, 487, 510, 512, 514], "append": [477, 478, 480, 481, 482, 487, 488, 490, 491, 492], "plot_total_tim": [477, 487], "callback": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "event": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "btn_connect": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "click": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "connectev": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "btn_disconnect": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "disconnectev": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "btn_aistart": [477, 487], "startaiev": [477, 487], "btn_aistop": [477, 487], "stopaiev": [477, 487], "lineedit_samplingr": [477, 487], "returnpress": [477, 487], "setsamplingrateev": [477, 487], "lineedit_numsampl": [477, 487], "setnumofsampleev": [477, 487], "combobox_aimod": [477, 487], "currentindexchang": [477, 487], "chooseaimodeev": [477, 487], "lineedit_yscalemax": [477, 487], "setyscalemaxev": [477, 487], "lineedit_yscalemin": [477, 487], "setyscaleminev": [477, 487], "plotiniti": [477, 487], "plotanim": [477, 487], "closeev": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "kill": [477, 487], "selecthandl": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "handle_idx": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "combobox_handl": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "currentindex": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "updateparam": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "serial_numb": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "gui": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "lineedit_ip": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "text": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "combobox_port": [477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496], "ai_sampling_r": [477, 487], "float": [477, 478, 487, 488, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521], "numsampl": [477, 487], "ai_n_sampl": [477, 487], "select": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 505, 512, 524], "param": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "error": [477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "loop_fct": 477, "setdisplayplotnum": [477, 487], "checkconnectionstatu": [477, 479, 483, 487, 489, 493], "checkboxstatu": [477, 487], "x": [477, 487, 505, 512, 520, 521], "mplwidget": [477, 487], "canva": [477, 487], "ax": [477, 487, 505, 512, 522], "alpha": [477, 487], "rearrag": [477, 487], "accord": [477, 487], "amount": [477, 487, 506, 512, 513, 514, 515, 520, 521], "funcanim": [477, 487], "plotchart": [477, 487], "plotgetaxisdata": [477, 487], "interv": [477, 487], "repeat": [477, 487], "draw": [477, 487], "checkbox": [477, 487], "mainui": [477, 487], "list_ch": [477, 487], "cb_ch0": [477, 487], "cb_ch1": [477, 487], "cb_ch2": [477, 487], "cb_ch3": [477, 487], "cb_ch4": [477, 487], "cb_ch5": [477, 487], "cb_ch6": [477, 487], "cb_ch7": [477, 487], "ischeck": [477, 479, 487, 489], "xmin": [477, 487], "xmax": [477, 487], "x_max": [477, 487], "x_min": [477, 487], "max": [477, 487, 506, 513, 514, 520, 521, 522], "x_list": [477, 487], "xtick": [477, 487], "dx": [477, 487], "tick": [477, 487], "arang": [477, 487], "yield": [477, 487, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "clear": [477, 482, 487, 492, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "marker": [477, 487], "markers": [477, 487], "err_xlist": [477, 487], "err_ylist": [477, 487], "y": [477, 487, 505, 512, 520, 521], "set_ylim": [477, 487], "set_xlim": [477, 487], "xtickslabel": [477, 487], "set_xtick": [477, 487], "new_tick": [477, 487], "plotconvertxtick": [477, 487], "set_xticklabel": [477, 487], "label": [477, 487], "set_xlabel": [477, 487], "fontsiz": [477, 487], "12": [477, 487, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "set_ylabel": [477, 487], "legend": [477, 487], "loc": [477, 487], "center": [477, 487, 497, 498, 505, 512], "left": [477, 487], "shadow": [477, 487], "bbox_to_anchor": [477, 487], "75": [477, 487], "facecolor": [477, 487], "f0f0f0": [477, 487], "grid": [477, 487], "color": [477, 482, 487, 492], "bac3d1": [477, 487], "linestyl": [477, 487], "linewidth": [477, 487], "2f": [477, 487], "enumer": [477, 487], "num": [477, 487], "arrai": [477, 487], "yscalemax": [477, 487], "yscalemin": [477, 487], "messag": [477, 479, 483, 487, 489, 493, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "server": [477, 479, 483, 487, 489, 493], "ok": [477, 479, 483, 487, 489, 493], "app": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "qapplic": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "set_event_loop": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "wpc_main_ui": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "run_forev": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "example_analog_output": [478, 488], "analog": [478, 488, 510, 520, 521, 522], "ui_example_gui_ao": [478, 488], "devid": [478, 484, 485, 486, 488, 494, 495, 496], "fct_list": [478, 488], "hrztslider_cb0": [478, 488], "hrztslider_cb1": [478, 488], "hrztslider_cb2": [478, 488], "hrztslider_cb3": [478, 488], "hrztslider_cb4": [478, 488], "hrztslider_cb5": [478, 488], "hrztslider_cb6": [478, 488], "hrztslider_cb7": [478, 488], "obj_hrztslid": [478, 488], "getattr": [478, 479, 488, 489], "horizontalslid": [478, 488], "setrang": [478, 488], "setsinglestep": [478, 488], "valuechang": [478, 488], "btn_updat": [478, 488], "writeaovalu": [478, 488], "btn_setal": [478, 488], "setlineeditvalueev": [478, 488], "scaledvalu": [478, 488], "lineedit0": [478, 488], "settext": [478, 480, 481, 483, 484, 485, 486, 488, 490, 491, 493, 494, 495, 496], "lineedit1": [478, 488], "lineedit2": [478, 488], "lineedit3": [478, 488], "lineedit4": [478, 488], "lineedit5": [478, 488], "lineedit6": [478, 488], "lineedit7": [478, 488], "voltage_list": [478, 488], "obj_lineedit": [478, 488], "lineedit": [478, 488], "lineedit_setal": [478, 488], "example_digital_output": [479, 489], "ui_example_gui_do": [479, 489], "state_c": [479, 489], "255": [479, 489, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "switch_blue_path": [479, 489], "switch_blu": [479, 489], "switch_gray_path": [479, 489], "switch_grai": [479, 489], "convert": [479, 480, 481, 489, 490, 491], "backward": [479, 489], "slash": [479, 489], "replac": [479, 480, 481, 489, 490, 491], "obj_chbox_st": [479, 489], "checkbox_st": [479, 489], "statechang": [479, 489], "statedoev": [479, 489], "setstylesheet": [479, 482, 489, 492], "qcheckbox": [479, 489], "indic": [479, 489, 504, 505, 506, 512, 513, 514, 515, 520, 521, 524], "width": [479, 489, 505, 512], "60px": [479, 489], "height": [479, 489], "uncheck": [479, 489], "imag": [479, 489], "url": [479, 489], "calcul": [479, 489, 505, 512], "mcu": [479, 489], "example_i2c": [480, 490], "ui_example_gui_i2c": [480, 490], "btn_write": [480, 481, 486, 490, 491, 496], "writeev": [480, 481, 486, 490, 491, 496], "btn_read": [480, 481, 486, 490, 491, 496], "readev": [480, 481, 486, 490, 491, 496], "btn_set": [480, 481, 484, 485, 490, 491, 494, 495], "setclockev": [480, 490], "clock_mod": [480, 490], "combobox_clockr": [480, 490], "hex": [480, 481, 490, 491], "write_addr": [480, 490], "lineedit_writeaddr": [480, 490], "lineedit_writ": [480, 481, 486, 490, 491, 496], "write_data": [480, 481, 486, 490, 491, 496, 513, 514, 515, 516, 518, 519], "converstrtointlist": [480, 481, 490, 491], "byte_read": [480, 490], "lineedit_byteread": [480, 486, 490, 496], "read_addr": [480, 490], "lineedit_readaddr": [480, 490], "lineedit_read": [480, 481, 486, 490, 491, 496], "str_": [480, 481, 490, 491, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "split": [480, 481, 482, 490, 491, 492], "comma": [480, 481, 490, 491], "write_data_strlist": [480, 481, 490, 491], "write_data_int": [480, 481, 490, 491], "item": [480, 481, 490, 491], "example_spi": [481, 491], "ui_example_gui_spi": [481, 491], "setev": [481, 484, 485, 491, 494, 495], "combobox_mod": [481, 491], "combobox_prescal": [481, 491], "example_find_all_devic": [482, 492], "find": [482, 492, 499, 500, 504, 505, 512], "qtablewidget": [482, 492], "qtcore": [482, 492], "qt": [482, 492], "ui_example_gui_find_all_devic": [482, 492], "column_width": [482, 492], "160": [482, 492], "getcwd": [482, 492], "tabl": [482, 492], "initibroadcastt": [482, 492], "button": [482, 492], "btn_broadcast": [482, 492], "broadcastnetworkev": [482, 492], "broadcast_list": [482, 492], "column": [482, 492], "tablewidget_brst": [482, 492], "setcolumnwidth": [482, 492], "background": [482, 492], "217536": [482, 492], "loaddata": [482, 492], "row": [482, 492], "setrowcount": [482, 492], "setitem": [482, 492], "qtablewidgetitem": [482, 492], "firmware_v": [482, 492], "restoreoverridecursor": [482, 492], "add": [482, 492], "waitcursor": [482, 492], "setoverridecursor": [482, 492], "broadcast": [482, 492, 503], "broadcast_info": [482, 492], "length": [482, 492, 524], "device_amount": [482, 492], "model_vers": [482, 492], "str_list": [482, 492], "_": [482, 492], "example_get_device_info": [483, 493], "ui_example_gui_get_device_info": [483, 493], "btn_deviceinfo": [483, 493], "getdeviceinfoev": [483, 493], "sys_getipaddrandsubmask_async": [483, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_getmacaddr_async": [483, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "lineedit_sbk": [483, 493], "lineedit_serialnum": [483, 493], "lineedit_mac": [483, 493], "lineedit_model": [483, 493], "lineedit_vers": [483, 493], "lineedit_rtc": [483, 493], "tcp": [483, 493, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521, 522, 524], "example_rtd": [484, 494], "ui_example_gui_rtd": [484, 494], "btn_rtd": [484, 494], "rtdevent": [484, 494], "combobox_typ": [484, 485, 494, 495], "noisereject": [484, 485, 494, 495], "combobox_noisereject": [484, 485, 494, 495], "lineedit_sensor0": [484, 485, 494, 495], "lineedit_sensor1": [484, 485, 494, 495], "nois": 484, "filter": [484, 515, 524], "thermal_setnoisefilter_async": 484, "example_thermo": [485, 495], "ui_example_gui_thermocoupl": [485, 495], "btn_temp": [485, 495], "tempev": [485, 495], "combobox_oversampl": [485, 495], "example_uart": [486, 496], "ui_example_gui_uart": [486, 496], "lb_ledport": [486, 496], "btn_open": [486, 496], "openportev": [486, 496], "btn_close": [486, 496], "closeportev": [486, 496], "combobox_baudr": [486, 496], "currenttext": [486, 496], "databit": [486, 496], "combobox_databit": [486, 496], "combobox_par": [486, 496], "stopbit": [486, 496], "combobox_stopbit": [486, 496], "sy": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "ai_lock": 487, "lock": 487, "acquir": [487, 506, 512, 513, 514, 520, 521], "ai_stream_thread": 487, "aistreamthread": 487, "exit": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "exec_": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "sys_getipaddrandsubmask": [493, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_getmacaddr": [493, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "test": [497, 498, 505, 512], "panel": [497, 498], "finder": [497, 498, 502], "logger": [499, 500], "waveform": [499, 500], "loopback": [499, 500], "blinki": [499, 500], "tutori": 499, "multipl": [499, 505, 512], "1axi": [499, 500], "posit": [499, 500, 504, 505, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "blend": [499, 500], "acceler": [499, 500, 504, 505, 512, 520, 521, 522, 524], "logic": [499, 500, 504, 505, 512, 523], "config": [499, 500], "alarm": [499, 500, 504, 505, 512], "breakpoint": [499, 500, 505, 512, 524], "captur": [499, 500, 505, 512, 522, 524], "inposit": [499, 500, 505, 512], "2axi": [499, 500], "circular": [499, 500, 505, 512, 522], "interpo": [499, 500], "linear": [499, 500, 505, 512, 522], "3axi": [499, 500], "helic": [499, 500, 505, 512, 522], "relai": [499, 500, 509, 522, 524], "counter": [499, 500, 505, 509, 512, 524], "motion card": 501, "descript": 502, "bcst_checkmacandreboot": [502, 503], "bcst_checkmacandreboot_async": [502, 503], "bcst_checkmacandsetip": [502, 503], "bcst_checkmacandsetip_async": [502, 503], "pinout": 502, "ai_getport": [502, 506, 508, 512, 513, 514, 520, 521], "net_getgatewai": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "net_getgateway_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "net_setipaddrandsubmask": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "net_setipaddrandsubmask_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_getgatewai": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_getgateway_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_reboot": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_rebootonbootload": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_rebootonbootloader_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_reboot_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setdimod": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setdimode_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setdomod": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setdomode_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setipaddrandsubmask": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_setipaddrandsubmask_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "sys_setidlemod": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setidlemode_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setmotionmod": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setmotionmode_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setslotmod": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setslotmode_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setswitchmod": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sys_setswitchmode_async": [502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "wifi_getwifibandwidth": [502, 520, 521], "wifi_getwifibandwidth_async": [502, 520, 521], "wifi_getwificonfigur": [502, 520, 521], "wifi_getwificonfiguration_async": [502, 520, 521], "wifi_readacceler": [502, 520, 521], "wifi_readaccleration_async": [502, 520, 521], "wifi_setap": [502, 520, 521], "wifi_setap_async": [502, 520, 521], "ao_getenablechannel": [502, 510, 512, 514], "ao_getmod": [502, 510, 512, 514], "ao_getmode_async": [502, 510, 512, 514], "ao_getport": [502, 510, 512, 514], "ao_getst": [502, 510, 512, 514], "ao_getvalu": [502, 510, 512, 514], "ao_getvalues_async": [502, 510, 512, 514], "ao_pushtobuff": [502, 510, 512, 514], "ao_setnumsampl": [502, 510, 512, 514], "ao_setnumsamples_async": [502, 510, 512, 514], "dio_savestartup": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_savestartup_async": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_setportdi": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_setportdi_async": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_setportdo": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_setportdo_async": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_setportidl": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "dio_setportidle_async": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "di_getpinmap": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "do_getpinmap": [502, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "motion_cfg4axislinearinterpo": [502, 505, 512], "motion_cfg4axislinearinterpo_async": [502, 505, 512], "drive_cfgencod": [502, 504], "drive_cfgencoder_async": [502, 504], "drive_getalarmstatu": [502, 504], "drive_getalarmstatus_async": [502, 504], "drive_readcurrentveloc": [502, 504], "drive_readcurrentvelocity_async": [502, 504], "thermal_getpinmap": [502, 511, 518, 519], "i2c_getpinmap": [502, 513, 514, 515, 516, 518, 519], "i2c_reset": [502, 513, 514, 515, 516, 518, 519], "i2c_reset_async": [502, 513, 514, 515, 516, 518, 519], "i2c_setaddresss": [502, 513, 514, 515, 516, 518, 519], "i2c_setaddresssize_async": [502, 513, 514, 515, 516, 518, 519], "spi_getpinmap": [502, 513, 515, 516, 518, 519], "spi_read": [502, 513, 515, 516, 518, 519], "spi_read_async": [502, 513, 515, 516, 518, 519], "spi_reset": [502, 513, 515, 516, 518, 519], "spi_reset_async": [502, 513, 515, 516, 518, 519], "uart_getpinmap": [502, 513, 514, 515, 516, 518, 519], "uart_reset": [502, 513, 514, 515, 516, 518, 519], "uart_reset_async": [502, 513, 514, 515, 516, 518, 519], "uart_stopread": [502, 513, 514, 515, 516, 518, 519], "uart_stopreading_async": [502, 513, 514, 515, 516, 518, 519], "snk": 502, "can_getport": [502, 515], "can_setrxfilterormask": [502, 515], "can_setrxfilterormask_async": [502, 515], "can_setrxfilteringon": [502, 515], "can_setrxfilteringon_async": [502, 515], "verbos": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "mac_addr": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "reboot": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "separ": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "colon": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "successfulli": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "otherwis": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "here": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "subnet_mask": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "period": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 520, 521], "dev_info_list": 503, "element": [503, 506, 512, 513, 514, 515, 520, 521], "subnet": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "mask": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 520, 521], "bool": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "whether": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "out": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "disonnect": 503, "axis_dir": [504, 505, 512], "dirction": 504, "origin": 504, "invers": 504, "specifi": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "addit": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "deceler": [504, 505, 512, 523], "absolut": [504, 505, 512, 523], "rel": [504, 505, 512, 523], "count": [504, 505, 512], "s2": [504, 505, 512], "encoder_dir": [504, 505, 512], "search_dir": [504, 505, 512], "search_typ": [504, 505, 512], "search": [504, 505, 512, 524], "percent": [504, 505, 512], "given": [504, 505, 506, 508, 510, 512, 513, 514, 515, 520, 521], "adjust": [504, 505, 512, 522], "locat": [504, 505, 512], "current": [504, 505, 508, 510, 512, 514, 522], "distanc": [504, 505, 512], "request": [504, 505, 512, 513, 514, 515, 516, 518, 519], "limit_polar": [504, 505, 512], "activ": [504, 505, 512, 523], "singal": [504, 505, 512], "instantan": [504, 505, 512], "accerler": [504, 505, 512], "new": [504, 505, 512], "new_veloc": 504, "veloicti": 504, "halt": [504, 505, 512, 523], "edsi": 504, "getewai": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "web": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521, 522], "gatewai": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "network_info": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "three": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "deprec": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "v1": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "Will": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "remov": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "ref": [504, 505, 506, 507, 508, 509, 510, 511, 512, 520, 521], "mani": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pin1": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pin7": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "disabl": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pwm": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "adc": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "year": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "month": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "dai": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "hour": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "minut": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "charact": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "bootload": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524], "ce": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "31": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "24": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "23": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "59": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "success": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "switch": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "filenam": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "clear_old": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "old": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "alread": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "exist": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "value_mat": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "value_list": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "object": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "destin": [505, 512], "vector": [505, 512], "axis4": [505, 512], "dest_posi4": [505, 512], "four": [505, 512], "en_alarm": [505, 512], "alarm_polar": [505, 512], "selector": [505, 512], "stepper_output": [505, 512], "servo_on_polar": [505, 512], "puls": [505, 512, 522, 523, 524], "clockwis": [505, 512], "counterclockwis": [505, 512], "dir": [505, 512, 523], "One": [505, 512, 523], "cw": [505, 512, 522, 523], "ccw": [505, 512, 522, 523], "breakpoint_polar": [505, 512], "start_posi": [505, 512], "capture_typ": [505, 512], "rise": [505, 512, 523], "edg": [505, 512, 523], "fall": [505, 512, 523], "respect": [505, 512], "finish": [505, 512], "encoder_z_polar": [505, 512], "z": [505, 512, 520, 521], "en_axis3": [505, 512], "en_axis4": [505, 512], "rotation_numb": [505, 512], "calculation_timeout": [505, 512], "pitch": [505, 512], "en_hom": [505, 512], "home_polar": [505, 512], "en_inposi": [505, 512], "inposi_polar": [505, 512], "accel_mod": [505, 512], "increas": [505, 512], "decreas": [505, 512], "per": [505, 512, 513, 514, 515, 516, 518, 519], "unit": [505, 512], "acceleration_mod": [505, 512], "trapezoid": [505, 512], "curv": [505, 512, 522], "sequenc": [505, 512], "en_break": [505, 512], "en_captur": [505, 512], "emcod": [505, 512], "axis_list": [505, 512], "multi": [505, 512, 522], "8ch": [506, 507, 508, 510, 514, 520, 521, 522], "20khz": [506, 521, 522], "should": [506, 508, 510, 512, 513, 514, 515, 520, 521], "onli": [506, 508, 510, 512, 513, 514, 520, 521], "volt": [506, 510, 512, 513, 514, 520, 521], "measur": [506, 512, 513, 514, 520, 521], "num_sampl": [506, 510, 512, 513, 514, 520, 521], "pc": [506, 512, 513, 514, 515, 520, 521], "stock": [506, 512, 513, 514, 515, 520, 521], "queue": [506, 512, 513, 514, 515, 520, 521, 524], "call": [506, 512, 513, 514, 515, 520, 521], "fewer": [506, 512, 513, 514, 520, 521], "expect": [506, 512, 513, 514, 520, 521], "ones": [506, 512, 513, 514, 520, 521], "expir": [506, 512, 513, 514, 520, 521], "arriv": [506, 512, 513, 514, 515, 520, 521], "becom": [506, 512, 513, 514, 515, 520, 521], "ineffect": [506, 512, 513, 514, 515, 520, 521], "alreadi": [506, 512, 513, 514, 515, 520, 521, 524], "sample_list": [506, 512, 513, 514, 520, 521], "equal": [506, 512, 513, 514, 520, 521], "been": [506, 510, 512, 513, 514, 520, 521], "made": [506, 510, 512, 513, 514, 520, 521], "6ch": [507, 509, 522], "enable_list": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "about": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "direction_list": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "when": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "intput": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "want": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "associ": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "pinmap": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "dictionari": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "kei": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "Its": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "integ": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "thei": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "p0": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "p1": [507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "pin6": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "pin5": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "pin4": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "pin3": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "pin2": [507, 509, 512, 513, 514, 515, 516, 517, 518, 519], "relay_count": 509, "where": [510, 512, 514], "num_of_v": [510, 512, 514], "push": [510, 512, 514], "buffer": [510, 512, 514, 515], "todo": [510, 512, 514], "which": [510, 512, 514, 518], "accordingli": [510, 512, 514], "retangular": [510, 512, 514], "triangular": [510, 512, 514, 523], "sine": [510, 512, 514, 523], "frequenc": [510, 512, 513, 514, 515, 516, 518, 519, 523], "phase": [510, 512, 513, 514, 515, 516, 518, 519, 522], "duty_cycl": [510, 512, 514], "averag": [510, 512, 514], "duti": [510, 512, 514], "cycl": [510, 512, 514], "7ch": [511, 522], "tupl": [511, 513, 514, 515, 516, 518, 519], "constitut": [511, 513, 514, 515, 516, 518, 519], "physic": [511, 513, 514, 515, 516, 518, 519], "thermal1": [511, 518, 519], "five": [511, 518, 519], "p2": [511, 513, 514, 515, 516, 518, 519], "thermal_port": [511, 518, 519], "could": [511, 518, 519], "circuit": [511, 518, 519], "fault": [511, 518, 519], "temperatur": [511, 518, 519, 520, 521], "celsiu": [511, 518, 519, 520, 521], "type_": [511, 518, 519], "26ch": [513, 516, 522], "16khz": [513, 514], "i2c1": [513, 514, 515, 516, 518, 519], "i2c2": [513, 514, 515, 516, 518, 519], "p3": [513, 514, 515, 516, 518, 519], "i2c_port": [513, 514, 515, 516, 518, 519], "read_address": [513, 514, 515, 516, 518, 519], "bytes_to_read": [513, 514, 515, 516, 518, 519], "i2c_data": [513, 514, 515, 516, 518, 519], "size": [513, 514, 515, 516, 518, 519, 524], "desir": [513, 514, 515, 516, 518, 519], "400000": [513, 514, 515, 516, 518, 519, 523], "plu": [513, 514, 515, 516, 518, 519, 523], "1000000": [513, 514, 515, 516, 518, 519, 523], "3400000": [513, 514, 515, 516, 518, 519, 523], "write_address": [513, 514, 515, 516, 518, 519], "transfer": [513, 514, 515, 516, 518, 519, 524], "spi1": [513, 515, 516, 518, 519, 523], "spi2": [513, 515, 516, 518, 519, 523], "spi_port": [513, 515, 516, 518, 519], "spi_data": [513, 515, 516, 518, 519], "maximum": [513, 515, 516, 518, 519, 522, 524], "32": [513, 515, 516, 518, 519, 523], "128": [513, 515, 516, 518, 519, 523], "uart1": [513, 514, 515, 516, 518, 519], "uart2": [513, 514, 515, 516, 518, 519], "uart_port": [513, 514, 515, 516, 518, 519], "uart_data": [513, 514, 515, 516, 518, 519], "baud_rat": [513, 514, 515, 516, 518, 519], "baud": [513, 514, 515, 516, 518, 519, 524], "16ch": [514, 522], "20ch": [515, 522], "num_fram": 515, "millisecond": 515, "canfram": 515, "give": 515, "identifi": 515, "extended_id": 515, "tell": 515, "id_": 515, "recept": 515, "29": 515, "ignor": 515, "on_off": 515, "turn": 515, "speed_mod": 515, "12ch": [517, 522], "14ch": [517, 522], "2ch": [518, 519, 522], "21ch": [518, 519, 522], "10v": [520, 521, 522], "10khz": [520, 522], "bandwidth": [520, 521], "ht20": [520, 521], "ht40": [520, 521], "reconnect": [520, 521], "ap": [520, 521], "stai": [520, 521], "wifi_configur": [520, 521], "retri": [520, 521], "accleration_three_axi": [520, 521], "volatg": [520, 521], "level": [520, 521], "station": [520, 521], "port1": [520, 521], "port2": [520, 521], "1336": [520, 521], "photo": 522, "modular": 522, "inter": 522, "board": 522, "quick": 522, "amplifi": 522, "yaskawa": 522, "panason": 522, "mitsubishi": 522, "delta": 522, "etc": 522, "differenti": 522, "8mpp": 522, "abz": 522, "12mhz": 522, "break": 522, "stepper": [522, 524], "microstep": 522, "resolut": 522, "51": 522, "revolut": 522, "power": 522, "suppli": 522, "36v": 522, "1a": 522, "peak": 522, "5a": 522, "fwd": 522, "rev": 522, "nomin": 522, "8mhz": 522, "stall": 522, "detect": 522, "intellig": 522, "energi": 522, "diagnost": 522, "ramp": 522, "smooth": 522, "idc": 522, "50p": 522, "24ch": 522, "ttl": 522, "multiplex": 522, "4x6": 522, "matrix": 522, "100m": 522, "cabl": 522, "sourc": 522, "npn": 522, "sink": 522, "20ma": 522, "1khz": 522, "qualiti": 522, "mechan": 522, "4ch": 522, "NO": 522, "nc": 522, "2m": 522, "exclud": 522, "bounc": 522, "1m": [522, 523], "24vdc": 522, "settl": 522, "160m": 522, "1ch": 522, "400khz": 522, "full": 522, "bu": 522, "industri": 522, "isol": 522, "extern": [522, 524], "1mbp": 522, "v2": 522, "0b": 522, "802": 522, "g": 522, "ghz": 522, "rectangular": 523, "125k": 523, "250k": 523, "500k": 523, "bp": 523, "peripher": 523, "f_pclk2": 523, "72": 523, "f_pclk1": 523, "36": 523, "18": 523, "25": 523, "562": 523, "281": 523, "140": 523, "625": 523, "big": 523, "littl": 523, "570002": 524, "warn": 524, "occurr": 524, "overflow": 524, "560001": 524, "520003": 524, "519000": 524, "librari": 524, "libusb": 524, "dll": 524, "look": 524, "7000": 524, "7001": 524, "7002": 524, "hal": 524, "7003": 524, "7004": 524, "7005": 524, "7006": 524, "7007": 524, "7008": 524, "7009": 524, "7010": 524, "7011": 524, "7012": 524, "7013": 524, "ol": 524, "7014": 524, "core": 524, "7015": 524, "7016": 524, "7017": 524, "7018": 524, "7019": 524, "7020": 524, "7021": 524, "7022": 524, "7023": 524, "7024": 524, "7025": 524, "udp": 524, "7026": 524, "7027": 524, "parser": 524, "7028": 524, "7801": 524, "occupi": 524, "7901": 524, "ensur": 524, "restrict": 524, "8001": 524, "fail": 524, "plugin": 524, "8002": 524, "8007": 524, "lost": 524, "8008": 524, "packet": 524, "8009": 524, "invalid": 524, "8010": 524, "inconsist": 524, "between": 524, "8011": 524, "There": 524, "discrep": 524, "8012": 524, "incompat": 524, "8014": 524, "accept": 524, "8015": 524, "extens": 524, "8016": 524, "No": 524, "directori": 524, "8101": 524, "avali": 524, "8102": 524, "8201": 524, "8202": 524, "chip": 524, "8204": 524, "8206": 524, "8207": 524, "span": 524, "8208": 524, "8209": 524, "8210": 524, "8211": 524, "8212": 524, "8213": 524, "must": 524, "lower": 524, "13": 524, "8301": 524, "8304": 524, "8305": 524, "8306": 524, "8401": 524, "8403": 524, "8404": 524, "8501": 524, "8502": 524, "exce": 524, "8503": 524, "8504": 524, "8505": 524, "8506": 524, "8601": 524, "8602": 524, "8603": 524, "8604": 524, "8605": 524, "8606": 524, "8701": 524, "8702": 524, "8703": 524, "8793": 524, "tx": 524, "8794": 524, "prioriti": 524, "8803": 524, "8804": 524, "8805": 524, "8806": 524, "8807": 524, "8808": 524, "8809": 524, "8810": 524, "8811": 524, "8812": 524, "8813": 524, "8814": 524, "8815": 524, "8816": 524, "8904": 524}, "objects": {"": [[501, 0, 0, "-", "pywpc"]], "pywpc": [[503, 1, 1, "", "DeviceFinder"], [504, 1, 1, "", "EDrive_ST"], [505, 1, 1, "", "EMotion"], [506, 1, 1, "", "EthanA"], [507, 1, 1, "", "EthanD"], [508, 1, 1, "", "EthanI"], [509, 1, 1, "", "EthanL"], [510, 1, 1, "", "EthanO"], [511, 1, 1, "", "EthanT"], [512, 1, 1, "", "STEM"], [513, 1, 1, "", "USBDAQF1AD"], [514, 1, 1, "", "USBDAQF1AOD"], [515, 1, 1, "", "USBDAQF1CD"], [516, 1, 1, "", "USBDAQF1D"], [517, 1, 1, "", "USBDAQF1DSNK"], [518, 1, 1, "", "USBDAQF1RD"], [519, 1, 1, "", "USBDAQF1TD"], [520, 1, 1, "", "WifiDAQE3A"], [521, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[503, 2, 1, "", "Bcst_checkMACAndReboot"], [503, 2, 1, "", "Bcst_checkMACAndReboot_async"], [503, 2, 1, "", "Bcst_checkMACAndSetIP"], [503, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [503, 2, 1, "", "Bcst_enumerateNetworkDevices"], [503, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [503, 2, 1, "", "Bcst_enumerateUSBDevices"], [503, 2, 1, "", "close"], [503, 2, 1, "", "connect"], [503, 2, 1, "", "disconnect"]], "pywpc.EDrive_ST": [[504, 2, 1, "", "Drive_cfgAxisDirection"], [504, 2, 1, "", "Drive_cfgAxisDirection_async"], [504, 2, 1, "", "Drive_cfgAxisMove"], [504, 2, 1, "", "Drive_cfgAxisMove_async"], [504, 2, 1, "", "Drive_cfgEncoder"], [504, 2, 1, "", "Drive_cfgEncoderDirection"], [504, 2, 1, "", "Drive_cfgEncoderDirection_async"], [504, 2, 1, "", "Drive_cfgEncoder_async"], [504, 2, 1, "", "Drive_cfgFindRef"], [504, 2, 1, "", "Drive_cfgFindRef_async"], [504, 2, 1, "", "Drive_cfgLimit"], [504, 2, 1, "", "Drive_cfgLimit_async"], [504, 2, 1, "", "Drive_close"], [504, 2, 1, "", "Drive_close_async"], [504, 2, 1, "", "Drive_enableServoOff"], [504, 2, 1, "", "Drive_enableServoOff_async"], [504, 2, 1, "", "Drive_enableServoOn"], [504, 2, 1, "", "Drive_enableServoOn_async"], [504, 2, 1, "", "Drive_findReference"], [504, 2, 1, "", "Drive_findReference_async"], [504, 2, 1, "", "Drive_getAlarmStatus"], [504, 2, 1, "", "Drive_getAlarmStatus_async"], [504, 2, 1, "", "Drive_getLimitStatus"], [504, 2, 1, "", "Drive_getLimitStatus_async"], [504, 2, 1, "", "Drive_getMoveStatus"], [504, 2, 1, "", "Drive_getMoveStatus_async"], [504, 2, 1, "", "Drive_open"], [504, 2, 1, "", "Drive_open_async"], [504, 2, 1, "", "Drive_overrideAccel"], [504, 2, 1, "", "Drive_overrideAccel_async"], [504, 2, 1, "", "Drive_overridePosition"], [504, 2, 1, "", "Drive_overridePosition_async"], [504, 2, 1, "", "Drive_overrideVelocity"], [504, 2, 1, "", "Drive_overrideVelocity_async"], [504, 2, 1, "", "Drive_readCurrentVelocity"], [504, 2, 1, "", "Drive_readCurrentVelocity_async"], [504, 2, 1, "", "Drive_readEncoderPosition"], [504, 2, 1, "", "Drive_readEncoderPosition_async"], [504, 2, 1, "", "Drive_rstEncoderPosi"], [504, 2, 1, "", "Drive_rstEncoderPosi_async"], [504, 2, 1, "", "Drive_start"], [504, 2, 1, "", "Drive_start_async"], [504, 2, 1, "", "Drive_stop"], [504, 2, 1, "", "Drive_stop_async"], [504, 2, 1, "", "Net_getGateway"], [504, 2, 1, "", "Net_getGateway_async"], [504, 2, 1, "", "Net_getIPAddrAndSubmask"], [504, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [504, 2, 1, "", "Net_getMACAddr"], [504, 2, 1, "", "Net_getMACAddr_async"], [504, 2, 1, "", "Net_setIPAddrAndSubmask"], [504, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [504, 2, 1, "", "Sys_getDriverInfo"], [504, 2, 1, "", "Sys_getDriverInfo_async"], [504, 2, 1, "", "Sys_getGateway"], [504, 2, 1, "", "Sys_getGateway_async"], [504, 2, 1, "", "Sys_getIPAddrAndSubmask"], [504, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [504, 2, 1, "", "Sys_getMACAddr"], [504, 2, 1, "", "Sys_getMACAddr_async"], [504, 2, 1, "", "Sys_getMode"], [504, 2, 1, "", "Sys_getMode_async"], [504, 2, 1, "", "Sys_getPinModeInPort"], [504, 2, 1, "", "Sys_getPinModeInPort_async"], [504, 2, 1, "", "Sys_getRTC"], [504, 2, 1, "", "Sys_getRTC_async"], [504, 2, 1, "", "Sys_getSerialNumber"], [504, 2, 1, "", "Sys_getSerialNumber_async"], [504, 2, 1, "", "Sys_reboot"], [504, 2, 1, "", "Sys_rebootOnBootloader"], [504, 2, 1, "", "Sys_rebootOnBootloader_async"], [504, 2, 1, "", "Sys_reboot_async"], [504, 2, 1, "", "Sys_setAIOMode"], [504, 2, 1, "", "Sys_setAIOMode_async"], [504, 2, 1, "", "Sys_setDIMode"], [504, 2, 1, "", "Sys_setDIMode_async"], [504, 2, 1, "", "Sys_setDIOMode"], [504, 2, 1, "", "Sys_setDIOMode_async"], [504, 2, 1, "", "Sys_setDOMode"], [504, 2, 1, "", "Sys_setDOMode_async"], [504, 2, 1, "", "Sys_setIPAddrAndSubmask"], [504, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [504, 2, 1, "", "Sys_setIdleMode"], [504, 2, 1, "", "Sys_setIdleMode_async"], [504, 2, 1, "", "Sys_setMotionMode"], [504, 2, 1, "", "Sys_setMotionMode_async"], [504, 2, 1, "", "Sys_setRTC"], [504, 2, 1, "", "Sys_setRTC_async"], [504, 2, 1, "", "Sys_setSlotMode"], [504, 2, 1, "", "Sys_setSlotMode_async"], [504, 2, 1, "", "Sys_setSwitchMode"], [504, 2, 1, "", "Sys_setSwitchMode_async"], [504, 2, 1, "", "close"], [504, 2, 1, "", "connect"], [504, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[505, 2, 1, "", "Logger_openFile"], [505, 2, 1, "", "Logger_write2DList"], [505, 2, 1, "", "Logger_writeHeader"], [505, 2, 1, "", "Logger_writeList"], [505, 2, 1, "", "Logger_writeValue"], [505, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [505, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [505, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [505, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [505, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [505, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [505, 2, 1, "", "Motion_cfgAlarm"], [505, 2, 1, "", "Motion_cfgAlarm_async"], [505, 2, 1, "", "Motion_cfgAxis"], [505, 2, 1, "", "Motion_cfgAxisMove"], [505, 2, 1, "", "Motion_cfgAxisMove_async"], [505, 2, 1, "", "Motion_cfgAxis_async"], [505, 2, 1, "", "Motion_cfgBreakPoint"], [505, 2, 1, "", "Motion_cfgBreakPoint_async"], [505, 2, 1, "", "Motion_cfgCapture"], [505, 2, 1, "", "Motion_cfgCapture_async"], [505, 2, 1, "", "Motion_cfgCircularInterpo"], [505, 2, 1, "", "Motion_cfgCircularInterpo_async"], [505, 2, 1, "", "Motion_cfgEncoder"], [505, 2, 1, "", "Motion_cfgEncoder_async"], [505, 2, 1, "", "Motion_cfgFindRef"], [505, 2, 1, "", "Motion_cfgFindRef_async"], [505, 2, 1, "", "Motion_cfgHelicalInterpo"], [505, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [505, 2, 1, "", "Motion_cfgHome"], [505, 2, 1, "", "Motion_cfgHome_async"], [505, 2, 1, "", "Motion_cfgInposi"], [505, 2, 1, "", "Motion_cfgInposi_async"], [505, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [505, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [505, 2, 1, "", "Motion_cfgLimit"], [505, 2, 1, "", "Motion_cfgLimit_async"], [505, 2, 1, "", "Motion_checkRef"], [505, 2, 1, "", "Motion_checkRef_async"], [505, 2, 1, "", "Motion_close"], [505, 2, 1, "", "Motion_close_async"], [505, 2, 1, "", "Motion_enableBreakPoint"], [505, 2, 1, "", "Motion_enableBreakPoint_async"], [505, 2, 1, "", "Motion_enableCapture"], [505, 2, 1, "", "Motion_enableCapture_async"], [505, 2, 1, "", "Motion_enableServoOff"], [505, 2, 1, "", "Motion_enableServoOff_async"], [505, 2, 1, "", "Motion_enableServoOn"], [505, 2, 1, "", "Motion_enableServoOn_async"], [505, 2, 1, "", "Motion_findRef"], [505, 2, 1, "", "Motion_findRef_async"], [505, 2, 1, "", "Motion_getEncoderPosi"], [505, 2, 1, "", "Motion_getEncoderPosi_async"], [505, 2, 1, "", "Motion_getHomeStatus"], [505, 2, 1, "", "Motion_getHomeStatus_async"], [505, 2, 1, "", "Motion_getLimitStatus"], [505, 2, 1, "", "Motion_getLimitStatus_async"], [505, 2, 1, "", "Motion_getLogicalPosi"], [505, 2, 1, "", "Motion_getLogicalPosi_async"], [505, 2, 1, "", "Motion_getMoveStatus"], [505, 2, 1, "", "Motion_getMoveStatus_async"], [505, 2, 1, "", "Motion_loadCfgFile"], [505, 2, 1, "", "Motion_loadCfgFile_async"], [505, 2, 1, "", "Motion_open"], [505, 2, 1, "", "Motion_openCfgFile"], [505, 2, 1, "", "Motion_openCfgFile_async"], [505, 2, 1, "", "Motion_open_async"], [505, 2, 1, "", "Motion_overrideAxisAccel"], [505, 2, 1, "", "Motion_overrideAxisAccel_async"], [505, 2, 1, "", "Motion_overrideAxisPosi"], [505, 2, 1, "", "Motion_overrideAxisPosi_async"], [505, 2, 1, "", "Motion_overrideAxisVelocity"], [505, 2, 1, "", "Motion_overrideAxisVelocity_async"], [505, 2, 1, "", "Motion_readCapturePoint"], [505, 2, 1, "", "Motion_readCapturePoint_async"], [505, 2, 1, "", "Motion_rstEncoderPosi"], [505, 2, 1, "", "Motion_rstEncoderPosi_async"], [505, 2, 1, "", "Motion_saveCfgFile"], [505, 2, 1, "", "Motion_saveCfgFile_async"], [505, 2, 1, "", "Motion_setLogicalPosi"], [505, 2, 1, "", "Motion_setLogicalPosi_async"], [505, 2, 1, "", "Motion_startCircularInterpo"], [505, 2, 1, "", "Motion_startCircularInterpo_async"], [505, 2, 1, "", "Motion_startHelicalInterpo"], [505, 2, 1, "", "Motion_startHelicalInterpo_async"], [505, 2, 1, "", "Motion_startLinearInterpo"], [505, 2, 1, "", "Motion_startLinearInterpo_async"], [505, 2, 1, "", "Motion_startMultiAxisMove"], [505, 2, 1, "", "Motion_startMultiAxisMove_async"], [505, 2, 1, "", "Motion_startSingleAxisMove"], [505, 2, 1, "", "Motion_startSingleAxisMove_async"], [505, 2, 1, "", "Motion_stop"], [505, 2, 1, "", "Motion_stop_async"], [505, 2, 1, "", "Net_getGateway"], [505, 2, 1, "", "Net_getGateway_async"], [505, 2, 1, "", "Net_getIPAddrAndSubmask"], [505, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [505, 2, 1, "", "Net_getMACAddr"], [505, 2, 1, "", "Net_getMACAddr_async"], [505, 2, 1, "", "Net_setIPAddrAndSubmask"], [505, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [505, 2, 1, "", "Sys_getDriverInfo"], [505, 2, 1, "", "Sys_getDriverInfo_async"], [505, 2, 1, "", "Sys_getGateway"], [505, 2, 1, "", "Sys_getGateway_async"], [505, 2, 1, "", "Sys_getIPAddrAndSubmask"], [505, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [505, 2, 1, "", "Sys_getMACAddr"], [505, 2, 1, "", "Sys_getMACAddr_async"], [505, 2, 1, "", "Sys_getMode"], [505, 2, 1, "", "Sys_getMode_async"], [505, 2, 1, "", "Sys_getPinModeInPort"], [505, 2, 1, "", "Sys_getPinModeInPort_async"], [505, 2, 1, "", "Sys_getRTC"], [505, 2, 1, "", "Sys_getRTC_async"], [505, 2, 1, "", "Sys_getSerialNumber"], [505, 2, 1, "", "Sys_getSerialNumber_async"], [505, 2, 1, "", "Sys_reboot"], [505, 2, 1, "", "Sys_rebootOnBootloader"], [505, 2, 1, "", "Sys_rebootOnBootloader_async"], [505, 2, 1, "", "Sys_reboot_async"], [505, 2, 1, "", "Sys_setAIOMode"], [505, 2, 1, "", "Sys_setAIOMode_async"], [505, 2, 1, "", "Sys_setDIMode"], [505, 2, 1, "", "Sys_setDIMode_async"], [505, 2, 1, "", "Sys_setDIOMode"], [505, 2, 1, "", "Sys_setDIOMode_async"], [505, 2, 1, "", "Sys_setDOMode"], [505, 2, 1, "", "Sys_setDOMode_async"], [505, 2, 1, "", "Sys_setIPAddrAndSubmask"], [505, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [505, 2, 1, "", "Sys_setIdleMode"], [505, 2, 1, "", "Sys_setIdleMode_async"], [505, 2, 1, "", "Sys_setMotionMode"], [505, 2, 1, "", "Sys_setMotionMode_async"], [505, 2, 1, "", "Sys_setRTC"], [505, 2, 1, "", "Sys_setRTC_async"], [505, 2, 1, "", "Sys_setSlotMode"], [505, 2, 1, "", "Sys_setSlotMode_async"], [505, 2, 1, "", "Sys_setSwitchMode"], [505, 2, 1, "", "Sys_setSwitchMode_async"], [505, 2, 1, "", "close"], [505, 2, 1, "", "connect"], [505, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[506, 2, 1, "", "AI_close"], [506, 2, 1, "", "AI_close_async"], [506, 2, 1, "", "AI_enableCS"], [506, 2, 1, "", "AI_enableCS_async"], [506, 2, 1, "", "AI_getPort"], [506, 2, 1, "", "AI_open"], [506, 2, 1, "", "AI_open_async"], [506, 2, 1, "", "AI_readOnDemand"], [506, 2, 1, "", "AI_readOnDemand_async"], [506, 2, 1, "", "AI_readStreaming"], [506, 2, 1, "", "AI_readStreaming_async"], [506, 2, 1, "", "AI_setMode"], [506, 2, 1, "", "AI_setMode_async"], [506, 2, 1, "", "AI_setNumSamples"], [506, 2, 1, "", "AI_setNumSamples_async"], [506, 2, 1, "", "AI_setSamplingRate"], [506, 2, 1, "", "AI_setSamplingRate_async"], [506, 2, 1, "", "AI_start"], [506, 2, 1, "", "AI_start_async"], [506, 2, 1, "", "AI_stop"], [506, 2, 1, "", "AI_stop_async"], [506, 2, 1, "", "Logger_openFile"], [506, 2, 1, "", "Logger_write2DList"], [506, 2, 1, "", "Logger_writeHeader"], [506, 2, 1, "", "Logger_writeList"], [506, 2, 1, "", "Logger_writeValue"], [506, 2, 1, "", "Net_getGateway"], [506, 2, 1, "", "Net_getGateway_async"], [506, 2, 1, "", "Net_getIPAddrAndSubmask"], [506, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [506, 2, 1, "", "Net_getMACAddr"], [506, 2, 1, "", "Net_getMACAddr_async"], [506, 2, 1, "", "Net_setIPAddrAndSubmask"], [506, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [506, 2, 1, "", "Sys_getDriverInfo"], [506, 2, 1, "", "Sys_getDriverInfo_async"], [506, 2, 1, "", "Sys_getGateway"], [506, 2, 1, "", "Sys_getGateway_async"], [506, 2, 1, "", "Sys_getIPAddrAndSubmask"], [506, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [506, 2, 1, "", "Sys_getMACAddr"], [506, 2, 1, "", "Sys_getMACAddr_async"], [506, 2, 1, "", "Sys_getMode"], [506, 2, 1, "", "Sys_getMode_async"], [506, 2, 1, "", "Sys_getPinModeInPort"], [506, 2, 1, "", "Sys_getPinModeInPort_async"], [506, 2, 1, "", "Sys_getRTC"], [506, 2, 1, "", "Sys_getRTC_async"], [506, 2, 1, "", "Sys_getSerialNumber"], [506, 2, 1, "", "Sys_getSerialNumber_async"], [506, 2, 1, "", "Sys_reboot"], [506, 2, 1, "", "Sys_rebootOnBootloader"], [506, 2, 1, "", "Sys_rebootOnBootloader_async"], [506, 2, 1, "", "Sys_reboot_async"], [506, 2, 1, "", "Sys_setAIOMode"], [506, 2, 1, "", "Sys_setAIOMode_async"], [506, 2, 1, "", "Sys_setDIMode"], [506, 2, 1, "", "Sys_setDIMode_async"], [506, 2, 1, "", "Sys_setDIOMode"], [506, 2, 1, "", "Sys_setDIOMode_async"], [506, 2, 1, "", "Sys_setDOMode"], [506, 2, 1, "", "Sys_setDOMode_async"], [506, 2, 1, "", "Sys_setIPAddrAndSubmask"], [506, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [506, 2, 1, "", "Sys_setIdleMode"], [506, 2, 1, "", "Sys_setIdleMode_async"], [506, 2, 1, "", "Sys_setMotionMode"], [506, 2, 1, "", "Sys_setMotionMode_async"], [506, 2, 1, "", "Sys_setRTC"], [506, 2, 1, "", "Sys_setRTC_async"], [506, 2, 1, "", "Sys_setSlotMode"], [506, 2, 1, "", "Sys_setSlotMode_async"], [506, 2, 1, "", "Sys_setSwitchMode"], [506, 2, 1, "", "Sys_setSwitchMode_async"], [506, 2, 1, "", "close"], [506, 2, 1, "", "connect"], [506, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[507, 2, 1, "", "DIO_loadStartup"], [507, 2, 1, "", "DIO_loadStartup_async"], [507, 2, 1, "", "DIO_saveStartup"], [507, 2, 1, "", "DIO_saveStartup_async"], [507, 2, 1, "", "DIO_setPortDI"], [507, 2, 1, "", "DIO_setPortDI_async"], [507, 2, 1, "", "DIO_setPortDO"], [507, 2, 1, "", "DIO_setPortDO_async"], [507, 2, 1, "", "DIO_setPortIdle"], [507, 2, 1, "", "DIO_setPortIdle_async"], [507, 2, 1, "", "DI_closePins"], [507, 2, 1, "", "DI_closePins_async"], [507, 2, 1, "", "DI_closePort"], [507, 2, 1, "", "DI_closePort_async"], [507, 2, 1, "", "DI_getPinMap"], [507, 2, 1, "", "DI_openPins"], [507, 2, 1, "", "DI_openPins_async"], [507, 2, 1, "", "DI_openPort"], [507, 2, 1, "", "DI_openPort_async"], [507, 2, 1, "", "DI_readPins"], [507, 2, 1, "", "DI_readPins_async"], [507, 2, 1, "", "DI_readPort"], [507, 2, 1, "", "DI_readPort_async"], [507, 2, 1, "", "DO_closePins"], [507, 2, 1, "", "DO_closePins_async"], [507, 2, 1, "", "DO_closePort"], [507, 2, 1, "", "DO_closePort_async"], [507, 2, 1, "", "DO_getPinMap"], [507, 2, 1, "", "DO_openPins"], [507, 2, 1, "", "DO_openPins_async"], [507, 2, 1, "", "DO_openPort"], [507, 2, 1, "", "DO_openPort_async"], [507, 2, 1, "", "DO_togglePins"], [507, 2, 1, "", "DO_togglePins_async"], [507, 2, 1, "", "DO_togglePort"], [507, 2, 1, "", "DO_togglePort_async"], [507, 2, 1, "", "DO_writePins"], [507, 2, 1, "", "DO_writePins_async"], [507, 2, 1, "", "DO_writePort"], [507, 2, 1, "", "DO_writePort_async"], [507, 2, 1, "", "Logger_openFile"], [507, 2, 1, "", "Logger_write2DList"], [507, 2, 1, "", "Logger_writeHeader"], [507, 2, 1, "", "Logger_writeList"], [507, 2, 1, "", "Logger_writeValue"], [507, 2, 1, "", "Net_getGateway"], [507, 2, 1, "", "Net_getGateway_async"], [507, 2, 1, "", "Net_getIPAddrAndSubmask"], [507, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [507, 2, 1, "", "Net_getMACAddr"], [507, 2, 1, "", "Net_getMACAddr_async"], [507, 2, 1, "", "Net_setIPAddrAndSubmask"], [507, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [507, 2, 1, "", "Sys_getDriverInfo"], [507, 2, 1, "", "Sys_getDriverInfo_async"], [507, 2, 1, "", "Sys_getGateway"], [507, 2, 1, "", "Sys_getGateway_async"], [507, 2, 1, "", "Sys_getIPAddrAndSubmask"], [507, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [507, 2, 1, "", "Sys_getMACAddr"], [507, 2, 1, "", "Sys_getMACAddr_async"], [507, 2, 1, "", "Sys_getMode"], [507, 2, 1, "", "Sys_getMode_async"], [507, 2, 1, "", "Sys_getPinModeInPort"], [507, 2, 1, "", "Sys_getPinModeInPort_async"], [507, 2, 1, "", "Sys_getRTC"], [507, 2, 1, "", "Sys_getRTC_async"], [507, 2, 1, "", "Sys_getSerialNumber"], [507, 2, 1, "", "Sys_getSerialNumber_async"], [507, 2, 1, "", "Sys_reboot"], [507, 2, 1, "", "Sys_rebootOnBootloader"], [507, 2, 1, "", "Sys_rebootOnBootloader_async"], [507, 2, 1, "", "Sys_reboot_async"], [507, 2, 1, "", "Sys_setAIOMode"], [507, 2, 1, "", "Sys_setAIOMode_async"], [507, 2, 1, "", "Sys_setDIMode"], [507, 2, 1, "", "Sys_setDIMode_async"], [507, 2, 1, "", "Sys_setDIOMode"], [507, 2, 1, "", "Sys_setDIOMode_async"], [507, 2, 1, "", "Sys_setDOMode"], [507, 2, 1, "", "Sys_setDOMode_async"], [507, 2, 1, "", "Sys_setIPAddrAndSubmask"], [507, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [507, 2, 1, "", "Sys_setIdleMode"], [507, 2, 1, "", "Sys_setIdleMode_async"], [507, 2, 1, "", "Sys_setMotionMode"], [507, 2, 1, "", "Sys_setMotionMode_async"], [507, 2, 1, "", "Sys_setRTC"], [507, 2, 1, "", "Sys_setRTC_async"], [507, 2, 1, "", "Sys_setSlotMode"], [507, 2, 1, "", "Sys_setSlotMode_async"], [507, 2, 1, "", "Sys_setSwitchMode"], [507, 2, 1, "", "Sys_setSwitchMode_async"], [507, 2, 1, "", "close"], [507, 2, 1, "", "connect"], [507, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[508, 2, 1, "", "AI_close"], [508, 2, 1, "", "AI_close_async"], [508, 2, 1, "", "AI_getPort"], [508, 2, 1, "", "AI_open"], [508, 2, 1, "", "AI_open_async"], [508, 2, 1, "", "AI_readOnDemand"], [508, 2, 1, "", "AI_readOnDemand_async"], [508, 2, 1, "", "Logger_openFile"], [508, 2, 1, "", "Logger_write2DList"], [508, 2, 1, "", "Logger_writeHeader"], [508, 2, 1, "", "Logger_writeList"], [508, 2, 1, "", "Logger_writeValue"], [508, 2, 1, "", "Net_getGateway"], [508, 2, 1, "", "Net_getGateway_async"], [508, 2, 1, "", "Net_getIPAddrAndSubmask"], [508, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [508, 2, 1, "", "Net_getMACAddr"], [508, 2, 1, "", "Net_getMACAddr_async"], [508, 2, 1, "", "Net_setIPAddrAndSubmask"], [508, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [508, 2, 1, "", "Sys_getDriverInfo"], [508, 2, 1, "", "Sys_getDriverInfo_async"], [508, 2, 1, "", "Sys_getGateway"], [508, 2, 1, "", "Sys_getGateway_async"], [508, 2, 1, "", "Sys_getIPAddrAndSubmask"], [508, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [508, 2, 1, "", "Sys_getMACAddr"], [508, 2, 1, "", "Sys_getMACAddr_async"], [508, 2, 1, "", "Sys_getMode"], [508, 2, 1, "", "Sys_getMode_async"], [508, 2, 1, "", "Sys_getPinModeInPort"], [508, 2, 1, "", "Sys_getPinModeInPort_async"], [508, 2, 1, "", "Sys_getRTC"], [508, 2, 1, "", "Sys_getRTC_async"], [508, 2, 1, "", "Sys_getSerialNumber"], [508, 2, 1, "", "Sys_getSerialNumber_async"], [508, 2, 1, "", "Sys_reboot"], [508, 2, 1, "", "Sys_rebootOnBootloader"], [508, 2, 1, "", "Sys_rebootOnBootloader_async"], [508, 2, 1, "", "Sys_reboot_async"], [508, 2, 1, "", "Sys_setAIOMode"], [508, 2, 1, "", "Sys_setAIOMode_async"], [508, 2, 1, "", "Sys_setDIMode"], [508, 2, 1, "", "Sys_setDIMode_async"], [508, 2, 1, "", "Sys_setDIOMode"], [508, 2, 1, "", "Sys_setDIOMode_async"], [508, 2, 1, "", "Sys_setDOMode"], [508, 2, 1, "", "Sys_setDOMode_async"], [508, 2, 1, "", "Sys_setIPAddrAndSubmask"], [508, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [508, 2, 1, "", "Sys_setIdleMode"], [508, 2, 1, "", "Sys_setIdleMode_async"], [508, 2, 1, "", "Sys_setMotionMode"], [508, 2, 1, "", "Sys_setMotionMode_async"], [508, 2, 1, "", "Sys_setRTC"], [508, 2, 1, "", "Sys_setRTC_async"], [508, 2, 1, "", "Sys_setSlotMode"], [508, 2, 1, "", "Sys_setSlotMode_async"], [508, 2, 1, "", "Sys_setSwitchMode"], [508, 2, 1, "", "Sys_setSwitchMode_async"], [508, 2, 1, "", "close"], [508, 2, 1, "", "connect"], [508, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[509, 2, 1, "", "DIO_loadStartup"], [509, 2, 1, "", "DIO_loadStartup_async"], [509, 2, 1, "", "DIO_saveStartup"], [509, 2, 1, "", "DIO_saveStartup_async"], [509, 2, 1, "", "DIO_setPortDI"], [509, 2, 1, "", "DIO_setPortDI_async"], [509, 2, 1, "", "DIO_setPortDO"], [509, 2, 1, "", "DIO_setPortDO_async"], [509, 2, 1, "", "DIO_setPortIdle"], [509, 2, 1, "", "DIO_setPortIdle_async"], [509, 2, 1, "", "DI_closePins"], [509, 2, 1, "", "DI_closePins_async"], [509, 2, 1, "", "DI_closePort"], [509, 2, 1, "", "DI_closePort_async"], [509, 2, 1, "", "DI_getPinMap"], [509, 2, 1, "", "DI_openPins"], [509, 2, 1, "", "DI_openPins_async"], [509, 2, 1, "", "DI_openPort"], [509, 2, 1, "", "DI_openPort_async"], [509, 2, 1, "", "DI_readPins"], [509, 2, 1, "", "DI_readPins_async"], [509, 2, 1, "", "DI_readPort"], [509, 2, 1, "", "DI_readPort_async"], [509, 2, 1, "", "DO_closePins"], [509, 2, 1, "", "DO_closePins_async"], [509, 2, 1, "", "DO_closePort"], [509, 2, 1, "", "DO_closePort_async"], [509, 2, 1, "", "DO_getPinMap"], [509, 2, 1, "", "DO_openPins"], [509, 2, 1, "", "DO_openPins_async"], [509, 2, 1, "", "DO_openPort"], [509, 2, 1, "", "DO_openPort_async"], [509, 2, 1, "", "DO_togglePins"], [509, 2, 1, "", "DO_togglePins_async"], [509, 2, 1, "", "DO_togglePort"], [509, 2, 1, "", "DO_togglePort_async"], [509, 2, 1, "", "DO_writePins"], [509, 2, 1, "", "DO_writePins_async"], [509, 2, 1, "", "DO_writePort"], [509, 2, 1, "", "DO_writePort_async"], [509, 2, 1, "", "Logger_openFile"], [509, 2, 1, "", "Logger_write2DList"], [509, 2, 1, "", "Logger_writeHeader"], [509, 2, 1, "", "Logger_writeList"], [509, 2, 1, "", "Logger_writeValue"], [509, 2, 1, "", "Net_getGateway"], [509, 2, 1, "", "Net_getGateway_async"], [509, 2, 1, "", "Net_getIPAddrAndSubmask"], [509, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [509, 2, 1, "", "Net_getMACAddr"], [509, 2, 1, "", "Net_getMACAddr_async"], [509, 2, 1, "", "Net_setIPAddrAndSubmask"], [509, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [509, 2, 1, "", "Relay_close"], [509, 2, 1, "", "Relay_close_async"], [509, 2, 1, "", "Relay_open"], [509, 2, 1, "", "Relay_open_async"], [509, 2, 1, "", "Relay_read"], [509, 2, 1, "", "Relay_read_async"], [509, 2, 1, "", "Sys_getDriverInfo"], [509, 2, 1, "", "Sys_getDriverInfo_async"], [509, 2, 1, "", "Sys_getGateway"], [509, 2, 1, "", "Sys_getGateway_async"], [509, 2, 1, "", "Sys_getIPAddrAndSubmask"], [509, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [509, 2, 1, "", "Sys_getMACAddr"], [509, 2, 1, "", "Sys_getMACAddr_async"], [509, 2, 1, "", "Sys_getMode"], [509, 2, 1, "", "Sys_getMode_async"], [509, 2, 1, "", "Sys_getPinModeInPort"], [509, 2, 1, "", "Sys_getPinModeInPort_async"], [509, 2, 1, "", "Sys_getRTC"], [509, 2, 1, "", "Sys_getRTC_async"], [509, 2, 1, "", "Sys_getSerialNumber"], [509, 2, 1, "", "Sys_getSerialNumber_async"], [509, 2, 1, "", "Sys_reboot"], [509, 2, 1, "", "Sys_rebootOnBootloader"], [509, 2, 1, "", "Sys_rebootOnBootloader_async"], [509, 2, 1, "", "Sys_reboot_async"], [509, 2, 1, "", "Sys_setAIOMode"], [509, 2, 1, "", "Sys_setAIOMode_async"], [509, 2, 1, "", "Sys_setDIMode"], [509, 2, 1, "", "Sys_setDIMode_async"], [509, 2, 1, "", "Sys_setDIOMode"], [509, 2, 1, "", "Sys_setDIOMode_async"], [509, 2, 1, "", "Sys_setDOMode"], [509, 2, 1, "", "Sys_setDOMode_async"], [509, 2, 1, "", "Sys_setIPAddrAndSubmask"], [509, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [509, 2, 1, "", "Sys_setIdleMode"], [509, 2, 1, "", "Sys_setIdleMode_async"], [509, 2, 1, "", "Sys_setMotionMode"], [509, 2, 1, "", "Sys_setMotionMode_async"], [509, 2, 1, "", "Sys_setRTC"], [509, 2, 1, "", "Sys_setRTC_async"], [509, 2, 1, "", "Sys_setSlotMode"], [509, 2, 1, "", "Sys_setSlotMode_async"], [509, 2, 1, "", "Sys_setSwitchMode"], [509, 2, 1, "", "Sys_setSwitchMode_async"], [509, 2, 1, "", "close"], [509, 2, 1, "", "connect"], [509, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[510, 2, 1, "", "AO_close"], [510, 2, 1, "", "AO_closeStreaming"], [510, 2, 1, "", "AO_closeStreaming_async"], [510, 2, 1, "", "AO_close_async"], [510, 2, 1, "", "AO_getEnableChannels"], [510, 2, 1, "", "AO_getMode"], [510, 2, 1, "", "AO_getMode_async"], [510, 2, 1, "", "AO_getPort"], [510, 2, 1, "", "AO_getState"], [510, 2, 1, "", "AO_getValues"], [510, 2, 1, "", "AO_getValues_async"], [510, 2, 1, "", "AO_open"], [510, 2, 1, "", "AO_openStreaming"], [510, 2, 1, "", "AO_openStreaming_async"], [510, 2, 1, "", "AO_open_async"], [510, 2, 1, "", "AO_pushToBuffer"], [510, 2, 1, "", "AO_setEnableChannels"], [510, 2, 1, "", "AO_setEnableChannels_async"], [510, 2, 1, "", "AO_setForm"], [510, 2, 1, "", "AO_setFormParam"], [510, 2, 1, "", "AO_setFormParam_async"], [510, 2, 1, "", "AO_setForm_async"], [510, 2, 1, "", "AO_setMode"], [510, 2, 1, "", "AO_setMode_async"], [510, 2, 1, "", "AO_setNumSamples"], [510, 2, 1, "", "AO_setNumSamples_async"], [510, 2, 1, "", "AO_setSamplingRate"], [510, 2, 1, "", "AO_setSamplingRate_async"], [510, 2, 1, "", "AO_startStreaming"], [510, 2, 1, "", "AO_startStreaming_async"], [510, 2, 1, "", "AO_writeAllChannels"], [510, 2, 1, "", "AO_writeAllChannels_async"], [510, 2, 1, "", "AO_writeOneChannel"], [510, 2, 1, "", "AO_writeOneChannel_async"], [510, 2, 1, "", "Logger_openFile"], [510, 2, 1, "", "Logger_write2DList"], [510, 2, 1, "", "Logger_writeHeader"], [510, 2, 1, "", "Logger_writeList"], [510, 2, 1, "", "Logger_writeValue"], [510, 2, 1, "", "Net_getGateway"], [510, 2, 1, "", "Net_getGateway_async"], [510, 2, 1, "", "Net_getIPAddrAndSubmask"], [510, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [510, 2, 1, "", "Net_getMACAddr"], [510, 2, 1, "", "Net_getMACAddr_async"], [510, 2, 1, "", "Net_setIPAddrAndSubmask"], [510, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [510, 2, 1, "", "Sys_getDriverInfo"], [510, 2, 1, "", "Sys_getDriverInfo_async"], [510, 2, 1, "", "Sys_getGateway"], [510, 2, 1, "", "Sys_getGateway_async"], [510, 2, 1, "", "Sys_getIPAddrAndSubmask"], [510, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [510, 2, 1, "", "Sys_getMACAddr"], [510, 2, 1, "", "Sys_getMACAddr_async"], [510, 2, 1, "", "Sys_getMode"], [510, 2, 1, "", "Sys_getMode_async"], [510, 2, 1, "", "Sys_getPinModeInPort"], [510, 2, 1, "", "Sys_getPinModeInPort_async"], [510, 2, 1, "", "Sys_getRTC"], [510, 2, 1, "", "Sys_getRTC_async"], [510, 2, 1, "", "Sys_getSerialNumber"], [510, 2, 1, "", "Sys_getSerialNumber_async"], [510, 2, 1, "", "Sys_reboot"], [510, 2, 1, "", "Sys_rebootOnBootloader"], [510, 2, 1, "", "Sys_rebootOnBootloader_async"], [510, 2, 1, "", "Sys_reboot_async"], [510, 2, 1, "", "Sys_setAIOMode"], [510, 2, 1, "", "Sys_setAIOMode_async"], [510, 2, 1, "", "Sys_setDIMode"], [510, 2, 1, "", "Sys_setDIMode_async"], [510, 2, 1, "", "Sys_setDIOMode"], [510, 2, 1, "", "Sys_setDIOMode_async"], [510, 2, 1, "", "Sys_setDOMode"], [510, 2, 1, "", "Sys_setDOMode_async"], [510, 2, 1, "", "Sys_setIPAddrAndSubmask"], [510, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [510, 2, 1, "", "Sys_setIdleMode"], [510, 2, 1, "", "Sys_setIdleMode_async"], [510, 2, 1, "", "Sys_setMotionMode"], [510, 2, 1, "", "Sys_setMotionMode_async"], [510, 2, 1, "", "Sys_setRTC"], [510, 2, 1, "", "Sys_setRTC_async"], [510, 2, 1, "", "Sys_setSlotMode"], [510, 2, 1, "", "Sys_setSlotMode_async"], [510, 2, 1, "", "Sys_setSwitchMode"], [510, 2, 1, "", "Sys_setSwitchMode_async"], [510, 2, 1, "", "close"], [510, 2, 1, "", "connect"], [510, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[511, 2, 1, "", "Logger_openFile"], [511, 2, 1, "", "Logger_write2DList"], [511, 2, 1, "", "Logger_writeHeader"], [511, 2, 1, "", "Logger_writeList"], [511, 2, 1, "", "Logger_writeValue"], [511, 2, 1, "", "Net_getGateway"], [511, 2, 1, "", "Net_getGateway_async"], [511, 2, 1, "", "Net_getIPAddrAndSubmask"], [511, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [511, 2, 1, "", "Net_getMACAddr"], [511, 2, 1, "", "Net_getMACAddr_async"], [511, 2, 1, "", "Net_setIPAddrAndSubmask"], [511, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [511, 2, 1, "", "Sys_getDriverInfo"], [511, 2, 1, "", "Sys_getDriverInfo_async"], [511, 2, 1, "", "Sys_getGateway"], [511, 2, 1, "", "Sys_getGateway_async"], [511, 2, 1, "", "Sys_getIPAddrAndSubmask"], [511, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [511, 2, 1, "", "Sys_getMACAddr"], [511, 2, 1, "", "Sys_getMACAddr_async"], [511, 2, 1, "", "Sys_getMode"], [511, 2, 1, "", "Sys_getMode_async"], [511, 2, 1, "", "Sys_getPinModeInPort"], [511, 2, 1, "", "Sys_getPinModeInPort_async"], [511, 2, 1, "", "Sys_getRTC"], [511, 2, 1, "", "Sys_getRTC_async"], [511, 2, 1, "", "Sys_getSerialNumber"], [511, 2, 1, "", "Sys_getSerialNumber_async"], [511, 2, 1, "", "Sys_reboot"], [511, 2, 1, "", "Sys_rebootOnBootloader"], [511, 2, 1, "", "Sys_rebootOnBootloader_async"], [511, 2, 1, "", "Sys_reboot_async"], [511, 2, 1, "", "Sys_setAIOMode"], [511, 2, 1, "", "Sys_setAIOMode_async"], [511, 2, 1, "", "Sys_setDIMode"], [511, 2, 1, "", "Sys_setDIMode_async"], [511, 2, 1, "", "Sys_setDIOMode"], [511, 2, 1, "", "Sys_setDIOMode_async"], [511, 2, 1, "", "Sys_setDOMode"], [511, 2, 1, "", "Sys_setDOMode_async"], [511, 2, 1, "", "Sys_setIPAddrAndSubmask"], [511, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [511, 2, 1, "", "Sys_setIdleMode"], [511, 2, 1, "", "Sys_setIdleMode_async"], [511, 2, 1, "", "Sys_setMotionMode"], [511, 2, 1, "", "Sys_setMotionMode_async"], [511, 2, 1, "", "Sys_setRTC"], [511, 2, 1, "", "Sys_setRTC_async"], [511, 2, 1, "", "Sys_setSlotMode"], [511, 2, 1, "", "Sys_setSlotMode_async"], [511, 2, 1, "", "Sys_setSwitchMode"], [511, 2, 1, "", "Sys_setSwitchMode_async"], [511, 2, 1, "", "Thermal_close"], [511, 2, 1, "", "Thermal_close_async"], [511, 2, 1, "", "Thermal_getPinMap"], [511, 2, 1, "", "Thermal_getStatus"], [511, 2, 1, "", "Thermal_getStatus_async"], [511, 2, 1, "", "Thermal_open"], [511, 2, 1, "", "Thermal_open_async"], [511, 2, 1, "", "Thermal_readSensor"], [511, 2, 1, "", "Thermal_readSensor_async"], [511, 2, 1, "", "Thermal_setOverSampling"], [511, 2, 1, "", "Thermal_setOverSampling_async"], [511, 2, 1, "", "Thermal_setType"], [511, 2, 1, "", "Thermal_setType_async"], [511, 2, 1, "", "close"], [511, 2, 1, "", "connect"], [511, 2, 1, "", "disconnect"]], "pywpc.STEM": [[512, 2, 1, "", "AI_close"], [512, 2, 1, "", "AI_close_async"], [512, 2, 1, "", "AI_enableCS"], [512, 2, 1, "", "AI_enableCS_async"], [512, 2, 1, "", "AI_getPort"], [512, 2, 1, "", "AI_open"], [512, 2, 1, "", "AI_open_async"], [512, 2, 1, "", "AI_readOnDemand"], [512, 2, 1, "", "AI_readOnDemand_async"], [512, 2, 1, "", "AI_readStreaming"], [512, 2, 1, "", "AI_readStreaming_async"], [512, 2, 1, "", "AI_setMode"], [512, 2, 1, "", "AI_setMode_async"], [512, 2, 1, "", "AI_setNumSamples"], [512, 2, 1, "", "AI_setNumSamples_async"], [512, 2, 1, "", "AI_setSamplingRate"], [512, 2, 1, "", "AI_setSamplingRate_async"], [512, 2, 1, "", "AI_start"], [512, 2, 1, "", "AI_start_async"], [512, 2, 1, "", "AI_stop"], [512, 2, 1, "", "AI_stop_async"], [512, 2, 1, "", "AO_close"], [512, 2, 1, "", "AO_closeStreaming"], [512, 2, 1, "", "AO_closeStreaming_async"], [512, 2, 1, "", "AO_close_async"], [512, 2, 1, "", "AO_getEnableChannels"], [512, 2, 1, "", "AO_getMode"], [512, 2, 1, "", "AO_getMode_async"], [512, 2, 1, "", "AO_getPort"], [512, 2, 1, "", "AO_getState"], [512, 2, 1, "", "AO_getValues"], [512, 2, 1, "", "AO_getValues_async"], [512, 2, 1, "", "AO_open"], [512, 2, 1, "", "AO_openStreaming"], [512, 2, 1, "", "AO_openStreaming_async"], [512, 2, 1, "", "AO_open_async"], [512, 2, 1, "", "AO_pushToBuffer"], [512, 2, 1, "", "AO_setEnableChannels"], [512, 2, 1, "", "AO_setEnableChannels_async"], [512, 2, 1, "", "AO_setForm"], [512, 2, 1, "", "AO_setFormParam"], [512, 2, 1, "", "AO_setFormParam_async"], [512, 2, 1, "", "AO_setForm_async"], [512, 2, 1, "", "AO_setMode"], [512, 2, 1, "", "AO_setMode_async"], [512, 2, 1, "", "AO_setNumSamples"], [512, 2, 1, "", "AO_setNumSamples_async"], [512, 2, 1, "", "AO_setSamplingRate"], [512, 2, 1, "", "AO_setSamplingRate_async"], [512, 2, 1, "", "AO_startStreaming"], [512, 2, 1, "", "AO_startStreaming_async"], [512, 2, 1, "", "AO_writeAllChannels"], [512, 2, 1, "", "AO_writeAllChannels_async"], [512, 2, 1, "", "AO_writeOneChannel"], [512, 2, 1, "", "AO_writeOneChannel_async"], [512, 2, 1, "", "DIO_loadStartup"], [512, 2, 1, "", "DIO_loadStartup_async"], [512, 2, 1, "", "DIO_saveStartup"], [512, 2, 1, "", "DIO_saveStartup_async"], [512, 2, 1, "", "DIO_setPortDI"], [512, 2, 1, "", "DIO_setPortDI_async"], [512, 2, 1, "", "DIO_setPortDO"], [512, 2, 1, "", "DIO_setPortDO_async"], [512, 2, 1, "", "DIO_setPortIdle"], [512, 2, 1, "", "DIO_setPortIdle_async"], [512, 2, 1, "", "DI_closePins"], [512, 2, 1, "", "DI_closePins_async"], [512, 2, 1, "", "DI_closePort"], [512, 2, 1, "", "DI_closePort_async"], [512, 2, 1, "", "DI_getPinMap"], [512, 2, 1, "", "DI_openPins"], [512, 2, 1, "", "DI_openPins_async"], [512, 2, 1, "", "DI_openPort"], [512, 2, 1, "", "DI_openPort_async"], [512, 2, 1, "", "DI_readPins"], [512, 2, 1, "", "DI_readPins_async"], [512, 2, 1, "", "DI_readPort"], [512, 2, 1, "", "DI_readPort_async"], [512, 2, 1, "", "DO_closePins"], [512, 2, 1, "", "DO_closePins_async"], [512, 2, 1, "", "DO_closePort"], [512, 2, 1, "", "DO_closePort_async"], [512, 2, 1, "", "DO_getPinMap"], [512, 2, 1, "", "DO_openPins"], [512, 2, 1, "", "DO_openPins_async"], [512, 2, 1, "", "DO_openPort"], [512, 2, 1, "", "DO_openPort_async"], [512, 2, 1, "", "DO_togglePins"], [512, 2, 1, "", "DO_togglePins_async"], [512, 2, 1, "", "DO_togglePort"], [512, 2, 1, "", "DO_togglePort_async"], [512, 2, 1, "", "DO_writePins"], [512, 2, 1, "", "DO_writePins_async"], [512, 2, 1, "", "DO_writePort"], [512, 2, 1, "", "DO_writePort_async"], [512, 2, 1, "", "Logger_openFile"], [512, 2, 1, "", "Logger_write2DList"], [512, 2, 1, "", "Logger_writeHeader"], [512, 2, 1, "", "Logger_writeList"], [512, 2, 1, "", "Logger_writeValue"], [512, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [512, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [512, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [512, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [512, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [512, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [512, 2, 1, "", "Motion_cfgAlarm"], [512, 2, 1, "", "Motion_cfgAlarm_async"], [512, 2, 1, "", "Motion_cfgAxis"], [512, 2, 1, "", "Motion_cfgAxisMove"], [512, 2, 1, "", "Motion_cfgAxisMove_async"], [512, 2, 1, "", "Motion_cfgAxis_async"], [512, 2, 1, "", "Motion_cfgBreakPoint"], [512, 2, 1, "", "Motion_cfgBreakPoint_async"], [512, 2, 1, "", "Motion_cfgCapture"], [512, 2, 1, "", "Motion_cfgCapture_async"], [512, 2, 1, "", "Motion_cfgCircularInterpo"], [512, 2, 1, "", "Motion_cfgCircularInterpo_async"], [512, 2, 1, "", "Motion_cfgEncoder"], [512, 2, 1, "", "Motion_cfgEncoder_async"], [512, 2, 1, "", "Motion_cfgFindRef"], [512, 2, 1, "", "Motion_cfgFindRef_async"], [512, 2, 1, "", "Motion_cfgHelicalInterpo"], [512, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [512, 2, 1, "", "Motion_cfgHome"], [512, 2, 1, "", "Motion_cfgHome_async"], [512, 2, 1, "", "Motion_cfgInposi"], [512, 2, 1, "", "Motion_cfgInposi_async"], [512, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [512, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [512, 2, 1, "", "Motion_cfgLimit"], [512, 2, 1, "", "Motion_cfgLimit_async"], [512, 2, 1, "", "Motion_checkRef"], [512, 2, 1, "", "Motion_checkRef_async"], [512, 2, 1, "", "Motion_close"], [512, 2, 1, "", "Motion_close_async"], [512, 2, 1, "", "Motion_enableBreakPoint"], [512, 2, 1, "", "Motion_enableBreakPoint_async"], [512, 2, 1, "", "Motion_enableCapture"], [512, 2, 1, "", "Motion_enableCapture_async"], [512, 2, 1, "", "Motion_enableServoOff"], [512, 2, 1, "", "Motion_enableServoOff_async"], [512, 2, 1, "", "Motion_enableServoOn"], [512, 2, 1, "", "Motion_enableServoOn_async"], [512, 2, 1, "", "Motion_findRef"], [512, 2, 1, "", "Motion_findRef_async"], [512, 2, 1, "", "Motion_getEncoderPosi"], [512, 2, 1, "", "Motion_getEncoderPosi_async"], [512, 2, 1, "", "Motion_getHomeStatus"], [512, 2, 1, "", "Motion_getHomeStatus_async"], [512, 2, 1, "", "Motion_getLimitStatus"], [512, 2, 1, "", "Motion_getLimitStatus_async"], [512, 2, 1, "", "Motion_getLogicalPosi"], [512, 2, 1, "", "Motion_getLogicalPosi_async"], [512, 2, 1, "", "Motion_getMoveStatus"], [512, 2, 1, "", "Motion_getMoveStatus_async"], [512, 2, 1, "", "Motion_loadCfgFile"], [512, 2, 1, "", "Motion_loadCfgFile_async"], [512, 2, 1, "", "Motion_open"], [512, 2, 1, "", "Motion_openCfgFile"], [512, 2, 1, "", "Motion_openCfgFile_async"], [512, 2, 1, "", "Motion_open_async"], [512, 2, 1, "", "Motion_overrideAxisAccel"], [512, 2, 1, "", "Motion_overrideAxisAccel_async"], [512, 2, 1, "", "Motion_overrideAxisPosi"], [512, 2, 1, "", "Motion_overrideAxisPosi_async"], [512, 2, 1, "", "Motion_overrideAxisVelocity"], [512, 2, 1, "", "Motion_overrideAxisVelocity_async"], [512, 2, 1, "", "Motion_readCapturePoint"], [512, 2, 1, "", "Motion_readCapturePoint_async"], [512, 2, 1, "", "Motion_rstEncoderPosi"], [512, 2, 1, "", "Motion_rstEncoderPosi_async"], [512, 2, 1, "", "Motion_saveCfgFile"], [512, 2, 1, "", "Motion_saveCfgFile_async"], [512, 2, 1, "", "Motion_setLogicalPosi"], [512, 2, 1, "", "Motion_setLogicalPosi_async"], [512, 2, 1, "", "Motion_startCircularInterpo"], [512, 2, 1, "", "Motion_startCircularInterpo_async"], [512, 2, 1, "", "Motion_startHelicalInterpo"], [512, 2, 1, "", "Motion_startHelicalInterpo_async"], [512, 2, 1, "", "Motion_startLinearInterpo"], [512, 2, 1, "", "Motion_startLinearInterpo_async"], [512, 2, 1, "", "Motion_startMultiAxisMove"], [512, 2, 1, "", "Motion_startMultiAxisMove_async"], [512, 2, 1, "", "Motion_startSingleAxisMove"], [512, 2, 1, "", "Motion_startSingleAxisMove_async"], [512, 2, 1, "", "Motion_stop"], [512, 2, 1, "", "Motion_stop_async"], [512, 2, 1, "", "Net_getGateway"], [512, 2, 1, "", "Net_getGateway_async"], [512, 2, 1, "", "Net_getIPAddrAndSubmask"], [512, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [512, 2, 1, "", "Net_getMACAddr"], [512, 2, 1, "", "Net_getMACAddr_async"], [512, 2, 1, "", "Net_setIPAddrAndSubmask"], [512, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [512, 2, 1, "", "Sys_getDriverInfo"], [512, 2, 1, "", "Sys_getDriverInfo_async"], [512, 2, 1, "", "Sys_getGateway"], [512, 2, 1, "", "Sys_getGateway_async"], [512, 2, 1, "", "Sys_getIPAddrAndSubmask"], [512, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [512, 2, 1, "", "Sys_getMACAddr"], [512, 2, 1, "", "Sys_getMACAddr_async"], [512, 2, 1, "", "Sys_getMode"], [512, 2, 1, "", "Sys_getMode_async"], [512, 2, 1, "", "Sys_getPinModeInPort"], [512, 2, 1, "", "Sys_getPinModeInPort_async"], [512, 2, 1, "", "Sys_getRTC"], [512, 2, 1, "", "Sys_getRTC_async"], [512, 2, 1, "", "Sys_getSerialNumber"], [512, 2, 1, "", "Sys_getSerialNumber_async"], [512, 2, 1, "", "Sys_reboot"], [512, 2, 1, "", "Sys_rebootOnBootloader"], [512, 2, 1, "", "Sys_rebootOnBootloader_async"], [512, 2, 1, "", "Sys_reboot_async"], [512, 2, 1, "", "Sys_setAIOMode"], [512, 2, 1, "", "Sys_setAIOMode_async"], [512, 2, 1, "", "Sys_setDIMode"], [512, 2, 1, "", "Sys_setDIMode_async"], [512, 2, 1, "", "Sys_setDIOMode"], [512, 2, 1, "", "Sys_setDIOMode_async"], [512, 2, 1, "", "Sys_setDOMode"], [512, 2, 1, "", "Sys_setDOMode_async"], [512, 2, 1, "", "Sys_setIPAddrAndSubmask"], [512, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [512, 2, 1, "", "Sys_setIdleMode"], [512, 2, 1, "", "Sys_setIdleMode_async"], [512, 2, 1, "", "Sys_setMotionMode"], [512, 2, 1, "", "Sys_setMotionMode_async"], [512, 2, 1, "", "Sys_setRTC"], [512, 2, 1, "", "Sys_setRTC_async"], [512, 2, 1, "", "Sys_setSlotMode"], [512, 2, 1, "", "Sys_setSlotMode_async"], [512, 2, 1, "", "Sys_setSwitchMode"], [512, 2, 1, "", "Sys_setSwitchMode_async"], [512, 2, 1, "", "close"], [512, 2, 1, "", "connect"], [512, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[513, 2, 1, "", "AI_close"], [513, 2, 1, "", "AI_close_async"], [513, 2, 1, "", "AI_enableCS"], [513, 2, 1, "", "AI_enableCS_async"], [513, 2, 1, "", "AI_getPort"], [513, 2, 1, "", "AI_open"], [513, 2, 1, "", "AI_open_async"], [513, 2, 1, "", "AI_readOnDemand"], [513, 2, 1, "", "AI_readOnDemand_async"], [513, 2, 1, "", "AI_readStreaming"], [513, 2, 1, "", "AI_readStreaming_async"], [513, 2, 1, "", "AI_setMode"], [513, 2, 1, "", "AI_setMode_async"], [513, 2, 1, "", "AI_setNumSamples"], [513, 2, 1, "", "AI_setNumSamples_async"], [513, 2, 1, "", "AI_setSamplingRate"], [513, 2, 1, "", "AI_setSamplingRate_async"], [513, 2, 1, "", "AI_start"], [513, 2, 1, "", "AI_start_async"], [513, 2, 1, "", "AI_stop"], [513, 2, 1, "", "AI_stop_async"], [513, 2, 1, "", "DIO_loadStartup"], [513, 2, 1, "", "DIO_loadStartup_async"], [513, 2, 1, "", "DIO_saveStartup"], [513, 2, 1, "", "DIO_saveStartup_async"], [513, 2, 1, "", "DIO_setPortDI"], [513, 2, 1, "", "DIO_setPortDI_async"], [513, 2, 1, "", "DIO_setPortDO"], [513, 2, 1, "", "DIO_setPortDO_async"], [513, 2, 1, "", "DIO_setPortIdle"], [513, 2, 1, "", "DIO_setPortIdle_async"], [513, 2, 1, "", "DI_closePins"], [513, 2, 1, "", "DI_closePins_async"], [513, 2, 1, "", "DI_closePort"], [513, 2, 1, "", "DI_closePort_async"], [513, 2, 1, "", "DI_getPinMap"], [513, 2, 1, "", "DI_openPins"], [513, 2, 1, "", "DI_openPins_async"], [513, 2, 1, "", "DI_openPort"], [513, 2, 1, "", "DI_openPort_async"], [513, 2, 1, "", "DI_readPins"], [513, 2, 1, "", "DI_readPins_async"], [513, 2, 1, "", "DI_readPort"], [513, 2, 1, "", "DI_readPort_async"], [513, 2, 1, "", "DO_closePins"], [513, 2, 1, "", "DO_closePins_async"], [513, 2, 1, "", "DO_closePort"], [513, 2, 1, "", "DO_closePort_async"], [513, 2, 1, "", "DO_getPinMap"], [513, 2, 1, "", "DO_openPins"], [513, 2, 1, "", "DO_openPins_async"], [513, 2, 1, "", "DO_openPort"], [513, 2, 1, "", "DO_openPort_async"], [513, 2, 1, "", "DO_togglePins"], [513, 2, 1, "", "DO_togglePins_async"], [513, 2, 1, "", "DO_togglePort"], [513, 2, 1, "", "DO_togglePort_async"], [513, 2, 1, "", "DO_writePins"], [513, 2, 1, "", "DO_writePins_async"], [513, 2, 1, "", "DO_writePort"], [513, 2, 1, "", "DO_writePort_async"], [513, 2, 1, "", "I2C_close"], [513, 2, 1, "", "I2C_close_async"], [513, 2, 1, "", "I2C_getPinMap"], [513, 2, 1, "", "I2C_open"], [513, 2, 1, "", "I2C_open_async"], [513, 2, 1, "", "I2C_read"], [513, 2, 1, "", "I2C_read_async"], [513, 2, 1, "", "I2C_reset"], [513, 2, 1, "", "I2C_reset_async"], [513, 2, 1, "", "I2C_setAddressSize"], [513, 2, 1, "", "I2C_setAddressSize_async"], [513, 2, 1, "", "I2C_setClockRate"], [513, 2, 1, "", "I2C_setClockRate_async"], [513, 2, 1, "", "I2C_write"], [513, 2, 1, "", "I2C_write_async"], [513, 2, 1, "", "Logger_openFile"], [513, 2, 1, "", "Logger_write2DList"], [513, 2, 1, "", "Logger_writeHeader"], [513, 2, 1, "", "Logger_writeList"], [513, 2, 1, "", "Logger_writeValue"], [513, 2, 1, "", "SPI_close"], [513, 2, 1, "", "SPI_close_async"], [513, 2, 1, "", "SPI_getPinMap"], [513, 2, 1, "", "SPI_open"], [513, 2, 1, "", "SPI_open_async"], [513, 2, 1, "", "SPI_read"], [513, 2, 1, "", "SPI_readAndWrite"], [513, 2, 1, "", "SPI_readAndWrite_async"], [513, 2, 1, "", "SPI_read_async"], [513, 2, 1, "", "SPI_reset"], [513, 2, 1, "", "SPI_reset_async"], [513, 2, 1, "", "SPI_setDataSize"], [513, 2, 1, "", "SPI_setDataSize_async"], [513, 2, 1, "", "SPI_setFirstBit"], [513, 2, 1, "", "SPI_setFirstBit_async"], [513, 2, 1, "", "SPI_setMode"], [513, 2, 1, "", "SPI_setMode_async"], [513, 2, 1, "", "SPI_setPrescaler"], [513, 2, 1, "", "SPI_setPrescaler_async"], [513, 2, 1, "", "SPI_write"], [513, 2, 1, "", "SPI_write_async"], [513, 2, 1, "", "Sys_getDriverInfo"], [513, 2, 1, "", "Sys_getDriverInfo_async"], [513, 2, 1, "", "Sys_getMode"], [513, 2, 1, "", "Sys_getMode_async"], [513, 2, 1, "", "Sys_getPinModeInPort"], [513, 2, 1, "", "Sys_getPinModeInPort_async"], [513, 2, 1, "", "Sys_getRTC"], [513, 2, 1, "", "Sys_getRTC_async"], [513, 2, 1, "", "Sys_getSerialNumber"], [513, 2, 1, "", "Sys_getSerialNumber_async"], [513, 2, 1, "", "Sys_reboot"], [513, 2, 1, "", "Sys_rebootOnBootloader"], [513, 2, 1, "", "Sys_rebootOnBootloader_async"], [513, 2, 1, "", "Sys_reboot_async"], [513, 2, 1, "", "Sys_setAIOMode"], [513, 2, 1, "", "Sys_setAIOMode_async"], [513, 2, 1, "", "Sys_setDIMode"], [513, 2, 1, "", "Sys_setDIMode_async"], [513, 2, 1, "", "Sys_setDIOMode"], [513, 2, 1, "", "Sys_setDIOMode_async"], [513, 2, 1, "", "Sys_setDOMode"], [513, 2, 1, "", "Sys_setDOMode_async"], [513, 2, 1, "", "Sys_setIdleMode"], [513, 2, 1, "", "Sys_setIdleMode_async"], [513, 2, 1, "", "Sys_setMotionMode"], [513, 2, 1, "", "Sys_setMotionMode_async"], [513, 2, 1, "", "Sys_setRTC"], [513, 2, 1, "", "Sys_setRTC_async"], [513, 2, 1, "", "Sys_setSlotMode"], [513, 2, 1, "", "Sys_setSlotMode_async"], [513, 2, 1, "", "Sys_setSwitchMode"], [513, 2, 1, "", "Sys_setSwitchMode_async"], [513, 2, 1, "", "UART_close"], [513, 2, 1, "", "UART_close_async"], [513, 2, 1, "", "UART_getPinMap"], [513, 2, 1, "", "UART_open"], [513, 2, 1, "", "UART_open_async"], [513, 2, 1, "", "UART_read"], [513, 2, 1, "", "UART_read_async"], [513, 2, 1, "", "UART_reset"], [513, 2, 1, "", "UART_reset_async"], [513, 2, 1, "", "UART_setBaudRate"], [513, 2, 1, "", "UART_setBaudRate_async"], [513, 2, 1, "", "UART_setDataBit"], [513, 2, 1, "", "UART_setDataBit_async"], [513, 2, 1, "", "UART_setNumStopBit"], [513, 2, 1, "", "UART_setNumStopBit_async"], [513, 2, 1, "", "UART_setParity"], [513, 2, 1, "", "UART_setParity_async"], [513, 2, 1, "", "UART_stopReading"], [513, 2, 1, "", "UART_stopReading_async"], [513, 2, 1, "", "UART_write"], [513, 2, 1, "", "UART_write_async"], [513, 2, 1, "", "close"], [513, 2, 1, "", "connect"], [513, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[514, 2, 1, "", "AI_close"], [514, 2, 1, "", "AI_close_async"], [514, 2, 1, "", "AI_enableCS"], [514, 2, 1, "", "AI_enableCS_async"], [514, 2, 1, "", "AI_getPort"], [514, 2, 1, "", "AI_open"], [514, 2, 1, "", "AI_open_async"], [514, 2, 1, "", "AI_readOnDemand"], [514, 2, 1, "", "AI_readOnDemand_async"], [514, 2, 1, "", "AI_readStreaming"], [514, 2, 1, "", "AI_readStreaming_async"], [514, 2, 1, "", "AI_setMode"], [514, 2, 1, "", "AI_setMode_async"], [514, 2, 1, "", "AI_setNumSamples"], [514, 2, 1, "", "AI_setNumSamples_async"], [514, 2, 1, "", "AI_setSamplingRate"], [514, 2, 1, "", "AI_setSamplingRate_async"], [514, 2, 1, "", "AI_start"], [514, 2, 1, "", "AI_start_async"], [514, 2, 1, "", "AI_stop"], [514, 2, 1, "", "AI_stop_async"], [514, 2, 1, "", "AO_close"], [514, 2, 1, "", "AO_closeStreaming"], [514, 2, 1, "", "AO_closeStreaming_async"], [514, 2, 1, "", "AO_close_async"], [514, 2, 1, "", "AO_getEnableChannels"], [514, 2, 1, "", "AO_getMode"], [514, 2, 1, "", "AO_getMode_async"], [514, 2, 1, "", "AO_getPort"], [514, 2, 1, "", "AO_getState"], [514, 2, 1, "", "AO_getValues"], [514, 2, 1, "", "AO_getValues_async"], [514, 2, 1, "", "AO_open"], [514, 2, 1, "", "AO_openStreaming"], [514, 2, 1, "", "AO_openStreaming_async"], [514, 2, 1, "", "AO_open_async"], [514, 2, 1, "", "AO_pushToBuffer"], [514, 2, 1, "", "AO_setEnableChannels"], [514, 2, 1, "", "AO_setEnableChannels_async"], [514, 2, 1, "", "AO_setForm"], [514, 2, 1, "", "AO_setFormParam"], [514, 2, 1, "", "AO_setFormParam_async"], [514, 2, 1, "", "AO_setForm_async"], [514, 2, 1, "", "AO_setMode"], [514, 2, 1, "", "AO_setMode_async"], [514, 2, 1, "", "AO_setNumSamples"], [514, 2, 1, "", "AO_setNumSamples_async"], [514, 2, 1, "", "AO_setSamplingRate"], [514, 2, 1, "", "AO_setSamplingRate_async"], [514, 2, 1, "", "AO_startStreaming"], [514, 2, 1, "", "AO_startStreaming_async"], [514, 2, 1, "", "AO_writeAllChannels"], [514, 2, 1, "", "AO_writeAllChannels_async"], [514, 2, 1, "", "AO_writeOneChannel"], [514, 2, 1, "", "AO_writeOneChannel_async"], [514, 2, 1, "", "DIO_loadStartup"], [514, 2, 1, "", "DIO_loadStartup_async"], [514, 2, 1, "", "DIO_saveStartup"], [514, 2, 1, "", "DIO_saveStartup_async"], [514, 2, 1, "", "DIO_setPortDI"], [514, 2, 1, "", "DIO_setPortDI_async"], [514, 2, 1, "", "DIO_setPortDO"], [514, 2, 1, "", "DIO_setPortDO_async"], [514, 2, 1, "", "DIO_setPortIdle"], [514, 2, 1, "", "DIO_setPortIdle_async"], [514, 2, 1, "", "DI_closePins"], [514, 2, 1, "", "DI_closePins_async"], [514, 2, 1, "", "DI_closePort"], [514, 2, 1, "", "DI_closePort_async"], [514, 2, 1, "", "DI_getPinMap"], [514, 2, 1, "", "DI_openPins"], [514, 2, 1, "", "DI_openPins_async"], [514, 2, 1, "", "DI_openPort"], [514, 2, 1, "", "DI_openPort_async"], [514, 2, 1, "", "DI_readPins"], [514, 2, 1, "", "DI_readPins_async"], [514, 2, 1, "", "DI_readPort"], [514, 2, 1, "", "DI_readPort_async"], [514, 2, 1, "", "DO_closePins"], [514, 2, 1, "", "DO_closePins_async"], [514, 2, 1, "", "DO_closePort"], [514, 2, 1, "", "DO_closePort_async"], [514, 2, 1, "", "DO_getPinMap"], [514, 2, 1, "", "DO_openPins"], [514, 2, 1, "", "DO_openPins_async"], [514, 2, 1, "", "DO_openPort"], [514, 2, 1, "", "DO_openPort_async"], [514, 2, 1, "", "DO_togglePins"], [514, 2, 1, "", "DO_togglePins_async"], [514, 2, 1, "", "DO_togglePort"], [514, 2, 1, "", "DO_togglePort_async"], [514, 2, 1, "", "DO_writePins"], [514, 2, 1, "", "DO_writePins_async"], [514, 2, 1, "", "DO_writePort"], [514, 2, 1, "", "DO_writePort_async"], [514, 2, 1, "", "I2C_close"], [514, 2, 1, "", "I2C_close_async"], [514, 2, 1, "", "I2C_getPinMap"], [514, 2, 1, "", "I2C_open"], [514, 2, 1, "", "I2C_open_async"], [514, 2, 1, "", "I2C_read"], [514, 2, 1, "", "I2C_read_async"], [514, 2, 1, "", "I2C_reset"], [514, 2, 1, "", "I2C_reset_async"], [514, 2, 1, "", "I2C_setAddressSize"], [514, 2, 1, "", "I2C_setAddressSize_async"], [514, 2, 1, "", "I2C_setClockRate"], [514, 2, 1, "", "I2C_setClockRate_async"], [514, 2, 1, "", "I2C_write"], [514, 2, 1, "", "I2C_write_async"], [514, 2, 1, "", "Logger_openFile"], [514, 2, 1, "", "Logger_write2DList"], [514, 2, 1, "", "Logger_writeHeader"], [514, 2, 1, "", "Logger_writeList"], [514, 2, 1, "", "Logger_writeValue"], [514, 2, 1, "", "Sys_getDriverInfo"], [514, 2, 1, "", "Sys_getDriverInfo_async"], [514, 2, 1, "", "Sys_getMode"], [514, 2, 1, "", "Sys_getMode_async"], [514, 2, 1, "", "Sys_getPinModeInPort"], [514, 2, 1, "", "Sys_getPinModeInPort_async"], [514, 2, 1, "", "Sys_getRTC"], [514, 2, 1, "", "Sys_getRTC_async"], [514, 2, 1, "", "Sys_getSerialNumber"], [514, 2, 1, "", "Sys_getSerialNumber_async"], [514, 2, 1, "", "Sys_reboot"], [514, 2, 1, "", "Sys_rebootOnBootloader"], [514, 2, 1, "", "Sys_rebootOnBootloader_async"], [514, 2, 1, "", "Sys_reboot_async"], [514, 2, 1, "", "Sys_setAIOMode"], [514, 2, 1, "", "Sys_setAIOMode_async"], [514, 2, 1, "", "Sys_setDIMode"], [514, 2, 1, "", "Sys_setDIMode_async"], [514, 2, 1, "", "Sys_setDIOMode"], [514, 2, 1, "", "Sys_setDIOMode_async"], [514, 2, 1, "", "Sys_setDOMode"], [514, 2, 1, "", "Sys_setDOMode_async"], [514, 2, 1, "", "Sys_setIdleMode"], [514, 2, 1, "", "Sys_setIdleMode_async"], [514, 2, 1, "", "Sys_setMotionMode"], [514, 2, 1, "", "Sys_setMotionMode_async"], [514, 2, 1, "", "Sys_setRTC"], [514, 2, 1, "", "Sys_setRTC_async"], [514, 2, 1, "", "Sys_setSlotMode"], [514, 2, 1, "", "Sys_setSlotMode_async"], [514, 2, 1, "", "Sys_setSwitchMode"], [514, 2, 1, "", "Sys_setSwitchMode_async"], [514, 2, 1, "", "UART_close"], [514, 2, 1, "", "UART_close_async"], [514, 2, 1, "", "UART_getPinMap"], [514, 2, 1, "", "UART_open"], [514, 2, 1, "", "UART_open_async"], [514, 2, 1, "", "UART_read"], [514, 2, 1, "", "UART_read_async"], [514, 2, 1, "", "UART_reset"], [514, 2, 1, "", "UART_reset_async"], [514, 2, 1, "", "UART_setBaudRate"], [514, 2, 1, "", "UART_setBaudRate_async"], [514, 2, 1, "", "UART_setDataBit"], [514, 2, 1, "", "UART_setDataBit_async"], [514, 2, 1, "", "UART_setNumStopBit"], [514, 2, 1, "", "UART_setNumStopBit_async"], [514, 2, 1, "", "UART_setParity"], [514, 2, 1, "", "UART_setParity_async"], [514, 2, 1, "", "UART_stopReading"], [514, 2, 1, "", "UART_stopReading_async"], [514, 2, 1, "", "UART_write"], [514, 2, 1, "", "UART_write_async"], [514, 2, 1, "", "close"], [514, 2, 1, "", "connect"], [514, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[515, 2, 1, "", "CAN_close"], [515, 2, 1, "", "CAN_close_async"], [515, 2, 1, "", "CAN_getPort"], [515, 2, 1, "", "CAN_open"], [515, 2, 1, "", "CAN_open_async"], [515, 2, 1, "", "CAN_read"], [515, 2, 1, "", "CAN_read_async"], [515, 2, 1, "", "CAN_setRXFilterOrMask"], [515, 2, 1, "", "CAN_setRXFilterOrMask_async"], [515, 2, 1, "", "CAN_setRXFilteringOn"], [515, 2, 1, "", "CAN_setRXFilteringOn_async"], [515, 2, 1, "", "CAN_setSpeed"], [515, 2, 1, "", "CAN_setSpeed_async"], [515, 2, 1, "", "CAN_start"], [515, 2, 1, "", "CAN_start_async"], [515, 2, 1, "", "CAN_stop"], [515, 2, 1, "", "CAN_stop_async"], [515, 2, 1, "", "CAN_write"], [515, 2, 1, "", "CAN_write_async"], [515, 2, 1, "", "DIO_loadStartup"], [515, 2, 1, "", "DIO_loadStartup_async"], [515, 2, 1, "", "DIO_saveStartup"], [515, 2, 1, "", "DIO_saveStartup_async"], [515, 2, 1, "", "DIO_setPortDI"], [515, 2, 1, "", "DIO_setPortDI_async"], [515, 2, 1, "", "DIO_setPortDO"], [515, 2, 1, "", "DIO_setPortDO_async"], [515, 2, 1, "", "DIO_setPortIdle"], [515, 2, 1, "", "DIO_setPortIdle_async"], [515, 2, 1, "", "DI_closePins"], [515, 2, 1, "", "DI_closePins_async"], [515, 2, 1, "", "DI_closePort"], [515, 2, 1, "", "DI_closePort_async"], [515, 2, 1, "", "DI_getPinMap"], [515, 2, 1, "", "DI_openPins"], [515, 2, 1, "", "DI_openPins_async"], [515, 2, 1, "", "DI_openPort"], [515, 2, 1, "", "DI_openPort_async"], [515, 2, 1, "", "DI_readPins"], [515, 2, 1, "", "DI_readPins_async"], [515, 2, 1, "", "DI_readPort"], [515, 2, 1, "", "DI_readPort_async"], [515, 2, 1, "", "DO_closePins"], [515, 2, 1, "", "DO_closePins_async"], [515, 2, 1, "", "DO_closePort"], [515, 2, 1, "", "DO_closePort_async"], [515, 2, 1, "", "DO_getPinMap"], [515, 2, 1, "", "DO_openPins"], [515, 2, 1, "", "DO_openPins_async"], [515, 2, 1, "", "DO_openPort"], [515, 2, 1, "", "DO_openPort_async"], [515, 2, 1, "", "DO_togglePins"], [515, 2, 1, "", "DO_togglePins_async"], [515, 2, 1, "", "DO_togglePort"], [515, 2, 1, "", "DO_togglePort_async"], [515, 2, 1, "", "DO_writePins"], [515, 2, 1, "", "DO_writePins_async"], [515, 2, 1, "", "DO_writePort"], [515, 2, 1, "", "DO_writePort_async"], [515, 2, 1, "", "I2C_close"], [515, 2, 1, "", "I2C_close_async"], [515, 2, 1, "", "I2C_getPinMap"], [515, 2, 1, "", "I2C_open"], [515, 2, 1, "", "I2C_open_async"], [515, 2, 1, "", "I2C_read"], [515, 2, 1, "", "I2C_read_async"], [515, 2, 1, "", "I2C_reset"], [515, 2, 1, "", "I2C_reset_async"], [515, 2, 1, "", "I2C_setAddressSize"], [515, 2, 1, "", "I2C_setAddressSize_async"], [515, 2, 1, "", "I2C_setClockRate"], [515, 2, 1, "", "I2C_setClockRate_async"], [515, 2, 1, "", "I2C_write"], [515, 2, 1, "", "I2C_write_async"], [515, 2, 1, "", "Logger_openFile"], [515, 2, 1, "", "Logger_write2DList"], [515, 2, 1, "", "Logger_writeHeader"], [515, 2, 1, "", "Logger_writeList"], [515, 2, 1, "", "Logger_writeValue"], [515, 2, 1, "", "SPI_close"], [515, 2, 1, "", "SPI_close_async"], [515, 2, 1, "", "SPI_getPinMap"], [515, 2, 1, "", "SPI_open"], [515, 2, 1, "", "SPI_open_async"], [515, 2, 1, "", "SPI_read"], [515, 2, 1, "", "SPI_readAndWrite"], [515, 2, 1, "", "SPI_readAndWrite_async"], [515, 2, 1, "", "SPI_read_async"], [515, 2, 1, "", "SPI_reset"], [515, 2, 1, "", "SPI_reset_async"], [515, 2, 1, "", "SPI_setDataSize"], [515, 2, 1, "", "SPI_setDataSize_async"], [515, 2, 1, "", "SPI_setFirstBit"], [515, 2, 1, "", "SPI_setFirstBit_async"], [515, 2, 1, "", "SPI_setMode"], [515, 2, 1, "", "SPI_setMode_async"], [515, 2, 1, "", "SPI_setPrescaler"], [515, 2, 1, "", "SPI_setPrescaler_async"], [515, 2, 1, "", "SPI_write"], [515, 2, 1, "", "SPI_write_async"], [515, 2, 1, "", "Sys_getDriverInfo"], [515, 2, 1, "", "Sys_getDriverInfo_async"], [515, 2, 1, "", "Sys_getMode"], [515, 2, 1, "", "Sys_getMode_async"], [515, 2, 1, "", "Sys_getPinModeInPort"], [515, 2, 1, "", "Sys_getPinModeInPort_async"], [515, 2, 1, "", "Sys_getRTC"], [515, 2, 1, "", "Sys_getRTC_async"], [515, 2, 1, "", "Sys_getSerialNumber"], [515, 2, 1, "", "Sys_getSerialNumber_async"], [515, 2, 1, "", "Sys_reboot"], [515, 2, 1, "", "Sys_rebootOnBootloader"], [515, 2, 1, "", "Sys_rebootOnBootloader_async"], [515, 2, 1, "", "Sys_reboot_async"], [515, 2, 1, "", "Sys_setAIOMode"], [515, 2, 1, "", "Sys_setAIOMode_async"], [515, 2, 1, "", "Sys_setDIMode"], [515, 2, 1, "", "Sys_setDIMode_async"], [515, 2, 1, "", "Sys_setDIOMode"], [515, 2, 1, "", "Sys_setDIOMode_async"], [515, 2, 1, "", "Sys_setDOMode"], [515, 2, 1, "", "Sys_setDOMode_async"], [515, 2, 1, "", "Sys_setIdleMode"], [515, 2, 1, "", "Sys_setIdleMode_async"], [515, 2, 1, "", "Sys_setMotionMode"], [515, 2, 1, "", "Sys_setMotionMode_async"], [515, 2, 1, "", "Sys_setRTC"], [515, 2, 1, "", "Sys_setRTC_async"], [515, 2, 1, "", "Sys_setSlotMode"], [515, 2, 1, "", "Sys_setSlotMode_async"], [515, 2, 1, "", "Sys_setSwitchMode"], [515, 2, 1, "", "Sys_setSwitchMode_async"], [515, 2, 1, "", "UART_close"], [515, 2, 1, "", "UART_close_async"], [515, 2, 1, "", "UART_getPinMap"], [515, 2, 1, "", "UART_open"], [515, 2, 1, "", "UART_open_async"], [515, 2, 1, "", "UART_read"], [515, 2, 1, "", "UART_read_async"], [515, 2, 1, "", "UART_reset"], [515, 2, 1, "", "UART_reset_async"], [515, 2, 1, "", "UART_setBaudRate"], [515, 2, 1, "", "UART_setBaudRate_async"], [515, 2, 1, "", "UART_setDataBit"], [515, 2, 1, "", "UART_setDataBit_async"], [515, 2, 1, "", "UART_setNumStopBit"], [515, 2, 1, "", "UART_setNumStopBit_async"], [515, 2, 1, "", "UART_setParity"], [515, 2, 1, "", "UART_setParity_async"], [515, 2, 1, "", "UART_stopReading"], [515, 2, 1, "", "UART_stopReading_async"], [515, 2, 1, "", "UART_write"], [515, 2, 1, "", "UART_write_async"], [515, 2, 1, "", "close"], [515, 2, 1, "", "connect"], [515, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[516, 2, 1, "", "DIO_loadStartup"], [516, 2, 1, "", "DIO_loadStartup_async"], [516, 2, 1, "", "DIO_saveStartup"], [516, 2, 1, "", "DIO_saveStartup_async"], [516, 2, 1, "", "DIO_setPortDI"], [516, 2, 1, "", "DIO_setPortDI_async"], [516, 2, 1, "", "DIO_setPortDO"], [516, 2, 1, "", "DIO_setPortDO_async"], [516, 2, 1, "", "DIO_setPortIdle"], [516, 2, 1, "", "DIO_setPortIdle_async"], [516, 2, 1, "", "DI_closePins"], [516, 2, 1, "", "DI_closePins_async"], [516, 2, 1, "", "DI_closePort"], [516, 2, 1, "", "DI_closePort_async"], [516, 2, 1, "", "DI_getPinMap"], [516, 2, 1, "", "DI_openPins"], [516, 2, 1, "", "DI_openPins_async"], [516, 2, 1, "", "DI_openPort"], [516, 2, 1, "", "DI_openPort_async"], [516, 2, 1, "", "DI_readPins"], [516, 2, 1, "", "DI_readPins_async"], [516, 2, 1, "", "DI_readPort"], [516, 2, 1, "", "DI_readPort_async"], [516, 2, 1, "", "DO_closePins"], [516, 2, 1, "", "DO_closePins_async"], [516, 2, 1, "", "DO_closePort"], [516, 2, 1, "", "DO_closePort_async"], [516, 2, 1, "", "DO_getPinMap"], [516, 2, 1, "", "DO_openPins"], [516, 2, 1, "", "DO_openPins_async"], [516, 2, 1, "", "DO_openPort"], [516, 2, 1, "", "DO_openPort_async"], [516, 2, 1, "", "DO_togglePins"], [516, 2, 1, "", "DO_togglePins_async"], [516, 2, 1, "", "DO_togglePort"], [516, 2, 1, "", "DO_togglePort_async"], [516, 2, 1, "", "DO_writePins"], [516, 2, 1, "", "DO_writePins_async"], [516, 2, 1, "", "DO_writePort"], [516, 2, 1, "", "DO_writePort_async"], [516, 2, 1, "", "I2C_close"], [516, 2, 1, "", "I2C_close_async"], [516, 2, 1, "", "I2C_getPinMap"], [516, 2, 1, "", "I2C_open"], [516, 2, 1, "", "I2C_open_async"], [516, 2, 1, "", "I2C_read"], [516, 2, 1, "", "I2C_read_async"], [516, 2, 1, "", "I2C_reset"], [516, 2, 1, "", "I2C_reset_async"], [516, 2, 1, "", "I2C_setAddressSize"], [516, 2, 1, "", "I2C_setAddressSize_async"], [516, 2, 1, "", "I2C_setClockRate"], [516, 2, 1, "", "I2C_setClockRate_async"], [516, 2, 1, "", "I2C_write"], [516, 2, 1, "", "I2C_write_async"], [516, 2, 1, "", "Logger_openFile"], [516, 2, 1, "", "Logger_write2DList"], [516, 2, 1, "", "Logger_writeHeader"], [516, 2, 1, "", "Logger_writeList"], [516, 2, 1, "", "Logger_writeValue"], [516, 2, 1, "", "SPI_close"], [516, 2, 1, "", "SPI_close_async"], [516, 2, 1, "", "SPI_getPinMap"], [516, 2, 1, "", "SPI_open"], [516, 2, 1, "", "SPI_open_async"], [516, 2, 1, "", "SPI_read"], [516, 2, 1, "", "SPI_readAndWrite"], [516, 2, 1, "", "SPI_readAndWrite_async"], [516, 2, 1, "", "SPI_read_async"], [516, 2, 1, "", "SPI_reset"], [516, 2, 1, "", "SPI_reset_async"], [516, 2, 1, "", "SPI_setDataSize"], [516, 2, 1, "", "SPI_setDataSize_async"], [516, 2, 1, "", "SPI_setFirstBit"], [516, 2, 1, "", "SPI_setFirstBit_async"], [516, 2, 1, "", "SPI_setMode"], [516, 2, 1, "", "SPI_setMode_async"], [516, 2, 1, "", "SPI_setPrescaler"], [516, 2, 1, "", "SPI_setPrescaler_async"], [516, 2, 1, "", "SPI_write"], [516, 2, 1, "", "SPI_write_async"], [516, 2, 1, "", "Sys_getDriverInfo"], [516, 2, 1, "", "Sys_getDriverInfo_async"], [516, 2, 1, "", "Sys_getMode"], [516, 2, 1, "", "Sys_getMode_async"], [516, 2, 1, "", "Sys_getPinModeInPort"], [516, 2, 1, "", "Sys_getPinModeInPort_async"], [516, 2, 1, "", "Sys_getRTC"], [516, 2, 1, "", "Sys_getRTC_async"], [516, 2, 1, "", "Sys_getSerialNumber"], [516, 2, 1, "", "Sys_getSerialNumber_async"], [516, 2, 1, "", "Sys_reboot"], [516, 2, 1, "", "Sys_rebootOnBootloader"], [516, 2, 1, "", "Sys_rebootOnBootloader_async"], [516, 2, 1, "", "Sys_reboot_async"], [516, 2, 1, "", "Sys_setAIOMode"], [516, 2, 1, "", "Sys_setAIOMode_async"], [516, 2, 1, "", "Sys_setDIMode"], [516, 2, 1, "", "Sys_setDIMode_async"], [516, 2, 1, "", "Sys_setDIOMode"], [516, 2, 1, "", "Sys_setDIOMode_async"], [516, 2, 1, "", "Sys_setDOMode"], [516, 2, 1, "", "Sys_setDOMode_async"], [516, 2, 1, "", "Sys_setIdleMode"], [516, 2, 1, "", "Sys_setIdleMode_async"], [516, 2, 1, "", "Sys_setMotionMode"], [516, 2, 1, "", "Sys_setMotionMode_async"], [516, 2, 1, "", "Sys_setRTC"], [516, 2, 1, "", "Sys_setRTC_async"], [516, 2, 1, "", "Sys_setSlotMode"], [516, 2, 1, "", "Sys_setSlotMode_async"], [516, 2, 1, "", "Sys_setSwitchMode"], [516, 2, 1, "", "Sys_setSwitchMode_async"], [516, 2, 1, "", "UART_close"], [516, 2, 1, "", "UART_close_async"], [516, 2, 1, "", "UART_getPinMap"], [516, 2, 1, "", "UART_open"], [516, 2, 1, "", "UART_open_async"], [516, 2, 1, "", "UART_read"], [516, 2, 1, "", "UART_read_async"], [516, 2, 1, "", "UART_reset"], [516, 2, 1, "", "UART_reset_async"], [516, 2, 1, "", "UART_setBaudRate"], [516, 2, 1, "", "UART_setBaudRate_async"], [516, 2, 1, "", "UART_setDataBit"], [516, 2, 1, "", "UART_setDataBit_async"], [516, 2, 1, "", "UART_setNumStopBit"], [516, 2, 1, "", "UART_setNumStopBit_async"], [516, 2, 1, "", "UART_setParity"], [516, 2, 1, "", "UART_setParity_async"], [516, 2, 1, "", "UART_stopReading"], [516, 2, 1, "", "UART_stopReading_async"], [516, 2, 1, "", "UART_write"], [516, 2, 1, "", "UART_write_async"], [516, 2, 1, "", "close"], [516, 2, 1, "", "connect"], [516, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[517, 2, 1, "", "DIO_loadStartup"], [517, 2, 1, "", "DIO_loadStartup_async"], [517, 2, 1, "", "DIO_saveStartup"], [517, 2, 1, "", "DIO_saveStartup_async"], [517, 2, 1, "", "DIO_setPortDI"], [517, 2, 1, "", "DIO_setPortDI_async"], [517, 2, 1, "", "DIO_setPortDO"], [517, 2, 1, "", "DIO_setPortDO_async"], [517, 2, 1, "", "DIO_setPortIdle"], [517, 2, 1, "", "DIO_setPortIdle_async"], [517, 2, 1, "", "DI_closePins"], [517, 2, 1, "", "DI_closePins_async"], [517, 2, 1, "", "DI_closePort"], [517, 2, 1, "", "DI_closePort_async"], [517, 2, 1, "", "DI_getPinMap"], [517, 2, 1, "", "DI_openPins"], [517, 2, 1, "", "DI_openPins_async"], [517, 2, 1, "", "DI_openPort"], [517, 2, 1, "", "DI_openPort_async"], [517, 2, 1, "", "DI_readPins"], [517, 2, 1, "", "DI_readPins_async"], [517, 2, 1, "", "DI_readPort"], [517, 2, 1, "", "DI_readPort_async"], [517, 2, 1, "", "DO_closePins"], [517, 2, 1, "", "DO_closePins_async"], [517, 2, 1, "", "DO_closePort"], [517, 2, 1, "", "DO_closePort_async"], [517, 2, 1, "", "DO_getPinMap"], [517, 2, 1, "", "DO_openPins"], [517, 2, 1, "", "DO_openPins_async"], [517, 2, 1, "", "DO_openPort"], [517, 2, 1, "", "DO_openPort_async"], [517, 2, 1, "", "DO_togglePins"], [517, 2, 1, "", "DO_togglePins_async"], [517, 2, 1, "", "DO_togglePort"], [517, 2, 1, "", "DO_togglePort_async"], [517, 2, 1, "", "DO_writePins"], [517, 2, 1, "", "DO_writePins_async"], [517, 2, 1, "", "DO_writePort"], [517, 2, 1, "", "DO_writePort_async"], [517, 2, 1, "", "Logger_openFile"], [517, 2, 1, "", "Logger_write2DList"], [517, 2, 1, "", "Logger_writeHeader"], [517, 2, 1, "", "Logger_writeList"], [517, 2, 1, "", "Logger_writeValue"], [517, 2, 1, "", "Sys_getDriverInfo"], [517, 2, 1, "", "Sys_getDriverInfo_async"], [517, 2, 1, "", "Sys_getMode"], [517, 2, 1, "", "Sys_getMode_async"], [517, 2, 1, "", "Sys_getPinModeInPort"], [517, 2, 1, "", "Sys_getPinModeInPort_async"], [517, 2, 1, "", "Sys_getRTC"], [517, 2, 1, "", "Sys_getRTC_async"], [517, 2, 1, "", "Sys_getSerialNumber"], [517, 2, 1, "", "Sys_getSerialNumber_async"], [517, 2, 1, "", "Sys_reboot"], [517, 2, 1, "", "Sys_rebootOnBootloader"], [517, 2, 1, "", "Sys_rebootOnBootloader_async"], [517, 2, 1, "", "Sys_reboot_async"], [517, 2, 1, "", "Sys_setAIOMode"], [517, 2, 1, "", "Sys_setAIOMode_async"], [517, 2, 1, "", "Sys_setDIMode"], [517, 2, 1, "", "Sys_setDIMode_async"], [517, 2, 1, "", "Sys_setDIOMode"], [517, 2, 1, "", "Sys_setDIOMode_async"], [517, 2, 1, "", "Sys_setDOMode"], [517, 2, 1, "", "Sys_setDOMode_async"], [517, 2, 1, "", "Sys_setIdleMode"], [517, 2, 1, "", "Sys_setIdleMode_async"], [517, 2, 1, "", "Sys_setMotionMode"], [517, 2, 1, "", "Sys_setMotionMode_async"], [517, 2, 1, "", "Sys_setRTC"], [517, 2, 1, "", "Sys_setRTC_async"], [517, 2, 1, "", "Sys_setSlotMode"], [517, 2, 1, "", "Sys_setSlotMode_async"], [517, 2, 1, "", "Sys_setSwitchMode"], [517, 2, 1, "", "Sys_setSwitchMode_async"], [517, 2, 1, "", "close"], [517, 2, 1, "", "connect"], [517, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[518, 2, 1, "", "DIO_loadStartup"], [518, 2, 1, "", "DIO_loadStartup_async"], [518, 2, 1, "", "DIO_saveStartup"], [518, 2, 1, "", "DIO_saveStartup_async"], [518, 2, 1, "", "DIO_setPortDI"], [518, 2, 1, "", "DIO_setPortDI_async"], [518, 2, 1, "", "DIO_setPortDO"], [518, 2, 1, "", "DIO_setPortDO_async"], [518, 2, 1, "", "DIO_setPortIdle"], [518, 2, 1, "", "DIO_setPortIdle_async"], [518, 2, 1, "", "DI_closePins"], [518, 2, 1, "", "DI_closePins_async"], [518, 2, 1, "", "DI_closePort"], [518, 2, 1, "", "DI_closePort_async"], [518, 2, 1, "", "DI_getPinMap"], [518, 2, 1, "", "DI_openPins"], [518, 2, 1, "", "DI_openPins_async"], [518, 2, 1, "", "DI_openPort"], [518, 2, 1, "", "DI_openPort_async"], [518, 2, 1, "", "DI_readPins"], [518, 2, 1, "", "DI_readPins_async"], [518, 2, 1, "", "DI_readPort"], [518, 2, 1, "", "DI_readPort_async"], [518, 2, 1, "", "DO_closePins"], [518, 2, 1, "", "DO_closePins_async"], [518, 2, 1, "", "DO_closePort"], [518, 2, 1, "", "DO_closePort_async"], [518, 2, 1, "", "DO_getPinMap"], [518, 2, 1, "", "DO_openPins"], [518, 2, 1, "", "DO_openPins_async"], [518, 2, 1, "", "DO_openPort"], [518, 2, 1, "", "DO_openPort_async"], [518, 2, 1, "", "DO_togglePins"], [518, 2, 1, "", "DO_togglePins_async"], [518, 2, 1, "", "DO_togglePort"], [518, 2, 1, "", "DO_togglePort_async"], [518, 2, 1, "", "DO_writePins"], [518, 2, 1, "", "DO_writePins_async"], [518, 2, 1, "", "DO_writePort"], [518, 2, 1, "", "DO_writePort_async"], [518, 2, 1, "", "I2C_close"], [518, 2, 1, "", "I2C_close_async"], [518, 2, 1, "", "I2C_getPinMap"], [518, 2, 1, "", "I2C_open"], [518, 2, 1, "", "I2C_open_async"], [518, 2, 1, "", "I2C_read"], [518, 2, 1, "", "I2C_read_async"], [518, 2, 1, "", "I2C_reset"], [518, 2, 1, "", "I2C_reset_async"], [518, 2, 1, "", "I2C_setAddressSize"], [518, 2, 1, "", "I2C_setAddressSize_async"], [518, 2, 1, "", "I2C_setClockRate"], [518, 2, 1, "", "I2C_setClockRate_async"], [518, 2, 1, "", "I2C_write"], [518, 2, 1, "", "I2C_write_async"], [518, 2, 1, "", "Logger_openFile"], [518, 2, 1, "", "Logger_write2DList"], [518, 2, 1, "", "Logger_writeHeader"], [518, 2, 1, "", "Logger_writeList"], [518, 2, 1, "", "Logger_writeValue"], [518, 2, 1, "", "SPI_close"], [518, 2, 1, "", "SPI_close_async"], [518, 2, 1, "", "SPI_getPinMap"], [518, 2, 1, "", "SPI_open"], [518, 2, 1, "", "SPI_open_async"], [518, 2, 1, "", "SPI_read"], [518, 2, 1, "", "SPI_readAndWrite"], [518, 2, 1, "", "SPI_readAndWrite_async"], [518, 2, 1, "", "SPI_read_async"], [518, 2, 1, "", "SPI_reset"], [518, 2, 1, "", "SPI_reset_async"], [518, 2, 1, "", "SPI_setDataSize"], [518, 2, 1, "", "SPI_setDataSize_async"], [518, 2, 1, "", "SPI_setFirstBit"], [518, 2, 1, "", "SPI_setFirstBit_async"], [518, 2, 1, "", "SPI_setMode"], [518, 2, 1, "", "SPI_setMode_async"], [518, 2, 1, "", "SPI_setPrescaler"], [518, 2, 1, "", "SPI_setPrescaler_async"], [518, 2, 1, "", "SPI_write"], [518, 2, 1, "", "SPI_write_async"], [518, 2, 1, "", "Sys_getDriverInfo"], [518, 2, 1, "", "Sys_getDriverInfo_async"], [518, 2, 1, "", "Sys_getMode"], [518, 2, 1, "", "Sys_getMode_async"], [518, 2, 1, "", "Sys_getPinModeInPort"], [518, 2, 1, "", "Sys_getPinModeInPort_async"], [518, 2, 1, "", "Sys_getRTC"], [518, 2, 1, "", "Sys_getRTC_async"], [518, 2, 1, "", "Sys_getSerialNumber"], [518, 2, 1, "", "Sys_getSerialNumber_async"], [518, 2, 1, "", "Sys_reboot"], [518, 2, 1, "", "Sys_rebootOnBootloader"], [518, 2, 1, "", "Sys_rebootOnBootloader_async"], [518, 2, 1, "", "Sys_reboot_async"], [518, 2, 1, "", "Sys_setAIOMode"], [518, 2, 1, "", "Sys_setAIOMode_async"], [518, 2, 1, "", "Sys_setDIMode"], [518, 2, 1, "", "Sys_setDIMode_async"], [518, 2, 1, "", "Sys_setDIOMode"], [518, 2, 1, "", "Sys_setDIOMode_async"], [518, 2, 1, "", "Sys_setDOMode"], [518, 2, 1, "", "Sys_setDOMode_async"], [518, 2, 1, "", "Sys_setIdleMode"], [518, 2, 1, "", "Sys_setIdleMode_async"], [518, 2, 1, "", "Sys_setMotionMode"], [518, 2, 1, "", "Sys_setMotionMode_async"], [518, 2, 1, "", "Sys_setRTC"], [518, 2, 1, "", "Sys_setRTC_async"], [518, 2, 1, "", "Sys_setSlotMode"], [518, 2, 1, "", "Sys_setSlotMode_async"], [518, 2, 1, "", "Sys_setSwitchMode"], [518, 2, 1, "", "Sys_setSwitchMode_async"], [518, 2, 1, "", "Thermal_close"], [518, 2, 1, "", "Thermal_close_async"], [518, 2, 1, "", "Thermal_getPinMap"], [518, 2, 1, "", "Thermal_getStatus"], [518, 2, 1, "", "Thermal_getStatus_async"], [518, 2, 1, "", "Thermal_open"], [518, 2, 1, "", "Thermal_open_async"], [518, 2, 1, "", "Thermal_readSensor"], [518, 2, 1, "", "Thermal_readSensor_async"], [518, 2, 1, "", "Thermal_setType"], [518, 2, 1, "", "Thermal_setType_async"], [518, 2, 1, "", "UART_close"], [518, 2, 1, "", "UART_close_async"], [518, 2, 1, "", "UART_getPinMap"], [518, 2, 1, "", "UART_open"], [518, 2, 1, "", "UART_open_async"], [518, 2, 1, "", "UART_read"], [518, 2, 1, "", "UART_read_async"], [518, 2, 1, "", "UART_reset"], [518, 2, 1, "", "UART_reset_async"], [518, 2, 1, "", "UART_setBaudRate"], [518, 2, 1, "", "UART_setBaudRate_async"], [518, 2, 1, "", "UART_setDataBit"], [518, 2, 1, "", "UART_setDataBit_async"], [518, 2, 1, "", "UART_setNumStopBit"], [518, 2, 1, "", "UART_setNumStopBit_async"], [518, 2, 1, "", "UART_setParity"], [518, 2, 1, "", "UART_setParity_async"], [518, 2, 1, "", "UART_stopReading"], [518, 2, 1, "", "UART_stopReading_async"], [518, 2, 1, "", "UART_write"], [518, 2, 1, "", "UART_write_async"], [518, 2, 1, "", "close"], [518, 2, 1, "", "connect"], [518, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[519, 2, 1, "", "DIO_loadStartup"], [519, 2, 1, "", "DIO_loadStartup_async"], [519, 2, 1, "", "DIO_saveStartup"], [519, 2, 1, "", "DIO_saveStartup_async"], [519, 2, 1, "", "DIO_setPortDI"], [519, 2, 1, "", "DIO_setPortDI_async"], [519, 2, 1, "", "DIO_setPortDO"], [519, 2, 1, "", "DIO_setPortDO_async"], [519, 2, 1, "", "DIO_setPortIdle"], [519, 2, 1, "", "DIO_setPortIdle_async"], [519, 2, 1, "", "DI_closePins"], [519, 2, 1, "", "DI_closePins_async"], [519, 2, 1, "", "DI_closePort"], [519, 2, 1, "", "DI_closePort_async"], [519, 2, 1, "", "DI_getPinMap"], [519, 2, 1, "", "DI_openPins"], [519, 2, 1, "", "DI_openPins_async"], [519, 2, 1, "", "DI_openPort"], [519, 2, 1, "", "DI_openPort_async"], [519, 2, 1, "", "DI_readPins"], [519, 2, 1, "", "DI_readPins_async"], [519, 2, 1, "", "DI_readPort"], [519, 2, 1, "", "DI_readPort_async"], [519, 2, 1, "", "DO_closePins"], [519, 2, 1, "", "DO_closePins_async"], [519, 2, 1, "", "DO_closePort"], [519, 2, 1, "", "DO_closePort_async"], [519, 2, 1, "", "DO_getPinMap"], [519, 2, 1, "", "DO_openPins"], [519, 2, 1, "", "DO_openPins_async"], [519, 2, 1, "", "DO_openPort"], [519, 2, 1, "", "DO_openPort_async"], [519, 2, 1, "", "DO_togglePins"], [519, 2, 1, "", "DO_togglePins_async"], [519, 2, 1, "", "DO_togglePort"], [519, 2, 1, "", "DO_togglePort_async"], [519, 2, 1, "", "DO_writePins"], [519, 2, 1, "", "DO_writePins_async"], [519, 2, 1, "", "DO_writePort"], [519, 2, 1, "", "DO_writePort_async"], [519, 2, 1, "", "I2C_close"], [519, 2, 1, "", "I2C_close_async"], [519, 2, 1, "", "I2C_getPinMap"], [519, 2, 1, "", "I2C_open"], [519, 2, 1, "", "I2C_open_async"], [519, 2, 1, "", "I2C_read"], [519, 2, 1, "", "I2C_read_async"], [519, 2, 1, "", "I2C_reset"], [519, 2, 1, "", "I2C_reset_async"], [519, 2, 1, "", "I2C_setAddressSize"], [519, 2, 1, "", "I2C_setAddressSize_async"], [519, 2, 1, "", "I2C_setClockRate"], [519, 2, 1, "", "I2C_setClockRate_async"], [519, 2, 1, "", "I2C_write"], [519, 2, 1, "", "I2C_write_async"], [519, 2, 1, "", "Logger_openFile"], [519, 2, 1, "", "Logger_write2DList"], [519, 2, 1, "", "Logger_writeHeader"], [519, 2, 1, "", "Logger_writeList"], [519, 2, 1, "", "Logger_writeValue"], [519, 2, 1, "", "SPI_close"], [519, 2, 1, "", "SPI_close_async"], [519, 2, 1, "", "SPI_getPinMap"], [519, 2, 1, "", "SPI_open"], [519, 2, 1, "", "SPI_open_async"], [519, 2, 1, "", "SPI_read"], [519, 2, 1, "", "SPI_readAndWrite"], [519, 2, 1, "", "SPI_readAndWrite_async"], [519, 2, 1, "", "SPI_read_async"], [519, 2, 1, "", "SPI_reset"], [519, 2, 1, "", "SPI_reset_async"], [519, 2, 1, "", "SPI_setDataSize"], [519, 2, 1, "", "SPI_setDataSize_async"], [519, 2, 1, "", "SPI_setFirstBit"], [519, 2, 1, "", "SPI_setFirstBit_async"], [519, 2, 1, "", "SPI_setMode"], [519, 2, 1, "", "SPI_setMode_async"], [519, 2, 1, "", "SPI_setPrescaler"], [519, 2, 1, "", "SPI_setPrescaler_async"], [519, 2, 1, "", "SPI_write"], [519, 2, 1, "", "SPI_write_async"], [519, 2, 1, "", "Sys_getDriverInfo"], [519, 2, 1, "", "Sys_getDriverInfo_async"], [519, 2, 1, "", "Sys_getMode"], [519, 2, 1, "", "Sys_getMode_async"], [519, 2, 1, "", "Sys_getPinModeInPort"], [519, 2, 1, "", "Sys_getPinModeInPort_async"], [519, 2, 1, "", "Sys_getRTC"], [519, 2, 1, "", "Sys_getRTC_async"], [519, 2, 1, "", "Sys_getSerialNumber"], [519, 2, 1, "", "Sys_getSerialNumber_async"], [519, 2, 1, "", "Sys_reboot"], [519, 2, 1, "", "Sys_rebootOnBootloader"], [519, 2, 1, "", "Sys_rebootOnBootloader_async"], [519, 2, 1, "", "Sys_reboot_async"], [519, 2, 1, "", "Sys_setAIOMode"], [519, 2, 1, "", "Sys_setAIOMode_async"], [519, 2, 1, "", "Sys_setDIMode"], [519, 2, 1, "", "Sys_setDIMode_async"], [519, 2, 1, "", "Sys_setDIOMode"], [519, 2, 1, "", "Sys_setDIOMode_async"], [519, 2, 1, "", "Sys_setDOMode"], [519, 2, 1, "", "Sys_setDOMode_async"], [519, 2, 1, "", "Sys_setIdleMode"], [519, 2, 1, "", "Sys_setIdleMode_async"], [519, 2, 1, "", "Sys_setMotionMode"], [519, 2, 1, "", "Sys_setMotionMode_async"], [519, 2, 1, "", "Sys_setRTC"], [519, 2, 1, "", "Sys_setRTC_async"], [519, 2, 1, "", "Sys_setSlotMode"], [519, 2, 1, "", "Sys_setSlotMode_async"], [519, 2, 1, "", "Sys_setSwitchMode"], [519, 2, 1, "", "Sys_setSwitchMode_async"], [519, 2, 1, "", "Thermal_close"], [519, 2, 1, "", "Thermal_close_async"], [519, 2, 1, "", "Thermal_getPinMap"], [519, 2, 1, "", "Thermal_getStatus"], [519, 2, 1, "", "Thermal_getStatus_async"], [519, 2, 1, "", "Thermal_open"], [519, 2, 1, "", "Thermal_open_async"], [519, 2, 1, "", "Thermal_readSensor"], [519, 2, 1, "", "Thermal_readSensor_async"], [519, 2, 1, "", "Thermal_setOverSampling"], [519, 2, 1, "", "Thermal_setOverSampling_async"], [519, 2, 1, "", "Thermal_setType"], [519, 2, 1, "", "Thermal_setType_async"], [519, 2, 1, "", "UART_close"], [519, 2, 1, "", "UART_close_async"], [519, 2, 1, "", "UART_getPinMap"], [519, 2, 1, "", "UART_open"], [519, 2, 1, "", "UART_open_async"], [519, 2, 1, "", "UART_read"], [519, 2, 1, "", "UART_read_async"], [519, 2, 1, "", "UART_reset"], [519, 2, 1, "", "UART_reset_async"], [519, 2, 1, "", "UART_setBaudRate"], [519, 2, 1, "", "UART_setBaudRate_async"], [519, 2, 1, "", "UART_setDataBit"], [519, 2, 1, "", "UART_setDataBit_async"], [519, 2, 1, "", "UART_setNumStopBit"], [519, 2, 1, "", "UART_setNumStopBit_async"], [519, 2, 1, "", "UART_setParity"], [519, 2, 1, "", "UART_setParity_async"], [519, 2, 1, "", "UART_stopReading"], [519, 2, 1, "", "UART_stopReading_async"], [519, 2, 1, "", "UART_write"], [519, 2, 1, "", "UART_write_async"], [519, 2, 1, "", "close"], [519, 2, 1, "", "connect"], [519, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[520, 2, 1, "", "AI_close"], [520, 2, 1, "", "AI_close_async"], [520, 2, 1, "", "AI_enableCS"], [520, 2, 1, "", "AI_enableCS_async"], [520, 2, 1, "", "AI_getPort"], [520, 2, 1, "", "AI_open"], [520, 2, 1, "", "AI_open_async"], [520, 2, 1, "", "AI_readOnDemand"], [520, 2, 1, "", "AI_readOnDemand_async"], [520, 2, 1, "", "AI_readStreaming"], [520, 2, 1, "", "AI_readStreaming_async"], [520, 2, 1, "", "AI_setMode"], [520, 2, 1, "", "AI_setMode_async"], [520, 2, 1, "", "AI_setNumSamples"], [520, 2, 1, "", "AI_setNumSamples_async"], [520, 2, 1, "", "AI_setSamplingRate"], [520, 2, 1, "", "AI_setSamplingRate_async"], [520, 2, 1, "", "AI_start"], [520, 2, 1, "", "AI_start_async"], [520, 2, 1, "", "AI_stop"], [520, 2, 1, "", "AI_stop_async"], [520, 2, 1, "", "Logger_openFile"], [520, 2, 1, "", "Logger_write2DList"], [520, 2, 1, "", "Logger_writeHeader"], [520, 2, 1, "", "Logger_writeList"], [520, 2, 1, "", "Logger_writeValue"], [520, 2, 1, "", "Net_getGateway"], [520, 2, 1, "", "Net_getGateway_async"], [520, 2, 1, "", "Net_getIPAddrAndSubmask"], [520, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [520, 2, 1, "", "Net_getMACAddr"], [520, 2, 1, "", "Net_getMACAddr_async"], [520, 2, 1, "", "Net_setIPAddrAndSubmask"], [520, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [520, 2, 1, "", "Sys_getDriverInfo"], [520, 2, 1, "", "Sys_getDriverInfo_async"], [520, 2, 1, "", "Sys_getGateway"], [520, 2, 1, "", "Sys_getGateway_async"], [520, 2, 1, "", "Sys_getIPAddrAndSubmask"], [520, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [520, 2, 1, "", "Sys_getMACAddr"], [520, 2, 1, "", "Sys_getMACAddr_async"], [520, 2, 1, "", "Sys_getMode"], [520, 2, 1, "", "Sys_getMode_async"], [520, 2, 1, "", "Sys_getPinModeInPort"], [520, 2, 1, "", "Sys_getPinModeInPort_async"], [520, 2, 1, "", "Sys_getRTC"], [520, 2, 1, "", "Sys_getRTC_async"], [520, 2, 1, "", "Sys_getSerialNumber"], [520, 2, 1, "", "Sys_getSerialNumber_async"], [520, 2, 1, "", "Sys_reboot"], [520, 2, 1, "", "Sys_rebootOnBootloader"], [520, 2, 1, "", "Sys_rebootOnBootloader_async"], [520, 2, 1, "", "Sys_reboot_async"], [520, 2, 1, "", "Sys_setAIOMode"], [520, 2, 1, "", "Sys_setAIOMode_async"], [520, 2, 1, "", "Sys_setDIMode"], [520, 2, 1, "", "Sys_setDIMode_async"], [520, 2, 1, "", "Sys_setDIOMode"], [520, 2, 1, "", "Sys_setDIOMode_async"], [520, 2, 1, "", "Sys_setDOMode"], [520, 2, 1, "", "Sys_setDOMode_async"], [520, 2, 1, "", "Sys_setIPAddrAndSubmask"], [520, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [520, 2, 1, "", "Sys_setIdleMode"], [520, 2, 1, "", "Sys_setIdleMode_async"], [520, 2, 1, "", "Sys_setMotionMode"], [520, 2, 1, "", "Sys_setMotionMode_async"], [520, 2, 1, "", "Sys_setRTC"], [520, 2, 1, "", "Sys_setRTC_async"], [520, 2, 1, "", "Sys_setSlotMode"], [520, 2, 1, "", "Sys_setSlotMode_async"], [520, 2, 1, "", "Sys_setSwitchMode"], [520, 2, 1, "", "Sys_setSwitchMode_async"], [520, 2, 1, "", "Wifi_getWifiBandwidth"], [520, 2, 1, "", "Wifi_getWifiBandwidth_async"], [520, 2, 1, "", "Wifi_getWifiConfiguration"], [520, 2, 1, "", "Wifi_getWifiConfiguration_async"], [520, 2, 1, "", "Wifi_readAcceleration"], [520, 2, 1, "", "Wifi_readAccleration_async"], [520, 2, 1, "", "Wifi_readBattery"], [520, 2, 1, "", "Wifi_readBattery_async"], [520, 2, 1, "", "Wifi_readRSSI"], [520, 2, 1, "", "Wifi_readRSSI_async"], [520, 2, 1, "", "Wifi_readThermo"], [520, 2, 1, "", "Wifi_readThermo_async"], [520, 2, 1, "", "Wifi_setAP"], [520, 2, 1, "", "Wifi_setAP_async"], [520, 2, 1, "", "close"], [520, 2, 1, "", "connect"], [520, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[521, 2, 1, "", "AI_close"], [521, 2, 1, "", "AI_close_async"], [521, 2, 1, "", "AI_enableCS"], [521, 2, 1, "", "AI_enableCS_async"], [521, 2, 1, "", "AI_getPort"], [521, 2, 1, "", "AI_open"], [521, 2, 1, "", "AI_open_async"], [521, 2, 1, "", "AI_readOnDemand"], [521, 2, 1, "", "AI_readOnDemand_async"], [521, 2, 1, "", "AI_readStreaming"], [521, 2, 1, "", "AI_readStreaming_async"], [521, 2, 1, "", "AI_setMode"], [521, 2, 1, "", "AI_setMode_async"], [521, 2, 1, "", "AI_setNumSamples"], [521, 2, 1, "", "AI_setNumSamples_async"], [521, 2, 1, "", "AI_setSamplingRate"], [521, 2, 1, "", "AI_setSamplingRate_async"], [521, 2, 1, "", "AI_start"], [521, 2, 1, "", "AI_start_async"], [521, 2, 1, "", "AI_stop"], [521, 2, 1, "", "AI_stop_async"], [521, 2, 1, "", "Logger_openFile"], [521, 2, 1, "", "Logger_write2DList"], [521, 2, 1, "", "Logger_writeHeader"], [521, 2, 1, "", "Logger_writeList"], [521, 2, 1, "", "Logger_writeValue"], [521, 2, 1, "", "Net_getGateway"], [521, 2, 1, "", "Net_getGateway_async"], [521, 2, 1, "", "Net_getIPAddrAndSubmask"], [521, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [521, 2, 1, "", "Net_getMACAddr"], [521, 2, 1, "", "Net_getMACAddr_async"], [521, 2, 1, "", "Net_setIPAddrAndSubmask"], [521, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [521, 2, 1, "", "Sys_getDriverInfo"], [521, 2, 1, "", "Sys_getDriverInfo_async"], [521, 2, 1, "", "Sys_getGateway"], [521, 2, 1, "", "Sys_getGateway_async"], [521, 2, 1, "", "Sys_getIPAddrAndSubmask"], [521, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [521, 2, 1, "", "Sys_getMACAddr"], [521, 2, 1, "", "Sys_getMACAddr_async"], [521, 2, 1, "", "Sys_getMode"], [521, 2, 1, "", "Sys_getMode_async"], [521, 2, 1, "", "Sys_getPinModeInPort"], [521, 2, 1, "", "Sys_getPinModeInPort_async"], [521, 2, 1, "", "Sys_getRTC"], [521, 2, 1, "", "Sys_getRTC_async"], [521, 2, 1, "", "Sys_getSerialNumber"], [521, 2, 1, "", "Sys_getSerialNumber_async"], [521, 2, 1, "", "Sys_reboot"], [521, 2, 1, "", "Sys_rebootOnBootloader"], [521, 2, 1, "", "Sys_rebootOnBootloader_async"], [521, 2, 1, "", "Sys_reboot_async"], [521, 2, 1, "", "Sys_setAIOMode"], [521, 2, 1, "", "Sys_setAIOMode_async"], [521, 2, 1, "", "Sys_setDIMode"], [521, 2, 1, "", "Sys_setDIMode_async"], [521, 2, 1, "", "Sys_setDIOMode"], [521, 2, 1, "", "Sys_setDIOMode_async"], [521, 2, 1, "", "Sys_setDOMode"], [521, 2, 1, "", "Sys_setDOMode_async"], [521, 2, 1, "", "Sys_setIPAddrAndSubmask"], [521, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [521, 2, 1, "", "Sys_setIdleMode"], [521, 2, 1, "", "Sys_setIdleMode_async"], [521, 2, 1, "", "Sys_setMotionMode"], [521, 2, 1, "", "Sys_setMotionMode_async"], [521, 2, 1, "", "Sys_setRTC"], [521, 2, 1, "", "Sys_setRTC_async"], [521, 2, 1, "", "Sys_setSlotMode"], [521, 2, 1, "", "Sys_setSlotMode_async"], [521, 2, 1, "", "Sys_setSwitchMode"], [521, 2, 1, "", "Sys_setSwitchMode_async"], [521, 2, 1, "", "Wifi_getWifiBandwidth"], [521, 2, 1, "", "Wifi_getWifiBandwidth_async"], [521, 2, 1, "", "Wifi_getWifiConfiguration"], [521, 2, 1, "", "Wifi_getWifiConfiguration_async"], [521, 2, 1, "", "Wifi_readAcceleration"], [521, 2, 1, "", "Wifi_readAccleration_async"], [521, 2, 1, "", "Wifi_readBattery"], [521, 2, 1, "", "Wifi_readBattery_async"], [521, 2, 1, "", "Wifi_readRSSI"], [521, 2, 1, "", "Wifi_readRSSI_async"], [521, 2, 1, "", "Wifi_readThermo"], [521, 2, 1, "", "Wifi_readThermo_async"], [521, 2, 1, "", "Wifi_setAP"], [521, 2, 1, "", "Wifi_setAP_async"], [521, 2, 1, "", "close"], [521, 2, 1, "", "connect"], [521, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 501], "quick": [0, 501], "start": [0, 501], "instal": [0, 501], "upgrad": [0, 501], "requir": [0, 501], "product": [0, 501, 502, 522], "i": [0, 499, 500, 501, 508, 525], "o": [0, 499, 500, 501, 510, 525], "port": [0, 53, 55, 57, 104, 106, 108, 121, 123, 125, 149, 151, 153, 166, 168, 170, 183, 185, 187, 200, 202, 204, 212, 214, 216, 232, 234, 236, 315, 317, 319, 346, 348, 350, 359, 361, 363, 383, 385, 387, 396, 398, 400, 409, 411, 413, 422, 424, 426, 430, 432, 434, 446, 448, 450, 501, 525], "function": [0, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525], "tabl": [0, 501, 523, 524, 525], "refer": [0, 501, 523], "licens": [0, 501], "find": [1, 3, 26, 27, 28, 275, 277, 296, 297, 298, 523], "all": [1, 77, 98, 101, 143, 146, 275, 327, 340, 343, 377, 380], "devic": [1, 275, 482, 483, 492, 493, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "drive": [2, 3, 4, 5, 6, 7, 276, 277, 278, 279, 280, 281], "1axi": [2, 13, 14, 15, 16, 17, 18, 19, 276, 283, 284, 285, 286, 287, 288, 289], "move": [2, 13, 14, 15, 16, 17, 18, 19, 22, 25, 276, 283, 284, 285, 286, 287, 288, 289, 292, 295], "limit": [3, 28, 277, 298], "posit": [4, 29, 31, 278, 299, 301], "blend": [4, 6, 7, 31, 34, 35, 278, 280, 281, 301, 304, 305], "servo": [5, 33, 279, 303], "veloc": [6, 7, 34, 280, 281, 304], "acceler": [7, 35, 281, 305], "system": [8, 36, 47, 58, 64, 71, 79, 84, 109, 129, 130, 155, 156, 174, 175, 191, 192, 205, 206, 220, 221, 240, 241, 257, 258, 269, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 367, 368, 389, 390, 404, 405, 417, 418, 427, 428, 438, 439, 454, 455, 467, 468, 475, 476, 497, 498], "get": [8, 29, 36, 47, 58, 64, 71, 79, 84, 109, 129, 130, 155, 156, 174, 175, 191, 192, 205, 206, 220, 221, 240, 241, 257, 258, 269, 270, 282, 299, 306, 313, 320, 322, 325, 329, 330, 351, 367, 368, 389, 390, 404, 405, 417, 418, 427, 428, 438, 439, 454, 455, 467, 468, 475, 476], "network": [8, 36, 47, 58, 64, 71, 79, 84, 109, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 468, 476, 482, 483, 492, 493], "info": [8, 36, 47, 58, 64, 71, 79, 84, 109, 129, 155, 174, 191, 205, 220, 240, 258, 270, 282, 306, 313, 320, 322, 325, 329, 330, 351, 367, 389, 404, 417, 427, 438, 454, 468, 476, 483, 493], "tutori": [9, 10, 11, 12, 37, 38, 39, 40, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 110, 111, 112, 113, 131, 132, 133, 134, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 259, 260, 261, 262, 271, 272, 273, 274], "multipl": [9, 10, 37, 38, 48, 49, 59, 60, 65, 66, 72, 73, 80, 81, 88, 89, 110, 111, 131, 132, 157, 158, 176, 177, 193, 194, 207, 208, 225, 226, 245, 246, 259, 260, 271, 272], "loop": [9, 10, 11, 12, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91, 92, 96, 110, 111, 112, 113, 114, 118, 131, 132, 133, 134, 137, 141, 157, 158, 159, 160, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 225, 226, 227, 228, 245, 246, 247, 248, 251, 255, 259, 260, 261, 262, 263, 267, 271, 272, 273, 274, 307, 311, 334, 338, 352, 356, 371, 375, 461, 465, 469, 473], "async": [9, 11, 22, 37, 39, 48, 50, 59, 61, 65, 67, 72, 74, 80, 82, 88, 90, 110, 112, 131, 133, 157, 159, 176, 178, 193, 195, 207, 209, 225, 227, 245, 247, 259, 261, 271, 273, 292, 497, 499], "thread": [10, 12, 38, 40, 49, 51, 60, 62, 66, 68, 73, 75, 81, 83, 89, 91, 111, 113, 132, 134, 158, 160, 177, 179, 194, 196, 208, 210, 226, 228, 246, 248, 260, 262, 272, 274], "singl": [11, 12, 39, 40, 50, 51, 61, 62, 67, 68, 74, 75, 82, 83, 90, 91, 112, 113, 133, 134, 159, 160, 178, 179, 195, 196, 209, 210, 227, 228, 247, 248, 261, 262, 273, 274], "motion": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 523], "scurv": [14, 284], "alarm": [15, 285], "breakpoint": [16, 286], "captur": [17, 287, 523], "config": [18, 30, 32, 288, 300, 302], "file": [18, 30, 32, 288, 300, 302], "inposit": [19, 289], "2axi": [20, 21, 290, 291], "circular": [20, 290], "interpo": [20, 21, 23, 24, 290, 291, 293, 294], "linear": [21, 24, 291, 294], "3axi": [22, 23, 24, 25, 292, 293, 294, 295], "helic": [23, 293], "sync": [25, 295, 498, 500], "home": [26, 296], "index": [27, 297], "logic": [29, 299], "load": [30, 300], "save": [32, 302], "ai": [41, 42, 43, 44, 45, 46, 63, 92, 93, 94, 95, 96, 97, 114, 115, 116, 117, 118, 119, 137, 138, 139, 140, 141, 142, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 307, 308, 309, 310, 311, 312, 321, 334, 335, 336, 337, 338, 339, 352, 353, 354, 355, 356, 357, 371, 372, 373, 374, 375, 376, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 487, 497, 498, 523], "n": [41, 42, 92, 93, 114, 115, 137, 138, 251, 252, 263, 264, 307, 308, 334, 335, 352, 353, 371, 372, 461, 462, 469, 470], "sampl": [41, 42, 92, 93, 114, 115, 137, 138, 251, 252, 263, 264, 307, 308, 334, 335, 352, 353, 371, 372, 461, 462, 469, 470], "onc": [42, 46, 63, 93, 97, 115, 119, 138, 142, 252, 256, 264, 268, 308, 312, 321, 335, 339, 353, 357, 372, 376, 462, 466, 470, 474], "continu": [43, 44, 94, 95, 116, 117, 139, 140, 253, 254, 265, 266, 309, 310, 336, 337, 354, 355, 373, 374, 463, 464, 471, 472], "logger": [44, 86, 95, 117, 140, 223, 243, 254, 266, 310, 332, 337, 355, 374, 441, 457, 464, 472], "demand": [45, 46, 63, 96, 97, 118, 119, 141, 142, 255, 256, 267, 268, 311, 312, 321, 338, 339, 356, 357, 375, 376, 465, 466, 473, 474], "dio": [52, 53, 103, 104, 120, 121, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 345, 346, 358, 359, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446], "loopback": [52, 53, 98, 99, 103, 104, 120, 121, 143, 144, 148, 149, 165, 166, 182, 183, 199, 200, 211, 212, 231, 232, 314, 315, 340, 341, 345, 346, 358, 359, 377, 378, 382, 383, 395, 396, 408, 409, 421, 422, 429, 430, 445, 446], "pin": [52, 54, 56, 103, 105, 107, 120, 122, 124, 130, 148, 150, 152, 156, 165, 167, 169, 175, 182, 184, 186, 192, 199, 201, 203, 206, 211, 213, 215, 221, 231, 233, 235, 241, 314, 316, 318, 345, 347, 349, 358, 360, 362, 368, 382, 384, 386, 390, 395, 397, 399, 405, 408, 410, 412, 418, 421, 423, 425, 428, 429, 431, 433, 439, 445, 447, 449, 455], "do": [54, 55, 56, 57, 105, 106, 107, 108, 122, 123, 124, 125, 150, 151, 152, 153, 167, 168, 169, 170, 184, 185, 186, 187, 201, 202, 203, 204, 213, 214, 215, 216, 233, 234, 235, 236, 316, 317, 318, 319, 347, 348, 349, 350, 360, 361, 362, 363, 384, 385, 386, 387, 397, 398, 399, 400, 410, 411, 412, 413, 423, 424, 425, 426, 431, 432, 433, 434, 447, 448, 449, 450, 479, 489, 497, 498], "blinki": [54, 55, 105, 106, 122, 123, 150, 151, 167, 168, 184, 185, 201, 202, 213, 214, 233, 234, 316, 317, 347, 348, 360, 361, 384, 385, 397, 398, 410, 411, 423, 424, 431, 432, 447, 448], "write": [56, 57, 77, 78, 101, 102, 107, 108, 124, 125, 126, 127, 128, 136, 146, 147, 152, 153, 154, 162, 164, 169, 170, 171, 172, 173, 181, 186, 187, 188, 189, 190, 198, 203, 204, 215, 216, 217, 218, 219, 230, 235, 236, 237, 238, 239, 250, 318, 319, 327, 328, 343, 344, 349, 350, 362, 363, 364, 365, 366, 370, 380, 381, 386, 387, 388, 392, 394, 399, 400, 401, 402, 403, 407, 412, 413, 414, 415, 416, 420, 425, 426, 433, 434, 435, 436, 437, 444, 449, 450, 451, 452, 453, 460], "relai": [69, 70, 323, 324], "read": [69, 85, 86, 87, 126, 127, 135, 154, 161, 163, 171, 172, 180, 188, 189, 197, 217, 218, 222, 223, 224, 229, 237, 238, 242, 243, 244, 249, 323, 331, 332, 333, 364, 365, 369, 388, 391, 393, 401, 402, 406, 414, 415, 419, 435, 436, 440, 441, 442, 443, 451, 452, 456, 457, 458, 459], "counter": [69, 323], "set": [70, 324, 523], "channel": [70, 77, 78, 85, 86, 87, 98, 99, 101, 102, 143, 144, 146, 147, 222, 223, 224, 242, 243, 244, 324, 327, 328, 331, 332, 333, 340, 341, 343, 344, 377, 378, 380, 381, 440, 441, 442, 456, 457, 458, 523], "ao": [76, 77, 78, 100, 101, 102, 145, 146, 147, 326, 327, 328, 342, 343, 344, 379, 380, 381, 478, 488, 497, 498, 523], "waveform": [76, 100, 145, 326, 342, 379], "gener": [76, 100, 145, 326, 342, 379], "one": [78, 99, 102, 144, 147, 328, 341, 344, 378, 381], "tc": [85, 86, 87, 242, 243, 244, 331, 332, 333, 456, 457, 458, 485, 495, 497, 498], "data": [85, 86, 222, 223, 242, 243, 331, 332, 440, 441, 456, 457, 523], "statu": [87, 224, 244, 257, 269, 333, 442, 458, 467, 475], "aio": [98, 99, 143, 144, 340, 341, 377, 378], "i2c": [126, 154, 171, 188, 217, 237, 364, 388, 401, 414, 435, 451, 480, 490, 497, 498, 523], "spi": [127, 128, 172, 173, 189, 190, 218, 219, 238, 239, 365, 366, 402, 403, 415, 416, 436, 437, 452, 453, 481, 491, 497, 498, 523], "usb": [129, 155, 174, 191, 205, 220, 240, 367, 389, 404, 417, 427, 438, 454, 499, 500, 502, 513, 514, 515, 516, 517, 518, 519], "mode": [130, 156, 175, 192, 206, 221, 241, 368, 390, 405, 418, 428, 439, 455, 523], "uart": [135, 136, 161, 162, 180, 181, 197, 198, 229, 230, 249, 250, 369, 370, 391, 392, 406, 407, 419, 420, 443, 444, 459, 460, 486, 496, 497, 498, 523], "can": [163, 164, 393, 394, 523], "rtd": [222, 223, 224, 440, 441, 442, 484, 494, 497, 498], "wifi": [257, 269, 467, 475, 499, 500, 502, 520, 521], "daq": [257, 269, 467, 475, 499, 500, 513, 514, 515, 516, 517, 518, 519, 520, 521], "test": [477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496], "panel": [477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496], "finder": [482, 492, 499, 500, 503], "center": [483, 493], "exampl": [497, 498, 499, 500], "code": [497, 498, 499, 500, 524], "gui": [497, 498], "temperatur": [497, 498], "consol": [499, 500], "stem": [499, 500, 512], "edriv": [499, 500, 504], "st": [499, 500, 504], "emot": [499, 500, 505], "ethan": [499, 500, 506, 507, 508, 509, 510, 511], "A": [499, 500, 506, 520, 521], "d": [499, 500, 507, 516, 517], "l": [499, 500, 509], "t": [499, 500, 511], "f1": [499, 500, 513, 514, 515, 516, 517, 518, 519], "ad": [499, 500, 513], "aod": [499, 500, 514], "cd": [499, 500, 515], "snk": [499, 500, 517], "rd": [499, 500, 518], "td": [499, 500, 519], "e3": [499, 500, 520], "f4": [499, 500, 521], "usag": 502, "util": 502, "ethernet": 502, "api": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "descript": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "pinout": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "featur": 522, "form": 523, "speed": 523, "type": 523, "address": 523, "direct": 523, "enabl": 523, "oper": 523, "polar": 523, "search": 523, "stepper": 523, "output": 523, "stop": 523, "clock": 523, "size": 523, "endian": 523, "thermal": 523, "oversampl": 523, "pariti": 523, "bit": 523, "error": 524}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Overview": [[0, "overview"], [501, "overview"]], "Quick Start": [[0, "quick-start"], [501, "quick-start"]], "Install and Upgrade": [[0, "install-and-upgrade"], [501, "install-and-upgrade"]], "Requirements": [[0, "requirements"], [501, "requirements"]], "Products": [[0, "products"], [501, "products"]], "I/O port function table": [[0, "i-o-port-function-table"], [501, "i-o-port-function-table"], [525, "i-o-port-function-table"]], "References": [[0, "references"], [501, "references"]], "License": [[0, "license"], [501, "license"]], "Find all devices": [[1, "find-all-devices"], [275, "find-all-devices"]], "Drive 1axis move": [[2, "drive-1axis-move"], [276, "drive-1axis-move"]], "Drive find limit": [[3, "drive-find-limit"], [277, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [278, "drive-position-blending"]], "Drive servo on": [[5, "drive-servo-on"], [279, "drive-servo-on"]], "Drive velocity blending": [[6, "drive-velocity-blending"], [280, "drive-velocity-blending"]], "Drive velocity blending acceleration": [[7, "drive-velocity-blending-acceleration"], [281, "drive-velocity-blending-acceleration"]], "System get network info": [[8, "system-get-network-info"], [36, "system-get-network-info"], [47, "system-get-network-info"], [58, "system-get-network-info"], [64, "system-get-network-info"], [71, "system-get-network-info"], [79, "system-get-network-info"], [84, "system-get-network-info"], [109, "system-get-network-info"], [258, "system-get-network-info"], [270, "system-get-network-info"], [282, "system-get-network-info"], [306, "system-get-network-info"], [313, "system-get-network-info"], [320, "system-get-network-info"], [322, "system-get-network-info"], [325, "system-get-network-info"], [329, "system-get-network-info"], [330, "system-get-network-info"], [351, "system-get-network-info"], [468, "system-get-network-info"], [476, "system-get-network-info"]], "Tutorial multiple loops async": [[9, "tutorial-multiple-loops-async"], [37, "tutorial-multiple-loops-async"], [48, "tutorial-multiple-loops-async"], [59, "tutorial-multiple-loops-async"], [65, "tutorial-multiple-loops-async"], [72, "tutorial-multiple-loops-async"], [80, "tutorial-multiple-loops-async"], [88, "tutorial-multiple-loops-async"], [110, "tutorial-multiple-loops-async"], [131, "tutorial-multiple-loops-async"], [157, "tutorial-multiple-loops-async"], [176, "tutorial-multiple-loops-async"], [193, "tutorial-multiple-loops-async"], [207, "tutorial-multiple-loops-async"], [225, "tutorial-multiple-loops-async"], [245, "tutorial-multiple-loops-async"], [259, "tutorial-multiple-loops-async"], [271, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[10, "tutorial-multiple-loops-thread"], [38, "tutorial-multiple-loops-thread"], [49, "tutorial-multiple-loops-thread"], [60, "tutorial-multiple-loops-thread"], [66, "tutorial-multiple-loops-thread"], [73, "tutorial-multiple-loops-thread"], [81, "tutorial-multiple-loops-thread"], [89, "tutorial-multiple-loops-thread"], [111, "tutorial-multiple-loops-thread"], [132, "tutorial-multiple-loops-thread"], [158, "tutorial-multiple-loops-thread"], [177, "tutorial-multiple-loops-thread"], [194, "tutorial-multiple-loops-thread"], [208, "tutorial-multiple-loops-thread"], [226, "tutorial-multiple-loops-thread"], [246, "tutorial-multiple-loops-thread"], [260, "tutorial-multiple-loops-thread"], [272, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[11, "tutorial-single-loop-async"], [39, "tutorial-single-loop-async"], [50, "tutorial-single-loop-async"], [61, "tutorial-single-loop-async"], [67, "tutorial-single-loop-async"], [74, "tutorial-single-loop-async"], [82, "tutorial-single-loop-async"], [90, "tutorial-single-loop-async"], [112, "tutorial-single-loop-async"], [133, "tutorial-single-loop-async"], [159, "tutorial-single-loop-async"], [178, "tutorial-single-loop-async"], [195, "tutorial-single-loop-async"], [209, "tutorial-single-loop-async"], [227, "tutorial-single-loop-async"], [247, "tutorial-single-loop-async"], [261, "tutorial-single-loop-async"], [273, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[12, "tutorial-single-loop-thread"], [40, "tutorial-single-loop-thread"], [51, "tutorial-single-loop-thread"], [62, "tutorial-single-loop-thread"], [68, "tutorial-single-loop-thread"], [75, "tutorial-single-loop-thread"], [83, "tutorial-single-loop-thread"], [91, "tutorial-single-loop-thread"], [113, "tutorial-single-loop-thread"], [134, "tutorial-single-loop-thread"], [160, "tutorial-single-loop-thread"], [179, "tutorial-single-loop-thread"], [196, "tutorial-single-loop-thread"], [210, "tutorial-single-loop-thread"], [228, "tutorial-single-loop-thread"], [248, "tutorial-single-loop-thread"], [262, "tutorial-single-loop-thread"], [274, "tutorial-single-loop-thread"]], "Motion 1axis move": [[13, "motion-1axis-move"], [283, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[14, "motion-1axis-move-with-scurve"], [284, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[15, "motion-1axis-move-with-alarm-in"], [285, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[16, "motion-1axis-move-with-breakpoint"], [286, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[17, "motion-1axis-move-with-capture"], [287, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[18, "motion-1axis-move-with-config-file"], [288, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[19, "motion-1axis-move-with-inposition"], [289, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[20, "motion-2axis-circular-interpo"], [290, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[21, "motion-2axis-linear-interpo"], [291, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[22, "motion-3axis-async-move"], [292, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[23, "motion-3axis-helical-interpo"], [293, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[24, "motion-3axis-linear-interpo"], [294, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[25, "motion-3axis-sync-move"], [295, "motion-3axis-sync-move"]], "Motion find home": [[26, "motion-find-home"], [296, "motion-find-home"]], "Motion find index": [[27, "motion-find-index"], [297, "motion-find-index"]], "Motion find limit": [[28, "motion-find-limit"], [298, "motion-find-limit"]], "Motion get logical position": [[29, "motion-get-logical-position"], [299, "motion-get-logical-position"]], "Motion load config file": [[30, "motion-load-config-file"], [300, "motion-load-config-file"]], "Motion position blending": [[31, "motion-position-blending"], [301, "motion-position-blending"]], "Motion save config file": [[32, "motion-save-config-file"], [302, "motion-save-config-file"]], "Motion servo on": [[33, "motion-servo-on"], [303, "motion-servo-on"]], "Motion velocity blending": [[34, "motion-velocity-blending"], [304, "motion-velocity-blending"]], "Motion acceleration blending": [[35, "motion-acceleration-blending"], [305, "motion-acceleration-blending"]], "AI N samples in loop": [[41, "ai-n-samples-in-loop"], [92, "ai-n-samples-in-loop"], [114, "ai-n-samples-in-loop"], [137, "ai-n-samples-in-loop"], [251, "ai-n-samples-in-loop"], [263, "ai-n-samples-in-loop"], [307, "ai-n-samples-in-loop"], [334, "ai-n-samples-in-loop"], [352, "ai-n-samples-in-loop"], [371, "ai-n-samples-in-loop"], [461, "ai-n-samples-in-loop"], [469, "ai-n-samples-in-loop"]], "AI N samples once": [[42, "ai-n-samples-once"], [93, "ai-n-samples-once"], [115, "ai-n-samples-once"], [138, "ai-n-samples-once"], [252, "ai-n-samples-once"], [264, "ai-n-samples-once"], [308, "ai-n-samples-once"], [335, "ai-n-samples-once"], [353, "ai-n-samples-once"], [372, "ai-n-samples-once"], [462, "ai-n-samples-once"], [470, "ai-n-samples-once"]], "AI continuous": [[43, "ai-continuous"], [94, "ai-continuous"], [116, "ai-continuous"], [139, "ai-continuous"], [253, "ai-continuous"], [265, "ai-continuous"], [309, "ai-continuous"], [336, "ai-continuous"], [354, "ai-continuous"], [373, "ai-continuous"], [463, "ai-continuous"], [471, "ai-continuous"]], "AI continuous with logger": [[44, "ai-continuous-with-logger"], [95, "ai-continuous-with-logger"], [117, "ai-continuous-with-logger"], [140, "ai-continuous-with-logger"], [254, "ai-continuous-with-logger"], [266, "ai-continuous-with-logger"], [310, "ai-continuous-with-logger"], [337, "ai-continuous-with-logger"], [355, "ai-continuous-with-logger"], [374, "ai-continuous-with-logger"], [464, "ai-continuous-with-logger"], [472, "ai-continuous-with-logger"]], "AI on demand in loop": [[45, "ai-on-demand-in-loop"], [96, "ai-on-demand-in-loop"], [118, "ai-on-demand-in-loop"], [141, "ai-on-demand-in-loop"], [255, "ai-on-demand-in-loop"], [267, "ai-on-demand-in-loop"], [311, "ai-on-demand-in-loop"], [338, "ai-on-demand-in-loop"], [356, "ai-on-demand-in-loop"], [375, "ai-on-demand-in-loop"], [465, "ai-on-demand-in-loop"], [473, "ai-on-demand-in-loop"]], "AI on demand once": [[46, "ai-on-demand-once"], [63, "ai-on-demand-once"], [97, "ai-on-demand-once"], [119, "ai-on-demand-once"], [142, "ai-on-demand-once"], [256, "ai-on-demand-once"], [268, "ai-on-demand-once"], [312, "ai-on-demand-once"], [321, "ai-on-demand-once"], [339, "ai-on-demand-once"], [357, "ai-on-demand-once"], [376, "ai-on-demand-once"], [466, "ai-on-demand-once"], [474, "ai-on-demand-once"]], "DIO loopback pins": [[52, "dio-loopback-pins"], [103, "dio-loopback-pins"], [120, "dio-loopback-pins"], [148, "dio-loopback-pins"], [165, "dio-loopback-pins"], [182, "dio-loopback-pins"], [199, "dio-loopback-pins"], [211, "dio-loopback-pins"], [231, "dio-loopback-pins"], [314, "dio-loopback-pins"], [345, "dio-loopback-pins"], [358, "dio-loopback-pins"], [382, "dio-loopback-pins"], [395, "dio-loopback-pins"], [408, "dio-loopback-pins"], [421, "dio-loopback-pins"], [429, "dio-loopback-pins"], [445, "dio-loopback-pins"]], "DIO loopback port": [[53, "dio-loopback-port"], [104, "dio-loopback-port"], [121, "dio-loopback-port"], [149, "dio-loopback-port"], [166, "dio-loopback-port"], [183, "dio-loopback-port"], [200, "dio-loopback-port"], [212, "dio-loopback-port"], [232, "dio-loopback-port"], [315, "dio-loopback-port"], [346, "dio-loopback-port"], [359, "dio-loopback-port"], [383, "dio-loopback-port"], [396, "dio-loopback-port"], [409, "dio-loopback-port"], [422, "dio-loopback-port"], [430, "dio-loopback-port"], [446, "dio-loopback-port"]], "DO blinky pins": [[54, "do-blinky-pins"], [105, "do-blinky-pins"], [122, "do-blinky-pins"], [150, "do-blinky-pins"], [167, "do-blinky-pins"], [184, "do-blinky-pins"], [201, "do-blinky-pins"], [213, "do-blinky-pins"], [233, "do-blinky-pins"], [316, "do-blinky-pins"], [347, "do-blinky-pins"], [360, "do-blinky-pins"], [384, "do-blinky-pins"], [397, "do-blinky-pins"], [410, "do-blinky-pins"], [423, "do-blinky-pins"], [431, "do-blinky-pins"], [447, "do-blinky-pins"]], "DO blinky port": [[55, "do-blinky-port"], [106, "do-blinky-port"], [123, "do-blinky-port"], [151, "do-blinky-port"], [168, "do-blinky-port"], [185, "do-blinky-port"], [202, "do-blinky-port"], [214, "do-blinky-port"], [234, "do-blinky-port"], [317, "do-blinky-port"], [348, "do-blinky-port"], [361, "do-blinky-port"], [385, "do-blinky-port"], [398, "do-blinky-port"], [411, "do-blinky-port"], [424, "do-blinky-port"], [432, "do-blinky-port"], [448, "do-blinky-port"]], "DO write pins": [[56, "do-write-pins"], [107, "do-write-pins"], [124, "do-write-pins"], [152, "do-write-pins"], [169, "do-write-pins"], [186, "do-write-pins"], [203, "do-write-pins"], [215, "do-write-pins"], [235, "do-write-pins"], [318, "do-write-pins"], [349, "do-write-pins"], [362, "do-write-pins"], [386, "do-write-pins"], [399, "do-write-pins"], [412, "do-write-pins"], [425, "do-write-pins"], [433, "do-write-pins"], [449, "do-write-pins"]], "DO write port": [[57, "do-write-port"], [108, "do-write-port"], [125, "do-write-port"], [153, "do-write-port"], [170, "do-write-port"], [187, "do-write-port"], [204, "do-write-port"], [216, "do-write-port"], [236, "do-write-port"], [319, "do-write-port"], [350, "do-write-port"], [363, "do-write-port"], [387, "do-write-port"], [400, "do-write-port"], [413, "do-write-port"], [426, "do-write-port"], [434, "do-write-port"], [450, "do-write-port"]], "Relay read counters": [[69, "relay-read-counters"], [323, "relay-read-counters"]], "Relay set channel": [[70, "relay-set-channel"], [324, "relay-set-channel"]], "AO waveform generation": [[76, "ao-waveform-generation"], [100, "ao-waveform-generation"], [145, "ao-waveform-generation"], [326, "ao-waveform-generation"], [342, "ao-waveform-generation"], [379, "ao-waveform-generation"]], "AO write all channels": [[77, "ao-write-all-channels"], [101, "ao-write-all-channels"], [146, "ao-write-all-channels"], [327, "ao-write-all-channels"], [343, "ao-write-all-channels"], [380, "ao-write-all-channels"]], "AO write one channel": [[78, "ao-write-one-channel"], [102, "ao-write-one-channel"], [147, "ao-write-one-channel"], [328, "ao-write-one-channel"], [344, "ao-write-one-channel"], [381, "ao-write-one-channel"]], "TC read channel data": [[85, "tc-read-channel-data"], [242, "tc-read-channel-data"], [331, "tc-read-channel-data"], [456, "tc-read-channel-data"]], "TC read channel data with logger": [[86, "tc-read-channel-data-with-logger"], [243, "tc-read-channel-data-with-logger"], [332, "tc-read-channel-data-with-logger"], [457, "tc-read-channel-data-with-logger"]], "TC read channel status": [[87, "tc-read-channel-status"], [244, "tc-read-channel-status"], [333, "tc-read-channel-status"], [458, "tc-read-channel-status"]], "AIO all channels loopback": [[98, "aio-all-channels-loopback"], [143, "aio-all-channels-loopback"], [340, "aio-all-channels-loopback"], [377, "aio-all-channels-loopback"]], "AIO one channel loopback": [[99, "aio-one-channel-loopback"], [144, "aio-one-channel-loopback"], [341, "aio-one-channel-loopback"], [378, "aio-one-channel-loopback"]], "I2C write and read": [[126, "i2c-write-and-read"], [154, "i2c-write-and-read"], [171, "i2c-write-and-read"], [188, "i2c-write-and-read"], [217, "i2c-write-and-read"], [237, "i2c-write-and-read"], [364, "i2c-write-and-read"], [388, "i2c-write-and-read"], [401, "i2c-write-and-read"], [414, "i2c-write-and-read"], [435, "i2c-write-and-read"], [451, "i2c-write-and-read"]], "SPI read and write": [[127, "spi-read-and-write"], [172, "spi-read-and-write"], [189, "spi-read-and-write"], [218, "spi-read-and-write"], [238, "spi-read-and-write"], [365, "spi-read-and-write"], [402, "spi-read-and-write"], [415, "spi-read-and-write"], [436, "spi-read-and-write"], [452, "spi-read-and-write"]], "SPI write": [[128, "spi-write"], [173, "spi-write"], [190, "spi-write"], [219, "spi-write"], [239, "spi-write"], [366, "spi-write"], [403, "spi-write"], [416, "spi-write"], [437, "spi-write"], [453, "spi-write"]], "System get USB info": [[129, "system-get-usb-info"], [155, "system-get-usb-info"], [174, "system-get-usb-info"], [191, "system-get-usb-info"], [205, "system-get-usb-info"], [220, "system-get-usb-info"], [240, "system-get-usb-info"], [367, "system-get-usb-info"], [389, "system-get-usb-info"], [404, "system-get-usb-info"], [417, "system-get-usb-info"], [427, "system-get-usb-info"], [438, "system-get-usb-info"], [454, "system-get-usb-info"]], "System get pin mode": [[130, "system-get-pin-mode"], [156, "system-get-pin-mode"], [175, "system-get-pin-mode"], [192, "system-get-pin-mode"], [206, "system-get-pin-mode"], [221, "system-get-pin-mode"], [241, "system-get-pin-mode"], [368, "system-get-pin-mode"], [390, "system-get-pin-mode"], [405, "system-get-pin-mode"], [418, "system-get-pin-mode"], [428, "system-get-pin-mode"], [439, "system-get-pin-mode"], [455, "system-get-pin-mode"]], "UART read": [[135, "uart-read"], [161, "uart-read"], [180, "uart-read"], [197, "uart-read"], [229, "uart-read"], [249, "uart-read"], [369, "uart-read"], [391, "uart-read"], [406, "uart-read"], [419, "uart-read"], [443, "uart-read"], [459, "uart-read"]], "UART write": [[136, "uart-write"], [162, "uart-write"], [181, "uart-write"], [198, "uart-write"], [230, "uart-write"], [250, "uart-write"], [370, "uart-write"], [392, "uart-write"], [407, "uart-write"], [420, "uart-write"], [444, "uart-write"], [460, "uart-write"]], "CAN read": [[163, "can-read"], [393, "can-read"]], "CAN write": [[164, "can-write"], [394, "can-write"]], "RTD read channel data": [[222, "rtd-read-channel-data"], [440, "rtd-read-channel-data"]], "RTD read channel data with logger": [[223, "rtd-read-channel-data-with-logger"], [441, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[224, "rtd-read-channel-status"], [442, "rtd-read-channel-status"]], "System get Wifi DAQ status": [[257, "system-get-wifi-daq-status"], [269, "system-get-wifi-daq-status"], [467, "system-get-wifi-daq-status"], [475, "system-get-wifi-daq-status"]], "AI test panel": [[477, "ai-test-panel"], [487, "ai-test-panel"]], "AO test panel": [[478, "ao-test-panel"], [488, "ao-test-panel"]], "DO test panel": [[479, "do-test-panel"], [489, "do-test-panel"]], "I2C test panel": [[480, "i2c-test-panel"], [490, "i2c-test-panel"]], "SPI test panel": [[481, "spi-test-panel"], [491, "spi-test-panel"]], "Network device finder": [[482, "network-device-finder"], [492, "network-device-finder"]], "Device network info center": [[483, "device-network-info-center"], [493, "device-network-info-center"]], "RTD test panel": [[484, "rtd-test-panel"], [494, "rtd-test-panel"]], "TC test panel": [[485, "tc-test-panel"], [495, "tc-test-panel"]], "UART test panel": [[486, "uart-test-panel"], [496, "uart-test-panel"]], "Example Codes - GUI (async)": [[497, "example-codes-gui-async"]], "AI": [[497, "ai"], [498, "ai"]], "AO": [[497, "ao"], [498, "ao"]], "DO": [[497, "do"], [498, "do"]], "I2C": [[497, "i2c"], [498, "i2c"]], "SPI": [[497, "spi"], [498, "spi"]], "System": [[497, "system"], [498, "system"]], "Temperature-RTD": [[497, "temperature-rtd"], [498, "temperature-rtd"]], "Temperature-TC": [[497, "temperature-tc"], [498, "temperature-tc"]], "UART": [[497, "uart"], [498, "uart"]], "Example Codes - GUI (sync)": [[498, "example-codes-gui-sync"]], "Example Codes - Console (async)": [[499, "example-codes-console-async"]], "Device finder": [[499, "device-finder"], [500, "device-finder"], [503, "device-finder"]], "STEM": [[499, "stem"], [500, "stem"], [512, "stem"]], "EDrive-ST": [[499, "edrive-st"], [500, "edrive-st"], [504, "edrive-st"]], "EMotion": [[499, "emotion"], [500, "emotion"], [505, "emotion"]], "Ethan-A": [[499, "ethan-a"], [500, "ethan-a"], [506, "ethan-a"]], "Ethan-D": [[499, "ethan-d"], [500, "ethan-d"], [507, "ethan-d"]], "Ethan-I": [[499, "ethan-i"], [500, "ethan-i"], [508, "ethan-i"]], "Ethan-L": [[499, "ethan-l"], [500, "ethan-l"], [509, "ethan-l"]], "Ethan-O": [[499, "ethan-o"], [500, "ethan-o"], [510, "ethan-o"]], "Ethan-T": [[499, "ethan-t"], [500, "ethan-t"], [511, "ethan-t"]], "USB-DAQ-F1-AD": [[499, "usb-daq-f1-ad"], [500, "usb-daq-f1-ad"], [513, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[499, "usb-daq-f1-aod"], [500, "usb-daq-f1-aod"], [514, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[499, "usb-daq-f1-cd"], [500, "usb-daq-f1-cd"], [515, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[499, "usb-daq-f1-d"], [500, "usb-daq-f1-d"], [516, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[499, "usb-daq-f1-d-snk"], [500, "usb-daq-f1-d-snk"], [517, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[499, "usb-daq-f1-rd"], [500, "usb-daq-f1-rd"], [518, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[499, "usb-daq-f1-td"], [500, "usb-daq-f1-td"], [519, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[499, "wifi-daq-e3-a"], [500, "wifi-daq-e3-a"], [520, "wifi-daq-e3-a"]], "Wifi-DAQ-F4-A": [[499, "wifi-daq-f4-a"], [500, "wifi-daq-f4-a"], [521, "wifi-daq-f4-a"]], "Example Codes - Console (sync)": [[500, "example-codes-console-sync"]], "Products Usage": [[502, "products-usage"]], "Utilities": [[502, "utilities"]], "Wifi devices": [[502, "wifi-devices"]], "Ethernet devices": [[502, "ethernet-devices"]], "USB devices": [[502, "usb-devices"]], "API function description": [[503, "api-function-description"], [504, "api-function-description"], [505, "api-function-description"], [506, "api-function-description"], [507, "api-function-description"], [508, "api-function-description"], [509, "api-function-description"], [510, "api-function-description"], [511, "api-function-description"], [512, "api-function-description"], [513, "api-function-description"], [514, "api-function-description"], [515, "api-function-description"], [516, "api-function-description"], [517, "api-function-description"], [518, "api-function-description"], [519, "api-function-description"], [520, "api-function-description"], [521, "api-function-description"]], "Device pinout": [[504, "device-pinout"], [505, "device-pinout"], [506, "device-pinout"], [507, "device-pinout"], [508, "device-pinout"], [509, "device-pinout"], [510, "device-pinout"], [511, "device-pinout"], [512, "device-pinout"], [513, "device-pinout"], [514, "device-pinout"], [515, "device-pinout"], [516, "device-pinout"], [517, "device-pinout"], [518, "device-pinout"], [519, "device-pinout"], [520, "device-pinout"], [521, "device-pinout"]], "Products Feature": [[522, "products-feature"]], "Setting Table": [[523, "setting-table"]], "AI Mode": [[523, "ai-mode"]], "AO Form": [[523, "ao-form"]], "AO Mode": [[523, "ao-mode"]], "CAN Speed": [[523, "can-speed"]], "CAN Type": [[523, "can-type"]], "I2C Address": [[523, "i2c-address"]], "I2C Speed": [[523, "i2c-speed"]], "Motion Capture Mode": [[523, "motion-capture-mode"]], "Motion Capture Type": [[523, "motion-capture-type"]], "Motion Direction": [[523, "motion-direction"]], "Motion Enable": [[523, "motion-enable"]], "Motion Find Reference Type": [[523, "motion-find-reference-type"]], "Motion Operation Mode": [[523, "motion-operation-mode"]], "Motion Polarity": [[523, "motion-polarity"]], "Motion Search Direction": [[523, "motion-search-direction"]], "Motion Stepper Output": [[523, "motion-stepper-output"]], "Motion Stop Type": [[523, "motion-stop-type"]], "SPI Clock": [[523, "spi-clock"]], "SPI Data Size": [[523, "spi-data-size"]], "SPI Endianness": [[523, "spi-endianness"]], "SPI Mode": [[523, "spi-mode"]], "Thermal Channel": [[523, "thermal-channel"]], "Thermal OverSampling": [[523, "thermal-oversampling"]], "Thermal Type": [[523, "thermal-type"]], "UART Data Size": [[523, "uart-data-size"]], "UART Parity": [[523, "uart-parity"]], "UART Stop Bit": [[523, "uart-stop-bit"]], "Error Code Table": [[524, "error-code-table"]]}, "indexentries": {"module": [[501, "module-pywpc"]], "pywpc": [[501, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[503, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[503, "pywpc.DeviceFinder.disconnect"]], "drive_cfgaxisdirection() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgAxisDirection"]], "drive_cfgaxisdirection_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgAxisDirection_async"]], "drive_cfgaxismove() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgAxisMove"]], "drive_cfgaxismove_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgAxisMove_async"]], "drive_cfgencoder() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgEncoder"]], "drive_cfgencoderdirection() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgEncoderDirection"]], "drive_cfgencoderdirection_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgEncoderDirection_async"]], "drive_cfgencoder_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgEncoder_async"]], "drive_cfgfindref() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgFindRef"]], "drive_cfgfindref_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgFindRef_async"]], "drive_cfglimit() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgLimit"]], "drive_cfglimit_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_cfgLimit_async"]], "drive_close() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_close"]], "drive_close_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_close_async"]], "drive_enableservooff() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_enableServoOff"]], "drive_enableservooff_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_enableServoOff_async"]], "drive_enableservoon() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_enableServoOn"]], "drive_enableservoon_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_enableServoOn_async"]], "drive_findreference() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_findReference"]], "drive_findreference_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_findReference_async"]], "drive_getalarmstatus() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_getAlarmStatus"]], "drive_getalarmstatus_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_getAlarmStatus_async"]], "drive_getlimitstatus() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_getLimitStatus"]], "drive_getlimitstatus_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_getLimitStatus_async"]], "drive_getmovestatus() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_getMoveStatus"]], "drive_getmovestatus_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_getMoveStatus_async"]], "drive_open() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_open"]], "drive_open_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_open_async"]], "drive_overrideaccel() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_overrideAccel"]], "drive_overrideaccel_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_overrideAccel_async"]], "drive_overrideposition() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_overridePosition"]], "drive_overrideposition_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_overridePosition_async"]], "drive_overridevelocity() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_overrideVelocity"]], "drive_overridevelocity_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_overrideVelocity_async"]], "drive_readcurrentvelocity() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_readCurrentVelocity"]], "drive_readcurrentvelocity_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_readCurrentVelocity_async"]], "drive_readencoderposition() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_readEncoderPosition"]], "drive_readencoderposition_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_readEncoderPosition_async"]], "drive_rstencoderposi() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_rstEncoderPosi"]], "drive_rstencoderposi_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_rstEncoderPosi_async"]], "drive_start() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_start"]], "drive_start_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_start_async"]], "drive_stop() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_stop"]], "drive_stop_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Drive_stop_async"]], "edrive_st (class in pywpc)": [[504, "pywpc.EDrive_ST"]], "net_getgateway() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.Sys_setSwitchMode_async"]], "close() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.close"]], "connect() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.connect"]], "disconnect() (pywpc.edrive_st method)": [[504, "pywpc.EDrive_ST.disconnect"]], "emotion (class in pywpc)": [[505, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[505, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[505, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[505, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[505, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[505, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[505, "pywpc.EMotion.Sys_setSwitchMode_async"]], "close() (pywpc.emotion method)": [[505, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[505, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[505, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_enableCS_async"]], "ai_getport() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_getPort"]], "ai_open() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[506, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[506, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[506, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[506, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[506, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[506, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[506, "pywpc.EthanA.Sys_setSwitchMode_async"]], "close() (pywpc.ethana method)": [[506, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[506, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[506, "pywpc.EthanA.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[507, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[507, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[507, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[507, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[507, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[507, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[507, "pywpc.EthanD.Sys_setSwitchMode_async"]], "close() (pywpc.ethand method)": [[507, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[507, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[507, "pywpc.EthanD.disconnect"]], "ai_close() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_close_async"]], "ai_getport() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_getPort"]], "ai_open() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[508, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[508, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[508, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[508, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[508, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[508, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[508, "pywpc.EthanI.Sys_setSwitchMode_async"]], "close() (pywpc.ethani method)": [[508, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[508, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[508, "pywpc.EthanI.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[509, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[509, "pywpc.EthanL.Sys_setSwitchMode_async"]], "close() (pywpc.ethanl method)": [[509, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[509, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[509, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_close_async"]], "ao_getenablechannels() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getEnableChannels"]], "ao_getmode() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getMode"]], "ao_getmode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getMode_async"]], "ao_getport() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getPort"]], "ao_getstate() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getState"]], "ao_getvalues() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_open_async"]], "ao_pushtobuffer() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_pushToBuffer"]], "ao_setenablechannels() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[510, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[510, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[510, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[510, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[510, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[510, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[510, "pywpc.EthanO.Sys_setSwitchMode_async"]], "close() (pywpc.ethano method)": [[510, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[510, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[510, "pywpc.EthanO.disconnect"]], "ethant (class in pywpc)": [[511, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[511, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[511, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[511, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[511, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[511, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[511, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[511, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[511, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[511, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[512, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[512, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_enableCS_async"]], "ai_getport() (pywpc.stem method)": [[512, "pywpc.STEM.AI_getPort"]], "ai_open() (pywpc.stem method)": [[512, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[512, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[512, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[512, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[512, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[512, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[512, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[512, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[512, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[512, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[512, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_close_async"]], "ao_getenablechannels() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getEnableChannels"]], "ao_getmode() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getMode"]], "ao_getmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getMode_async"]], "ao_getport() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getPort"]], "ao_getstate() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getState"]], "ao_getvalues() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[512, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[512, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_open_async"]], "ao_pushtobuffer() (pywpc.stem method)": [[512, "pywpc.STEM.AO_pushToBuffer"]], "ao_setenablechannels() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[512, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[512, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[512, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[512, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.stem method)": [[512, "pywpc.STEM.DIO_setPortIdle_async"]], "di_closepins() (pywpc.stem method)": [[512, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[512, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[512, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[512, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[512, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[512, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[512, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[512, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[512, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[512, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[512, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[512, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[512, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[512, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[512, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[512, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[512, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[512, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[512, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[512, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[512, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[512, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[512, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[512, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[512, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[512, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[512, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[512, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[512, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[512, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[512, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[512, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[512, "pywpc.STEM.Sys_setSwitchMode_async"]], "close() (pywpc.stem method)": [[512, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[512, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[512, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_getport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.AI_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Logger_writeValue"]], "spi_close() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[513, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[513, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_getport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getenablechannels() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getEnableChannels"]], "ao_getmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getMode"]], "ao_getmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getMode_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getstate() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getState"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_pushtobuffer() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_pushToBuffer"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[514, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[514, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.CAN_write_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Logger_writeValue"]], "spi_close() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[515, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[515, "pywpc.USBDAQF1CD.disconnect"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Logger_writeValue"]], "spi_close() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[516, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[516, "pywpc.USBDAQF1D.disconnect"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "usbdaqf1dsnk (class in pywpc)": [[517, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[517, "pywpc.USBDAQF1DSNK.disconnect"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Logger_writeValue"]], "spi_close() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[518, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[518, "pywpc.USBDAQF1RD.disconnect"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Logger_writeValue"]], "spi_close() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[519, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[519, "pywpc.USBDAQF1TD.disconnect"]], "ai_close() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_getport() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_getPort"]], "ai_open() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "wifidaqe3a (class in pywpc)": [[520, "pywpc.WifiDAQE3A"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_getWifiBandwidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_getWifiBandwidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_readThermo_async"]], "wifi_setap() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.Wifi_setAP_async"]], "close() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[520, "pywpc.WifiDAQE3A.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_getport() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_getPort"]], "ai_open() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setslotmode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setSlotMode"]], "sys_setslotmode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setSlotMode_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "wifidaqf4a (class in pywpc)": [[521, "pywpc.WifiDAQF4A"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_getWifiBandwidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_getWifiBandwidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_readThermo_async"]], "wifi_setap() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.Wifi_setAP_async"]], "close() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[521, "pywpc.WifiDAQF4A.disconnect"]]}})