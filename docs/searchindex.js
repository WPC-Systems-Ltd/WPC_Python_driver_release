Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/System_ETH/hello_world", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_read", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/System_ETH/hello_world", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/System_ETH/hello_world", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/PWM/PWM_generate", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/System_ETH/hello_world", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/System_ETH/hello_world", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/System_ETH/hello_world", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/System_ETH/hello_world", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info", "examples/Console/Synchronous/EthanP/System_ETH/hello_world", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/hello_world", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/STEM/System_ETH/hello_world", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_USB_info", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_read", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDriveST", "products/EMotion", "products/EthanA", "products/EthanD", "products/EthanEXD", "products/EthanI", "products/EthanIA", "products/EthanL", "products/EthanO", "products/EthanP", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQE3AH", "products/WifiDAQF4A", "products_summary", "ref_AIO", "ref_channel", "ref_error", "ref_param", "ref_port"], "filenames": ["README.rst", "examples\\Console\\Asynchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_find_home.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_position_move.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_scan_move.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EDriveST\\Drive\\Drive_velocity_move.rst", "examples\\Console\\Asynchronous\\EDriveST\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EDriveST\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EDriveST\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EDriveST\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EDriveST\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EDriveST\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EDriveST\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Asynchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EMotion\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EMotion\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanA\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\EthanD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanEXD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\EthanEXD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\EthanEXD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\EthanEXD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\EthanEXD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\EthanEXD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\EthanEXD\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanEXD\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanEXD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanEXD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanEXD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanEXD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanEXD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanI\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanI\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanIA\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\EthanIA\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanIA\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanIA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanIA\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanIA\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanIA\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanIA\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Asynchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanL\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanL\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanO\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanO\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanP\\DPOT\\DPOT_readByChannel.rst", "examples\\Console\\Asynchronous\\EthanP\\DPOT\\DPOT_writeAllChannels.rst", "examples\\Console\\Asynchronous\\EthanP\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanP\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanP\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanP\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanP\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanP\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanP\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\EthanT\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\EthanT\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\STEM\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\hello_world.rst", "examples\\Console\\Asynchronous\\STEM\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\STEM\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1DSNK\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Counter\\Counter_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\PWM\\PWM_generate.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\hello_world.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Asynchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AHRS\\AHRS_read.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AHRS\\AHRS_visualize.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQE3AH\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\hello_world.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\multiple_loops_thread.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_async.rst", "examples\\Console\\Asynchronous\\WifiDAQF4A\\Tutorial\\single_loop_thread.rst", "examples\\Console\\Synchronous\\DeviceFinder\\Find_devices\\find_all_devices.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_find_home.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_find_limit.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_position_blending.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_position_move.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_scan_move.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_servo_on.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EDriveST\\Drive\\Drive_velocity_move.rst", "examples\\Console\\Synchronous\\EDriveST\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EDriveST\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EDriveST\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_S_curve_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_alarm_in.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_breakpoint.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_capture.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_1axis_move_with_inposition.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_circular_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_2axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_asynchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_helical_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_linear_interpolation.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_3axis_synchronous_move.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_home.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_index.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_find_limit.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_get_logical_position.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_load_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_position_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_save_configuration_file.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_servo_on.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending.rst", "examples\\Console\\Synchronous\\EMotion\\Motion\\Motion_velocity_blending_acceleration.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EMotion\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\EthanA\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\EthanD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\EthanD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanEXD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\EthanEXD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\EthanEXD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\EthanEXD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\EthanEXD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\EthanEXD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\EthanEXD\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanEXD\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanEXD\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanI\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanI\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanIA\\AI24Bit\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\EthanIA\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanIA\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanIA\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_read_counters.rst", "examples\\Console\\Synchronous\\EthanL\\Relay\\Relay_set_channel.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanL\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\EthanO\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanO\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanP\\DPOT\\DPOT_readByChannel.rst", "examples\\Console\\Synchronous\\EthanP\\DPOT\\DPOT_writeAllChannels.rst", "examples\\Console\\Synchronous\\EthanP\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanP\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanP\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\EthanT\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\EthanT\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\STEM\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\STEM\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\STEM\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\STEM\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\get_network_info.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\hello_world.rst", "examples\\Console\\Synchronous\\STEM\\System_ETH\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_all_channels_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AIO_one_channel_loopback.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AIO\\AO_output_while_AI_streaming.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_waveform_gen.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_all_channels.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\AO\\AO_write_one_channel.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1AOD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\CAN\\CAN_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1CD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1D\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1DSNK\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\Temperature_RTD\\RTD_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1RD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Counter\\Counter_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DIO_loopback_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_blinky_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_pins.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\DIO\\DO_write_port.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\I2C\\I2C_write_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\PWM\\PWM_generate.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_read_and_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\SPI\\SPI_write.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_USB_info.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\get_pin_mode.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\hello_world.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\System_USB\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_data_with_logger.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\Temperature_TC\\TC_read_channel_status.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_read.rst", "examples\\Console\\Synchronous\\USBDAQF1TD\\UART\\UART_write.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3A\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AHRS\\AHRS_read.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AHRS\\AHRS_visualize.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Synchronous\\WifiDAQE3AH\\System_Wifi\\set_and_get_RTC.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_N_samples_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous_multi_slot.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_continuous_with_logger.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_in_loop.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\AI\\AI_on_demand_once.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_Wifi_DAQ_status.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\get_network_info.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\hello_world.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\set_LED_status.rst", "examples\\Console\\Synchronous\\WifiDAQF4A\\System_Wifi\\set_and_get_RTC.rst", "examples\\GUI\\Synchronous\\AI\\AI_integrated_gui.rst", "examples\\GUI\\Synchronous\\AO\\AO_gui.rst", "examples\\GUI\\Synchronous\\DO\\DO_gui.rst", "examples\\GUI\\Synchronous\\I2C\\I2C_gui.rst", "examples\\GUI\\Synchronous\\SPI\\SPI_gui.rst", "examples\\GUI\\Synchronous\\System\\find_all_devices_gui.rst", "examples\\GUI\\Synchronous\\System\\get_device_info_gui.rst", "examples\\GUI\\Synchronous\\Temperature_RTD\\RTD_gui.rst", "examples\\GUI\\Synchronous\\Temperature_TC\\TC_gui.rst", "examples\\GUI\\Synchronous\\UART\\UART_gui.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products\\DeviceFinder.rst", "products\\EDriveST.rst", "products\\EMotion.rst", "products\\EthanA.rst", "products\\EthanD.rst", "products\\EthanEXD.rst", "products\\EthanI.rst", "products\\EthanIA.rst", "products\\EthanL.rst", "products\\EthanO.rst", "products\\EthanP.rst", "products\\EthanT.rst", "products\\STEM.rst", "products\\USBDAQF1AD.rst", "products\\USBDAQF1AOD.rst", "products\\USBDAQF1CD.rst", "products\\USBDAQF1D.rst", "products\\USBDAQF1DSNK.rst", "products\\USBDAQF1RD.rst", "products\\USBDAQF1TD.rst", "products\\WifiDAQE3A.rst", "products\\WifiDAQE3AH.rst", "products\\WifiDAQF4A.rst", "products_summary.rst", "ref_AIO.rst", "ref_channel.rst", "ref_error.rst", "ref_param.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DPOT read by channel", "DPOT write all channels", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AHRS read", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "System hello world", "Set and get RTC", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "System hello world", "Set and get RTC", "Relay read counters", "Relay set channel", "System get network info", "System hello world", "Set and get RTC", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "System hello world", "Set and get RTC", "DPOT read by channel", "DPOT write all channels", "System get network info", "System hello world", "Set and get RTC", "System get network info", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get USB info", "System get pin mode", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "AHRS read", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "System hello world", "Set LED status", "Set and get RTC", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-D", "Ethan-EX-D", "Ethan-I", "Ethan-IA", "Ethan-L", "Ethan-O", "Ethan-P", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-E3-AH", "Wifi-DAQ-F4-A", "Products Feature", "AI Max Sampling Rate Table", "I/O Channel Function Table", "Error Code Table", "Setting Table", "I/O Port Function Table"], "terms": {"welcom": [0, 682], "wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 712], "api": [0, 682, 683, 710], "document": [0, 682], "It": [0, 60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 682, 686, 688, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "i": [0, 11, 12, 14, 16, 24, 25, 26, 28, 29, 33, 41, 42, 44, 46, 47, 51, 54, 55, 57, 59, 62, 63, 64, 65, 68, 69, 71, 73, 76, 77, 78, 79, 81, 82, 84, 86, 89, 90, 92, 94, 97, 98, 100, 102, 104, 106, 107, 109, 111, 113, 114, 116, 117, 119, 121, 122, 125, 126, 128, 130, 132, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 170, 172, 175, 176, 177, 178, 179, 181, 184, 185, 186, 188, 190, 193, 197, 199, 200, 203, 204, 205, 208, 209, 210, 211, 212, 215, 216, 217, 219, 221, 224, 226, 229, 230, 231, 232, 233, 235, 238, 239, 240, 242, 244, 247, 250, 251, 252, 253, 254, 256, 259, 260, 261, 263, 265, 268, 271, 272, 273, 274, 277, 278, 279, 281, 283, 284, 287, 288, 289, 290, 291, 293, 296, 297, 298, 303, 305, 308, 311, 312, 313, 314, 315, 317, 320, 321, 322, 327, 329, 332, 336, 340, 341, 342, 344, 346, 348, 349, 353, 357, 358, 359, 361, 363, 364, 368, 372, 373, 374, 376, 378, 389, 390, 398, 399, 400, 402, 403, 407, 415, 416, 417, 421, 424, 425, 428, 429, 430, 431, 434, 435, 438, 439, 440, 441, 443, 444, 447, 448, 451, 452, 454, 456, 457, 459, 460, 462, 463, 464, 467, 468, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 500, 502, 505, 506, 507, 508, 509, 511, 514, 515, 516, 519, 523, 525, 526, 529, 530, 531, 534, 535, 536, 537, 538, 541, 542, 543, 546, 548, 551, 552, 553, 554, 555, 557, 560, 561, 562, 565, 568, 569, 570, 571, 572, 574, 577, 578, 579, 582, 585, 586, 587, 588, 591, 592, 593, 594, 597, 598, 599, 600, 601, 603, 606, 607, 608, 614, 617, 618, 619, 620, 621, 623, 626, 627, 628, 634, 638, 642, 643, 644, 646, 647, 651, 655, 656, 657, 658, 662, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710], "an": [0, 675, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "easi": [0, 682, 707], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 509, 525, 526, 532, 533, 538, 549, 550, 555, 566, 567, 572, 583, 584, 595, 596, 601, 615, 616, 621, 646, 682, 686, 687, 693, 696, 697, 698, 699, 704, 705, 706, 712], "open": [0, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 87, 95, 103, 104, 112, 113, 114, 122, 123, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 347, 348, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 445, 449, 453, 454, 458, 459, 460, 464, 465, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 645, 646, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 670, 671, 672, 673, 676, 677, 678, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sourc": [0, 682, 707], "tool": [0, 682], "beginn": [0, 682], "we": [0, 179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 682], "provid": [0, 682], "excel": [0, 682], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 712], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "help": [0, 682], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682, 687, 688, 689, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 709], "quickli": [0, 682], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 417, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 443, 445, 447, 449, 451, 453, 454, 456, 458, 459, 460, 462, 464, 465, 467, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 642, 643, 645, 646, 647, 648, 650, 651, 652, 655, 656, 658, 659, 661, 662, 663, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "our": [0, 682], "product": [0, 141, 142, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 348, 475, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 646, 682, 690, 691, 708, 709, 710, 712], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710], "real": [0, 682], "world": [0, 680, 681, 682], "usag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 687, 693, 696, 697, 698, 699, 704, 705, 706, 708, 710], "make": [0, 179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 682], "great": [0, 682], "wai": [0, 66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 682], "learn": [0, 682], "therefor": [0, 682], "highli": [0, 682], "recommend": [0, 682, 704, 705, 706], "becaus": [0, 13, 14, 15, 16, 43, 44, 45, 46, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 162, 163, 164, 165, 187, 188, 189, 190, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 343, 344, 345, 346, 360, 361, 362, 363, 375, 376, 377, 378, 682], "": [0, 4, 8, 11, 12, 13, 14, 15, 16, 26, 29, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 155, 156, 160, 161, 162, 163, 164, 165, 167, 169, 175, 176, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 194, 196, 202, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 231, 232, 234, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 255, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 292, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 335, 340, 341, 342, 343, 344, 345, 346, 350, 352, 357, 358, 359, 360, 361, 362, 363, 365, 367, 372, 373, 374, 375, 376, 377, 378, 382, 386, 389, 390, 400, 403, 411, 412, 413, 415, 416, 418, 420, 424, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 441, 443, 444, 447, 448, 451, 452, 454, 456, 457, 458, 462, 463, 467, 468, 470, 471, 472, 473, 476, 478, 489, 490, 494, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 520, 522, 528, 534, 535, 536, 537, 538, 539, 542, 543, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 585, 586, 587, 588, 589, 592, 593, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 612, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 632, 635, 637, 642, 643, 644, 648, 650, 655, 656, 657, 659, 661, 666, 667, 668, 669, 682, 685, 686, 687, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711], "simpl": [0, 682], "just": [0, 682], "read": [0, 32, 47, 48, 50, 51, 52, 60, 61, 74, 75, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 166, 167, 169, 170, 171, 173, 174, 193, 194, 196, 197, 198, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 332, 333, 335, 336, 337, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 404, 406, 417, 418, 420, 421, 422, 426, 427, 436, 437, 445, 449, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 496, 497, 499, 500, 501, 503, 504, 519, 520, 522, 523, 524, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 634, 635, 637, 638, 639, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 672, 673, 676, 677, 678, 680, 681, 682, 685, 686, 687, 688, 689, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "write": [0, 50, 60, 61, 62, 63, 74, 75, 76, 77, 104, 112, 135, 144, 147, 148, 149, 153, 154, 155, 156, 169, 173, 174, 175, 176, 196, 199, 200, 202, 206, 207, 208, 209, 227, 228, 229, 230, 248, 249, 250, 251, 269, 270, 271, 272, 285, 286, 287, 288, 300, 309, 310, 311, 312, 324, 335, 352, 367, 420, 426, 427, 428, 429, 436, 437, 438, 439, 454, 458, 473, 478, 481, 482, 483, 487, 488, 489, 490, 499, 503, 504, 505, 506, 522, 525, 526, 528, 532, 533, 534, 535, 549, 550, 551, 552, 566, 567, 568, 569, 583, 584, 585, 586, 595, 596, 597, 598, 610, 615, 616, 617, 618, 630, 637, 650, 661, 670, 671, 672, 673, 678, 680, 681, 682, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "allow": [0, 682, 708], "access": [0, 682], "updat": [0, 48, 50, 142, 143, 144, 149, 167, 169, 194, 196, 333, 335, 350, 352, 365, 367, 418, 420, 476, 477, 478, 483, 497, 499, 520, 522, 635, 637, 648, 650, 659, 661, 669, 670, 671, 672, 673, 675, 676, 677, 678, 682, 707], "data": [0, 14, 15, 16, 44, 45, 46, 47, 48, 50, 51, 52, 57, 58, 59, 71, 72, 73, 84, 85, 86, 87, 92, 93, 94, 95, 100, 101, 102, 109, 110, 111, 119, 120, 121, 128, 129, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 164, 165, 166, 167, 169, 170, 171, 179, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 212, 214, 219, 220, 221, 222, 223, 224, 225, 233, 235, 236, 237, 242, 243, 244, 245, 246, 254, 256, 257, 258, 263, 264, 265, 266, 267, 276, 281, 282, 283, 291, 293, 294, 295, 303, 304, 305, 306, 307, 315, 317, 318, 319, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 361, 362, 363, 364, 365, 367, 368, 369, 376, 377, 378, 417, 418, 420, 421, 422, 445, 449, 475, 476, 477, 478, 479, 480, 481, 482, 483, 496, 497, 499, 500, 501, 509, 511, 512, 513, 517, 518, 519, 520, 522, 523, 524, 525, 526, 538, 540, 544, 545, 546, 547, 555, 557, 558, 559, 563, 564, 572, 574, 575, 576, 580, 581, 590, 601, 603, 604, 605, 612, 613, 621, 623, 624, 625, 632, 633, 634, 635, 637, 638, 639, 645, 646, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 670, 672, 673, 676, 677, 678, 680, 681, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "eas": [0, 682], "ad": [0, 682, 683, 708, 709, 712], "your": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682, 690, 691], "toolkit": [0, 682], "onli": [0, 682, 687, 693, 696, 697, 698, 704, 705, 706], "simplifi": [0, 682], "task": [0, 682], "also": [0, 682], "practic": [0, 682], "experi": [0, 682], "bridg": [0, 682], "theori": [0, 682], "applic": [0, 682], "last": [0, 10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 134, 135, 136, 159, 179, 181, 182, 183, 184, 191, 192, 212, 214, 215, 222, 223, 224, 225, 233, 235, 236, 237, 238, 245, 246, 254, 256, 257, 258, 259, 266, 267, 276, 277, 291, 293, 294, 295, 296, 299, 300, 301, 306, 307, 315, 317, 318, 319, 320, 323, 324, 325, 330, 331, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 472, 473, 474, 493, 509, 511, 512, 513, 514, 517, 518, 538, 540, 541, 544, 545, 546, 547, 555, 557, 558, 559, 560, 563, 564, 572, 574, 575, 576, 577, 580, 581, 590, 591, 601, 603, 604, 605, 606, 609, 610, 611, 612, 613, 621, 623, 624, 625, 626, 629, 630, 631, 632, 633, 641, 654, 665, 682], "least": [0, 134, 135, 299, 300, 323, 324, 472, 473, 609, 610, 629, 630, 682], "valuabl": [0, 682], "resourc": [0, 682], "both": [0, 682], "work": [0, 682], "effici": [0, 682], "support": [0, 49, 150, 168, 195, 201, 334, 351, 366, 419, 459, 484, 485, 498, 521, 527, 529, 636, 649, 660, 682, 702, 707, 710], "synchron": [0, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 465, 483, 682], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710], "comput": [0, 682], "process": [0, 47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 87, 95, 112, 113, 114, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 445, 449, 458, 459, 460, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 682, 685, 710], "thread": [0, 13, 15, 26, 29, 43, 45, 56, 58, 70, 72, 83, 85, 91, 93, 99, 101, 108, 110, 118, 120, 127, 129, 137, 139, 162, 164, 187, 189, 218, 220, 241, 243, 262, 264, 280, 282, 302, 304, 326, 328, 343, 345, 360, 362, 375, 377, 400, 403, 669, 680, 682], "mean": [0, 682, 687, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "two": [0, 13, 14, 16, 43, 44, 46, 56, 57, 59, 70, 71, 73, 83, 84, 86, 91, 92, 94, 99, 100, 102, 108, 109, 111, 118, 119, 121, 127, 128, 130, 137, 138, 140, 162, 163, 165, 179, 187, 188, 190, 212, 218, 219, 221, 233, 241, 242, 244, 254, 262, 263, 265, 280, 281, 283, 291, 299, 300, 301, 302, 303, 305, 315, 326, 327, 329, 343, 344, 346, 360, 361, 363, 375, 376, 378, 509, 538, 555, 572, 601, 609, 610, 611, 621, 676, 682, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 711], "more": [0, 682], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682, 693, 696, 698], "step": [0, 47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 112, 113, 114, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 458, 459, 460, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 682, 685, 686, 696, 707, 711], "manner": [0, 682], "one": [0, 680, 681, 682, 686, 687, 695, 696, 697, 698, 702, 703, 704, 705, 706], "after": [0, 134, 135, 323, 324, 472, 473, 629, 630, 682, 685, 686, 687, 696, 697, 698, 699, 704, 705, 706], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "In": [0, 113, 114, 147, 148, 149, 151, 152, 199, 200, 203, 204, 459, 460, 481, 482, 483, 485, 486, 525, 526, 529, 530, 682, 697, 698, 699, 700, 702, 703, 710, 712], "execut": [0, 13, 14, 15, 16, 43, 44, 45, 46, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 162, 163, 164, 165, 187, 188, 189, 190, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 343, 344, 345, 346, 360, 361, 362, 363, 375, 376, 377, 378, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "block": [0, 682], "until": [0, 682], "previou": [0, 682], "complet": [0, 24, 25, 26, 28, 29, 398, 399, 400, 401, 402, 403, 682, 686, 696], "independ": [0, 682], "each": [0, 62, 63, 76, 77, 104, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 454, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 682, 684, 687, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "don": [0, 682], "t": [0, 15, 45, 58, 72, 85, 93, 101, 110, 120, 129, 134, 135, 139, 164, 189, 220, 243, 264, 282, 304, 323, 324, 328, 345, 362, 377, 472, 473, 629, 630, 682, 683, 703, 707, 711, 712], "wait": [0, 4, 8, 26, 29, 37, 48, 50, 62, 63, 64, 65, 76, 77, 78, 79, 104, 112, 134, 135, 142, 143, 144, 155, 156, 167, 169, 175, 176, 177, 178, 191, 194, 196, 202, 208, 209, 210, 211, 222, 224, 225, 229, 230, 231, 232, 245, 250, 251, 252, 253, 266, 271, 272, 273, 274, 287, 288, 289, 290, 299, 300, 306, 311, 312, 313, 314, 323, 324, 330, 333, 335, 350, 352, 365, 367, 382, 386, 400, 403, 411, 412, 413, 418, 420, 428, 429, 430, 431, 438, 439, 440, 441, 454, 458, 472, 473, 476, 478, 489, 490, 497, 499, 505, 506, 507, 508, 517, 520, 522, 528, 534, 535, 536, 537, 544, 546, 547, 551, 552, 553, 554, 563, 568, 569, 570, 571, 580, 585, 586, 587, 588, 597, 598, 599, 600, 609, 610, 612, 617, 618, 619, 620, 629, 630, 632, 635, 637, 648, 650, 659, 661, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "instead": [0, 682, 710], "its": [0, 147, 148, 199, 200, 481, 482, 525, 526, 682, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "own": [0, 682], "without": [0, 682, 707], "gener": [0, 179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 680, 681, 682, 688, 689, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 710], "easier": [0, 682], "understand": [0, 682], "debug": [0, 682], "while": [0, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 48, 50, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 169, 187, 188, 189, 190, 194, 196, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 333, 335, 343, 344, 345, 346, 347, 348, 350, 352, 360, 361, 362, 363, 365, 367, 375, 376, 377, 378, 380, 381, 382, 383, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 418, 420, 476, 477, 478, 487, 488, 489, 490, 491, 492, 497, 499, 520, 522, 635, 637, 645, 646, 648, 650, 659, 661, 669, 680, 681, 682, 708, 712], "scalabl": [0, 682], "greater": [0, 682], "concurr": [0, 682], "sure": [0, 179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 682], "latest": [0, 682], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668, 675, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "up": [0, 153, 154, 155, 156, 157, 158, 487, 488, 489, 490, 491, 492, 682], "date": [0, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pip": [0, 682], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682], "fast": [0, 682, 697, 698, 699, 700, 702, 703, 711], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pkg_name": [0, 682], "handle_list": [0, 682], "devicefind": [0, 1, 379, 674, 682, 683, 684], "wifidaqe3a": [0, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 669, 675, 682, 683, 704, 707], "wifidaqe3ah": [0, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 682, 683, 705, 707], "wifidaqf4a": [0, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 682, 683, 706, 707], "stem": [0, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 459, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 529, 669, 682, 683, 687, 697, 698, 704, 705, 706, 707, 708, 710, 712], "emot": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 682, 683, 707, 712], "edrivest": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 682, 683, 685], "ethana": [0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 417, 418, 419, 420, 421, 422, 423, 424, 425, 669, 675, 682, 683, 687, 707], "ethand": [0, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 671, 675, 682, 683, 688, 707], "ethanexd": [0, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 436, 437, 438, 439, 440, 441, 442, 443, 444, 682, 683, 689], "ethani": [0, 87, 88, 89, 90, 91, 92, 93, 94, 445, 446, 447, 448, 682, 683, 690, 691, 707], "ethania": [0, 95, 96, 97, 98, 99, 100, 101, 102, 449, 450, 451, 452, 682, 683, 690, 691, 707], "ethanl": [0, 103, 104, 105, 106, 107, 108, 109, 110, 111, 453, 454, 455, 456, 457, 682, 683, 692, 707], "ethano": [0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 458, 459, 460, 461, 462, 463, 682, 683, 693, 707], "ethanp": [0, 122, 123, 124, 125, 126, 127, 128, 129, 130, 464, 465, 466, 467, 468, 682, 683, 694, 707], "ethant": [0, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 469, 470, 471, 472, 473, 474, 682, 683, 695, 707], "usbdaqf1d": [0, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 671, 672, 673, 678, 682, 683, 700, 707], "usbdaqf1dsnk": [0, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 671, 682, 683, 701, 707], "usbdaqf1ad": [0, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 669, 671, 672, 673, 678, 682, 683, 687, 696, 697, 698, 704, 705, 706, 707], "usbdaqf1aod": [0, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 669, 670, 671, 672, 673, 678, 682, 683, 687, 696, 697, 698, 704, 705, 706, 707], "usbdaqf1td": [0, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 671, 672, 673, 677, 678, 682, 683, 703, 707], "usbdaqf1rd": [0, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 671, 672, 673, 676, 678, 682, 683, 702, 707], "usbdaqf1cd": [0, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 671, 672, 673, 678, 682, 683, 699, 707], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682], "conda": [0, 682], "command": [0, 682, 704, 705, 706, 707], "consol": [0, 682], "how": [0, 1, 10, 12, 13, 14, 15, 16, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 66, 67, 69, 70, 71, 72, 73, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 202, 203, 204, 205, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 275, 276, 277, 279, 280, 281, 282, 283, 284, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 388, 390, 414, 416, 417, 418, 420, 421, 422, 423, 425, 432, 433, 435, 442, 444, 446, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 485, 486, 493, 495, 496, 497, 499, 500, 501, 502, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 589, 590, 591, 593, 594, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "build": [0, 682], "ex": [0, 682, 683], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 680, 681, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "miniconda": [0, 682], "virtual": [0, 682], "environ": [0, 682], "labview": [0, 682, 707], "time": [0, 13, 14, 15, 16, 26, 29, 43, 44, 45, 46, 51, 56, 57, 58, 59, 62, 63, 66, 70, 71, 72, 73, 76, 77, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 104, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 145, 156, 162, 163, 164, 165, 170, 175, 176, 180, 183, 187, 188, 189, 190, 197, 208, 209, 213, 214, 218, 219, 220, 221, 224, 229, 230, 234, 237, 241, 242, 243, 244, 250, 251, 255, 258, 262, 263, 264, 265, 271, 272, 275, 276, 280, 281, 282, 283, 287, 288, 292, 295, 302, 303, 304, 305, 311, 312, 316, 319, 326, 327, 328, 329, 336, 343, 344, 345, 346, 353, 360, 361, 362, 363, 368, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 675, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710], "engin": [0, 682], "under": [0, 682, 708], "mit": [0, 682], "style": [0, 348, 646, 682], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "incorpor": [0, 682], "project": [0, 13, 14, 15, 16, 43, 44, 45, 46, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 162, 163, 164, 165, 187, 188, 189, 190, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 343, 344, 345, 346, 348, 360, 361, 362, 363, 375, 376, 377, 378, 646, 682], "mai": [0, 682], "differ": [0, 62, 63, 76, 77, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 684, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "non": [0, 682], "commerci": [0, 682], "find_devic": [1, 379], "find_all_devic": [1, 379], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "demonstr": [1, 10, 12, 13, 14, 15, 16, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 388, 390, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668], "avail": [1, 379, 674, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710, 712], "usb": [1, 379, 682, 707, 708, 709, 710, 712], "ethernet": [1, 379, 674, 682, 686, 707], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 675, 697, 699, 700, 702, 703, 710], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 704, 705, 706], "correct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 710], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 675, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 675, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706, 710], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 430, 432, 433, 434, 435, 436, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 589, 590, 591, 592, 593, 594, 595, 597, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 677, 678, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 685, 686, 696, 697, 698, 699, 700, 702, 703], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 687, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 675, 686, 696, 697, 699, 700, 702, 703, 710], "http": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "com": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "system": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 444, 445, 448, 449, 452, 453, 454, 457, 458, 459, 460, 463, 464, 465, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 643, 644, 645, 646, 647, 648, 650, 651, 652, 656, 657, 658, 659, 661, 662, 663, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681], "ltd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "wpc_python_driver_releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "tree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "readm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "md": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "detail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708], "2022": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669], "2024": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 697, 698, 699, 700, 702, 703], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "creat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 674], "handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "perform": [1, 14, 15, 16, 44, 45, 46, 57, 58, 59, 60, 61, 71, 72, 73, 74, 75, 84, 85, 86, 92, 93, 94, 100, 101, 102, 109, 110, 111, 119, 120, 121, 128, 129, 130, 138, 139, 140, 153, 154, 163, 164, 165, 173, 174, 188, 189, 190, 206, 207, 219, 220, 221, 227, 228, 242, 243, 244, 248, 249, 263, 264, 265, 269, 270, 281, 282, 283, 285, 286, 303, 304, 305, 309, 310, 327, 328, 329, 344, 345, 346, 361, 362, 363, 376, 377, 378, 379, 388, 414, 423, 426, 427, 433, 436, 437, 442, 446, 450, 455, 461, 466, 469, 487, 488, 493, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 674, 685, 686, 696], "inform": [1, 10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 153, 154, 155, 156, 157, 158, 159, 183, 214, 237, 258, 276, 295, 319, 338, 339, 355, 356, 370, 371, 379, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 487, 488, 489, 490, 491, 492, 493, 513, 540, 559, 576, 590, 605, 625, 640, 641, 653, 654, 664, 665, 669, 671, 674, 675, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678], "dev_list": [1, 379], "bcst_enumerateusbdevic": [1, 379, 683, 684], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678], "printgenericerror": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "network": [1, 11, 12, 41, 42, 54, 55, 68, 69, 81, 82, 89, 90, 97, 98, 106, 107, 116, 117, 125, 126, 132, 133, 160, 161, 183, 185, 186, 214, 216, 217, 237, 239, 240, 258, 260, 261, 276, 278, 279, 295, 297, 298, 319, 321, 322, 338, 340, 341, 342, 355, 357, 358, 359, 370, 372, 373, 374, 379, 389, 390, 415, 416, 424, 425, 434, 435, 443, 444, 447, 448, 451, 452, 456, 457, 462, 463, 467, 468, 470, 471, 494, 495, 513, 515, 516, 540, 542, 543, 559, 561, 562, 576, 578, 579, 590, 592, 593, 605, 607, 608, 625, 627, 628, 640, 642, 643, 644, 653, 655, 656, 657, 664, 666, 667, 668, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706, 710], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "bcst_enumeratenetworkdevices_async": [1, 683, 684], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 707], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 400, 403, 669], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 428, 429, 438, 439, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 697, 698, 699, 700, 701, 702, 703], "els": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 398, 399, 402, 417, 454, 475, 496, 519, 546, 634, 647, 658, 669, 671, 675], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "ipython": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "7": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 390, 416, 425, 426, 428, 435, 436, 438, 444, 448, 452, 457, 463, 465, 468, 471, 472, 473, 487, 488, 489, 490, 491, 492, 495, 503, 505, 516, 532, 534, 543, 549, 551, 562, 566, 568, 579, 583, 585, 593, 595, 597, 608, 615, 617, 628, 629, 630, 644, 646, 657, 668, 671, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 712], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712], "spyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "drive_find_hom": [2, 380], "devicdepend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 690, 691, 699, 708], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 87, 95, 103, 104, 112, 113, 114, 122, 123, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 341, 347, 348, 349, 350, 352, 353, 354, 358, 364, 365, 367, 368, 369, 373, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "set": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 87, 95, 103, 112, 113, 114, 122, 123, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 347, 348, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 658, 659, 661, 662, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709], "searching_spe": [2, 3, 380, 381, 685], "10000": [2, 3, 4, 5, 6, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 35, 36, 112, 202, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 409, 410, 458, 528, 670, 686, 696], "approaching_spe": [2, 3, 380, 381, 685], "acceler": [2, 3, 4, 5, 6, 9, 347, 348, 380, 381, 382, 383, 384, 387, 645, 646, 680, 681, 685, 686, 696, 704, 705, 706, 707, 710], "search_direct": [2, 380, 685], "point": [2, 8, 9, 47, 141, 166, 193, 332, 349, 364, 380, 386, 387, 417, 475, 496, 519, 634, 647, 658, 685, 686, 696, 707], "forward": [2, 3, 8, 9, 30, 32, 348, 380, 381, 386, 387, 404, 406, 646, 671, 685, 686, 696, 711], "revers": [2, 3, 8, 9, 30, 32, 380, 381, 386, 387, 404, 406, 685, 686, 696, 711], "approach_direct": [2, 380, 685], "offset": [2, 3, 112, 202, 380, 381, 458, 528, 685, 686, 693, 696, 698], "reset_posit": [2, 3, 380, 381, 685], "fals": [2, 3, 27, 47, 141, 166, 193, 225, 332, 348, 349, 364, 380, 381, 401, 417, 475, 496, 519, 547, 634, 646, 647, 658, 669, 671, 675, 685, 686, 696, 699, 711], "en_forward": [2, 3, 4, 5, 6, 8, 9, 380, 381, 382, 383, 384, 386, 387, 685, 686, 696], "en_revers": [2, 3, 4, 5, 6, 8, 9, 380, 381, 382, 383, 384, 386, 387, 685, 686, 696], "active_low": [2, 3, 4, 5, 6, 8, 9, 17, 18, 19, 20, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413], "active_high": [2, 3, 4, 5, 6, 8, 9, 17, 18, 19, 20, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413], "model": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668, 674, 675, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "driver_info": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668, 675, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_getdriverinfo_async": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "name": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 641, 643, 644, 645, 646, 647, 648, 650, 651, 652, 654, 656, 657, 658, 659, 661, 662, 663, 665, 667, 668, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "motion": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "motion_open_async": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 683, 685, 686, 696], "motion_open": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 683, 685, 686, 696], "config": [2, 3, 381, 680, 681], "motion_cfglimit_async": [2, 3, 4, 5, 6, 8, 9, 17, 18, 19, 23, 26, 29, 30, 31, 32, 35, 38, 39, 683, 685, 686, 696], "motion_cfglimit": [2, 3, 4, 5, 6, 8, 9, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 397, 400, 403, 404, 405, 406, 409, 412, 413, 683, 685, 686, 696], "reset": [2, 3, 4, 5, 8, 9, 341, 358, 373, 380, 381, 382, 383, 386, 387, 643, 656, 667, 685, 686, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706], "motion_rstencoderposi_async": [2, 3, 4, 5, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 35, 38, 39, 683, 685, 686, 696], "motion_resetencod": [2, 3, 4, 5], "servo": [2, 3, 4, 5, 6, 8, 9, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 35, 38, 39, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 396, 397, 404, 405, 406, 409, 412, 413, 680, 681, 685, 686, 696, 707], "motion_enableservoon_async": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 35, 37, 38, 39, 683, 685, 686, 696], "motion_enableservoon": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 409, 411, 412, 413, 683, 685, 686, 696], "refer": [2, 3, 30, 31, 32, 147, 148, 199, 200, 404, 405, 406, 481, 482, 525, 526, 685, 686, 696], "motion_startfindhome_async": [2, 683, 685], "motion_startfindhom": [2, 380, 683, 685], "statu": [2, 3, 4, 5, 12, 30, 32, 42, 55, 62, 63, 64, 65, 69, 76, 77, 78, 79, 82, 90, 98, 107, 117, 126, 133, 155, 156, 161, 175, 176, 177, 178, 186, 208, 209, 210, 211, 217, 229, 230, 231, 232, 240, 250, 251, 252, 253, 261, 271, 272, 273, 274, 279, 287, 288, 289, 290, 298, 311, 312, 313, 314, 322, 342, 359, 374, 380, 381, 382, 383, 390, 404, 406, 416, 425, 428, 429, 430, 431, 435, 438, 439, 440, 441, 444, 448, 452, 457, 463, 468, 471, 489, 490, 495, 505, 506, 507, 508, 516, 534, 535, 536, 537, 543, 551, 552, 553, 554, 562, 568, 569, 570, 571, 579, 585, 586, 587, 588, 593, 597, 598, 599, 600, 608, 617, 618, 619, 620, 628, 644, 657, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "motion_getprocessstate_async": [2, 3, 4, 5, 683, 685], "limit": [2, 30, 149, 380, 404, 483, 669, 680, 681, 685, 686, 696, 707, 711], "state_list": [2, 3, 60, 61, 74, 75, 153, 154, 173, 174, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 380, 381, 426, 427, 436, 437, 487, 488, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "motion_getlimitstatus_async": [2, 3, 30, 32, 683, 685, 686, 696], "2": [2, 3, 13, 26, 28, 29, 32, 38, 39, 43, 47, 48, 50, 56, 60, 64, 70, 74, 75, 78, 83, 91, 99, 104, 108, 112, 113, 114, 118, 123, 127, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 162, 166, 167, 169, 173, 177, 181, 182, 187, 191, 192, 193, 194, 196, 199, 200, 202, 203, 204, 206, 210, 218, 222, 223, 224, 225, 227, 231, 235, 236, 241, 245, 246, 248, 252, 256, 257, 262, 266, 267, 269, 270, 271, 272, 273, 274, 280, 285, 289, 293, 294, 302, 306, 307, 309, 313, 317, 318, 323, 324, 326, 330, 331, 332, 333, 335, 343, 347, 348, 349, 350, 352, 360, 364, 365, 367, 375, 380, 381, 400, 402, 403, 406, 412, 413, 417, 418, 420, 426, 430, 436, 437, 440, 454, 458, 459, 460, 465, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 503, 507, 511, 512, 517, 518, 519, 520, 522, 525, 526, 528, 529, 530, 532, 536, 544, 545, 546, 547, 549, 553, 557, 558, 563, 564, 566, 570, 574, 575, 580, 581, 583, 584, 585, 586, 587, 588, 595, 599, 603, 604, 612, 613, 615, 619, 623, 624, 629, 630, 632, 633, 634, 635, 637, 645, 646, 647, 648, 650, 658, 659, 661, 669, 671, 672, 673, 674, 675, 676, 677, 678, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712], "keyboardinterrupt": [2, 3, 4, 5, 6, 7, 8, 9, 143, 149, 347, 348, 380, 381, 382, 383, 384, 385, 386, 387, 477, 483, 645, 646], "press": [2, 3, 4, 5, 6, 7, 8, 9, 143, 149, 347, 348, 380, 381, 382, 383, 384, 385, 386, 387, 477, 483, 645, 646], "keyboard": [2, 3, 4, 5, 6, 7, 8, 9, 143, 149, 347, 348, 380, 381, 382, 383, 384, 385, 386, 387, 477, 483, 645, 646], "final": [2, 3, 4, 5, 6, 7, 8, 9, 47, 48, 50, 51, 52, 112, 113, 114, 141, 142, 143, 144, 145, 146, 149, 151, 152, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 202, 203, 204, 332, 333, 335, 336, 337, 347, 348, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 417, 418, 420, 421, 422, 458, 459, 460, 475, 476, 477, 478, 479, 480, 483, 485, 486, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 528, 529, 530, 634, 635, 637, 638, 639, 645, 646, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 686, 696], "stop": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 47, 48, 50, 66, 141, 142, 143, 144, 149, 166, 167, 169, 172, 180, 191, 192, 193, 194, 196, 205, 213, 222, 223, 224, 225, 226, 234, 245, 246, 247, 255, 266, 267, 268, 275, 284, 292, 306, 307, 308, 316, 330, 331, 332, 333, 335, 347, 348, 349, 350, 352, 364, 365, 367, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 412, 413, 417, 418, 420, 432, 475, 476, 477, 478, 483, 496, 497, 499, 502, 510, 517, 518, 519, 520, 522, 531, 539, 544, 545, 546, 547, 548, 556, 563, 564, 565, 573, 580, 581, 582, 589, 594, 602, 612, 613, 614, 622, 632, 633, 634, 635, 637, 645, 646, 647, 648, 650, 658, 659, 661, 669, 678, 685, 686, 687, 688, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "motion_stopprocess_async": [2, 3, 4, 5, 6, 7, 8, 9, 683, 685], "motion_stopprocess": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387, 683, 685], "off": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 35, 37, 38, 39, 348, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 404, 405, 406, 409, 411, 412, 413, 646, 685, 686, 696, 699], "motion_enableservooff_async": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 35, 37, 38, 39, 683, 685, 686, 696], "motion_enableservooff": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 409, 411, 412, 413, 683, 685, 686, 696], "motion_close_async": [2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 683, 685, 686, 696], "motion_clos": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 683, 685, 686, 696], "drive_find_limit": [3, 381], "motion_startfindlimit_async": [3, 683, 685], "motion_startfindlimit": [3, 381, 683, 685], "home": [3, 32, 381, 406, 680, 681, 685, 686, 696, 707, 711], "drive_position_blend": [4, 382], "position1": [4, 382], "30000": [4, 8, 382], "position2": [4, 382], "speed": [4, 5, 6, 8, 9, 24, 25, 27, 28, 224, 225, 382, 383, 384, 386, 387, 398, 399, 401, 402, 546, 547, 685, 686, 696, 697, 698, 699, 700, 702, 703, 707, 708, 710], "deceler": [4, 5, 8, 9, 382, 383, 386, 387, 685, 686, 696, 711], "absolut": [4, 5, 382, 383, 685, 686, 696, 711], "rel": [4, 5, 382, 383, 685, 686, 688, 696, 697, 698, 699, 700, 701, 702, 703, 711], "configur": [4, 5, 6, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 47, 48, 50, 51, 52, 112, 134, 135, 141, 142, 143, 144, 145, 146, 166, 167, 169, 170, 171, 179, 181, 182, 191, 192, 193, 194, 196, 197, 198, 202, 212, 222, 223, 224, 225, 233, 235, 236, 245, 246, 254, 256, 257, 266, 267, 291, 293, 294, 306, 307, 315, 317, 318, 323, 324, 330, 331, 332, 333, 335, 336, 337, 347, 348, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 380, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 417, 418, 420, 421, 422, 458, 472, 473, 475, 476, 477, 478, 479, 480, 496, 497, 499, 500, 501, 509, 511, 512, 517, 518, 519, 520, 522, 523, 524, 528, 538, 544, 545, 546, 547, 555, 557, 558, 563, 564, 572, 574, 575, 580, 581, 601, 603, 604, 612, 613, 621, 623, 624, 629, 630, 632, 633, 634, 635, 637, 638, 639, 645, 646, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 685, 686, 687, 693, 696, 697, 698, 704, 705, 706, 707], "start": [4, 5, 6, 8, 9, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 38, 39, 44, 46, 47, 48, 50, 57, 59, 66, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 112, 119, 121, 128, 130, 138, 140, 141, 142, 143, 144, 149, 153, 154, 155, 156, 157, 158, 163, 165, 166, 167, 169, 172, 180, 188, 190, 193, 194, 196, 202, 205, 213, 219, 221, 224, 225, 226, 234, 242, 244, 247, 255, 263, 265, 268, 275, 281, 283, 284, 292, 303, 305, 308, 316, 327, 329, 332, 333, 335, 344, 346, 347, 348, 349, 350, 352, 361, 363, 364, 365, 367, 376, 378, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409, 412, 413, 417, 418, 420, 432, 458, 475, 476, 477, 478, 483, 487, 488, 489, 490, 491, 492, 496, 497, 499, 502, 510, 519, 520, 522, 528, 531, 539, 546, 547, 548, 556, 565, 573, 582, 589, 594, 602, 614, 622, 634, 635, 637, 645, 646, 647, 648, 650, 658, 659, 661, 669, 685, 686, 687, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "motion_startpositionmove_async": [4, 5, 683, 685], "motion_startpositionmov": [4, 5, 382, 383, 683, 685], "second": [4, 8, 11, 13, 26, 29, 41, 43, 47, 48, 50, 54, 56, 62, 63, 64, 65, 66, 68, 70, 76, 77, 78, 79, 81, 83, 89, 91, 97, 99, 104, 106, 108, 116, 118, 125, 127, 132, 134, 135, 136, 137, 141, 142, 143, 144, 149, 155, 156, 160, 162, 166, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 191, 192, 193, 194, 196, 208, 209, 210, 211, 212, 213, 215, 216, 218, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 266, 267, 271, 272, 273, 274, 275, 277, 278, 280, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 330, 331, 332, 333, 335, 340, 343, 347, 349, 350, 352, 357, 360, 364, 365, 367, 372, 375, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "move": [4, 8, 24, 25, 28, 382, 386, 398, 399, 401, 402, 412, 413, 680, 681, 685, 686, 696, 707], "sleep": [4, 8, 11, 12, 13, 14, 15, 16, 26, 29, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 155, 156, 160, 161, 162, 163, 164, 165, 167, 169, 175, 176, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 194, 196, 202, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 231, 232, 234, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 255, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 292, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 335, 340, 341, 342, 343, 344, 345, 346, 350, 352, 357, 358, 359, 360, 361, 362, 363, 365, 367, 372, 373, 374, 375, 376, 377, 378, 382, 386, 389, 390, 400, 403, 411, 412, 413, 415, 416, 418, 420, 424, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 441, 443, 444, 447, 448, 451, 452, 454, 456, 457, 458, 462, 463, 467, 468, 470, 471, 472, 473, 476, 478, 489, 490, 494, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 520, 522, 528, 534, 535, 536, 537, 538, 539, 542, 543, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 585, 586, 587, 588, 589, 592, 593, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 612, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 632, 635, 637, 642, 643, 644, 648, 650, 655, 656, 657, 659, 661, 666, 667, 668, 669], "delai": [4, 8, 11, 12, 13, 14, 15, 16, 26, 29, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 155, 156, 160, 161, 162, 163, 164, 165, 167, 169, 175, 176, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 194, 196, 202, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 231, 232, 234, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 255, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 292, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 335, 340, 341, 342, 343, 344, 345, 346, 350, 352, 357, 358, 359, 360, 361, 362, 363, 365, 367, 372, 373, 374, 375, 376, 377, 378, 382, 386, 389, 390, 400, 403, 411, 412, 413, 415, 416, 418, 420, 424, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 441, 443, 444, 447, 448, 451, 452, 454, 456, 457, 458, 462, 463, 467, 468, 470, 471, 472, 473, 476, 478, 489, 490, 494, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 520, 522, 528, 534, 535, 536, 537, 538, 539, 542, 543, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 585, 586, 587, 588, 589, 592, 593, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 612, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 632, 635, 637, 642, 643, 644, 648, 650, 655, 656, 657, 659, 661, 666, 667, 668, 687, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706], "drive_position_mov": [5, 383], "drive_scan_mov": [6, 384], "position_0": [6, 384, 685], "position_1": [6, 384, 685], "20000": [6, 8, 384], "motion_startscanmove_async": [6, 683, 685], "motion_startscanmov": [6, 384, 683, 685], "drive_servo_on": [7, 385], "drive_velocity_blending_acceler": [8, 386], "direct": [8, 9, 153, 154, 155, 156, 157, 158, 386, 387, 487, 488, 489, 490, 491, 492, 685, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 707, 710], "motion_resetencoderposi": [8, 9, 380, 381, 382, 383, 386, 387], "motion_startvelocticymove_async": [8, 9, 683, 685], "motion_startvelocticymov": [8, 9, 386, 387, 683, 685], "new_spe": [8, 386], "2000": [8, 24, 25, 28, 386, 398, 399, 402, 670, 676, 677, 678], "new_acceler": [8, 386], "1000": [8, 24, 26, 27, 29, 38, 47, 141, 166, 193, 224, 332, 349, 364, 386, 398, 400, 401, 403, 412, 417, 475, 496, 519, 546, 634, 647, 658, 702, 707], "new_deceler": [8, 386], "drive_velocity_mov": [9, 387], "system_eth": [10, 11, 12, 40, 41, 42, 53, 54, 55, 67, 68, 69, 80, 81, 82, 88, 89, 90, 96, 97, 98, 105, 106, 107, 115, 116, 117, 124, 125, 126, 131, 132, 133, 159, 160, 161, 388, 389, 390, 414, 415, 416, 423, 424, 425, 433, 434, 435, 442, 443, 444, 446, 447, 448, 450, 451, 452, 455, 456, 457, 461, 462, 463, 466, 467, 468, 469, 470, 471, 493, 494, 495], "get_network_info": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665], "hardwar": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 183, 214, 237, 258, 276, 295, 319, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 513, 540, 559, 576, 590, 605, 625, 641, 654, 665, 685, 686, 696], "first": [10, 40, 53, 66, 67, 80, 88, 96, 105, 115, 124, 131, 134, 135, 136, 159, 179, 180, 181, 182, 183, 184, 191, 192, 212, 213, 214, 215, 222, 223, 224, 225, 233, 234, 235, 236, 237, 238, 245, 246, 254, 255, 256, 257, 258, 259, 266, 267, 275, 276, 277, 291, 292, 293, 294, 295, 296, 299, 300, 301, 306, 307, 315, 316, 317, 318, 319, 320, 323, 324, 325, 330, 331, 339, 356, 371, 388, 414, 423, 432, 433, 442, 446, 450, 455, 461, 466, 469, 472, 473, 474, 493, 509, 510, 511, 512, 513, 514, 517, 518, 538, 539, 540, 541, 544, 545, 546, 547, 555, 556, 557, 558, 559, 560, 563, 564, 572, 573, 574, 575, 576, 577, 580, 581, 589, 590, 591, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 621, 622, 623, 624, 625, 626, 629, 630, 631, 632, 633, 641, 654, 665, 669, 671, 675, 697, 699, 700, 702, 703, 710, 711], "submask": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665, 674, 675], "mac": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665, 674, 675, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "ip_addr": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "net_getipaddrandsubmask_async": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "net_getmacaddr_async": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "hello_world": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "public": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "domain": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "rang": [11, 12, 24, 33, 41, 42, 51, 54, 55, 62, 63, 68, 69, 76, 77, 81, 82, 89, 90, 97, 98, 104, 106, 107, 116, 117, 122, 125, 126, 132, 133, 145, 155, 156, 160, 161, 170, 172, 175, 176, 184, 185, 186, 197, 205, 208, 209, 215, 216, 217, 224, 226, 229, 230, 238, 239, 240, 247, 250, 251, 259, 260, 261, 268, 271, 272, 277, 278, 279, 284, 287, 288, 296, 297, 298, 308, 311, 312, 320, 321, 322, 336, 340, 341, 342, 353, 357, 358, 359, 368, 372, 373, 374, 389, 390, 398, 407, 415, 416, 421, 424, 425, 428, 429, 434, 435, 438, 439, 443, 444, 447, 448, 451, 452, 454, 456, 457, 462, 463, 464, 467, 468, 470, 471, 479, 489, 490, 494, 495, 500, 502, 505, 506, 514, 515, 516, 523, 531, 534, 535, 541, 542, 543, 546, 548, 551, 552, 560, 561, 562, 565, 568, 569, 577, 578, 579, 582, 585, 586, 591, 592, 593, 594, 597, 598, 606, 607, 608, 614, 617, 618, 626, 627, 628, 638, 642, 643, 644, 651, 655, 656, 657, 662, 666, 667, 668, 669, 670, 671, 674, 676, 677, 707, 710], "10": [11, 12, 41, 42, 54, 55, 62, 63, 68, 69, 76, 77, 81, 82, 89, 90, 97, 98, 104, 106, 107, 112, 116, 117, 125, 126, 132, 133, 149, 155, 156, 160, 161, 172, 175, 176, 185, 186, 191, 202, 205, 208, 209, 216, 217, 222, 225, 226, 229, 230, 239, 240, 245, 247, 250, 251, 260, 261, 266, 268, 271, 272, 278, 279, 284, 287, 288, 297, 298, 306, 308, 311, 312, 321, 322, 330, 340, 342, 348, 357, 359, 372, 374, 389, 390, 415, 416, 424, 425, 428, 429, 434, 435, 438, 439, 443, 444, 447, 448, 451, 452, 454, 456, 457, 458, 462, 463, 467, 468, 470, 471, 483, 489, 490, 494, 495, 502, 505, 506, 515, 516, 517, 528, 531, 534, 535, 542, 543, 544, 547, 548, 551, 552, 561, 562, 563, 565, 568, 569, 578, 579, 580, 582, 585, 586, 592, 593, 594, 597, 598, 607, 608, 612, 614, 617, 618, 627, 628, 632, 642, 644, 646, 655, 657, 666, 668, 669, 694, 697, 698, 699, 700, 702, 703, 707, 711], "restart": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "now": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "sys_reboot_async": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "set_and_get_rtc": [12, 42, 55, 69, 82, 90, 98, 107, 117, 126, 133, 161, 186, 217, 240, 261, 279, 298, 322, 342, 359, 374, 390, 416, 425, 435, 444, 448, 452, 457, 463, 468, 471, 495, 516, 543, 562, 579, 593, 608, 628, 644, 657, 668], "sys_setrtc_async": [12, 42, 55, 69, 82, 90, 98, 107, 117, 126, 133, 161, 186, 217, 240, 261, 279, 298, 322, 342, 359, 374, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "2023": [12, 42, 55, 69, 82, 90, 98, 107, 117, 126, 133, 161, 186, 217, 240, 261, 279, 298, 322, 342, 359, 374, 390, 416, 425, 435, 444, 448, 452, 457, 463, 468, 471, 495, 516, 543, 562, 579, 593, 608, 628, 644, 657, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678], "5": [12, 37, 39, 42, 47, 51, 55, 60, 62, 63, 66, 69, 74, 76, 77, 82, 90, 98, 104, 107, 113, 114, 117, 123, 126, 133, 134, 135, 141, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 166, 170, 173, 175, 176, 180, 186, 191, 192, 193, 197, 199, 200, 203, 204, 206, 208, 209, 213, 217, 222, 223, 224, 227, 229, 230, 234, 240, 245, 246, 248, 250, 251, 255, 261, 266, 267, 269, 271, 272, 275, 279, 285, 287, 288, 292, 298, 306, 307, 309, 311, 312, 316, 322, 323, 324, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 390, 411, 413, 416, 417, 421, 425, 426, 428, 429, 432, 435, 436, 438, 439, 444, 448, 452, 454, 457, 459, 460, 463, 465, 468, 471, 472, 473, 475, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 500, 503, 505, 506, 510, 516, 517, 518, 519, 523, 525, 526, 529, 530, 532, 534, 535, 539, 543, 544, 545, 546, 549, 551, 552, 556, 562, 563, 564, 566, 568, 569, 573, 579, 580, 581, 583, 585, 586, 589, 593, 595, 597, 598, 602, 608, 612, 613, 615, 617, 618, 622, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 678, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711], "8": [12, 42, 47, 48, 50, 51, 52, 55, 69, 82, 90, 98, 107, 117, 123, 126, 133, 134, 135, 141, 142, 144, 149, 161, 166, 167, 169, 170, 171, 179, 181, 182, 186, 191, 192, 193, 194, 196, 197, 198, 199, 200, 212, 217, 222, 223, 225, 233, 235, 236, 240, 245, 246, 254, 256, 257, 261, 266, 267, 279, 291, 293, 294, 298, 306, 307, 315, 317, 318, 322, 323, 324, 330, 331, 332, 333, 335, 336, 337, 342, 348, 349, 350, 352, 353, 354, 359, 364, 365, 367, 368, 369, 374, 390, 416, 417, 418, 420, 421, 422, 425, 435, 444, 448, 452, 457, 463, 465, 468, 471, 472, 473, 475, 476, 478, 483, 495, 496, 497, 499, 500, 501, 509, 511, 512, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 538, 543, 544, 545, 547, 555, 557, 558, 562, 563, 564, 572, 574, 575, 579, 580, 581, 593, 601, 603, 604, 608, 612, 613, 621, 623, 624, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 644, 646, 647, 648, 650, 651, 652, 657, 658, 659, 661, 662, 663, 668, 669, 670, 671, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711], "15": [12, 42, 55, 69, 82, 90, 98, 107, 117, 126, 133, 161, 186, 217, 240, 261, 279, 298, 322, 342, 348, 359, 374, 390, 416, 425, 435, 444, 448, 452, 457, 463, 468, 471, 495, 516, 543, 562, 579, 593, 608, 628, 644, 646, 657, 668], "sys_getrtc_async": [12, 13, 14, 15, 16, 42, 43, 44, 45, 46, 55, 56, 57, 58, 59, 69, 70, 71, 72, 73, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 133, 137, 138, 139, 140, 161, 162, 163, 164, 165, 183, 186, 187, 188, 189, 190, 214, 217, 218, 219, 220, 221, 237, 240, 241, 242, 243, 244, 258, 261, 262, 263, 264, 265, 276, 279, 280, 281, 282, 283, 295, 298, 302, 303, 304, 305, 319, 322, 326, 327, 328, 329, 342, 343, 344, 345, 346, 359, 360, 361, 362, 363, 374, 375, 376, 377, 378, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "multiple_loops_async": [13, 43, 56, 70, 83, 91, 99, 108, 118, 127, 137, 162, 187, 218, 241, 262, 280, 302, 326, 343, 360, 375], "rtc": [13, 14, 15, 16, 43, 44, 45, 46, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 162, 163, 164, 165, 183, 187, 188, 189, 190, 214, 218, 219, 220, 221, 237, 241, 242, 243, 244, 258, 262, 263, 264, 265, 276, 280, 281, 282, 283, 295, 302, 303, 304, 305, 319, 326, 327, 328, 329, 343, 344, 345, 346, 360, 361, 362, 363, 375, 376, 377, 378, 513, 540, 559, 576, 590, 605, 625, 675, 680, 681, 710], "string": [13, 14, 43, 44, 56, 57, 70, 71, 83, 84, 91, 92, 99, 100, 108, 109, 118, 119, 127, 128, 137, 138, 162, 163, 187, 188, 192, 218, 219, 223, 241, 242, 246, 262, 263, 267, 280, 281, 302, 303, 307, 326, 327, 331, 343, 344, 360, 361, 375, 376, 518, 545, 564, 581, 613, 633, 672, 673, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "readrtc_loop": [13, 43, 56, 70, 83, 91, 99, 108, 118, 127, 137, 162, 187, 218, 241, 262, 280, 302, 326, 343, 360, 375], "true": [13, 14, 16, 20, 21, 43, 44, 46, 47, 56, 57, 59, 70, 71, 73, 83, 84, 86, 91, 92, 94, 99, 100, 102, 108, 109, 111, 118, 119, 121, 127, 128, 130, 137, 138, 140, 141, 162, 163, 165, 166, 187, 188, 190, 193, 218, 219, 221, 225, 241, 242, 244, 262, 263, 265, 280, 281, 283, 302, 303, 305, 326, 327, 329, 332, 343, 344, 346, 347, 348, 349, 360, 361, 363, 364, 375, 376, 378, 394, 395, 417, 475, 496, 519, 547, 634, 645, 646, 647, 658, 669, 671, 675, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 711], "printstring_loop": [13, 43, 56, 70, 83, 91, 99, 108, 118, 127, 137, 162, 187, 218, 241, 262, 280, 302, 326, 343, 360, 375], "gather": [13, 43, 56, 70, 83, 91, 99, 108, 118, 127, 137, 162, 187, 218, 241, 262, 280, 302, 326, 343, 360, 375], "part": [13, 14, 15, 16, 43, 44, 45, 46, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 162, 163, 164, 165, 187, 188, 189, 190, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 343, 344, 345, 346, 360, 361, 362, 363, 375, 376, 377, 378], "never": [13, 15, 43, 45, 56, 58, 70, 72, 83, 85, 91, 93, 99, 101, 108, 110, 118, 120, 127, 129, 137, 139, 162, 164, 187, 189, 218, 220, 241, 243, 262, 264, 280, 282, 302, 304, 326, 328, 343, 345, 360, 362, 375, 377], "multiple_loops_thread": [14, 44, 57, 71, 84, 92, 100, 109, 119, 128, 138, 163, 188, 219, 242, 263, 281, 303, 327, 344, 361, 376], "getrtc": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378], "str": [14, 15, 16, 44, 45, 46, 57, 58, 59, 71, 72, 73, 84, 85, 86, 92, 93, 94, 100, 101, 102, 109, 110, 111, 119, 120, 121, 128, 129, 130, 138, 139, 140, 163, 164, 165, 188, 189, 190, 219, 220, 221, 242, 243, 244, 263, 264, 265, 281, 282, 283, 303, 304, 305, 327, 328, 329, 344, 345, 346, 361, 362, 363, 376, 377, 378, 669, 670, 671, 672, 673, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "printstr": [14, 44, 57, 71, 84, 92, 100, 109, 119, 128, 138, 163, 188, 219, 242, 263, 281, 303, 327, 344, 361, 376], "rtc_thread": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378], "print_thread": [14, 44, 57, 71, 84, 92, 100, 109, 119, 128, 138, 163, 188, 219, 242, 263, 281, 303, 327, 344, 361, 376], "sync": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378, 680, 707], "queri": [14, 15, 16, 44, 45, 46, 57, 58, 59, 71, 72, 73, 84, 85, 86, 92, 93, 94, 100, 101, 102, 109, 110, 111, 119, 120, 121, 128, 129, 130, 138, 139, 140, 163, 164, 165, 188, 189, 190, 219, 220, 221, 242, 243, 244, 263, 264, 265, 281, 282, 283, 303, 304, 305, 327, 328, 329, 344, 345, 346, 361, 362, 363, 376, 377, 378], "_threadprint": [14, 44, 57, 71, 84, 92, 100, 109, 119, 128, 138, 163, 188, 219, 242, 263, 281, 303, 327, 344, 361, 376], "target": [14, 16, 26, 29, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378, 400, 403, 669, 685, 686, 696], "_threadrtc": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378], "immedi": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378], "parallel": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378], "single_loop_async": [15, 45, 58, 72, 85, 93, 101, 110, 120, 129, 139, 164, 189, 220, 243, 264, 282, 304, 328, 345, 362, 377], "loop_func": [15, 45, 58, 72, 85, 93, 101, 110, 120, 129, 139, 164, 189, 220, 243, 264, 282, 304, 328, 345, 362, 377], "timeout": [15, 45, 58, 72, 85, 93, 101, 110, 120, 129, 139, 164, 189, 220, 243, 264, 282, 304, 328, 345, 362, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "3": [15, 38, 45, 58, 60, 62, 64, 65, 72, 74, 76, 78, 79, 85, 93, 101, 110, 112, 113, 114, 120, 129, 134, 135, 139, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 164, 173, 175, 177, 178, 181, 182, 184, 189, 191, 192, 199, 200, 202, 203, 204, 206, 208, 210, 211, 215, 220, 222, 223, 224, 225, 227, 229, 231, 232, 235, 236, 238, 243, 245, 246, 248, 250, 252, 253, 256, 257, 259, 264, 266, 267, 269, 271, 273, 274, 277, 282, 285, 287, 289, 290, 293, 294, 296, 304, 306, 307, 309, 311, 313, 314, 317, 318, 320, 323, 324, 328, 330, 331, 341, 345, 348, 358, 362, 373, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 678, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712], "single_loop_thread": [16, 46, 59, 73, 86, 94, 102, 111, 121, 130, 140, 165, 190, 221, 244, 265, 283, 305, 329, 346, 363, 378], "motion_1axis_mov": [17, 391], "axi": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 347, 348, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 645, 646, 669, 685, 686, 696, 704, 705, 706, 710], "two_pulse_mod": [17, 19, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 391, 393, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413], "rel_posi_mod": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 35, 36, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 409, 410], "stop_decel": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 412, 413], "encod": [17, 19, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 391, 393, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413, 685, 686, 696, 707, 710, 711], "axis_dir_cw": [17, 19, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 391, 393, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413], "encoder_dir_cw": [17, 19, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 391, 393, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413], "polar": [17, 18, 19, 20, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 391, 392, 393, 394, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413, 685, 686, 696, 697, 699, 700, 702, 703, 710], "enabl": [17, 18, 19, 20, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 112, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 202, 391, 392, 393, 394, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413, 458, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 528, 685, 686, 687, 688, 689, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710], "forward_enable_tru": [17, 18, 19, 23, 30, 31, 32, 35, 38, 39, 391, 392, 393, 397, 404, 405, 406, 409, 412, 413], "reverse_enable_tru": [17, 18, 19, 23, 30, 31, 32, 35, 38, 39, 391, 392, 393, 397, 404, 405, 406, 409, 412, 413], "home_enable_fals": [17, 30, 32, 35, 391, 404, 406, 409], "open_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "motion_opencfgfile_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 683, 685, 686, 696], "user": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 687, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706], "desktop": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413], "3axisstage_2p": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413], "ini": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 685, 686, 696, 710], "opencfgfile_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39], "load": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 348, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 412, 413, 646, 680, 681, 685, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "motion_loadcfgfile_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 683, 685, 686, 696], "loadcfgfile_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39], "motion_cfgaxis_async": [17, 19, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 683, 686, 696], "cfgaxis_async": [17, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39], "cfglimit_async": [17, 18, 19, 23, 26, 29, 30, 31, 32, 35, 38, 39], "motion_cfghome_async": [17, 30, 32, 35, 683, 686, 696], "cfghome_async": [17, 30, 32, 35], "motion_cfgaxismove_async": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 35, 36, 38, 39, 683, 686, 696], "target_posi": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 409, 410, 412, 413, 686, 696], "5000": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 409, 410, 412, 413], "velo": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 409, 410, 412, 413, 686, 696], "accel": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 409, 410, 412, 413, 686, 696], "100000": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 409, 410, 412, 413, 686, 696, 697, 698, 699, 700, 702, 703, 711], "decel": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 35, 36, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 409, 410, 412, 413, 686, 696], "cfgaxismove_async": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 35, 36, 38, 39], "encoder_posi": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 35, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 409, 412, 413, 685, 686, 696], "rstencoderposi_async": [17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 35, 38, 39], "enableservoon_async": [17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 35, 37, 38, 39], "motion_startsingleaxismove_async": [17, 18, 19, 20, 21, 22, 23, 24, 26, 35, 38, 39, 683, 686, 696], "startsingleaxismove_async": [17, 18, 19, 20, 21, 22, 23, 24, 26, 35, 38, 39], "move_statu": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409], "motion_getmovestatus_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 683, 686, 696], "logical_posi": [17, 35, 391, 409], "motion_getlogicalposi_async": [17, 33, 35, 683, 686, 696], "motion_getencoderposi_async": [17, 35, 683, 686, 696], "motion_stop_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 683, 686, 696], "stop_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39], "enableservooff_async": [17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 35, 37, 38, 39], "close_async": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "motion_1axis_move_with_s_curve_acceler": [18, 392], "jerk": [18, 24, 392, 398, 686, 696], "accelet": [18, 24, 392, 398], "motion_cfgjerkandaccelmode_async": [18, 24, 683, 686, 696], "cfgjerkandaccelmode_async": [18, 24], "getmovestatus_async": [18, 21, 22, 23, 27], "motion_1axis_move_with_alarm_in": [19, 393], "alarm_enable_fals": [19, 393], "cfgaxisparam_async": 19, "motion_cfgalarm_async": [19, 683, 686, 696], "cfgalarm_async": 19, "getmovestatu": [19, 20], "motion_1axis_move_with_breakpoint": [20, 394], "start_posit": [20, 394], "100": [20, 27, 33, 39, 66, 180, 213, 234, 255, 275, 292, 299, 300, 316, 394, 401, 407, 413, 432, 510, 539, 556, 573, 589, 602, 609, 610, 622, 669, 702, 707], "pulse_width": [20, 394, 686, 696], "pulse_period": [20, 394, 686, 696], "pulse_numb": [20, 394, 686, 696], "motion_cfgbreakpoint_async": [20, 683, 686, 696], "cfgbreakpoint_async": 20, "motion_enablebreakpoint_async": [20, 683, 686, 696], "int": [20, 21, 27, 348, 394, 395, 401, 646, 669, 670, 671, 672, 673, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "enablebreakpoint_async": 20, "motion_1axis_move_with_captur": [21, 395], "rising_edg": [21, 395], "capture_logical_posit": [21, 395], "motion_cfgcapture_async": [21, 683, 686, 696], "cfgcapture_async": 21, "motion_enablecapture_async": [21, 683, 686, 696], "enablecapture_async": 21, "capture_point": [21, 395], "motion_readcapturepoint_async": [21, 683, 686, 696], "readcapturepoint_async": 21, "motion_1axis_move_with_configuration_fil": [22, 396], "motion_1axis_move_with_inposit": [23, 397], "inposi_enable_fals": [23, 397], "motion_cfginposi_async": [23, 683, 686, 696], "cfginposi_async": 23, "motion_2axis_circular_interpol": [24, 398], "interpol": [24, 25, 28, 398, 399, 402, 686, 696, 707], "x_axi": [24, 398, 686, 696], "y_axi": [24, 398, 686, 696], "center_point_x": [24, 398, 686, 696], "center_point_i": [24, 398, 686, 696], "finish_point_x": [24, 398, 686, 696], "finish_point_i": [24, 398, 686, 696], "circular_dir_cw": [24, 398], "scurv": [24, 398, 680, 681], "motion_cfgcircularinterpo_async": [24, 683, 686, 696], "cfgcircularinterpo_async": 24, "motion_startcircularinterpo_async": [24, 683, 686, 696], "startcircularinterpo_async": 24, "4": [24, 60, 74, 122, 134, 135, 149, 153, 154, 155, 156, 157, 158, 173, 184, 192, 206, 215, 223, 227, 238, 246, 248, 259, 267, 269, 277, 285, 296, 307, 309, 320, 323, 324, 331, 398, 426, 436, 464, 472, 473, 483, 487, 488, 489, 490, 491, 492, 503, 514, 518, 532, 541, 545, 549, 560, 564, 566, 577, 581, 583, 591, 595, 606, 613, 615, 626, 629, 630, 633, 669, 671, 672, 673, 674, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712], "x_axis_move_statu": [24, 398], "y_axis_move_statu": [24, 398], "motion_2axis_linear_interpol": [25, 399], "axis1": [25, 26, 28, 29, 399, 400, 402, 403, 686, 696], "dest_posi1": [25, 28, 399, 402, 686, 696], "axis2": [25, 26, 28, 29, 399, 400, 402, 403, 686, 696], "dest_posi2": [25, 28, 399, 402, 686, 696], "motion_cfg2axislinearinterpo_async": [25, 683, 686, 696], "cfg2axislinearinterpo_async": 25, "motion_startlinearinterpo_async": [25, 28, 683, 686, 696], "startlinearinterpo_async": [25, 28], "axis1_move_statu": [25, 28, 399, 402], "axis2_move_statu": [25, 28, 399, 402], "motion_3axis_asynchronous_mov": 26, "getaxisstatu": [26, 29], "005": [26, 29, 191, 222, 224, 245, 266, 306, 330, 400, 403, 517, 544, 546, 563, 580, 612, 632, 687, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706], "axis1_thread": [26, 29, 400, 403], "axis2_thread": [26, 29, 400, 403], "axis3_thread": [26, 29, 400, 403], "axis3": [26, 28, 29, 400, 402, 403, 686, 696], "forward_enable_fals": [26, 29, 400, 403], "reverse_enable_fals": [26, 29, 400, 403], "defin": [26, 29, 400, 403, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "thread_1": [26, 29, 400, 403], "thread_2": [26, 29, 400, 403], "thread_3": [26, 29, 400, 403], "servoon": [26, 29], "join": [26, 29, 400, 403], "servooff_async": 26, "motion_3axis_helical_interpol": [27, 401], "center_x": [27, 401], "center_i": [27, 401], "finish_x": [27, 401], "finish_i": [27, 401], "pitch_axis3": [27, 401, 686, 696], "pitch_axis4": [27, 401, 686, 696], "rotation_num": [27, 401], "cal_timeout": [27, 401], "helical_dir_cw": [27, 401], "motion_cfghelicalinterpo_async": [27, 683, 686, 696], "cfghelicalinterpo_async": 27, "motion_starthelicalinterpo_async": [27, 683, 686, 696], "starthelicalinterpo_async": 27, "motion_3axis_linear_interpol": [28, 402], "dest_posi3": [28, 402, 686, 696], "motion_cfg3axislinearinterpo_async": [28, 683, 686, 696], "cfg3axislinearinterpo_async": 28, "axis3_move_statu": [28, 402], "motion_3axis_synchronous_mov": [29, 403], "motion_startmultiaxismove_async": [29, 683, 686, 696], "startmultiaxismove_async": 29, "servooff": 29, "motion_find_hom": [30, 404], "find_hom": [30, 404], "dir_revers": [30, 31, 32, 404, 405, 406], "motion_cfgfindref_async": [30, 31, 32, 683, 686, 696], "search_velo": [30, 31, 32, 404, 405, 406, 686, 696], "search_accl": [30, 31, 32, 404, 405, 406, 686, 696], "approach_velo_perc": [30, 31, 32, 404, 405, 406, 686, 696], "20": [30, 31, 32, 112, 191, 202, 222, 225, 245, 266, 306, 330, 348, 404, 405, 406, 458, 517, 528, 544, 547, 563, 580, 612, 632, 646, 686, 696], "en_reset_posi": [30, 31, 32, 404, 405, 406, 686, 696], "offset_posi": [30, 31, 32, 404, 405, 406, 686, 696], "1500": [30, 31, 32, 404, 405, 406], "cfgfindref_async": [30, 31, 32], "motion_findref_async": [30, 31, 32, 683, 686, 696], "findref_async": [30, 31, 32], "home_statu": [30, 32, 404, 406], "hit_statu": [30, 32, 404, 406], "forward_hit": [30, 32, 404, 406], "reverse_hit": [30, 32, 404, 406], "hit": [30, 32, 404, 406], "motion_gethomestatus_async": [30, 32, 683, 686, 696], "found": [30, 32, 404, 406, 686, 696, 710], "driving_statu": [30, 31, 32, 404, 405, 406], "motion_checkref_async": [30, 31, 32, 683, 686, 696], "motion_find_index": [31, 405], "one_pulse_mod": [31, 405], "find_index": [31, 405], "motion_cfgencoder_async": [31, 38, 39, 683, 685, 686, 696], "cfgencoder_async": [31, 38, 39], "motion_find_limit": [32, 406], "find_limit": [32, 406], "motion_get_logical_posit": [33, 407], "motion_setlogicalposi_async": [33, 683, 686, 696], "setlogicalposi_async": 33, "posi": [33, 407], "getlogicalposi": 33, "motion_load_configuration_fil": [34, 408], "motion_position_blend": [35, 409], "new_posit": [35, 409, 686, 696], "motion_overrideaxisposi_async": [35, 683, 686, 696], "overrideaxisposi_async": 35, "motion_save_configuration_fil": [36, 410], "motion_savecfgfile_async": [36, 683, 685, 686, 696], "savecfgfile_async": 36, "motion_servo_on": [37, 411], "motion_velocity_blend": [38, 412], "velocity_mod": [38, 39, 412, 413], "overrid": [38, 39, 412, 413, 686, 696], "new_velo": [38, 39, 412, 413, 686, 696], "motion_overrideaxisvelocity_async": [38, 39, 683, 686, 696], "overrideaxisvelocity_async": [38, 39], "3000": [38, 39, 149, 412, 413, 483], "motion_velocity_blending_acceler": [39, 413], "veloc": [39, 413, 680, 681, 685, 686, 696, 711], "new_accel": [39, 413, 686, 696], "new_decel": [39, 413, 686, 696], "motion_overrideaxisaccel_async": [39, 683, 686, 696], "overrideaxisaccel_async": 39, "6000": [39, 413], "ai_n_samples_onc": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658], "obtain": [47, 48, 50, 51, 52, 87, 95, 141, 142, 143, 144, 145, 146, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 445, 449, 475, 476, 477, 478, 479, 480, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "addition": [47, 51, 52, 87, 95, 141, 145, 146, 166, 170, 171, 193, 197, 198, 332, 336, 337, 349, 353, 354, 364, 368, 369, 417, 421, 422, 445, 449, 475, 479, 480, 496, 500, 501, 519, 523, 524, 634, 638, 639, 647, 651, 652, 658, 662, 663, 712], "To": [47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 112, 113, 114, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 458, 459, 460, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 519, 520, 522, 523, 524, 528, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "begin": [47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 112, 113, 114, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 458, 459, 460, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 519, 520, 522, 523, 524, 528, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "next": [47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 112, 113, 114, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 458, 459, 460, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "outlin": [47, 48, 50, 51, 52, 112, 113, 114, 141, 142, 143, 144, 145, 146, 151, 152, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 202, 203, 204, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 458, 459, 460, 475, 476, 477, 478, 479, 480, 485, 486, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 528, 529, 530, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "procedur": [47, 48, 50, 51, 52, 112, 113, 114, 141, 142, 143, 144, 145, 146, 151, 152, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 202, 203, 204, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 458, 459, 460, 475, 476, 477, 478, 479, 480, 485, 486, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 528, 529, 530, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "stream": [47, 48, 50, 112, 141, 142, 143, 144, 166, 167, 169, 193, 194, 196, 202, 332, 333, 335, 347, 349, 350, 352, 364, 365, 367, 417, 418, 420, 458, 475, 476, 477, 478, 496, 497, 499, 519, 520, 522, 528, 634, 635, 637, 645, 647, 648, 650, 658, 659, 661, 669, 680, 681, 687, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 708], "conclud": [47, 48, 50, 51, 52, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 112, 113, 114, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 458, 459, 460, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 519, 520, 522, 523, 524, 528, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "explain": [47, 48, 50, 51, 52, 112, 113, 114, 141, 142, 143, 144, 145, 146, 151, 152, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 202, 203, 204, 332, 333, 335, 336, 337, 347, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 458, 459, 460, 475, 476, 477, 478, 479, 480, 485, 486, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 528, 529, 530, 634, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663], "channel": [47, 48, 50, 51, 52, 66, 112, 142, 144, 149, 166, 167, 169, 170, 171, 172, 180, 193, 194, 196, 197, 198, 202, 205, 213, 226, 234, 247, 255, 268, 275, 284, 292, 308, 316, 332, 333, 335, 336, 337, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 432, 458, 476, 478, 483, 496, 497, 499, 500, 501, 502, 510, 519, 520, 522, 523, 524, 528, 531, 539, 548, 556, 565, 573, 582, 589, 594, 602, 614, 622, 634, 635, 637, 638, 639, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 676, 677, 680, 681, 687, 688, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710], "On": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 711], "demand": [47, 48, 50, 112, 141, 142, 143, 144, 147, 148, 149, 166, 167, 169, 193, 194, 196, 199, 200, 202, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 458, 475, 476, 477, 478, 481, 482, 483, 496, 497, 499, 519, 520, 522, 525, 526, 528, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 680, 681, 687, 693, 696, 697, 698, 704, 705, 706, 707, 711], "continu": [47, 112, 141, 149, 166, 193, 202, 332, 349, 364, 417, 458, 475, 483, 496, 519, 528, 634, 647, 658, 669, 680, 681, 687, 693, 696, 697, 698, 704, 705, 706, 711], "sampling_r": [47, 48, 50, 112, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 202, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 458, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 528, 634, 635, 637, 647, 648, 650, 658, 659, 661, 687, 693, 696, 697, 698, 704, 705, 706], "200": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 707], "read_point": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661], "read_delai": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 224, 332, 333, 335, 347, 349, 350, 352, 364, 365, 367, 417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661], "ai_open_async": [47, 48, 50, 51, 52, 87, 95, 141, 142, 143, 144, 145, 146, 147, 148, 149, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 199, 200, 332, 333, 335, 336, 337, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "acquisit": [47, 48, 50, 51, 52, 87, 95, 141, 142, 143, 144, 145, 146, 147, 148, 149, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 199, 200, 332, 333, 335, 336, 337, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 417, 418, 420, 421, 422, 445, 449, 475, 476, 477, 478, 479, 480, 481, 482, 483, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 525, 526, 634, 635, 637, 638, 639, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 687, 696, 697, 698, 704, 705, 706], "ai_setmode_async": [47, 48, 50, 51, 52, 141, 142, 143, 144, 145, 146, 149, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 332, 333, 335, 336, 337, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 683, 687, 696, 697, 698, 704, 705, 706], "rate": [47, 48, 50, 112, 141, 142, 143, 144, 149, 166, 167, 169, 179, 193, 194, 196, 202, 212, 233, 254, 291, 315, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 458, 475, 476, 477, 478, 483, 496, 497, 499, 509, 519, 520, 522, 528, 538, 555, 572, 601, 621, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 672, 686, 687, 693, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 710], "ai_setsamplingrate_async": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 683, 687, 696, 697, 698, 704, 705, 706], "ai_setnumsamples_async": [47, 141, 166, 193, 332, 349, 364, 683, 687, 696, 697, 698, 704, 705, 706], "ai_start_async": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 683, 687, 696, 697, 698, 704, 705, 706], "ai_2dlist": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661], "ai_readstreaming_async": [47, 48, 50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 477, 483, 683, 687, 696, 697, 698, 704, 705, 706], "len": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 224, 332, 333, 335, 348, 349, 350, 352, 364, 365, 367, 417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 546, 634, 635, 637, 646, 647, 648, 650, 658, 659, 661, 669, 674, 687, 696, 697, 698, 704, 705, 706], "ok": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658, 669, 671, 675], "ai_list": [47, 51, 52, 141, 145, 146, 147, 148, 166, 170, 171, 193, 197, 198, 199, 200, 332, 336, 337, 349, 353, 354, 364, 368, 369, 417, 421, 422, 475, 479, 480, 481, 482, 496, 500, 501, 519, 523, 524, 525, 526, 634, 638, 639, 647, 651, 652, 658, 662, 663], "enumer": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658, 669], "ani": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658, 669], "miss": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658], "ng": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658], "ai_stop_async": [47, 48, 50, 141, 142, 143, 144, 149, 166, 167, 169, 193, 194, 196, 332, 333, 335, 349, 350, 352, 364, 365, 367, 683, 687, 696, 697, 698, 704, 705, 706], "ai_close_async": [47, 48, 50, 51, 52, 87, 95, 141, 142, 143, 144, 145, 146, 147, 148, 149, 166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 199, 200, 332, 333, 335, 336, 337, 349, 350, 352, 353, 354, 364, 365, 367, 368, 369, 683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "ai_continu": [48, 142, 167, 194, 333, 350, 365, 418, 476, 497, 520, 635, 648, 659], "n": [48, 50, 112, 134, 135, 142, 143, 144, 149, 167, 169, 194, 196, 202, 323, 324, 333, 335, 348, 350, 352, 365, 367, 418, 420, 458, 472, 473, 476, 477, 478, 483, 497, 499, 520, 522, 528, 629, 630, 635, 637, 646, 648, 650, 659, 661, 669, 680, 681, 687, 693, 695, 696, 697, 698, 703, 704, 705, 706, 707, 711], "sampl": [48, 50, 112, 134, 135, 142, 143, 144, 149, 167, 169, 194, 196, 202, 323, 324, 333, 335, 350, 352, 365, 367, 418, 420, 458, 472, 473, 476, 477, 478, 483, 497, 499, 520, 522, 528, 629, 630, 635, 637, 648, 650, 659, 661, 669, 677, 680, 681, 687, 693, 695, 696, 697, 698, 703, 704, 705, 706, 707, 710, 711], "data_len": [48, 50, 142, 143, 144, 149, 167, 169, 194, 196, 333, 335, 350, 352, 365, 367, 418, 420, 476, 477, 478, 483, 497, 499, 520, 522, 635, 637, 648, 650, 659, 661], "did": [49, 168, 195, 201, 334, 351, 366, 419, 498, 521, 527, 636, 649, 660], "ai_continuous_with_logg": [50, 144, 169, 196, 335, 352, 367, 420, 478, 499, 522, 637, 650, 661], "Then": [50, 144, 169, 196, 335, 352, 367, 420, 478, 499, 522, 637, 650, 661], "save": [50, 135, 144, 169, 196, 300, 324, 335, 348, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 646, 650, 661, 680, 681, 685, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 707], "csv": [50, 135, 144, 169, 196, 300, 324, 335, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 650, 661, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "wpc_test": [50, 135, 144, 169, 196, 300, 324, 335, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 650, 661], "logger_openfil": [50, 135, 144, 169, 196, 300, 324, 335, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 650, 661, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "header": [50, 135, 144, 169, 196, 300, 324, 335, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 650, 661, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "logger_writehead": [50, 135, 144, 169, 196, 300, 324, 335, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 650, 661, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ch0": [50, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 299, 300, 301, 325, 335, 352, 367, 420, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 609, 610, 611, 631, 637, 650, 661, 669], "ch1": [50, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 299, 300, 301, 324, 325, 335, 352, 367, 420, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 609, 610, 611, 630, 631, 637, 650, 661, 669], "ch2": [50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 335, 352, 367, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 637, 650, 661, 669], "ch3": [50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 335, 352, 367, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 637, 650, 661, 669], "ch4": [50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 335, 352, 367, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 637, 650, 661, 669], "ch5": [50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 335, 352, 367, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 637, 650, 661, 669], "ch6": [50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 335, 352, 367, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 637, 650, 661, 669], "ch7": [50, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 196, 335, 352, 367, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 499, 522, 637, 650, 661, 669], "logger_write2dlist": [50, 144, 169, 196, 335, 352, 367, 420, 478, 499, 522, 637, 650, 661, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ai_on_demand_in_loop": [51, 145, 170, 197, 336, 353, 368, 421, 479, 500, 523, 638, 651, 662], "util": [51, 145, 170, 197, 336, 348, 353, 368, 421, 479, 500, 523, 638, 646, 651, 662], "retriev": [51, 52, 87, 95, 145, 146, 170, 171, 197, 198, 336, 337, 353, 354, 368, 369, 421, 422, 445, 449, 479, 480, 500, 501, 523, 524, 638, 639, 651, 652, 662, 663, 687, 696, 697, 698, 699, 704, 705, 706], "chip_select": [51, 141, 142, 143, 144, 145, 146, 147, 148, 149, 170, 197, 199, 200, 336, 353, 368, 475, 476, 477, 478, 479, 480, 481, 482, 483, 687, 696, 697, 698, 704, 705, 706], "ai_readondemand_async": [51, 52, 87, 95, 141, 142, 143, 144, 145, 146, 147, 148, 149, 170, 171, 197, 198, 199, 200, 336, 337, 353, 354, 368, 369, 477, 483, 683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "ai_on_demand_onc": [52, 87, 95, 146, 171, 198, 337, 354, 369, 422, 445, 449, 480, 501, 524, 639, 652, 663], "dio_loopback_pin": [60, 74, 153, 173, 206, 227, 248, 269, 285, 309, 426, 436, 487, 503, 532, 549, 566, 583, 595, 615], "involv": [60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616], "do": [60, 61, 74, 75, 153, 154, 173, 174, 181, 182, 184, 206, 207, 215, 227, 228, 235, 236, 238, 248, 249, 256, 257, 259, 269, 270, 277, 285, 286, 293, 294, 296, 309, 310, 317, 318, 320, 426, 427, 436, 437, 487, 488, 503, 504, 511, 512, 514, 532, 533, 541, 549, 550, 557, 558, 560, 566, 567, 574, 575, 577, 583, 584, 591, 595, 596, 603, 604, 606, 615, 616, 623, 624, 626, 673, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "send": [60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 669, 697, 698, 699, 700, 702, 703], "signal": [60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 112, 113, 114, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 180, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 227, 228, 229, 230, 231, 232, 234, 248, 249, 250, 251, 252, 253, 255, 269, 270, 271, 272, 273, 274, 275, 285, 286, 287, 288, 289, 290, 292, 309, 310, 311, 312, 313, 314, 316, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 458, 459, 460, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 510, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 539, 549, 550, 551, 552, 553, 554, 556, 566, 567, 568, 569, 570, 571, 573, 583, 584, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 600, 602, 615, 616, 617, 618, 619, 620, 622, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "di": [60, 61, 66, 74, 75, 153, 154, 173, 174, 180, 184, 206, 207, 213, 215, 227, 228, 234, 238, 248, 249, 255, 259, 269, 270, 275, 277, 285, 286, 292, 296, 309, 310, 316, 320, 426, 427, 432, 436, 437, 487, 488, 503, 504, 510, 514, 532, 533, 539, 541, 549, 550, 556, 560, 566, 567, 573, 577, 583, 584, 589, 591, 595, 596, 602, 606, 615, 616, 622, 626, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "receiv": [60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 191, 199, 200, 206, 207, 222, 227, 228, 245, 248, 249, 266, 269, 270, 285, 286, 306, 309, 310, 330, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 517, 525, 526, 532, 533, 544, 549, 550, 563, 566, 567, 580, 583, 584, 595, 596, 612, 615, 616, 632, 697, 698, 699, 700, 702, 703, 710], "singl": [60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 680, 686, 696], "commonli": [60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616], "known": [60, 61, 74, 75, 153, 154, 173, 174, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 487, 488, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616], "illustr": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620], "requir": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 147, 148, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 199, 200, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 481, 482, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 525, 526, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620, 707], "oper": [60, 61, 74, 75, 153, 154, 173, 174, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 487, 488, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 686, 696, 707, 710], "lastli": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 147, 148, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 199, 200, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 248, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 309, 310, 311, 312, 313, 314, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 481, 482, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 525, 526, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 566, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 615, 616, 617, 618, 619, 620], "do_port": [60, 61, 74, 75, 104, 153, 154, 155, 156, 157, 158, 173, 174, 181, 182, 206, 207, 227, 228, 235, 236, 248, 249, 256, 257, 269, 270, 285, 286, 293, 294, 309, 310, 317, 318, 426, 427, 436, 437, 454, 487, 488, 489, 490, 491, 492, 503, 504, 511, 512, 532, 533, 549, 550, 557, 558, 566, 567, 574, 575, 583, 584, 595, 596, 603, 604, 615, 616, 623, 624, 673, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_port": [60, 61, 74, 75, 153, 154, 173, 174, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 487, 488, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_pin": [60, 74, 153, 173, 206, 227, 248, 269, 285, 309, 426, 436, 487, 503, 532, 549, 566, 583, 595, 615], "di_pin": [60, 74, 153, 173, 206, 227, 248, 269, 285, 309, 426, 436, 487, 503, 532, 549, 566, 583, 595, 615], "6": [60, 74, 134, 135, 149, 153, 154, 155, 156, 157, 158, 173, 206, 227, 248, 269, 285, 309, 323, 324, 348, 426, 436, 472, 473, 483, 487, 488, 489, 490, 491, 492, 503, 532, 549, 566, 583, 595, 615, 629, 630, 646, 669, 671, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711], "do_valu": [60, 61, 64, 65, 74, 75, 78, 79, 153, 154, 157, 158, 173, 174, 177, 178, 206, 207, 210, 211, 227, 228, 231, 232, 248, 249, 252, 253, 269, 270, 273, 274, 285, 286, 289, 290, 309, 310, 313, 314, 426, 427, 430, 431, 436, 437, 440, 441, 487, 488, 491, 492, 503, 504, 507, 508, 532, 533, 536, 537, 549, 550, 553, 554, 566, 567, 570, 571, 583, 584, 587, 588, 595, 596, 599, 600, 615, 616, 619, 620], "digit": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 104, 113, 114, 122, 123, 147, 148, 151, 152, 156, 173, 174, 175, 176, 177, 178, 181, 182, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 235, 236, 248, 249, 250, 251, 252, 253, 256, 257, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 293, 294, 309, 310, 311, 312, 313, 314, 317, 318, 348, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 454, 459, 460, 464, 465, 481, 482, 485, 486, 489, 490, 503, 504, 505, 506, 507, 508, 511, 512, 525, 526, 529, 530, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 557, 558, 566, 567, 568, 569, 570, 571, 574, 575, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 603, 604, 615, 616, 617, 618, 619, 620, 623, 624, 646, 671, 673, 688, 689, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 707], "output": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 181, 182, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 235, 236, 248, 249, 250, 251, 252, 253, 256, 257, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 293, 294, 309, 310, 311, 312, 313, 314, 317, 318, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 511, 512, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 557, 558, 566, 567, 568, 569, 570, 571, 574, 575, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 603, 604, 615, 616, 617, 618, 619, 620, 623, 624, 670, 671, 673, 680, 681, 688, 689, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 707, 710], "do_openpins_async": [60, 62, 64, 74, 76, 78, 173, 175, 177, 181, 182, 206, 208, 210, 227, 229, 231, 235, 236, 248, 250, 252, 256, 257, 269, 271, 273, 285, 287, 289, 293, 294, 309, 311, 313, 317, 318, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "high": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 181, 182, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 235, 236, 248, 249, 250, 251, 252, 253, 256, 257, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 293, 294, 309, 310, 311, 312, 313, 314, 317, 318, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 511, 512, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 557, 558, 566, 567, 568, 569, 570, 571, 574, 575, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 603, 604, 615, 616, 617, 618, 619, 620, 623, 624, 673, 685, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711], "low": [60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 181, 182, 206, 207, 208, 209, 210, 211, 227, 228, 229, 230, 231, 232, 235, 236, 248, 249, 250, 251, 252, 253, 256, 257, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 293, 294, 309, 310, 311, 312, 313, 314, 317, 318, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 511, 512, 532, 533, 534, 535, 536, 537, 549, 550, 551, 552, 553, 554, 557, 558, 566, 567, 568, 569, 570, 571, 574, 575, 583, 584, 585, 586, 587, 588, 595, 596, 597, 598, 599, 600, 603, 604, 615, 616, 617, 618, 619, 620, 623, 624, 673, 685, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 711], "do_writepins_async": [60, 64, 74, 78, 153, 157, 173, 177, 181, 182, 206, 210, 227, 231, 235, 236, 248, 252, 256, 257, 269, 273, 285, 289, 293, 294, 309, 313, 317, 318, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "iutput": [60, 74, 173, 206, 227, 248, 269, 285, 309, 426, 436, 503, 532, 549, 566, 583, 595, 615], "di_openpins_async": [60, 74, 173, 206, 227, 248, 269, 285, 309, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "state": [60, 61, 62, 63, 74, 75, 76, 77, 104, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 206, 207, 208, 209, 227, 228, 229, 230, 248, 249, 250, 251, 269, 270, 271, 272, 285, 286, 287, 288, 309, 310, 311, 312, 426, 427, 428, 429, 436, 437, 438, 439, 454, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 532, 533, 534, 535, 549, 550, 551, 552, 566, 567, 568, 569, 583, 584, 585, 586, 595, 596, 597, 598, 615, 616, 617, 618, 671, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "di_readpins_async": [60, 74, 153, 173, 206, 227, 248, 269, 285, 309, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_closepins_async": [60, 62, 64, 74, 76, 78, 173, 175, 177, 181, 182, 206, 208, 210, 227, 229, 231, 235, 236, 248, 250, 252, 256, 257, 269, 271, 273, 285, 287, 289, 293, 294, 309, 311, 313, 317, 318, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "input": [60, 61, 74, 75, 173, 174, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710], "di_closepins_async": [60, 74, 173, 206, 227, 248, 269, 285, 309, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_loopback_port": [61, 75, 154, 174, 207, 228, 249, 270, 286, 310, 427, 437, 488, 504, 533, 550, 567, 584, 596, 616], "pin": [61, 66, 75, 113, 114, 147, 148, 151, 152, 154, 174, 180, 181, 182, 199, 200, 203, 204, 207, 213, 228, 234, 235, 236, 249, 255, 256, 257, 270, 275, 286, 292, 293, 294, 310, 316, 317, 318, 427, 432, 437, 459, 460, 481, 482, 485, 486, 488, 504, 510, 511, 512, 525, 526, 529, 530, 533, 539, 550, 556, 557, 558, 567, 573, 574, 575, 584, 589, 596, 602, 603, 604, 616, 622, 623, 624, 673, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "do_openport_async": [61, 63, 65, 75, 77, 79, 174, 176, 178, 207, 209, 211, 228, 230, 232, 249, 251, 253, 270, 272, 274, 286, 288, 290, 310, 312, 314, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_openport_async": [61, 75, 174, 207, 228, 249, 270, 286, 310, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_writeport_async": [61, 65, 75, 79, 104, 154, 158, 174, 178, 207, 211, 228, 232, 249, 253, 270, 274, 286, 290, 310, 314, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_readport_async": [61, 75, 154, 174, 207, 228, 249, 270, 286, 310, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_closeport_async": [61, 63, 65, 75, 77, 79, 174, 176, 178, 207, 209, 211, 228, 230, 232, 249, 251, 253, 270, 272, 274, 286, 288, 290, 310, 312, 314, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_closeport_async": [61, 75, 174, 207, 228, 249, 270, 286, 310, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio": [62, 63, 64, 65, 76, 77, 78, 79, 155, 156, 157, 158, 175, 176, 177, 178, 181, 182, 208, 209, 210, 211, 229, 230, 231, 232, 235, 236, 250, 251, 252, 253, 256, 257, 271, 272, 273, 274, 287, 288, 289, 290, 293, 294, 311, 312, 313, 314, 317, 318, 428, 429, 430, 431, 438, 439, 440, 441, 489, 490, 491, 492, 505, 506, 507, 508, 511, 512, 534, 535, 536, 537, 551, 552, 553, 554, 557, 558, 568, 569, 570, 571, 574, 575, 585, 586, 587, 588, 597, 598, 599, 600, 603, 604, 617, 618, 619, 620, 623, 624, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "do_blinky_pin": [62, 76, 155, 175, 208, 229, 250, 271, 287, 311, 428, 438, 489, 505, 534, 551, 568, 585, 597, 617], "loop": [62, 63, 76, 77, 122, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 464, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 680, 681], "voltag": [62, 63, 64, 65, 76, 77, 78, 79, 112, 155, 156, 157, 158, 175, 176, 177, 178, 202, 208, 209, 210, 211, 229, 230, 231, 232, 250, 251, 252, 253, 271, 272, 273, 274, 287, 288, 289, 290, 311, 312, 313, 314, 428, 429, 430, 431, 438, 439, 440, 441, 458, 489, 490, 491, 492, 505, 506, 507, 508, 528, 534, 535, 536, 537, 551, 552, 553, 554, 568, 569, 570, 571, 585, 586, 587, 588, 597, 598, 599, 600, 617, 618, 619, 620, 669, 670, 687, 690, 691, 693, 696, 698, 707, 711], "appli": [62, 63, 76, 77, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 348, 428, 429, 438, 439, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 646], "blink": [62, 63, 76, 77, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618], "effect": [62, 63, 76, 77, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 687, 693, 696, 697, 698, 704, 705, 706], "pinindex": [62, 76, 155, 175, 208, 229, 250, 271, 287, 311, 428, 438, 489, 505, 534, 551, 568, 585, 597, 617], "toggl": [62, 63, 76, 77, 104, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 454, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_togglepins_async": [62, 76, 155, 175, 208, 229, 250, 271, 287, 311, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "led": [62, 63, 64, 65, 76, 77, 78, 79, 155, 156, 175, 176, 177, 178, 208, 209, 210, 211, 229, 230, 231, 232, 250, 251, 252, 253, 271, 272, 273, 274, 287, 288, 289, 290, 311, 312, 313, 314, 428, 429, 430, 431, 438, 439, 440, 441, 489, 490, 505, 506, 507, 508, 534, 535, 536, 537, 551, 552, 553, 554, 568, 569, 570, 571, 585, 586, 587, 588, 597, 598, 599, 600, 617, 618, 619, 620, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 704, 705, 706], "do_blinky_port": [63, 77, 156, 176, 209, 230, 251, 272, 288, 312, 429, 439, 490, 506, 535, 552, 569, 586, 598, 618], "do_toggleport_async": [63, 77, 156, 176, 209, 230, 251, 272, 288, 312, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_write_pin": [64, 78, 157, 177, 210, 231, 252, 273, 289, 313, 430, 440, 491, 507, 536, 553, 570, 587, 599, 619], "written": [64, 65, 78, 79, 157, 158, 177, 178, 179, 181, 210, 211, 212, 231, 232, 233, 235, 252, 253, 254, 256, 273, 274, 289, 290, 291, 293, 313, 314, 315, 317, 430, 431, 440, 441, 491, 492, 507, 508, 509, 511, 536, 537, 538, 553, 554, 555, 557, 570, 571, 572, 574, 587, 588, 599, 600, 601, 603, 619, 620, 621, 623, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pin_index": [64, 78, 157, 177, 210, 231, 252, 273, 289, 313, 430, 440, 491, 507, 536, 553, 570, 587, 599, 619], "do_write_port": [65, 79, 158, 178, 211, 232, 253, 274, 290, 314, 431, 441, 492, 508, 537, 554, 571, 588, 600, 620], "pwm_gener": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622], "should": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 687, 693, 696, 697, 698, 699, 704, 705, 706], "frequenc": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703, 711], "duti": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703], "cycl": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703], "so": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622], "can": [66, 149, 180, 213, 234, 255, 275, 292, 316, 432, 483, 510, 539, 556, 573, 589, 602, 622, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 712], "proper": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622], "By": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622], "want": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 687, 688, 689, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "could": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 695, 702, 703], "duty_cycl": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703], "50": [66, 180, 213, 234, 255, 275, 292, 316, 348, 432, 510, 539, 556, 573, 589, 602, 622, 646], "sys_getdriverinfo": [66, 172, 180, 205, 213, 226, 234, 247, 255, 268, 275, 284, 292, 308, 316, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668, 675, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pwm_open_async": [66, 180, 213, 234, 255, 275, 292, 316, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_setfrequency_async": [66, 180, 213, 234, 255, 275, 292, 316, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_setdutycycle_async": [66, 180, 213, 234, 255, 275, 292, 316, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_start_async": [66, 180, 213, 234, 255, 275, 292, 316, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_stop_async": [66, 180, 213, 234, 255, 275, 292, 316, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_close_async": [66, 180, 213, 234, 255, 275, 292, 316, 683, 688, 697, 698, 699, 700, 701, 702, 703], "ai24bit": [87, 95, 445, 449], "relay_read_count": [103, 453], "index": [103, 453, 680, 681, 686, 692, 696, 699, 710, 711], "relay_open_async": [103, 104, 683, 692], "relay_read_async": [103, 683, 692], "relay_close_async": [103, 104, 683, 692], "relay_set_channel": [104, 454], "valu": [104, 113, 114, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 179, 181, 199, 200, 203, 204, 212, 233, 235, 254, 256, 291, 293, 315, 317, 341, 358, 373, 454, 459, 460, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 509, 511, 525, 526, 529, 530, 538, 555, 557, 572, 574, 601, 603, 621, 623, 643, 656, 667, 669, 670, 673, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712], "ao_waveform_gen": [112, 202, 458, 528], "number_of_sampl": [112, 202, 458, 528], "form_mod": [112, 202, 458, 528], "dc": [112, 202, 458, 528, 693, 696, 698, 711], "retangular": [112, 202, 458, 528, 693, 696, 698], "triangular": [112, 202, 458, 528, 693, 696, 698, 711], "sine": [112, 202, 458, 528, 693, 696, 698, 711], "amplitud": [112, 202, 458, 528, 693, 696, 698], "freq_0": [112, 202, 458, 528], "freq_1": [112, 202, 458, 528], "ao_open_async": [112, 113, 114, 147, 148, 149, 151, 152, 199, 200, 202, 203, 204, 683, 693, 696, 698], "ao_setmode_async": [112, 202, 683, 693, 696, 698], "10k": [112, 202, 458, 528, 708], "hz": [112, 149, 202, 458, 483, 528, 687, 688, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ao_setsamplingrate_async": [112, 202, 683, 693, 696, 698], "numsampl": [112, 202, 458, 528, 669], "ao_setnumsamples_async": [112, 202, 683, 693, 696, 698], "ao_setnumsampl": [112, 202, 458, 528, 683, 693, 696, 698], "ao_setenablechannels_async": [112, 202, 683, 693, 696, 698], "form": [112, 202, 458, 528, 693, 696, 698, 707, 710], "ao_setform_async": [112, 202, 683, 693, 696, 698], "ao_setformparam_async": [112, 202, 683, 693, 696, 698], "info": [112, 153, 154, 155, 156, 157, 158, 202, 458, 487, 488, 489, 490, 491, 492, 528, 669, 679, 680, 681, 693, 696, 698], "ao_openstreaming_async": [112, 202, 683, 693, 696, 698], "ao_startstreaming_async": [112, 202, 683, 693, 696, 698], "ao_closestreaming_async": [112, 202, 683, 693, 696, 698], "ao_close_async": [112, 113, 114, 147, 148, 149, 151, 152, 199, 200, 202, 203, 204, 683, 693, 696, 698], "ao_write_all_channel": [113, 151, 203, 459, 485, 529], "simultan": [113, 147, 151, 199, 203, 459, 481, 485, 525, 529, 670, 687, 693, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707], "ao_value_list": [113, 114, 147, 148, 151, 152, 199, 200, 203, 204, 459, 460, 481, 482, 485, 486, 525, 526, 529, 530], "ao_writeallchannels_async": [113, 147, 151, 199, 203, 670, 683, 693, 696, 698], "ao_write_one_channel": [114, 152, 204, 460, 486, 530], "vaul": [114, 148, 149, 152, 200, 204, 460, 482, 483, 486, 526, 530], "ao_writeonechannel_async": [114, 148, 149, 152, 200, 204, 683, 693, 696, 698], "dpot_readbychannel": [122, 464, 683, 694], "potentiomet": [122, 123, 464, 465, 694], "resist": [122, 123, 464, 465, 694], "dpot_open_async": [122, 123, 683, 694], "resistance_ratio": [122, 123, 464, 465, 694], "dpot_readbychannel_async": [122, 683, 694], "dpot_close_async": [122, 123, 683, 694], "dpot_writeallchannel": [123, 465, 683, 694], "dpot_writeallchannel_async": [123, 683, 694], "temperature_tc": [134, 135, 136, 323, 324, 325, 472, 473, 474, 629, 630, 631], "tc_read_channel_data": [134, 323, 472, 629], "thermocoupl": [134, 135, 323, 324, 472, 473, 629, 630, 677, 695, 702, 703, 707, 712], "show": [134, 135, 136, 179, 181, 182, 184, 191, 192, 212, 215, 222, 223, 224, 225, 233, 235, 236, 238, 245, 246, 254, 256, 257, 259, 266, 267, 277, 291, 293, 294, 296, 299, 300, 301, 306, 307, 315, 317, 318, 320, 323, 324, 325, 330, 331, 348, 472, 473, 474, 509, 511, 512, 514, 517, 518, 538, 541, 544, 545, 546, 547, 555, 557, 558, 560, 563, 564, 572, 574, 575, 577, 580, 581, 591, 601, 603, 604, 606, 609, 610, 611, 612, 613, 621, 623, 624, 626, 629, 630, 631, 632, 633, 646, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "thermal": [134, 135, 136, 299, 300, 301, 323, 324, 325, 472, 473, 474, 609, 610, 611, 629, 630, 631, 695, 702, 703, 704, 705, 706, 710], "ch": [134, 135, 323, 324, 472, 473, 629, 630], "over_sampling_mod": [134, 135, 323, 324, 472, 473, 629, 630], "16": [134, 135, 181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 323, 324, 472, 473, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 629, 630, 672, 673, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711], "thermo_typ": [134, 135, 323, 324, 472, 473, 629, 630], "b": [134, 135, 323, 324, 472, 473, 629, 630, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711], "type": [134, 135, 323, 324, 472, 473, 629, 630, 676, 677, 685, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 710], "e": [134, 135, 323, 324, 472, 473, 629, 630, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711], "j": [134, 135, 323, 324, 472, 473, 629, 630, 669, 695, 703, 707, 711], "k": [134, 135, 323, 324, 348, 472, 473, 629, 630, 646, 669, 695, 703, 707, 711], "r": [134, 135, 323, 324, 472, 473, 629, 630, 695, 703, 707, 711], "thermo": [134, 135, 136, 323, 324, 325, 338, 355, 370, 472, 473, 474, 629, 630, 631, 640, 653, 664, 677, 704, 705, 706], "thermal_open_async": [134, 135, 136, 299, 300, 301, 323, 324, 325, 683, 695, 702, 703], "over": [134, 135, 323, 324, 472, 473, 629, 630, 677, 695, 703], "thermal_setoversampling_async": [134, 135, 323, 324, 683, 695, 703], "thermal_settype_async": [134, 135, 323, 324, 676, 683, 695, 702, 703], "500": [134, 135, 224, 225, 323, 324, 472, 473, 546, 547, 629, 630, 699], "m": [134, 135, 299, 300, 323, 324, 472, 473, 609, 610, 629, 630, 669], "oversampl": [134, 135, 323, 324, 472, 473, 629, 630, 677, 695, 703], "thermal_readsensor_async": [134, 135, 299, 300, 323, 324, 683, 695, 702, 703], "sensor": [134, 135, 179, 212, 233, 254, 291, 299, 300, 315, 323, 324, 348, 472, 473, 509, 538, 555, 572, 601, 609, 610, 621, 629, 630, 646, 676, 677, 695, 702, 703, 704, 705, 706, 707], "thermal_close_async": [134, 135, 136, 299, 300, 301, 323, 324, 325, 683, 695, 702, 703], "tc_read_channel_data_with_logg": [135, 324, 473, 630], "them": [135, 300, 324, 473, 610, 630, 687, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "logger_writevalu": [135, 324, 473, 630, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "tc_read_channel_statu": [136, 325, 474, 631], "thermal_getstatus_async": [136, 301, 325, 683, 695, 702, 703], "If": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 348, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 646, 686, 687, 690, 691, 692, 693, 696, 697, 698, 699, 704, 705, 706, 709], "invok": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492], "function": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 348, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 646, 683, 707, 710], "sys_setaiomode_async": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 477, 483, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ai_enablecs_async": [141, 142, 143, 144, 145, 146, 147, 148, 149, 477, 483, 683, 687, 696, 697, 698, 704, 705, 706], "subsequ": [141, 142, 143, 144, 145, 146, 147, 148, 149, 475, 476, 477, 478, 479, 480, 481, 482, 483], "displai": [141, 142, 143, 144, 145, 146, 147, 148, 149, 199, 200, 348, 475, 476, 477, 478, 479, 480, 481, 482, 483, 525, 526, 646], "follow": [141, 142, 143, 144, 145, 146, 147, 148, 149, 199, 200, 475, 476, 477, 478, 479, 480, 481, 482, 483, 525, 526], "cs0": [141, 142, 143, 144, 145, 146, 147, 148, 149, 475, 476, 477, 478, 479, 480, 481, 482, 483], "cs2": [141, 142, 143, 144, 145, 146, 147, 148, 149, 475, 476, 477, 478, 479, 480, 481, 482, 483], "sample0": [141, 142, 143, 144, 145, 146, 147, 148, 149, 475, 476, 477, 478, 479, 480, 481, 482, 483], "sample1": [141, 142, 143, 144, 145, 146, 147, 148, 149, 475, 476, 477, 478, 479, 480, 481, 482, 483], "samplen": [141, 142, 143, 144, 145, 146, 147, 148, 149, 475, 476, 477, 478, 479, 480, 481, 482, 483], "slot": [141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "aio": [141, 142, 143, 144, 145, 146, 149, 151, 152, 475, 476, 477, 478, 479, 480, 483, 485, 486, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712], "modul": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 685, 686, 687, 690, 691, 692, 693, 694, 696, 697, 698, 699, 704, 705, 706, 707, 709, 712], "slot_mod": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492], "sys_getmode_async": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ai_continuous_multi_slot": [143, 477], "slot_list": [143, 477], "counter": [143, 149, 477, 483, 680, 681, 686, 692, 696, 697, 698, 699, 700, 701, 702, 703, 709, 710], "aio_all_channels_loopback": [147, 199, 481, 525], "across": [147, 199, 481, 525], "ao": [147, 148, 199, 200, 481, 482, 525, 526, 680, 681, 693, 696, 698, 708, 710, 712], "ai": [147, 148, 199, 200, 481, 482, 525, 526, 680, 681, 687, 690, 691, 696, 697, 698, 704, 705, 706, 710, 712], "The": [147, 148, 153, 154, 155, 156, 157, 158, 179, 199, 200, 212, 233, 254, 291, 315, 481, 482, 487, 488, 489, 490, 491, 492, 509, 525, 526, 538, 555, 572, 601, 621, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710], "ar": [147, 148, 153, 154, 155, 156, 157, 158, 199, 200, 481, 482, 487, 488, 489, 490, 491, 492, 525, 526, 687, 688, 689, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712], "wire": [147, 148, 199, 200, 481, 482, 525, 526, 702, 707], "initi": [147, 148, 199, 200, 481, 482, 525, 526, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 686, 696], "correspond": [147, 148, 199, 200, 481, 482, 525, 526, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "onc": [147, 148, 199, 200, 481, 482, 525, 526, 680, 681], "again": [147, 148, 184, 199, 200, 215, 238, 259, 277, 296, 320, 348, 481, 482, 514, 525, 526, 541, 560, 577, 591, 606, 626, 646], "aio_one_channel_loopback": [148, 200, 482, 526], "specif": [148, 200, 482, 526, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708], "ao_output_while_ai_stream": [149, 483], "Not": [149, 483], "alter": [149, 483], "Its": [149, 483, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "must": [149, 483], "less": [149, 225, 483, 547], "than": [149, 225, 483, 547, 687, 696, 697, 698, 704, 705, 706], "equal": [149, 483, 687, 696, 697, 698, 704, 705, 706], "random": [149, 179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 483, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623], "ao_list": [149, 483], "select": [149, 483, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 686, 687, 696, 697, 698, 704, 705, 706, 708], "list": [149, 192, 223, 246, 267, 307, 331, 483, 518, 545, 564, 581, 613, 633, 669, 672, 673, 674, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ao_valu": [149, 483], "choic": [149, 483], "ha": [150, 348, 459, 484, 485, 529, 646, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 709], "yet": [150, 459, 484, 485, 529], "sys_setdiomode_async": [153, 154, 155, 156, 157, 158, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "assign": [153, 154, 155, 156, 157, 158, 487, 488, 489, 490, 491, 492, 712], "dio_loadstartup_async": [153, 154, 155, 156, 157, 158, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "state_list_async": 153, "default": [166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "ai_enablechannel_async": [166, 167, 169, 170, 171, 193, 194, 196, 197, 198, 199, 200, 683, 687, 696, 697, 698, 704, 705, 706], "counter_read": [172, 205, 226, 247, 268, 284, 308, 502, 531, 548, 565, 582, 594, 614, 683, 697, 698, 699, 700, 701, 702, 703], "counter_open_async": [172, 205, 226, 247, 268, 284, 308, 683, 697, 698, 699, 700, 701, 702, 703], "counter_start_async": [172, 205, 226, 247, 268, 284, 308, 683, 697, 698, 699, 700, 701, 702, 703], "counter_read_async": [172, 205, 226, 247, 268, 284, 308, 683, 697, 698, 699, 700, 701, 702, 703], "counter_stop_async": [172, 205, 226, 247, 268, 284, 308, 683, 697, 698, 699, 700, 701, 702, 703], "counter_close_async": [172, 205, 226, 247, 268, 284, 308, 683, 697, 698, 699, 700, 701, 702, 703], "i2c_write_read": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "commun": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 697, 698, 699, 700, 702, 703], "master": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624], "24c08c": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "slave": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 697, 698, 699, 700, 702, 703], "interfac": [179, 181, 182, 191, 192, 212, 222, 223, 224, 225, 233, 235, 236, 245, 246, 254, 256, 257, 266, 267, 291, 293, 294, 306, 307, 315, 317, 318, 330, 331, 509, 511, 512, 517, 518, 538, 544, 545, 546, 547, 555, 557, 558, 563, 564, 572, 574, 575, 580, 581, 601, 603, 604, 612, 613, 621, 623, 624, 632, 633, 707], "some": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624], "byte": [179, 181, 182, 191, 192, 212, 222, 223, 224, 225, 233, 235, 236, 245, 246, 254, 256, 257, 266, 267, 291, 293, 294, 306, 307, 315, 317, 318, 330, 331, 509, 511, 512, 517, 518, 538, 544, 545, 546, 547, 555, 557, 558, 563, 564, 572, 574, 575, 580, 581, 601, 603, 604, 612, 613, 621, 623, 624, 632, 633, 672, 673, 678, 697, 698, 699, 700, 702, 703], "address": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 710], "eeprom": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 710], "have": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 348, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 646, 687, 693, 696, 697, 698, 704, 705, 706], "howev": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623], "expeci": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "wore": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "device_address": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "0x50": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "01010000": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "numpi": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 348, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 646, 669], "np": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 348, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 646, 669], "word_address": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621], "randint": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623], "256": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 697, 699, 700, 702, 703, 711], "take": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 712], "i2c_open_async": [179, 212, 233, 254, 291, 315, 683, 697, 698, 699, 700, 702, 703], "clock": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621, 672, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "standard": [179, 212, 225, 233, 254, 291, 315, 509, 538, 547, 555, 572, 601, 621, 697, 698, 699, 700, 702, 703, 711], "i2c_setclockrate_async": [179, 212, 233, 254, 291, 315, 683, 697, 698, 699, 700, 702, 703], "via": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 697, 698, 699, 700, 702, 703], "wren": [179, 181, 182, 212, 233, 235, 236, 254, 256, 257, 291, 293, 294, 315, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673], "i2c_write_async": [179, 212, 233, 254, 291, 315, 683, 697, 698, 699, 700, 702, 703], "0x": [179, 212, 233, 254, 291, 315, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623], "02x": [179, 181, 212, 233, 235, 254, 256, 291, 293, 315, 317, 509, 511, 538, 555, 557, 572, 574, 601, 603, 621, 623, 673], "i2c_read_async": [179, 212, 233, 254, 291, 315, 683, 697, 698, 699, 700, 702, 703], "i2c_close_async": [179, 212, 233, 254, 291, 315, 683, 697, 698, 699, 700, 702, 703], "spi_read_and_writ": [181, 235, 256, 293, 317, 511, 557, 574, 603, 623], "25lc640": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624], "datas": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624], "bit": [181, 182, 191, 192, 222, 223, 235, 236, 245, 246, 256, 257, 266, 267, 293, 294, 306, 307, 317, 318, 330, 331, 511, 512, 517, 518, 544, 545, 557, 558, 563, 564, 574, 575, 580, 581, 603, 604, 612, 613, 623, 624, 632, 633, 678, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710], "first_bit": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624], "msb": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 697, 699, 700, 702, 703, 711], "lsb": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 711], "prescal": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 697, 699, 700, 702, 703, 710, 711], "64": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 697, 699, 700, 702, 703, 711], "cpol": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 697, 699, 700, 702, 703, 711], "cpha": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 697, 699, 700, 702, 703, 711], "do_index": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673], "elif": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 669, 671, 672, 673, 675, 678], "addr": [181, 235, 256, 293, 317, 511, 557, 574, 603, 623], "0x02": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673], "dummi": [181, 235, 256, 293, 317, 511, 557, 574, 603, 623], "0x01": [181, 235, 256, 293, 317, 511, 557, 574, 603, 623], "0x03": [181, 235, 256, 293, 317, 511, 557, 574, 603, 623], "0x06": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673], "pin0": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "spi_open_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "spi_setdatasize_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "spi_setfirstbit_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "spi_setprescaler_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "spi_setmode_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "spi_write_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "0x00": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624], "spi_readandwrite_async": [181, 235, 256, 293, 317, 683, 697, 699, 700, 702, 703], "format": [181, 192, 223, 235, 246, 256, 267, 293, 307, 317, 331, 348, 511, 518, 545, 557, 564, 574, 581, 603, 613, 623, 633, 646, 669, 673, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "spi_close_async": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 683, 697, 699, 700, 702, 703], "spi_writ": [182, 236, 257, 294, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 683, 697, 699, 700, 702, 703], "0x55": [182, 236, 257, 294, 318, 512, 558, 575, 604, 624], "0x0002": [182, 236, 257, 294, 318, 512, 558, 575, 604, 624], "system_usb": [183, 184, 185, 186, 214, 215, 216, 217, 237, 238, 239, 240, 258, 259, 260, 261, 276, 277, 278, 279, 295, 296, 297, 298, 319, 320, 321, 322, 513, 514, 515, 516, 540, 541, 542, 543, 559, 560, 561, 562, 576, 577, 578, 579, 590, 591, 592, 593, 605, 606, 607, 608, 625, 626, 627, 628], "get_usb_info": [183, 214, 237, 258, 276, 295, 319, 513, 540, 559, 576, 590, 605, 625], "serial_num": [183, 214, 237, 258, 276, 295, 319, 513, 540, 559, 576, 590, 605, 625, 697, 698, 699, 700, 701, 702, 703], "sys_getserialnumber_async": [183, 214, 237, 258, 276, 295, 319, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "get_pin_mod": [184, 215, 238, 259, 277, 296, 320, 514, 541, 560, 577, 591, 606, 626], "idl": [184, 215, 238, 259, 277, 296, 320, 514, 541, 560, 577, 591, 606, 626, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pinmod": [184, 215, 238, 259, 277, 296, 320, 514, 541, 560, 577, 591, 606, 626, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pin_mod": [184, 215, 238, 259, 277, 296, 320, 514, 541, 560, 577, 591, 606, 626, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_getpinmodeinport_async": [184, 215, 238, 259, 277, 296, 320, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "uart_read": [191, 222, 245, 266, 306, 330, 517, 544, 563, 580, 612, 632, 678, 683, 697, 698, 699, 700, 702, 703], "anoth": [191, 192, 222, 223, 224, 225, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 546, 547, 563, 564, 580, 581, 612, 613, 632, 633, 710], "baudrat": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678], "9600": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633], "data_bit_mod": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633], "9": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 697, 698, 699, 700, 702, 703, 711], "parity_mod": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633], "none": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 348, 388, 390, 414, 416, 423, 425, 433, 435, 442, 444, 446, 448, 450, 452, 455, 457, 461, 463, 466, 468, 469, 471, 493, 495, 513, 514, 516, 517, 518, 540, 541, 543, 544, 545, 559, 560, 562, 563, 564, 576, 577, 579, 580, 581, 590, 591, 593, 605, 606, 608, 612, 613, 625, 626, 628, 632, 633, 644, 646, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 711], "even": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 697, 698, 699, 700, 702, 703, 711], "pariti": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 697, 698, 699, 700, 702, 703, 710], "odd": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 697, 698, 699, 700, 702, 703, 711], "stop_bit_mod": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633], "read_byt": [191, 222, 245, 266, 306, 330, 517, 544, 563, 580, 612, 632, 678], "uart_open_async": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 683, 697, 698, 699, 700, 702, 703], "uart_setbaudrate_async": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 683, 697, 698, 699, 700, 702, 703], "uart_setdatabit_async": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 683, 697, 698, 699, 700, 702, 703], "uart_setparity_async": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 683, 697, 698, 699, 700, 702, 703], "uart_setnumstopbit_async": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 683, 697, 698, 699, 700, 702, 703], "informaion": [191, 222, 245, 266, 306, 330, 517, 544, 563, 580, 612, 632], "uart_read_async": [191, 222, 245, 266, 306, 330, 683, 697, 698, 699, 700, 702, 703], "uart_close_async": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 683, 697, 698, 699, 700, 702, 703], "uart_writ": [192, 223, 246, 267, 307, 331, 518, 545, 564, 581, 613, 633, 678, 683, 697, 698, 699, 700, 702, 703], "12345": [192, 223, 246, 267, 307, 331, 518, 545, 564, 581, 613, 633], "uart_write_async": [192, 223, 246, 267, 307, 331, 683, 697, 698, 699, 700, 702, 703], "chungle": [192, 223, 246, 267, 307, 331, 518, 545, 564, 581, 613, 633], "peopl": [192, 223, 246, 267, 307, 331, 518, 545, 564, 581, 613, 633], "can_read": [224, 546, 683, 699], "125": [224, 225, 546, 547, 699, 711], "khz": [224, 225, 546, 547, 699, 711], "250": [224, 225, 546, 547, 699, 707], "mhz": [224, 225, 546, 547, 699, 711], "can_open_async": [224, 225, 683, 699], "can_setspeed_async": [224, 225, 683, 699], "can_start_async": [224, 225, 683, 699], "frame": [224, 546, 697, 699, 700, 702, 703], "frame_list": [224, 546, 699], "can_read_async": [224, 683, 699], "01": [224, 511, 512, 546, 557, 558, 574, 575, 603, 604, 623, 624], "can_stop_async": [224, 225, 683, 699], "can_close_async": [224, 225, 683, 699], "can_writ": [225, 547, 683, 699], "can_length": [225, 547], "extend": [225, 547, 669, 699, 711], "can_typ": [225, 547], "remot": [225, 547, 699, 711], "id": [225, 547, 699], "can_write_async": [225, 683, 699], "33": [225, 547], "22": [225, 547], "11": [225, 547, 699, 707], "88": [225, 547], "77": [225, 547], "55": [225, 547], "66": [225, 547], "sec": [225, 547, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "temperature_rtd": [299, 300, 301, 609, 610, 611], "rtd_read_channel_data": [299, 609], "data0": [299, 300, 609, 610], "data1": [299, 300, 609, 610], "rtd_read_channel_data_with_logg": [300, 610], "logger_writelist": [300, 610, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "rtd_read_channel_statu": [301, 611], "38": [332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668], "system_wifi": [338, 339, 340, 341, 342, 355, 356, 357, 358, 359, 370, 371, 372, 373, 374, 640, 641, 642, 643, 644, 653, 654, 655, 656, 657, 664, 665, 666, 667, 668], "get_wifi_daq_statu": [338, 355, 370, 640, 653, 664], "basic": [338, 355, 370, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 640, 653, 664], "rssi": [338, 355, 370, 640, 653, 664, 704, 705, 706], "batteri": [338, 355, 370, 640, 653, 664, 704, 705, 706], "power": [338, 355, 370, 640, 653, 664, 704, 705, 706, 707], "charg": [338, 355, 370, 640, 653, 664, 704, 705, 706], "wifi_readrssi_async": [338, 355, 370, 683, 704, 705, 706], "wifi_readbattery_async": [338, 355, 370, 683, 704, 705, 706], "wifi_readthermo_async": [338, 355, 370, 683, 704, 705, 706], "power_statu": [338, 355, 370, 640, 653, 664], "wifi_getpowergoodstatus_async": [338, 355, 370, 683, 704, 705, 706], "charge_statu": [338, 355, 370, 640, 653, 664], "wifi_getchargestatus_async": [338, 355, 370, 683, 704, 705, 706], "dbm": [338, 355, 370, 640, 653, 664, 704, 705, 706], "mv": [338, 355, 370, 640, 653, 664, 704, 705, 706], "set_led_statu": [341, 358, 373, 643, 656, 667], "wifi_resetled_async": [341, 358, 373, 683, 704, 705, 706], "green": [341, 358, 373, 643, 656, 667, 704, 705, 706], "wifi_setgreenled_async": [341, 358, 373, 683, 704, 705, 706], "blue": [341, 358, 373, 643, 656, 667, 704, 705, 706], "wifi_setblueled_async": [341, 358, 373, 683, 704, 705, 706], "red": [341, 358, 373, 643, 656, 667, 704, 705, 706], "wifi_setredled_async": [341, 358, 373, 683, 704, 705, 706], "ahrs_read": [347, 645], "three": [347, 645, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "estim": [347, 645, 705], "orient": [347, 348, 645, 646, 705], "sampling_period": [347, 348, 645, 646, 705], "003": [347, 348, 645, 646], "ahrs_open_async": [347, 348, 683, 705], "period": [347, 348, 645, 646, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ahrs_setsamplingperiod_async": [347, 348, 683, 705], "ahrs_start_async": [347, 348, 683, 705], "ahrs_list": [347, 348, 645, 646], "ahrs_getestimate_async": [347, 348, 683, 705], "ahrs_stop_async": [347, 348, 683, 705], "ahrs_close_async": [347, 348, 683, 705], "ahrs_visu": [348, 646], "3d": [348, 646], "stl": [348, 646], "mesh": [348, 646], "mpl_toolkit": [348, 646], "mplot3d": [348, 646], "pil": [348, 646], "imag": [348, 646, 671], "matplotlib": [348, 646, 669], "pyplot": [348, 646], "plt": [348, 646], "gridspec": [348, 646], "mpimg": [348, 646], "font_manag": [348, 646], "rcparam": [348, 646], "transform": [348, 646], "affine2d": [348, 646], "data_path": [348, 646], "materi": [348, 646, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "viz_data": [348, 646], "img_path": [348, 646], "avion_": [348, 646], "font": [348, 646], "findsystemfont": [348, 646], "fontmanag": [348, 646], "addfont": [348, 646], "famili": [348, 646], "global": [348, 646], "mono": [348, 646], "bmh": [348, 646], "bmh_burgundi": [348, 646], "a70f34": [348, 646], "bmh_blue": [348, 646], "3d90be": [348, 646], "bmh_purpl": [348, 646], "7c6ca4": [348, 646], "img_wpc": [348, 646], "imread": [348, 646], "trademark": [348, 646, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "jpg": [348, 646, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "img_wpc_pil": [348, 646], "plane": [348, 646], "constant": [348, 646], "img_yaw": [348, 646], "yaw": [348, 646], "png": [348, 646, 669, 670, 671, 672, 673, 675, 676, 677, 678], "img_pitch": [348, 646], "pitch": [348, 646, 686, 696], "img_rol": [348, 646], "roll": [348, 646], "size_yaw": [348, 646], "arrai": [348, 646, 669], "shape": [348, 646], "center_yaw": [348, 646], "diag_yaw": [348, 646], "sqrt": [348, 646], "sum": [348, 646], "alpha_yaw": [348, 646], "size_pitch": [348, 646], "center_pitch": [348, 646], "diag_pitch": [348, 646], "alpha_pitch": [348, 646], "size_rol": [348, 646], "center_rol": [348, 646], "diag_rol": [348, 646], "alpha_rol": [348, 646], "dictionari": [348, 646, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "plane_dict": [348, 646], "dict": [348, 646], "img": [348, 646], "size": [348, 646, 697, 698, 699, 700, 702, 703, 710], "center": [348, 646, 669, 679, 686, 696], "diag": [348, 646], "alpha": [348, 646, 669], "model_dict": [348, 646], "cat": [348, 646], "label": [348, 646, 669], "view": [348, 646], "400": [348, 646], "rat": [348, 646], "default_model": [348, 646], "degree_to_radian": [348, 646], "pi": [348, 646], "180": [348, 646], "radian_to_degre": [348, 646], "wpc_initializefigur": [348, 646], "nb_row": [348, 646], "nb_col": [348, 646], "share_x": [348, 646], "share_i": [348, 646], "option": [348, 646], "fig": [348, 646], "figur": [348, 646], "figsiz": [348, 646], "clf": [348, 646], "g": [348, 646, 707], "width_ratio": [348, 646], "height_ratio": [348, 646], "d": [348, 646, 670, 671, 683, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 709, 712], "ax_main": [348, 646], "add_subplot": [348, 646], "set_titl": [348, 646], "plot": [348, 646, 669], "ax_plane_yaw": [348, 646], "ax_plane_pitch": [348, 646], "ax_plane_rol": [348, 646], "ax_value_yaw": [348, 646], "ax_value_pitch": [348, 646], "ax_value_rol": [348, 646], "pil_width": [348, 646], "width": [348, 646, 671, 686, 696], "pil_height": [348, 646], "height": [348, 646, 671], "new_pil_imag": [348, 646], "resiz": [348, 646], "figimag": [348, 646], "xo": [348, 646], "bbox": [348, 646], "xmin": [348, 646, 669], "yo": [348, 646], "ymin": [348, 646], "zorder": [348, 646], "ax_dict": [348, 646], "plane_yaw": [348, 646], "plane_pitch": [348, 646], "plane_rol": [348, 646], "value_yaw": [348, 646], "value_pitch": [348, 646], "value_rol": [348, 646], "grid": [348, 646, 669], "further": [348, 646], "ax_grid": [348, 646], "empti": [348, 646], "row": [348, 646, 674], "column": [348, 646, 674], "subplot": [348, 646], "ax_mat": [348, 646], "sharex": [348, 646], "sharei": [348, 646], "squeez": [348, 646], "would": [348, 646], "share": [348, 646], "same": [348, 646], "ensur": [348, 646], "2d": [348, 646], "ax_arr": [348, 646], "flatten": [348, 646], "ax": [348, 646, 669, 686, 696, 707], "add": [348, 646, 674], "wpc_initialize_plan": [348, 646], "angle_typ": [348, 646], "set_axis_off": [348, 646], "d_plane": [348, 646], "img_plan": [348, 646], "im": [348, 646], "imshow": [348, 646], "size_plan": [348, 646], "center_plan": [348, 646], "diag_plan": [348, 646], "alpha_plan": [348, 646], "tt": [348, 646], "toler": [348, 646], "threshold": [348, 646], "percent": [348, 646, 686, 696], "cut": [348, 646], "circl": [348, 646], "set_xlim": [348, 646, 669], "set_ylim": [348, 646, 669], "cc": [348, 646], "fill": [348, 646], "color": [348, 646, 669, 674], "black": [348, 646], "linewidth": [348, 646, 669], "linestyl": [348, 646, 669], "dashdot": [348, 646], "add_artist": [348, 646], "wpc_showfigur": [348, 646], "w": [348, 646], "h": [348, 646], "get_size_inch": [348, 646], "set_size_inch": [348, 646], "ion": [348, 646], "turn": [348, 646, 699], "interact": [348, 646], "wpc_getrotmat": [348, 646], "use_deg": [348, 646], "rot_mat_x": [348, 646], "co": [348, 646], "sin": [348, 646], "rot_mat_i": [348, 646], "rot_mat_z": [348, 646], "rot_mat": [348, 646], "dot": [348, 646], "back": [348, 646], "rxryrz": [348, 646], "wpc_showempti": [348, 646], "tag": [348, 646], "im_yaw": [348, 646], "im_pitch": [348, 646], "im_rol": [348, 646], "im_dict": [348, 646], "from_fil": [348, 646], "data_orig": [348, 646], "vector": [348, 646, 685, 686, 696], "poli": [348, 646], "art3d": [348, 646], "poly3dcollect": [348, 646], "edgecolor": [348, 646], "lw": [348, 646], "lightsteelblu": [348, 646], "add_collection3d": [348, 646], "scale": [348, 646], "view_init": [348, 646], "elev": [348, 646], "azim": [348, 646], "auto_scale_xyz": [348, 646], "fusion": [348, 646], "weight": [348, 646], "bold": [348, 646], "subplots_adjust": [348, 646], "left": [348, 646, 669], "05": [348, 509, 511, 512, 538, 555, 557, 558, 572, 574, 575, 601, 603, 604, 621, 623, 624, 646, 669], "95": [348, 646], "bottom": [348, 646], "top": [348, 646], "canva": [348, 646, 669], "manag": [348, 646], "set_window_titl": [348, 646], "wpc_draw3dmodel": [348, 646], "rotat": [348, 646], "set_vert": [348, 646], "wpc_plot_plan": [348, 646], "remov": [348, 646, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "calcul": [348, 646, 671, 686, 696], "angl": [348, 646], "radian": [348, 646], "deg2rad": [348, 646], "convert": [348, 646, 671, 672, 673], "en": [348, 646], "rotation_matrix": [348, 646], "rotate_deg_around": [348, 646], "rad2deg": [348, 646], "set_transform": [348, 646], "transdata": [348, 646], "wpc_text_button": [348, 646], "clear": [348, 646, 669, 674, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "add_patch": [348, 646], "rectangl": [348, 646], "facecolor": [348, 646, 669], "ebebeb": [348, 646], "transax": [348, 646], "2f": [348, 646, 669], "text": [348, 646, 669, 670, 671, 672, 673, 675, 676, 677, 678], "deg": [348, 646], "fontsiz": [348, 646, 669], "32": [348, 646, 697, 699, 700, 702, 703, 711], "va": [348, 646], "fignum_exist": [348, 646], "tight_layout": [348, 646], "paus": [348, 646], "bcst_enumeratenetworkdevic": [379, 674, 683, 684], "motion_rstencoderposi": [380, 381, 382, 383, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 409, 412, 413, 683, 685, 686, 696], "motion_getprocessst": [380, 381, 382, 383, 683, 685], "motion_getlimitstatu": [380, 381, 404, 406, 683, 685, 686, 696], "motion_start": [382, 383], "daq": [388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 687, 695, 696, 708, 709, 710, 712], "net_getipaddrandsubmask": [388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "net_getmacaddr": [388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_reboot": [389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setrtc": [390, 416, 425, 435, 444, 448, 452, 457, 463, 468, 471, 495, 516, 543, 562, 579, 593, 608, 628, 644, 657, 668, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_getrtc": [390, 416, 425, 435, 444, 448, 452, 457, 463, 468, 471, 495, 513, 516, 540, 543, 559, 562, 576, 579, 590, 593, 605, 608, 625, 628, 644, 657, 668, 675, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "motion_opencfgfil": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 683, 685, 686, 696], "opencfgfil": [391, 393, 397, 400, 403, 404, 405, 406, 409, 412, 413], "motion_loadcfgfil": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 412, 413, 683, 685, 686, 696], "loadcfgfil": [391, 393, 397, 400, 403, 404, 405, 406, 409, 412, 413], "motion_cfgaxi": [391, 393, 397, 400, 403, 404, 405, 406, 409, 410, 412, 413, 683, 686, 696], "motion_cfghom": [391, 404, 406, 409, 683, 686, 696], "motion_cfgaxismov": [391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 409, 410, 412, 413, 683, 686, 696], "motion_startsingleaxismov": [391, 392, 393, 394, 395, 396, 397, 398, 400, 409, 412, 413, 683, 686, 696], "motion_getmovestatu": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409, 683, 686, 696], "motion_getlogicalposi": [391, 407, 409, 683, 686, 696], "motion_getencoderposi": [391, 409, 683, 686, 696], "motion_stop": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 412, 413, 683, 686, 696], "motion_cfgjerkandaccelmod": [392, 398, 683, 686, 696], "motion_cfgalarm": [393, 683, 686, 696], "motion_cfgbreakpoint": [394, 683, 686, 696], "motion_enablebreakpoint": [394, 683, 686, 696], "motion_cfgcaptur": [395, 683, 686, 696], "motion_enablecaptur": [395, 683, 686, 696], "motion_readcapturepoint": [395, 683, 686, 696], "motion_cfginposi": [397, 683, 686, 696], "motion_cfgcircularinterpo": [398, 683, 686, 696], "motion_startcircularinterpo": [398, 683, 686, 696], "motion_cfg2axislinearinterpo": [399, 683, 686, 696], "motion_startlinearinterpo": [399, 402, 683, 686, 696], "motion_3axishronous_mov": 400, "motion_cfghelicalinterpo": [401, 683, 686, 696], "motion_starthelicalinterpo": [401, 683, 686, 696], "motion_cfg3axislinearinterpo": [402, 683, 686, 696], "cfglimit": 403, "motion_startmultiaxismov": [403, 683, 686, 696], "motion_cfgfindref": [404, 405, 406, 683, 686, 696], "motion_findref": [404, 405, 406, 683, 686, 696], "motion_gethomestatu": [404, 406, 683, 686, 696], "motion_checkref": [404, 405, 406, 683, 686, 696], "motion_cfgencod": [405, 412, 413, 683, 685, 686, 696], "motion_setlogicalposi": [407, 683, 686, 696], "motion_overrideaxisposi": [409, 683, 686, 696], "motion_savecfgfil": [410, 683, 685, 686, 696], "motion_overrideaxisveloc": [412, 413, 683, 686, 696], "motion_overrideaxisaccel": [413, 683, 686, 696], "ai_open": [417, 418, 420, 421, 422, 445, 449, 475, 476, 477, 478, 479, 480, 481, 482, 483, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 525, 526, 634, 635, 637, 638, 639, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "ai_setmod": [417, 418, 420, 421, 422, 475, 476, 477, 478, 479, 480, 483, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 634, 635, 637, 638, 639, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 683, 687, 696, 697, 698, 704, 705, 706], "ai_setsamplingr": [417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 683, 687, 696, 697, 698, 704, 705, 706], "ai_setnumsampl": [417, 475, 496, 519, 634, 647, 658, 669, 683, 687, 696, 697, 698, 704, 705, 706], "ai_start": [417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 683, 687, 696, 697, 698, 704, 705, 706], "ai_readstream": [417, 418, 420, 475, 476, 477, 478, 479, 480, 481, 482, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 683, 687, 696, 697, 698, 704, 705, 706], "ai_stop": [417, 418, 420, 475, 476, 477, 478, 483, 496, 497, 499, 519, 520, 522, 634, 635, 637, 647, 648, 650, 658, 659, 661, 669, 683, 687, 696, 697, 698, 704, 705, 706], "ai_clos": [417, 418, 420, 421, 422, 445, 449, 475, 476, 477, 478, 479, 480, 481, 482, 483, 496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 525, 526, 634, 635, 637, 638, 639, 647, 648, 650, 651, 652, 658, 659, 661, 662, 663, 669, 683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "ai_readondemand": [421, 422, 445, 449, 475, 476, 478, 479, 480, 481, 482, 500, 501, 523, 524, 525, 526, 638, 639, 651, 652, 662, 663, 669, 683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "do_openpin": [426, 428, 430, 436, 438, 440, 503, 505, 507, 511, 512, 532, 534, 536, 549, 551, 553, 557, 558, 566, 568, 570, 574, 575, 583, 585, 587, 595, 597, 599, 603, 604, 615, 617, 619, 623, 624, 673, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_writepin": [426, 430, 436, 440, 487, 491, 503, 507, 511, 512, 532, 536, 549, 553, 557, 558, 566, 570, 574, 575, 583, 587, 595, 599, 603, 604, 615, 619, 623, 624, 673, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_openpin": [426, 436, 503, 532, 549, 566, 583, 595, 615, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_readpin": [426, 436, 487, 503, 532, 549, 566, 583, 595, 615, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_closepin": [426, 428, 430, 436, 438, 440, 503, 505, 507, 511, 512, 532, 534, 536, 549, 551, 553, 557, 558, 566, 568, 570, 574, 575, 583, 585, 587, 595, 597, 599, 603, 604, 615, 617, 619, 623, 624, 673, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_closepin": [426, 436, 503, 532, 549, 566, 583, 595, 615, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_openport": [427, 429, 431, 437, 439, 441, 504, 506, 508, 533, 535, 537, 550, 552, 554, 567, 569, 571, 584, 586, 588, 596, 598, 600, 616, 618, 620, 671, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_openport": [427, 437, 504, 533, 550, 567, 584, 596, 616, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_writeport": [427, 431, 437, 441, 454, 488, 492, 504, 508, 533, 537, 550, 554, 567, 571, 584, 588, 596, 600, 616, 620, 671, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_readport": [427, 437, 488, 504, 533, 550, 567, 584, 596, 616, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_closeport": [427, 429, 431, 437, 439, 441, 504, 506, 508, 533, 535, 537, 550, 552, 554, 567, 569, 571, 584, 586, 588, 596, 598, 600, 616, 618, 620, 671, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_closeport": [427, 437, 504, 533, 550, 567, 584, 596, 616, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_togglepin": [428, 438, 489, 505, 534, 551, 568, 585, 597, 617, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_toggleport": [429, 439, 490, 506, 535, 552, 569, 586, 598, 618, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "pwm_open": [432, 510, 539, 556, 573, 589, 602, 622, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_setfrequ": [432, 510, 539, 556, 573, 589, 602, 622, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_setdutycycl": [432, 510, 539, 556, 573, 589, 602, 622, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_start": [432, 510, 539, 556, 573, 589, 602, 622, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_stop": [432, 510, 539, 556, 573, 589, 602, 622, 683, 688, 697, 698, 699, 700, 701, 702, 703], "pwm_close": [432, 510, 539, 556, 573, 589, 602, 622, 683, 688, 697, 698, 699, 700, 701, 702, 703], "relay_open": [453, 454, 683, 692], "relay_read": [453, 683, 692], "relay_clos": [453, 454, 683, 692], "ao_open": [458, 459, 460, 481, 482, 483, 485, 486, 525, 526, 528, 529, 530, 670, 683, 693, 696, 698], "ao_setmod": [458, 528, 683, 693, 696, 698], "ao_setsamplingr": [458, 528, 683, 693, 696, 698], "ao_setenablechannel": [458, 528, 683, 693, 696, 698], "ao_setform": [458, 528, 683, 693, 696, 698], "ao_setformparam": [458, 528, 683, 693, 696, 698], "ao_openstream": [458, 528, 683, 693, 696, 698], "ao_startstream": [458, 528, 683, 693, 696, 698], "ao_closestream": [458, 528, 683, 693, 696, 698], "ao_clos": [458, 459, 460, 481, 482, 483, 485, 486, 525, 526, 528, 529, 530, 670, 683, 693, 696, 698], "ao_writeallchannel": [459, 481, 485, 525, 529, 670, 683, 693, 696, 698], "ao_writeonechannel": [460, 482, 483, 486, 526, 530, 683, 693, 696, 698], "dpot_open": [464, 465, 683, 694], "dpot_clos": [464, 465, 683, 694], "thermal_open": [472, 473, 474, 609, 610, 611, 629, 630, 631, 676, 677, 683, 695, 702, 703], "thermal_setoversampl": [472, 473, 629, 630, 677, 683, 695, 703], "thermal_settyp": [472, 473, 629, 630, 676, 677, 683, 695, 702, 703], "thermal_readsensor": [472, 473, 609, 610, 629, 630, 676, 677, 683, 695, 702, 703], "thermal_clos": [472, 473, 474, 609, 610, 611, 629, 630, 631, 676, 677, 683, 695, 702, 703], "thermal_getstatu": [474, 611, 631, 683, 695, 702, 703], "sys_setaiomod": [475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ai_enablec": [475, 476, 477, 478, 479, 480, 481, 482, 483, 683, 687, 696, 697, 698, 704, 705, 706], "sys_getmod": [475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setdiomod": [487, 488, 489, 490, 491, 492, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "dio_loadstartup": [487, 488, 489, 490, 491, 492, 683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "ai_enablechannel": [496, 497, 499, 500, 501, 519, 520, 522, 523, 524, 525, 526, 683, 687, 696, 697, 698, 704, 705, 706], "counter_open": [502, 531, 548, 565, 582, 594, 614, 683, 697, 698, 699, 700, 701, 702, 703], "counter_start": [502, 531, 548, 565, 582, 594, 614, 683, 697, 698, 699, 700, 701, 702, 703], "counter_stop": [502, 531, 548, 565, 582, 594, 614, 683, 697, 698, 699, 700, 701, 702, 703], "counter_clos": [502, 531, 548, 565, 582, 594, 614, 683, 697, 698, 699, 700, 701, 702, 703], "i2c_open": [509, 538, 555, 572, 601, 621, 672, 683, 697, 698, 699, 700, 702, 703], "i2c_setclockr": [509, 538, 555, 572, 601, 621, 672, 683, 697, 698, 699, 700, 702, 703], "i2c_writ": [509, 538, 555, 572, 601, 621, 672, 683, 697, 698, 699, 700, 702, 703], "pointer": [509, 538, 555, 572, 601, 621], "i2c_read": [509, 538, 555, 572, 601, 621, 672, 683, 697, 698, 699, 700, 702, 703], "i2c_clos": [509, 538, 555, 572, 601, 621, 672, 683, 697, 698, 699, 700, 702, 703], "spi_open": [511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 683, 697, 699, 700, 702, 703], "spi_setdatas": [511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 683, 697, 699, 700, 702, 703], "spi_setfirstbit": [511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 683, 697, 699, 700, 702, 703], "spi_setprescal": [511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 683, 697, 699, 700, 702, 703], "spi_setmod": [511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 683, 697, 699, 700, 702, 703], "spi_readandwrit": [511, 557, 574, 603, 623, 673, 683, 697, 699, 700, 702, 703], "spi_clos": [511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 683, 697, 699, 700, 702, 703], "sys_getserialnumb": [513, 540, 559, 576, 590, 605, 625, 675, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_getpinmodeinport": [514, 541, 560, 577, 591, 606, 626, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "uart_open": [517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 683, 697, 698, 699, 700, 702, 703], "uart_setbaudr": [517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 683, 697, 698, 699, 700, 702, 703], "uart_setdatabit": [517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 683, 697, 698, 699, 700, 702, 703], "uart_setpar": [517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 683, 697, 698, 699, 700, 702, 703], "uart_setnumstopbit": [517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 683, 697, 698, 699, 700, 702, 703], "uart_clos": [517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 683, 697, 698, 699, 700, 702, 703], "can_open": [546, 547, 683, 699], "can_setspe": [546, 547, 683, 699], "can_start": [546, 547, 683, 699], "can_stop": [546, 547, 683, 699], "can_clos": [546, 547, 683, 699], "wifi_readrssi": [640, 653, 664, 683, 704, 705, 706], "wifi_readbatteri": [640, 653, 664, 683, 704, 705, 706], "wifi_readthermo": [640, 653, 664, 683, 704, 705, 706], "wifi_getpowergoodstatu": [640, 653, 664, 683, 704, 705, 706], "wifi_getchargestatu": [640, 653, 664, 683, 704, 705, 706], "wifi_resetl": [643, 656, 667, 683, 704, 705, 706], "wifi_setgreenl": [643, 656, 667, 683, 704, 705, 706], "wifi_setbluel": [643, 656, 667, 683, 704, 705, 706], "wifi_setblule": [643, 656, 667], "wifi_setredl": [643, 656, 667, 683, 704, 705, 706], "ahrs_open": [645, 646, 683, 705], "ahrs_setsamplingperiod": [645, 646, 683, 705], "ahrs_start": [645, 646, 683, 705], "ahrs_getestim": [645, 646, 683, 705], "ahrs_stop": [645, 646, 683, 705], "ahrs_clos": [645, 646, 683, 705], "example_analog_input": 669, "o": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 683], "sy": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "third": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "parti": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "anim": 669, "pyqt5": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "qtwidget": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "qtgui": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "qwidget": 669, "qmessagebox": [669, 671, 675], "ui_design": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "ui_example_gui_ai": 669, "ui_mainwindow": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "class": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "matplotlibwidget": 669, "__init__": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "self": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "parent": 669, "super": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "mainwindow": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "qmainwindow": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "ui": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "setupui": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "path": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 710], "file_path": [669, 670, 671, 672, 673, 675, 676, 677, 678], "dirnam": [669, 670, 671, 672, 673, 675, 676, 677, 678], "__file__": [669, 670, 671, 672, 673, 675, 676, 677, 678], "trademark_path": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "blue_led_path": [669, 670, 671, 672, 673, 675, 676, 677, 678], "led_blu": [669, 670, 671, 672, 673, 675, 676, 677, 678], "red_led_path": [669, 670, 671, 672, 673, 675, 676, 677, 678], "led_r": [669, 670, 671, 672, 673, 675, 676, 677, 678], "green_led_path": [669, 670, 671, 672, 673, 675, 676, 677, 678], "led_green": [669, 670, 671, 672, 673, 675, 676, 677, 678], "gray_led_path": [669, 670, 671, 672, 673, 675, 676, 677, 678], "led_grai": [669, 670, 671, 672, 673, 675, 676, 677, 678], "lb_trademark": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "setpixmap": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "qpixmap": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "lb_led": [669, 670, 671, 672, 673, 675, 676, 677, 678], "flag": [669, 670, 671, 672, 673, 675, 676, 677, 678], "connect_flag": [669, 670, 671, 672, 673, 675, 676, 677, 678], "declar": [669, 670, 671, 672, 673, 675, 676, 677, 678], "plot_y_min": 669, "plot_y_max": 669, "channel_list": [669, 693, 696, 698], "append": [669, 670, 672, 673, 674], "plot_total_tim": 669, "callback": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "event": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "btn_connect": [669, 670, 671, 672, 673, 675, 676, 677, 678], "click": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "connectev": [669, 670, 671, 672, 673, 675, 676, 677, 678], "btn_disconnect": [669, 670, 671, 672, 673, 675, 676, 677, 678], "disconnectev": [669, 670, 671, 672, 673, 675, 676, 677, 678], "btn_aistart": 669, "startaiev": 669, "btn_aistop": 669, "stopaiev": 669, "lineedit_samplingr": 669, "returnpress": 669, "setsamplingrateev": 669, "lineedit_numsampl": 669, "setnumofsampleev": 669, "combobox_aimod": 669, "currentindexchang": 669, "chooseaimodeev": 669, "lineedit_yscalemax": 669, "setyscalemaxev": 669, "lineedit_yscalemin": 669, "setyscaleminev": 669, "kill": 669, "ai_lock": 669, "lock": 669, "acquir": [669, 687, 696, 697, 698, 704, 705, 706], "ai_stream_thread": 669, "aistreamthread": 669, "plotiniti": 669, "plotanim": 669, "closeev": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "selecthandl": [669, 670, 671, 672, 673, 675, 676, 677, 678], "handle_idx": [669, 670, 671, 672, 673, 675, 676, 677, 678], "combobox_handl": [669, 670, 671, 672, 673, 675, 676, 677, 678], "currentindex": [669, 670, 671, 672, 673, 675, 676, 677, 678], "updateparam": [669, 670, 671, 672, 673, 675, 676, 677, 678], "serial_numb": [669, 670, 671, 672, 673, 675, 676, 677, 678], "gui": [669, 670, 671, 672, 673, 675, 676, 677, 678], "lineedit_ip": [669, 670, 671, 672, 673, 675, 676, 677, 678], "combobox_port": [669, 670, 671, 672, 673, 676, 677, 678], "ai_sampling_r": 669, "float": [669, 670, 686, 687, 688, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "ai_n_sampl": 669, "param": [669, 670, 671, 672, 673, 675, 676, 677, 678], "error": [669, 670, 671, 672, 673, 675, 676, 677, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "setdisplayplotnum": 669, "checkconnectionstatu": [669, 671, 675], "checkboxstatu": 669, "x": [669, 686, 696, 704, 705, 706], "mplwidget": 669, "rearrag": 669, "accord": 669, "amount": [669, 687, 688, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "funcanim": 669, "plotchart": 669, "plotgetaxisdata": 669, "interv": 669, "repeat": 669, "draw": 669, "checkbox": 669, "mainui": 669, "window": 669, "list_ch": 669, "cb_ch0": 669, "cb_ch1": 669, "cb_ch2": 669, "cb_ch3": 669, "cb_ch4": 669, "cb_ch5": 669, "cb_ch6": 669, "cb_ch7": 669, "ischeck": [669, 671], "xmax": 669, "x_max": 669, "x_min": 669, "max": [669, 697, 707], "x_list": 669, "xtick": 669, "dx": 669, "tick": 669, "arang": 669, "yield": [669, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "marker": 669, "markers": 669, "err_xlist": 669, "err_ylist": 669, "y": [669, 686, 696, 704, 705, 706], "xtickslabel": 669, "set_xtick": 669, "new_tick": 669, "plotconvertxtick": 669, "set_xticklabel": 669, "set_xlabel": 669, "12": [669, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "set_ylabel": 669, "v": [669, 690, 691], "legend": 669, "loc": 669, "shadow": 669, "bbox_to_anchor": 669, "75": 669, "f0f0f0": 669, "bac3d1": 669, "num": 669, "yscalemax": 669, "yscalemin": 669, "messag": [669, 671, 675, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "server": [669, 671, 675], "app": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "qapplic": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "wpc_main_ui": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "exit": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "exec_": [669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "example_analog_output": 670, "analog": [670, 693, 704, 705, 706, 707], "ui_example_gui_ao": 670, "devid": [670, 676, 677, 678], "fct_list": 670, "hrztslider_cb0": 670, "hrztslider_cb1": 670, "hrztslider_cb2": 670, "hrztslider_cb3": 670, "hrztslider_cb4": 670, "hrztslider_cb5": 670, "hrztslider_cb6": 670, "hrztslider_cb7": 670, "obj_hrztslid": 670, "getattr": [670, 671], "horizontalslid": 670, "setrang": 670, "setsinglestep": 670, "valuechang": 670, "btn_updat": 670, "writeaovalu": 670, "btn_setal": 670, "setlineeditvalueev": 670, "scaledvalu": 670, "lineedit0": 670, "settext": [670, 672, 673, 675, 676, 677, 678], "lineedit1": 670, "lineedit2": 670, "lineedit3": 670, "lineedit4": 670, "lineedit5": 670, "lineedit6": 670, "lineedit7": 670, "voltage_list": 670, "obj_lineedit": 670, "lineedit": 670, "lineedit_setal": 670, "example_digital_output": 671, "ui_example_gui_do": 671, "state_c": 671, "255": [671, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "switch_blue_path": 671, "switch_blu": 671, "switch_gray_path": 671, "switch_grai": 671, "backward": 671, "slash": 671, "replac": [671, 672, 673], "obj_chbox_st": 671, "checkbox_st": 671, "statechang": 671, "statedoev": 671, "setstylesheet": [671, 674], "qcheckbox": 671, "indic": [671, 686, 687, 696, 697, 698, 699, 704, 705, 706, 708, 710], "60px": 671, "uncheck": 671, "url": 671, "mcu": 671, "example_i2c": 672, "ui_example_gui_i2c": 672, "btn_write": [672, 673, 678], "writeev": [672, 673, 678], "btn_read": [672, 673, 678], "readev": [672, 673, 678], "btn_set": [672, 673, 676, 677], "setclockev": 672, "clock_mod": 672, "combobox_clockr": 672, "hex": [672, 673], "write_addr": 672, "lineedit_writeaddr": 672, "lineedit_writ": [672, 673, 678], "write_data": [672, 673, 678, 697, 698, 699, 700, 702, 703], "converstrtointlist": [672, 673], "byte_read": 672, "lineedit_byteread": [672, 678], "read_addr": 672, "lineedit_readaddr": 672, "lineedit_read": [672, 673, 678], "str_": [672, 673, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "split": [672, 673, 674], "comma": [672, 673], "write_data_strlist": [672, 673], "write_data_int": [672, 673], "item": [672, 673], "example_spi": 673, "ui_example_gui_spi": 673, "setev": [673, 676, 677], "combobox_mod": 673, "combobox_prescal": 673, "example_find_all_devic": 674, "find": [674, 680, 681, 685, 686, 696], "qtablewidget": 674, "qtcore": 674, "qt": 674, "ui_example_gui_find_all_devic": 674, "column_width": 674, "160": 674, "getcwd": 674, "tabl": 674, "initibroadcastt": 674, "button": 674, "btn_broadcast": 674, "broadcastnetworkev": 674, "broadcast_list": 674, "tablewidget_brst": 674, "setcolumnwidth": 674, "background": 674, "217536": 674, "loaddata": 674, "setrowcount": 674, "setitem": 674, "qtablewidgetitem": 674, "firmware_v": 674, "restoreoverridecursor": 674, "waitcursor": 674, "setoverridecursor": 674, "broadcast": [674, 684], "broadcast_info": 674, "length": [674, 710], "device_amount": 674, "model_vers": 674, "str_list": 674, "_": 674, "example_get_device_info": 675, "ui_example_gui_get_device_info": 675, "btn_deviceinfo": 675, "getdeviceinfoev": 675, "sys_getipaddrandsubmask": [675, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_getmacaddr": [675, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "lineedit_sbk": 675, "lineedit_serialnum": 675, "lineedit_mac": 675, "lineedit_model": 675, "lineedit_vers": 675, "lineedit_rtc": 675, "tcp": [675, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706, 707, 710], "example_rtd": 676, "ui_example_gui_rtd": 676, "btn_rtd": 676, "rtdevent": 676, "combobox_typ": [676, 677], "noisereject": [676, 677], "combobox_noisereject": [676, 677], "lineedit_sensor0": [676, 677], "lineedit_sensor1": [676, 677], "example_thermo": 677, "ui_example_gui_thermocoupl": 677, "btn_temp": 677, "tempev": 677, "combobox_oversampl": 677, "example_uart": 678, "ui_example_gui_uart": 678, "lb_ledport": 678, "btn_open": 678, "openportev": 678, "btn_close": 678, "closeportev": 678, "combobox_baudr": 678, "currenttext": 678, "databit": 678, "combobox_databit": 678, "combobox_par": 678, "stopbit": 678, "combobox_stopbit": 678, "test": [679, 685, 686, 696], "panel": 679, "finder": [679, 683], "logger": [680, 681], "multi": [680, 681, 686, 696, 707], "waveform": [680, 681], "loopback": [680, 681], "blinki": [680, 681], "hello": [680, 681], "tutori": 680, "multipl": [680, 686, 696], "drive": [680, 681, 685, 710, 712], "posit": [680, 681, 685, 686, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 711], "blend": [680, 681], "scan": [680, 681, 685], "logic": [680, 681, 685, 686, 696, 711], "1axi": [680, 681], "alarm": [680, 681, 685, 686, 696], "breakpoint": [680, 681, 686, 696, 710], "captur": [680, 681, 686, 696, 707, 710], "inposit": [680, 681, 686, 696], "2axi": [680, 681], "circular": [680, 681, 686, 696, 707], "interpo": [680, 681], "linear": [680, 681, 686, 696, 707], "3axi": [680, 681], "helic": [680, 681, 686, 696, 707], "pwm": [680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 709, 710], "relai": [680, 681, 692, 707, 710], "dpot": [680, 681, 694, 710, 712], "tc": [680, 681, 695, 702, 703, 712], "i2c": [680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "spi": [680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712], "uart": [680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710, 712], "rtd": [680, 681, 695, 702, 703, 712], "ahr": [680, 681, 705, 710, 712], "visual": [680, 681], "control": [682, 686, 707], "motion card": 682, "wifi": [682, 707, 708, 709, 712], "descript": 683, "bcst_checkmacandreboot": [683, 684], "bcst_checkmacandreboot_async": [683, 684], "bcst_checkmacandsetip": [683, 684], "bcst_checkmacandsetip_async": [683, 684], "e3": [683, 708, 712], "A": [683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 707, 708, 712], "pinout": 683, "ai_getport": [683, 687, 690, 691, 696, 697, 698, 704, 705, 706], "net_getgatewai": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "net_getgateway_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "net_setipaddrandsubmask": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "net_setipaddrandsubmask_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_getgatewai": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_getgateway_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_getipaddrandsubmask_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_getmacaddr_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_getpythonvers": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_getpythonversion_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_rebootonbootload": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_rebootonbootloader_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setdimod": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setdimode_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setdomod": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setdomode_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setipaddrandsubmask": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_setipaddrandsubmask_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "sys_setidlemod": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setidlemode_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setmotionmod": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setmotionmode_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setswitchmod": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "sys_setswitchmode_async": [683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "wifi_getwifibandwidth": [683, 704, 705, 706], "wifi_getwifibandwidth_async": [683, 704, 705, 706], "wifi_getwificonfigur": [683, 704, 705, 706], "wifi_getwificonfiguration_async": [683, 704, 705, 706], "wifi_readacceler": [683, 704, 705, 706], "wifi_readaccleration_async": [683, 704, 705, 706], "wifi_setap": [683, 704, 705, 706], "wifi_setap_async": [683, 704, 705, 706], "wifi_setbandwidth": [683, 704, 705, 706], "wifi_setbandwidth_async": [683, 704, 705, 706], "ah": [683, 708, 712], "ahrs_reset": [683, 705], "ahrs_reset_async": [683, 705], "f4": [683, 708, 712], "ao_getenablechannel": [683, 693, 696, 698], "ao_getmod": [683, 693, 696, 698], "ao_getmode_async": [683, 693, 696, 698], "ao_getport": [683, 693, 696, 698], "ao_getst": [683, 693, 696, 698], "ao_getvalu": [683, 693, 696, 698], "ao_getvalues_async": [683, 693, 696, 698], "dio_savestartup": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_savestartup_async": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_setportdi": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_setportdi_async": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_setportdo": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_setportdo_async": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_setportidl": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "dio_setportidle_async": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "di_getpinmap": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "do_getpinmap": [683, 688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "motion_cfg4axislinearinterpo": [683, 686, 696], "motion_cfg4axislinearinterpo_async": [683, 686, 696], "edriv": [683, 707, 712], "st": [683, 707, 712], "motion_cfgaxisdirect": [683, 685], "motion_cfgaxisdirection_async": [683, 685], "motion_getalarmstatu": [683, 685], "motion_getalarmstatus_async": [683, 685], "motion_getparamet": [683, 685], "motion_getparameters_async": [683, 685], "motion_loadparamet": [683, 685], "motion_loadparameters_async": [683, 685], "motion_readcurrentveloc": [683, 685], "motion_readcurrentvelocity_async": [683, 685], "motion_readencoderposit": [683, 685], "motion_readencoderposition_async": [683, 685], "motion_resetfactori": [683, 685], "motion_resetfactory_async": [683, 685], "motion_saveparamet": [683, 685], "motion_saveparameters_async": [683, 685], "motion_setparamet": [683, 685], "motion_setparameters_async": [683, 685], "motion_startfindzpolar": [683, 685], "motion_startfindzpolarity_async": [683, 685], "ethan": [683, 708, 709, 712], "ia": [683, 712], "l": [683, 712], "p": [683, 712], "thermal_getpinmap": [683, 695, 702, 703], "f1": [683, 708, 709, 712], "i2c_getpinmap": [683, 697, 698, 699, 700, 702, 703], "i2c_reset": [683, 697, 698, 699, 700, 702, 703], "i2c_reset_async": [683, 697, 698, 699, 700, 702, 703], "i2c_setaddresss": [683, 697, 698, 699, 700, 702, 703], "i2c_setaddresssize_async": [683, 697, 698, 699, 700, 702, 703], "spi_getpinmap": [683, 697, 699, 700, 702, 703], "spi_read": [683, 697, 699, 700, 702, 703], "spi_read_async": [683, 697, 699, 700, 702, 703], "spi_reset": [683, 697, 699, 700, 702, 703], "spi_reset_async": [683, 697, 699, 700, 702, 703], "uart_getpinmap": [683, 697, 698, 699, 700, 702, 703], "uart_reset": [683, 697, 698, 699, 700, 702, 703], "uart_reset_async": [683, 697, 698, 699, 700, 702, 703], "uart_stopread": [683, 697, 698, 699, 700, 702, 703], "uart_stopreading_async": [683, 697, 698, 699, 700, 702, 703], "snk": 683, "aod": [683, 708, 709, 712], "td": [683, 709, 712], "rd": [683, 709, 712], "cd": [683, 709, 712], "can_getport": [683, 699], "can_setrxfilterormask": [683, 699], "can_setrxfilterormask_async": [683, 699], "can_setrxfilteringon": [683, 699], "can_setrxfilteringon_async": [683, 699], "verbos": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "mac_addr": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "reboot": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "separ": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "colon": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "successfulli": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "otherwis": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "here": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "subnet_mask": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "dev_info_list": 684, "element": [684, 687, 696, 697, 698, 699, 704, 705, 706], "contain": 684, "subnet": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "mask": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 704, 705, 706], "bool": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "whether": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "out": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "disonnect": 684, "motor": [685, 707, 712], "phase": [685, 693, 696, 697, 698, 699, 700, 702, 703, 707], "stepper": [685, 707, 710], "axis_dir": [685, 686, 696], "dirction": 685, "origin": 685, "invers": 685, "specifi": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "addit": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "encoder_dir": [685, 686, 696], "limit_polar": [685, 686, 696], "activ": [685, 686, 688, 696, 697, 698, 699, 700, 701, 702, 703, 711], "given": [685, 686, 687, 690, 691, 693, 696, 697, 698, 699, 704, 705, 706], "singal": [685, 686, 696], "instantan": [685, 686, 696], "filenam": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "current": [685, 686, 690, 691, 693, 696, 698, 707], "veloicti": 685, "factori": 685, "count": [685, 686, 696, 697, 698, 699, 700, 701, 702, 703], "s2": [685, 686, 696], "distanc": [685, 686, 696], "locat": [685, 686, 696], "request": [685, 686, 696, 697, 698, 699, 700, 702, 703], "z": [685, 686, 696, 704, 705, 706], "getewai": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "web": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706, 707], "gatewai": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "network_info": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "deprec": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "v1": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "Will": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "ref": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 704, 705, 706], "mani": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pin1": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pin7": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "disabl": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "adc": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "softwar": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "repres": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712], "year": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "month": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "dai": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "hour": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "minut": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "charact": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "bootload": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710], "ce": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "31": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "24": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "23": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "59": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "success": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "switch": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "base": [686, 690, 691, 707], "modular": [686, 707], "inter": [686, 707], "clear_old": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "old": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "alread": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "exist": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "value_mat": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "value_list": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "object": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "destin": [686, 696], "axis4": [686, 696], "dest_posi4": [686, 696], "four": [686, 696], "en_alarm": [686, 696], "alarm_polar": [686, 696], "selector": [686, 696], "stepper_output": [686, 696], "servo_on_polar": [686, 696], "puls": [686, 696, 707, 710, 711], "clockwis": [686, 696], "counterclockwis": [686, 696], "dir": [686, 696, 711], "One": [686, 696, 711], "cw": [686, 696, 707, 711], "ccw": [686, 696, 707, 711], "breakpoint_polar": [686, 696], "start_posi": [686, 696], "capture_typ": [686, 696], "rise": [686, 696, 711], "edg": [686, 696, 711], "fall": [686, 696, 711], "respect": [686, 696], "finish": [686, 696], "encoder_z_polar": [686, 696], "search_typ": [686, 696], "search_dir": [686, 696], "search": [686, 696, 710], "adjust": [686, 696, 707], "en_axis3": [686, 696], "en_axis4": [686, 696], "rotation_numb": [686, 696], "calculation_timeout": [686, 696], "en_hom": [686, 696], "home_polar": [686, 696], "en_inposi": [686, 696], "inposi_polar": [686, 696], "accel_mod": [686, 696], "accerler": [686, 696], "increas": [686, 696], "decreas": [686, 696], "per": [686, 696, 697, 698, 699, 700, 702, 703], "unit": [686, 696], "acceleration_mod": [686, 696], "trapezoid": [686, 696], "curv": [686, 696, 707], "sequenc": [686, 696], "en_break": [686, 696], "en_captur": [686, 696], "emcod": [686, 696], "new": [686, 696], "axis_list": [686, 696], "halt": [686, 696, 711], "8ch": [687, 688, 690, 691, 693, 698, 704, 705, 706, 707], "chip": [687, 696, 697, 698, 704, 705, 706, 708, 710], "volt": [687, 693, 696, 697, 698, 704, 705, 706], "measur": [687, 696, 697, 698, 704, 705, 706], "num_sampl": [687, 693, 696, 697, 698, 704, 705, 706], "pc": [687, 696, 697, 698, 699, 704, 705, 706], "stock": [687, 696, 697, 698, 699, 704, 705, 706], "queue": [687, 696, 697, 698, 699, 704, 705, 706, 710], "call": [687, 696, 697, 698, 699, 704, 705, 706, 708], "fewer": [687, 696, 697, 698, 704, 705, 706], "expect": [687, 696, 697, 698, 704, 705, 706], "ones": [687, 696, 697, 698, 704, 705, 706], "expir": [687, 696, 697, 698, 704, 705, 706], "arriv": [687, 696, 697, 698, 699, 704, 705, 706], "becom": [687, 696, 697, 698, 699, 704, 705, 706], "ineffect": [687, 696, 697, 698, 699, 704, 705, 706], "alreadi": [687, 696, 697, 698, 699, 704, 705, 706, 710], "sample_list": [687, 696, 697, 698, 704, 705, 706], "been": [687, 693, 696, 697, 698, 704, 705, 706], "made": [687, 693, 696, 697, 698, 704, 705, 706], "24v": [688, 696, 701, 707], "6ch": [688, 692, 707], "enable_list": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "about": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "direction_list": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "when": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "intput": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "associ": [688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "pinmap": [688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "kei": [688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "integ": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "thei": [688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "p0": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "p1": [688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703], "pin6": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "pin5": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "pin4": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "pin3": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "pin2": [688, 689, 692, 696, 697, 698, 699, 700, 701, 702, 703], "ex_d": [689, 712], "ma": [690, 691], "20ma": [691, 707], "10v": [691, 693, 696, 704, 705, 706, 707], "qualiti": [692, 707], "mechan": [692, 707], "relay_count": 692, "stand": [693, 696, 698, 712], "where": [693, 696, 698], "which": [693, 696, 698, 702], "accordingli": [693, 696, 698], "averag": [693, 696, 698], "4ch": [694, 707], "resistor": [694, 707], "ratio": 694, "7ch": [695, 707], "tupl": [695, 697, 698, 699, 700, 702, 703], "constitut": [695, 697, 698, 699, 700, 702, 703], "physic": [695, 697, 698, 699, 700, 702, 703], "thermal1": [695, 702, 703], "five": [695, 702, 703], "p2": [695, 697, 698, 699, 700, 702, 703], "thermal_port": [695, 702, 703], "circuit": [695, 702, 703], "fault": [695, 702, 703], "manual": [695, 702, 703], "temperatur": [695, 702, 703, 704, 705, 706], "celsiu": [695, 702, 703, 704, 705, 706], "type_": [695, 702, 703], "24ch": [696, 707], "12ch": [696, 701, 707], "5v": [696, 698, 707], "ttl": [696, 707], "26ch": [697, 700, 707], "3v": [697, 698, 699, 700, 702, 703, 707], "16khz": 697, "i2c1": [697, 698, 699, 700, 702, 703], "i2c2": [697, 698, 699, 700, 702, 703], "p3": [697, 698, 699, 700, 702, 703], "i2c_port": [697, 698, 699, 700, 702, 703], "read_address": [697, 698, 699, 700, 702, 703], "bytes_to_read": [697, 698, 699, 700, 702, 703], "i2c_data": [697, 698, 699, 700, 702, 703], "desir": [697, 698, 699, 700, 702, 703], "400000": [697, 698, 699, 700, 702, 703, 711], "plu": [697, 698, 699, 700, 702, 703, 711], "1000000": [697, 698, 699, 700, 702, 703, 711], "3400000": [697, 698, 699, 700, 702, 703, 711], "write_address": [697, 698, 699, 700, 702, 703], "transfer": [697, 698, 699, 700, 702, 703, 710], "spi1": [697, 699, 700, 702, 703, 711], "spi2": [697, 699, 700, 702, 703, 711], "spi_port": [697, 699, 700, 702, 703], "spi_data": [697, 699, 700, 702, 703], "maximum": [697, 699, 700, 702, 703, 707, 710], "128": [697, 699, 700, 702, 703, 711], "uart1": [697, 698, 699, 700, 702, 703], "uart2": [697, 698, 699, 700, 702, 703], "uart_port": [697, 698, 699, 700, 702, 703], "uart_data": [697, 698, 699, 700, 702, 703], "baud_rat": [697, 698, 699, 700, 702, 703], "baud": [697, 698, 699, 700, 702, 703, 710], "16ch": [698, 707], "20ch": [699, 707], "num_fram": 699, "millisecond": 699, "canfram": 699, "give": 699, "identifi": 699, "extended_id": 699, "tell": 699, "id_": 699, "filter": [699, 710], "recept": 699, "buffer": 699, "29": 699, "ignor": 699, "on_off": 699, "speed_mod": 699, "dsnk": [701, 709, 712], "14ch": [701, 707], "2ch": [702, 703, 707], "pt": [702, 707], "21ch": [702, 703, 707], "good": [704, 705, 706], "bandwidth": [704, 705, 706], "ht20": [704, 705, 706], "ht40": [704, 705, 706], "reconnect": [704, 705, 706], "ap": [704, 705, 706], "stai": [704, 705, 706], "wifi_configur": [704, 705, 706], "retri": [704, 705, 706], "accleration_three_axi": [704, 705, 706], "volatg": [704, 705, 706], "level": [704, 705, 706], "station": [704, 705, 706], "port1": [704, 705, 706], "port2": [704, 705, 706], "1336": [704, 705, 706], "built": [705, 707], "9dof": [705, 707], "imu": [705, 707], "postur": [705, 707], "est": [705, 707], "photo": 707, "board": 707, "quick": 707, "amplifi": 707, "yaskawa": 707, "panason": 707, "mitsubishi": 707, "delta": 707, "etc": 707, "differenti": 707, "8mpp": 707, "abz": 707, "12mhz": 707, "break": 707, "microstep": 707, "resolut": 707, "51": 707, "revolut": 707, "suppli": 707, "36v": 707, "1a": 707, "peak": 707, "5a": 707, "fwd": 707, "rev": 707, "nomin": 707, "8mhz": 707, "stall": 707, "detect": 707, "intellig": 707, "energi": 707, "diagnost": 707, "ramp": 707, "smooth": 707, "idc": 707, "50p": 707, "multiplex": 707, "4x6": 707, "matrix": 707, "100m": 707, "20khz": 707, "24vdc": 707, "opto": 707, "isol": 707, "ethanex_d": 707, "1khz": 707, "NO": 707, "nc": 707, "220vdc": 707, "vac": 707, "2m": 707, "exclud": 707, "bounc": 707, "1m": [707, 711], "variabl": 707, "300": 707, "50k": 707, "ohm": 707, "settl": 707, "160m": 707, "1ch": 707, "400khz": 707, "full": 707, "bu": 707, "industri": 707, "sink": 707, "extern": [707, 710], "1mbp": 707, "v2": 707, "0b": 707, "10khz": 707, "802": 707, "ghz": 707, "16k": 708, "8k": 708, "3k": 708, "4k": 708, "2k": 708, "6k": 708, "0k": 708, "12k": 708, "fix": 708, "20k": 708, "below": 708, "1k": 708, "5k": 708, "ctr": 709, "seri": [709, 712], "520003": 710, "warn": 710, "occurr": 710, "overflow": 710, "520002": 710, "520001": 710, "520000": 710, "519000": 710, "librari": 710, "libusb": 710, "dll": 710, "look": 710, "7000": 710, "7001": 710, "7002": 710, "hal": 710, "7003": 710, "7004": 710, "7005": 710, "7006": 710, "7007": 710, "7008": 710, "7009": 710, "7010": 710, "7011": 710, "7012": 710, "7013": 710, "ol": 710, "7014": 710, "core": 710, "7015": 710, "7016": 710, "7017": 710, "7018": 710, "7019": 710, "7020": 710, "7021": 710, "7022": 710, "7023": 710, "7024": 710, "7025": 710, "udp": 710, "7026": 710, "7027": 710, "parser": 710, "7028": 710, "8000": 710, "8001": 710, "fail": 710, "plugin": 710, "8002": 710, "8003": 710, "lost": 710, "8004": 710, "packet": 710, "8005": 710, "valid": 710, "recogn": 710, "8006": 710, "inconsist": 710, "between": 710, "8007": 710, "8008": 710, "8009": 710, "accept": 710, "8010": 710, "extens": 710, "8011": 710, "No": 710, "directori": 710, "8100": 710, "occupi": 710, "8101": 710, "8102": 710, "8103": 710, "8104": 710, "8200": 710, "8201": 710, "8202": 710, "8203": 710, "8204": 710, "8300": 710, "8301": 710, "8302": 710, "span": 710, "8303": 710, "8304": 710, "8305": 710, "8400": 710, "8401": 710, "8500": 710, "8501": 710, "8502": 710, "8503": 710, "8600": 710, "8601": 710, "8602": 710, "8700": 710, "8701": 710, "exce": 710, "8702": 710, "8703": 710, "8704": 710, "8705": 710, "8800": 710, "8801": 710, "8802": 710, "8803": 710, "8804": 710, "8805": 710, "8900": 710, "8901": 710, "8902": 710, "invalid": 710, "8903": 710, "tx": 710, "8904": 710, "prioriti": 710, "9100": 710, "9101": 710, "9102": 710, "9103": 710, "9104": 710, "9105": 710, "9106": 710, "9107": 710, "9108": 710, "9109": 710, "9110": 710, "9111": 710, "9112": 710, "9113": 710, "9200": 710, "9300": 710, "9301": 710, "rectangular": 711, "125k": 711, "250k": 711, "500k": 711, "bp": 711, "peripher": 711, "f_pclk2": 711, "72": 711, "f_pclk1": 711, "36": 711, "18": 711, "25": 711, "562": 711, "281": 711, "140": 711, "625": 711, "big": 711, "littl": 711, "remark": 712}, "objects": {"": [[682, 0, 0, "-", "pywpc"]], "pywpc": [[684, 1, 1, "", "DeviceFinder"], [685, 1, 1, "", "EDriveST"], [686, 1, 1, "", "EMotion"], [687, 1, 1, "", "EthanA"], [688, 1, 1, "", "EthanD"], [689, 1, 1, "", "EthanEXD"], [690, 1, 1, "", "EthanI"], [691, 1, 1, "", "EthanIA"], [692, 1, 1, "", "EthanL"], [693, 1, 1, "", "EthanO"], [694, 1, 1, "", "EthanP"], [695, 1, 1, "", "EthanT"], [696, 1, 1, "", "STEM"], [697, 1, 1, "", "USBDAQF1AD"], [698, 1, 1, "", "USBDAQF1AOD"], [699, 1, 1, "", "USBDAQF1CD"], [700, 1, 1, "", "USBDAQF1D"], [701, 1, 1, "", "USBDAQF1DSNK"], [702, 1, 1, "", "USBDAQF1RD"], [703, 1, 1, "", "USBDAQF1TD"], [704, 1, 1, "", "WifiDAQE3A"], [705, 1, 1, "", "WifiDAQE3AH"], [706, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[684, 2, 1, "", "Bcst_checkMACAndReboot"], [684, 2, 1, "", "Bcst_checkMACAndReboot_async"], [684, 2, 1, "", "Bcst_checkMACAndSetIP"], [684, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [684, 2, 1, "", "Bcst_enumerateNetworkDevices"], [684, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [684, 2, 1, "", "Bcst_enumerateUSBDevices"], [684, 2, 1, "", "close"], [684, 2, 1, "", "connect"], [684, 2, 1, "", "disconnect"]], "pywpc.EDriveST": [[685, 2, 1, "", "Motion_cfgAxisDirection"], [685, 2, 1, "", "Motion_cfgAxisDirection_async"], [685, 2, 1, "", "Motion_cfgEncoder"], [685, 2, 1, "", "Motion_cfgEncoder_async"], [685, 2, 1, "", "Motion_cfgLimit"], [685, 2, 1, "", "Motion_cfgLimit_async"], [685, 2, 1, "", "Motion_close"], [685, 2, 1, "", "Motion_close_async"], [685, 2, 1, "", "Motion_enableServoOff"], [685, 2, 1, "", "Motion_enableServoOff_async"], [685, 2, 1, "", "Motion_enableServoOn"], [685, 2, 1, "", "Motion_enableServoOn_async"], [685, 2, 1, "", "Motion_getAlarmStatus"], [685, 2, 1, "", "Motion_getAlarmStatus_async"], [685, 2, 1, "", "Motion_getLimitStatus"], [685, 2, 1, "", "Motion_getLimitStatus_async"], [685, 2, 1, "", "Motion_getParameters"], [685, 2, 1, "", "Motion_getParameters_async"], [685, 2, 1, "", "Motion_getProcessState"], [685, 2, 1, "", "Motion_getProcessState_async"], [685, 2, 1, "", "Motion_loadCfgFile"], [685, 2, 1, "", "Motion_loadCfgFile_async"], [685, 2, 1, "", "Motion_loadParameters"], [685, 2, 1, "", "Motion_loadParameters_async"], [685, 2, 1, "", "Motion_open"], [685, 2, 1, "", "Motion_openCfgFile"], [685, 2, 1, "", "Motion_openCfgFile_async"], [685, 2, 1, "", "Motion_open_async"], [685, 2, 1, "", "Motion_readCurrentVelocity"], [685, 2, 1, "", "Motion_readCurrentVelocity_async"], [685, 2, 1, "", "Motion_readEncoderPosition"], [685, 2, 1, "", "Motion_readEncoderPosition_async"], [685, 2, 1, "", "Motion_resetFactory"], [685, 2, 1, "", "Motion_resetFactory_async"], [685, 2, 1, "", "Motion_rstEncoderPosi"], [685, 2, 1, "", "Motion_rstEncoderPosi_async"], [685, 2, 1, "", "Motion_saveCfgFile"], [685, 2, 1, "", "Motion_saveCfgFile_async"], [685, 2, 1, "", "Motion_saveParameters"], [685, 2, 1, "", "Motion_saveParameters_async"], [685, 2, 1, "", "Motion_setParameters"], [685, 2, 1, "", "Motion_setParameters_async"], [685, 2, 1, "", "Motion_startFindHome"], [685, 2, 1, "", "Motion_startFindHome_async"], [685, 2, 1, "", "Motion_startFindLimit"], [685, 2, 1, "", "Motion_startFindLimit_async"], [685, 2, 1, "", "Motion_startFindZPolarity"], [685, 2, 1, "", "Motion_startFindZPolarity_async"], [685, 2, 1, "", "Motion_startPositionMove"], [685, 2, 1, "", "Motion_startPositionMove_async"], [685, 2, 1, "", "Motion_startScanMove"], [685, 2, 1, "", "Motion_startScanMove_async"], [685, 2, 1, "", "Motion_startVelocticyMove"], [685, 2, 1, "", "Motion_startVelocticyMove_async"], [685, 2, 1, "", "Motion_stopProcess"], [685, 2, 1, "", "Motion_stopProcess_async"], [685, 2, 1, "", "Net_getGateway"], [685, 2, 1, "", "Net_getGateway_async"], [685, 2, 1, "", "Net_getIPAddrAndSubmask"], [685, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [685, 2, 1, "", "Net_getMACAddr"], [685, 2, 1, "", "Net_getMACAddr_async"], [685, 2, 1, "", "Net_setIPAddrAndSubmask"], [685, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [685, 2, 1, "", "Sys_getDriverInfo"], [685, 2, 1, "", "Sys_getDriverInfo_async"], [685, 2, 1, "", "Sys_getGateway"], [685, 2, 1, "", "Sys_getGateway_async"], [685, 2, 1, "", "Sys_getIPAddrAndSubmask"], [685, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [685, 2, 1, "", "Sys_getMACAddr"], [685, 2, 1, "", "Sys_getMACAddr_async"], [685, 2, 1, "", "Sys_getMode"], [685, 2, 1, "", "Sys_getMode_async"], [685, 2, 1, "", "Sys_getPinModeInPort"], [685, 2, 1, "", "Sys_getPinModeInPort_async"], [685, 2, 1, "", "Sys_getPythonVersion"], [685, 2, 1, "", "Sys_getPythonVersion_async"], [685, 2, 1, "", "Sys_getRTC"], [685, 2, 1, "", "Sys_getRTC_async"], [685, 2, 1, "", "Sys_getSerialNumber"], [685, 2, 1, "", "Sys_getSerialNumber_async"], [685, 2, 1, "", "Sys_reboot"], [685, 2, 1, "", "Sys_rebootOnBootloader"], [685, 2, 1, "", "Sys_rebootOnBootloader_async"], [685, 2, 1, "", "Sys_reboot_async"], [685, 2, 1, "", "Sys_setAIOMode"], [685, 2, 1, "", "Sys_setAIOMode_async"], [685, 2, 1, "", "Sys_setDIMode"], [685, 2, 1, "", "Sys_setDIMode_async"], [685, 2, 1, "", "Sys_setDIOMode"], [685, 2, 1, "", "Sys_setDIOMode_async"], [685, 2, 1, "", "Sys_setDOMode"], [685, 2, 1, "", "Sys_setDOMode_async"], [685, 2, 1, "", "Sys_setIPAddrAndSubmask"], [685, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [685, 2, 1, "", "Sys_setIdleMode"], [685, 2, 1, "", "Sys_setIdleMode_async"], [685, 2, 1, "", "Sys_setMotionMode"], [685, 2, 1, "", "Sys_setMotionMode_async"], [685, 2, 1, "", "Sys_setRTC"], [685, 2, 1, "", "Sys_setRTC_async"], [685, 2, 1, "", "Sys_setSwitchMode"], [685, 2, 1, "", "Sys_setSwitchMode_async"], [685, 2, 1, "", "close"], [685, 2, 1, "", "connect"], [685, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[686, 2, 1, "", "Logger_openFile"], [686, 2, 1, "", "Logger_write2DList"], [686, 2, 1, "", "Logger_writeHeader"], [686, 2, 1, "", "Logger_writeList"], [686, 2, 1, "", "Logger_writeValue"], [686, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [686, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [686, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [686, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [686, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [686, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [686, 2, 1, "", "Motion_cfgAlarm"], [686, 2, 1, "", "Motion_cfgAlarm_async"], [686, 2, 1, "", "Motion_cfgAxis"], [686, 2, 1, "", "Motion_cfgAxisMove"], [686, 2, 1, "", "Motion_cfgAxisMove_async"], [686, 2, 1, "", "Motion_cfgAxis_async"], [686, 2, 1, "", "Motion_cfgBreakPoint"], [686, 2, 1, "", "Motion_cfgBreakPoint_async"], [686, 2, 1, "", "Motion_cfgCapture"], [686, 2, 1, "", "Motion_cfgCapture_async"], [686, 2, 1, "", "Motion_cfgCircularInterpo"], [686, 2, 1, "", "Motion_cfgCircularInterpo_async"], [686, 2, 1, "", "Motion_cfgEncoder"], [686, 2, 1, "", "Motion_cfgEncoder_async"], [686, 2, 1, "", "Motion_cfgFindRef"], [686, 2, 1, "", "Motion_cfgFindRef_async"], [686, 2, 1, "", "Motion_cfgHelicalInterpo"], [686, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [686, 2, 1, "", "Motion_cfgHome"], [686, 2, 1, "", "Motion_cfgHome_async"], [686, 2, 1, "", "Motion_cfgInposi"], [686, 2, 1, "", "Motion_cfgInposi_async"], [686, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [686, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [686, 2, 1, "", "Motion_cfgLimit"], [686, 2, 1, "", "Motion_cfgLimit_async"], [686, 2, 1, "", "Motion_checkRef"], [686, 2, 1, "", "Motion_checkRef_async"], [686, 2, 1, "", "Motion_close"], [686, 2, 1, "", "Motion_close_async"], [686, 2, 1, "", "Motion_enableBreakPoint"], [686, 2, 1, "", "Motion_enableBreakPoint_async"], [686, 2, 1, "", "Motion_enableCapture"], [686, 2, 1, "", "Motion_enableCapture_async"], [686, 2, 1, "", "Motion_enableServoOff"], [686, 2, 1, "", "Motion_enableServoOff_async"], [686, 2, 1, "", "Motion_enableServoOn"], [686, 2, 1, "", "Motion_enableServoOn_async"], [686, 2, 1, "", "Motion_findRef"], [686, 2, 1, "", "Motion_findRef_async"], [686, 2, 1, "", "Motion_getEncoderPosi"], [686, 2, 1, "", "Motion_getEncoderPosi_async"], [686, 2, 1, "", "Motion_getHomeStatus"], [686, 2, 1, "", "Motion_getHomeStatus_async"], [686, 2, 1, "", "Motion_getLimitStatus"], [686, 2, 1, "", "Motion_getLimitStatus_async"], [686, 2, 1, "", "Motion_getLogicalPosi"], [686, 2, 1, "", "Motion_getLogicalPosi_async"], [686, 2, 1, "", "Motion_getMoveStatus"], [686, 2, 1, "", "Motion_getMoveStatus_async"], [686, 2, 1, "", "Motion_loadCfgFile"], [686, 2, 1, "", "Motion_loadCfgFile_async"], [686, 2, 1, "", "Motion_open"], [686, 2, 1, "", "Motion_openCfgFile"], [686, 2, 1, "", "Motion_openCfgFile_async"], [686, 2, 1, "", "Motion_open_async"], [686, 2, 1, "", "Motion_overrideAxisAccel"], [686, 2, 1, "", "Motion_overrideAxisAccel_async"], [686, 2, 1, "", "Motion_overrideAxisPosi"], [686, 2, 1, "", "Motion_overrideAxisPosi_async"], [686, 2, 1, "", "Motion_overrideAxisVelocity"], [686, 2, 1, "", "Motion_overrideAxisVelocity_async"], [686, 2, 1, "", "Motion_readCapturePoint"], [686, 2, 1, "", "Motion_readCapturePoint_async"], [686, 2, 1, "", "Motion_rstEncoderPosi"], [686, 2, 1, "", "Motion_rstEncoderPosi_async"], [686, 2, 1, "", "Motion_saveCfgFile"], [686, 2, 1, "", "Motion_saveCfgFile_async"], [686, 2, 1, "", "Motion_setLogicalPosi"], [686, 2, 1, "", "Motion_setLogicalPosi_async"], [686, 2, 1, "", "Motion_startCircularInterpo"], [686, 2, 1, "", "Motion_startCircularInterpo_async"], [686, 2, 1, "", "Motion_startHelicalInterpo"], [686, 2, 1, "", "Motion_startHelicalInterpo_async"], [686, 2, 1, "", "Motion_startLinearInterpo"], [686, 2, 1, "", "Motion_startLinearInterpo_async"], [686, 2, 1, "", "Motion_startMultiAxisMove"], [686, 2, 1, "", "Motion_startMultiAxisMove_async"], [686, 2, 1, "", "Motion_startSingleAxisMove"], [686, 2, 1, "", "Motion_startSingleAxisMove_async"], [686, 2, 1, "", "Motion_stop"], [686, 2, 1, "", "Motion_stop_async"], [686, 2, 1, "", "Net_getGateway"], [686, 2, 1, "", "Net_getGateway_async"], [686, 2, 1, "", "Net_getIPAddrAndSubmask"], [686, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [686, 2, 1, "", "Net_getMACAddr"], [686, 2, 1, "", "Net_getMACAddr_async"], [686, 2, 1, "", "Net_setIPAddrAndSubmask"], [686, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [686, 2, 1, "", "Sys_getDriverInfo"], [686, 2, 1, "", "Sys_getDriverInfo_async"], [686, 2, 1, "", "Sys_getGateway"], [686, 2, 1, "", "Sys_getGateway_async"], [686, 2, 1, "", "Sys_getIPAddrAndSubmask"], [686, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [686, 2, 1, "", "Sys_getMACAddr"], [686, 2, 1, "", "Sys_getMACAddr_async"], [686, 2, 1, "", "Sys_getMode"], [686, 2, 1, "", "Sys_getMode_async"], [686, 2, 1, "", "Sys_getPinModeInPort"], [686, 2, 1, "", "Sys_getPinModeInPort_async"], [686, 2, 1, "", "Sys_getPythonVersion"], [686, 2, 1, "", "Sys_getPythonVersion_async"], [686, 2, 1, "", "Sys_getRTC"], [686, 2, 1, "", "Sys_getRTC_async"], [686, 2, 1, "", "Sys_getSerialNumber"], [686, 2, 1, "", "Sys_getSerialNumber_async"], [686, 2, 1, "", "Sys_reboot"], [686, 2, 1, "", "Sys_rebootOnBootloader"], [686, 2, 1, "", "Sys_rebootOnBootloader_async"], [686, 2, 1, "", "Sys_reboot_async"], [686, 2, 1, "", "Sys_setAIOMode"], [686, 2, 1, "", "Sys_setAIOMode_async"], [686, 2, 1, "", "Sys_setDIMode"], [686, 2, 1, "", "Sys_setDIMode_async"], [686, 2, 1, "", "Sys_setDIOMode"], [686, 2, 1, "", "Sys_setDIOMode_async"], [686, 2, 1, "", "Sys_setDOMode"], [686, 2, 1, "", "Sys_setDOMode_async"], [686, 2, 1, "", "Sys_setIPAddrAndSubmask"], [686, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [686, 2, 1, "", "Sys_setIdleMode"], [686, 2, 1, "", "Sys_setIdleMode_async"], [686, 2, 1, "", "Sys_setMotionMode"], [686, 2, 1, "", "Sys_setMotionMode_async"], [686, 2, 1, "", "Sys_setRTC"], [686, 2, 1, "", "Sys_setRTC_async"], [686, 2, 1, "", "Sys_setSwitchMode"], [686, 2, 1, "", "Sys_setSwitchMode_async"], [686, 2, 1, "", "close"], [686, 2, 1, "", "connect"], [686, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[687, 2, 1, "", "AI_close"], [687, 2, 1, "", "AI_close_async"], [687, 2, 1, "", "AI_enableCS"], [687, 2, 1, "", "AI_enableCS_async"], [687, 2, 1, "", "AI_enableChannel"], [687, 2, 1, "", "AI_enableChannel_async"], [687, 2, 1, "", "AI_getPort"], [687, 2, 1, "", "AI_open"], [687, 2, 1, "", "AI_open_async"], [687, 2, 1, "", "AI_readOnDemand"], [687, 2, 1, "", "AI_readOnDemand_async"], [687, 2, 1, "", "AI_readStreaming"], [687, 2, 1, "", "AI_readStreaming_async"], [687, 2, 1, "", "AI_setMode"], [687, 2, 1, "", "AI_setMode_async"], [687, 2, 1, "", "AI_setNumSamples"], [687, 2, 1, "", "AI_setNumSamples_async"], [687, 2, 1, "", "AI_setSamplingRate"], [687, 2, 1, "", "AI_setSamplingRate_async"], [687, 2, 1, "", "AI_start"], [687, 2, 1, "", "AI_start_async"], [687, 2, 1, "", "AI_stop"], [687, 2, 1, "", "AI_stop_async"], [687, 2, 1, "", "Logger_openFile"], [687, 2, 1, "", "Logger_write2DList"], [687, 2, 1, "", "Logger_writeHeader"], [687, 2, 1, "", "Logger_writeList"], [687, 2, 1, "", "Logger_writeValue"], [687, 2, 1, "", "Net_getGateway"], [687, 2, 1, "", "Net_getGateway_async"], [687, 2, 1, "", "Net_getIPAddrAndSubmask"], [687, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [687, 2, 1, "", "Net_getMACAddr"], [687, 2, 1, "", "Net_getMACAddr_async"], [687, 2, 1, "", "Net_setIPAddrAndSubmask"], [687, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [687, 2, 1, "", "Sys_getDriverInfo"], [687, 2, 1, "", "Sys_getDriverInfo_async"], [687, 2, 1, "", "Sys_getGateway"], [687, 2, 1, "", "Sys_getGateway_async"], [687, 2, 1, "", "Sys_getIPAddrAndSubmask"], [687, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [687, 2, 1, "", "Sys_getMACAddr"], [687, 2, 1, "", "Sys_getMACAddr_async"], [687, 2, 1, "", "Sys_getMode"], [687, 2, 1, "", "Sys_getMode_async"], [687, 2, 1, "", "Sys_getPinModeInPort"], [687, 2, 1, "", "Sys_getPinModeInPort_async"], [687, 2, 1, "", "Sys_getPythonVersion"], [687, 2, 1, "", "Sys_getPythonVersion_async"], [687, 2, 1, "", "Sys_getRTC"], [687, 2, 1, "", "Sys_getRTC_async"], [687, 2, 1, "", "Sys_getSerialNumber"], [687, 2, 1, "", "Sys_getSerialNumber_async"], [687, 2, 1, "", "Sys_reboot"], [687, 2, 1, "", "Sys_rebootOnBootloader"], [687, 2, 1, "", "Sys_rebootOnBootloader_async"], [687, 2, 1, "", "Sys_reboot_async"], [687, 2, 1, "", "Sys_setAIOMode"], [687, 2, 1, "", "Sys_setAIOMode_async"], [687, 2, 1, "", "Sys_setDIMode"], [687, 2, 1, "", "Sys_setDIMode_async"], [687, 2, 1, "", "Sys_setDIOMode"], [687, 2, 1, "", "Sys_setDIOMode_async"], [687, 2, 1, "", "Sys_setDOMode"], [687, 2, 1, "", "Sys_setDOMode_async"], [687, 2, 1, "", "Sys_setIPAddrAndSubmask"], [687, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [687, 2, 1, "", "Sys_setIdleMode"], [687, 2, 1, "", "Sys_setIdleMode_async"], [687, 2, 1, "", "Sys_setMotionMode"], [687, 2, 1, "", "Sys_setMotionMode_async"], [687, 2, 1, "", "Sys_setRTC"], [687, 2, 1, "", "Sys_setRTC_async"], [687, 2, 1, "", "Sys_setSwitchMode"], [687, 2, 1, "", "Sys_setSwitchMode_async"], [687, 2, 1, "", "close"], [687, 2, 1, "", "connect"], [687, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[688, 2, 1, "", "DIO_loadStartup"], [688, 2, 1, "", "DIO_loadStartup_async"], [688, 2, 1, "", "DIO_saveStartup"], [688, 2, 1, "", "DIO_saveStartup_async"], [688, 2, 1, "", "DIO_setPortDI"], [688, 2, 1, "", "DIO_setPortDI_async"], [688, 2, 1, "", "DIO_setPortDO"], [688, 2, 1, "", "DIO_setPortDO_async"], [688, 2, 1, "", "DIO_setPortIdle"], [688, 2, 1, "", "DIO_setPortIdle_async"], [688, 2, 1, "", "DI_closePins"], [688, 2, 1, "", "DI_closePins_async"], [688, 2, 1, "", "DI_closePort"], [688, 2, 1, "", "DI_closePort_async"], [688, 2, 1, "", "DI_getPinMap"], [688, 2, 1, "", "DI_openPins"], [688, 2, 1, "", "DI_openPins_async"], [688, 2, 1, "", "DI_openPort"], [688, 2, 1, "", "DI_openPort_async"], [688, 2, 1, "", "DI_readPins"], [688, 2, 1, "", "DI_readPins_async"], [688, 2, 1, "", "DI_readPort"], [688, 2, 1, "", "DI_readPort_async"], [688, 2, 1, "", "DO_closePins"], [688, 2, 1, "", "DO_closePins_async"], [688, 2, 1, "", "DO_closePort"], [688, 2, 1, "", "DO_closePort_async"], [688, 2, 1, "", "DO_getPinMap"], [688, 2, 1, "", "DO_openPins"], [688, 2, 1, "", "DO_openPins_async"], [688, 2, 1, "", "DO_openPort"], [688, 2, 1, "", "DO_openPort_async"], [688, 2, 1, "", "DO_togglePins"], [688, 2, 1, "", "DO_togglePins_async"], [688, 2, 1, "", "DO_togglePort"], [688, 2, 1, "", "DO_togglePort_async"], [688, 2, 1, "", "DO_writePins"], [688, 2, 1, "", "DO_writePins_async"], [688, 2, 1, "", "DO_writePort"], [688, 2, 1, "", "DO_writePort_async"], [688, 2, 1, "", "Logger_openFile"], [688, 2, 1, "", "Logger_write2DList"], [688, 2, 1, "", "Logger_writeHeader"], [688, 2, 1, "", "Logger_writeList"], [688, 2, 1, "", "Logger_writeValue"], [688, 2, 1, "", "Net_getGateway"], [688, 2, 1, "", "Net_getGateway_async"], [688, 2, 1, "", "Net_getIPAddrAndSubmask"], [688, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [688, 2, 1, "", "Net_getMACAddr"], [688, 2, 1, "", "Net_getMACAddr_async"], [688, 2, 1, "", "Net_setIPAddrAndSubmask"], [688, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [688, 2, 1, "", "PWM_close"], [688, 2, 1, "", "PWM_close_async"], [688, 2, 1, "", "PWM_open"], [688, 2, 1, "", "PWM_open_async"], [688, 2, 1, "", "PWM_setDutyCycle"], [688, 2, 1, "", "PWM_setDutyCycle_async"], [688, 2, 1, "", "PWM_setFrequency"], [688, 2, 1, "", "PWM_setFrequency_async"], [688, 2, 1, "", "PWM_start"], [688, 2, 1, "", "PWM_start_async"], [688, 2, 1, "", "PWM_stop"], [688, 2, 1, "", "PWM_stop_async"], [688, 2, 1, "", "Sys_getDriverInfo"], [688, 2, 1, "", "Sys_getDriverInfo_async"], [688, 2, 1, "", "Sys_getGateway"], [688, 2, 1, "", "Sys_getGateway_async"], [688, 2, 1, "", "Sys_getIPAddrAndSubmask"], [688, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [688, 2, 1, "", "Sys_getMACAddr"], [688, 2, 1, "", "Sys_getMACAddr_async"], [688, 2, 1, "", "Sys_getMode"], [688, 2, 1, "", "Sys_getMode_async"], [688, 2, 1, "", "Sys_getPinModeInPort"], [688, 2, 1, "", "Sys_getPinModeInPort_async"], [688, 2, 1, "", "Sys_getPythonVersion"], [688, 2, 1, "", "Sys_getPythonVersion_async"], [688, 2, 1, "", "Sys_getRTC"], [688, 2, 1, "", "Sys_getRTC_async"], [688, 2, 1, "", "Sys_getSerialNumber"], [688, 2, 1, "", "Sys_getSerialNumber_async"], [688, 2, 1, "", "Sys_reboot"], [688, 2, 1, "", "Sys_rebootOnBootloader"], [688, 2, 1, "", "Sys_rebootOnBootloader_async"], [688, 2, 1, "", "Sys_reboot_async"], [688, 2, 1, "", "Sys_setAIOMode"], [688, 2, 1, "", "Sys_setAIOMode_async"], [688, 2, 1, "", "Sys_setDIMode"], [688, 2, 1, "", "Sys_setDIMode_async"], [688, 2, 1, "", "Sys_setDIOMode"], [688, 2, 1, "", "Sys_setDIOMode_async"], [688, 2, 1, "", "Sys_setDOMode"], [688, 2, 1, "", "Sys_setDOMode_async"], [688, 2, 1, "", "Sys_setIPAddrAndSubmask"], [688, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [688, 2, 1, "", "Sys_setIdleMode"], [688, 2, 1, "", "Sys_setIdleMode_async"], [688, 2, 1, "", "Sys_setMotionMode"], [688, 2, 1, "", "Sys_setMotionMode_async"], [688, 2, 1, "", "Sys_setRTC"], [688, 2, 1, "", "Sys_setRTC_async"], [688, 2, 1, "", "Sys_setSwitchMode"], [688, 2, 1, "", "Sys_setSwitchMode_async"], [688, 2, 1, "", "close"], [688, 2, 1, "", "connect"], [688, 2, 1, "", "disconnect"]], "pywpc.EthanEXD": [[689, 2, 1, "", "DIO_loadStartup"], [689, 2, 1, "", "DIO_loadStartup_async"], [689, 2, 1, "", "DIO_saveStartup"], [689, 2, 1, "", "DIO_saveStartup_async"], [689, 2, 1, "", "DIO_setPortDI"], [689, 2, 1, "", "DIO_setPortDI_async"], [689, 2, 1, "", "DIO_setPortDO"], [689, 2, 1, "", "DIO_setPortDO_async"], [689, 2, 1, "", "DIO_setPortIdle"], [689, 2, 1, "", "DIO_setPortIdle_async"], [689, 2, 1, "", "DI_closePins"], [689, 2, 1, "", "DI_closePins_async"], [689, 2, 1, "", "DI_closePort"], [689, 2, 1, "", "DI_closePort_async"], [689, 2, 1, "", "DI_getPinMap"], [689, 2, 1, "", "DI_openPins"], [689, 2, 1, "", "DI_openPins_async"], [689, 2, 1, "", "DI_openPort"], [689, 2, 1, "", "DI_openPort_async"], [689, 2, 1, "", "DI_readPins"], [689, 2, 1, "", "DI_readPins_async"], [689, 2, 1, "", "DI_readPort"], [689, 2, 1, "", "DI_readPort_async"], [689, 2, 1, "", "DO_closePins"], [689, 2, 1, "", "DO_closePins_async"], [689, 2, 1, "", "DO_closePort"], [689, 2, 1, "", "DO_closePort_async"], [689, 2, 1, "", "DO_getPinMap"], [689, 2, 1, "", "DO_openPins"], [689, 2, 1, "", "DO_openPins_async"], [689, 2, 1, "", "DO_openPort"], [689, 2, 1, "", "DO_openPort_async"], [689, 2, 1, "", "DO_togglePins"], [689, 2, 1, "", "DO_togglePins_async"], [689, 2, 1, "", "DO_togglePort"], [689, 2, 1, "", "DO_togglePort_async"], [689, 2, 1, "", "DO_writePins"], [689, 2, 1, "", "DO_writePins_async"], [689, 2, 1, "", "DO_writePort"], [689, 2, 1, "", "DO_writePort_async"], [689, 2, 1, "", "Logger_openFile"], [689, 2, 1, "", "Logger_write2DList"], [689, 2, 1, "", "Logger_writeHeader"], [689, 2, 1, "", "Logger_writeList"], [689, 2, 1, "", "Logger_writeValue"], [689, 2, 1, "", "Net_getGateway"], [689, 2, 1, "", "Net_getGateway_async"], [689, 2, 1, "", "Net_getIPAddrAndSubmask"], [689, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [689, 2, 1, "", "Net_getMACAddr"], [689, 2, 1, "", "Net_getMACAddr_async"], [689, 2, 1, "", "Net_setIPAddrAndSubmask"], [689, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [689, 2, 1, "", "Sys_getDriverInfo"], [689, 2, 1, "", "Sys_getDriverInfo_async"], [689, 2, 1, "", "Sys_getGateway"], [689, 2, 1, "", "Sys_getGateway_async"], [689, 2, 1, "", "Sys_getIPAddrAndSubmask"], [689, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [689, 2, 1, "", "Sys_getMACAddr"], [689, 2, 1, "", "Sys_getMACAddr_async"], [689, 2, 1, "", "Sys_getMode"], [689, 2, 1, "", "Sys_getMode_async"], [689, 2, 1, "", "Sys_getPinModeInPort"], [689, 2, 1, "", "Sys_getPinModeInPort_async"], [689, 2, 1, "", "Sys_getPythonVersion"], [689, 2, 1, "", "Sys_getPythonVersion_async"], [689, 2, 1, "", "Sys_getRTC"], [689, 2, 1, "", "Sys_getRTC_async"], [689, 2, 1, "", "Sys_getSerialNumber"], [689, 2, 1, "", "Sys_getSerialNumber_async"], [689, 2, 1, "", "Sys_reboot"], [689, 2, 1, "", "Sys_rebootOnBootloader"], [689, 2, 1, "", "Sys_rebootOnBootloader_async"], [689, 2, 1, "", "Sys_reboot_async"], [689, 2, 1, "", "Sys_setAIOMode"], [689, 2, 1, "", "Sys_setAIOMode_async"], [689, 2, 1, "", "Sys_setDIMode"], [689, 2, 1, "", "Sys_setDIMode_async"], [689, 2, 1, "", "Sys_setDIOMode"], [689, 2, 1, "", "Sys_setDIOMode_async"], [689, 2, 1, "", "Sys_setDOMode"], [689, 2, 1, "", "Sys_setDOMode_async"], [689, 2, 1, "", "Sys_setIPAddrAndSubmask"], [689, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [689, 2, 1, "", "Sys_setIdleMode"], [689, 2, 1, "", "Sys_setIdleMode_async"], [689, 2, 1, "", "Sys_setMotionMode"], [689, 2, 1, "", "Sys_setMotionMode_async"], [689, 2, 1, "", "Sys_setRTC"], [689, 2, 1, "", "Sys_setRTC_async"], [689, 2, 1, "", "Sys_setSwitchMode"], [689, 2, 1, "", "Sys_setSwitchMode_async"], [689, 2, 1, "", "close"], [689, 2, 1, "", "connect"], [689, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[690, 2, 1, "", "AI_close"], [690, 2, 1, "", "AI_close_async"], [690, 2, 1, "", "AI_getPort"], [690, 2, 1, "", "AI_open"], [690, 2, 1, "", "AI_open_async"], [690, 2, 1, "", "AI_readOnDemand"], [690, 2, 1, "", "AI_readOnDemand_async"], [690, 2, 1, "", "Logger_openFile"], [690, 2, 1, "", "Logger_write2DList"], [690, 2, 1, "", "Logger_writeHeader"], [690, 2, 1, "", "Logger_writeList"], [690, 2, 1, "", "Logger_writeValue"], [690, 2, 1, "", "Net_getGateway"], [690, 2, 1, "", "Net_getGateway_async"], [690, 2, 1, "", "Net_getIPAddrAndSubmask"], [690, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [690, 2, 1, "", "Net_getMACAddr"], [690, 2, 1, "", "Net_getMACAddr_async"], [690, 2, 1, "", "Net_setIPAddrAndSubmask"], [690, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [690, 2, 1, "", "Sys_getDriverInfo"], [690, 2, 1, "", "Sys_getDriverInfo_async"], [690, 2, 1, "", "Sys_getGateway"], [690, 2, 1, "", "Sys_getGateway_async"], [690, 2, 1, "", "Sys_getIPAddrAndSubmask"], [690, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [690, 2, 1, "", "Sys_getMACAddr"], [690, 2, 1, "", "Sys_getMACAddr_async"], [690, 2, 1, "", "Sys_getMode"], [690, 2, 1, "", "Sys_getMode_async"], [690, 2, 1, "", "Sys_getPinModeInPort"], [690, 2, 1, "", "Sys_getPinModeInPort_async"], [690, 2, 1, "", "Sys_getPythonVersion"], [690, 2, 1, "", "Sys_getPythonVersion_async"], [690, 2, 1, "", "Sys_getRTC"], [690, 2, 1, "", "Sys_getRTC_async"], [690, 2, 1, "", "Sys_getSerialNumber"], [690, 2, 1, "", "Sys_getSerialNumber_async"], [690, 2, 1, "", "Sys_reboot"], [690, 2, 1, "", "Sys_rebootOnBootloader"], [690, 2, 1, "", "Sys_rebootOnBootloader_async"], [690, 2, 1, "", "Sys_reboot_async"], [690, 2, 1, "", "Sys_setAIOMode"], [690, 2, 1, "", "Sys_setAIOMode_async"], [690, 2, 1, "", "Sys_setDIMode"], [690, 2, 1, "", "Sys_setDIMode_async"], [690, 2, 1, "", "Sys_setDIOMode"], [690, 2, 1, "", "Sys_setDIOMode_async"], [690, 2, 1, "", "Sys_setDOMode"], [690, 2, 1, "", "Sys_setDOMode_async"], [690, 2, 1, "", "Sys_setIPAddrAndSubmask"], [690, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [690, 2, 1, "", "Sys_setIdleMode"], [690, 2, 1, "", "Sys_setIdleMode_async"], [690, 2, 1, "", "Sys_setMotionMode"], [690, 2, 1, "", "Sys_setMotionMode_async"], [690, 2, 1, "", "Sys_setRTC"], [690, 2, 1, "", "Sys_setRTC_async"], [690, 2, 1, "", "Sys_setSwitchMode"], [690, 2, 1, "", "Sys_setSwitchMode_async"], [690, 2, 1, "", "close"], [690, 2, 1, "", "connect"], [690, 2, 1, "", "disconnect"]], "pywpc.EthanIA": [[691, 2, 1, "", "AI_close"], [691, 2, 1, "", "AI_close_async"], [691, 2, 1, "", "AI_getPort"], [691, 2, 1, "", "AI_open"], [691, 2, 1, "", "AI_open_async"], [691, 2, 1, "", "AI_readOnDemand"], [691, 2, 1, "", "AI_readOnDemand_async"], [691, 2, 1, "", "Logger_openFile"], [691, 2, 1, "", "Logger_write2DList"], [691, 2, 1, "", "Logger_writeHeader"], [691, 2, 1, "", "Logger_writeList"], [691, 2, 1, "", "Logger_writeValue"], [691, 2, 1, "", "Net_getGateway"], [691, 2, 1, "", "Net_getGateway_async"], [691, 2, 1, "", "Net_getIPAddrAndSubmask"], [691, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [691, 2, 1, "", "Net_getMACAddr"], [691, 2, 1, "", "Net_getMACAddr_async"], [691, 2, 1, "", "Net_setIPAddrAndSubmask"], [691, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [691, 2, 1, "", "Sys_getDriverInfo"], [691, 2, 1, "", "Sys_getDriverInfo_async"], [691, 2, 1, "", "Sys_getGateway"], [691, 2, 1, "", "Sys_getGateway_async"], [691, 2, 1, "", "Sys_getIPAddrAndSubmask"], [691, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [691, 2, 1, "", "Sys_getMACAddr"], [691, 2, 1, "", "Sys_getMACAddr_async"], [691, 2, 1, "", "Sys_getMode"], [691, 2, 1, "", "Sys_getMode_async"], [691, 2, 1, "", "Sys_getPinModeInPort"], [691, 2, 1, "", "Sys_getPinModeInPort_async"], [691, 2, 1, "", "Sys_getPythonVersion"], [691, 2, 1, "", "Sys_getPythonVersion_async"], [691, 2, 1, "", "Sys_getRTC"], [691, 2, 1, "", "Sys_getRTC_async"], [691, 2, 1, "", "Sys_getSerialNumber"], [691, 2, 1, "", "Sys_getSerialNumber_async"], [691, 2, 1, "", "Sys_reboot"], [691, 2, 1, "", "Sys_rebootOnBootloader"], [691, 2, 1, "", "Sys_rebootOnBootloader_async"], [691, 2, 1, "", "Sys_reboot_async"], [691, 2, 1, "", "Sys_setAIOMode"], [691, 2, 1, "", "Sys_setAIOMode_async"], [691, 2, 1, "", "Sys_setDIMode"], [691, 2, 1, "", "Sys_setDIMode_async"], [691, 2, 1, "", "Sys_setDIOMode"], [691, 2, 1, "", "Sys_setDIOMode_async"], [691, 2, 1, "", "Sys_setDOMode"], [691, 2, 1, "", "Sys_setDOMode_async"], [691, 2, 1, "", "Sys_setIPAddrAndSubmask"], [691, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [691, 2, 1, "", "Sys_setIdleMode"], [691, 2, 1, "", "Sys_setIdleMode_async"], [691, 2, 1, "", "Sys_setMotionMode"], [691, 2, 1, "", "Sys_setMotionMode_async"], [691, 2, 1, "", "Sys_setRTC"], [691, 2, 1, "", "Sys_setRTC_async"], [691, 2, 1, "", "Sys_setSwitchMode"], [691, 2, 1, "", "Sys_setSwitchMode_async"], [691, 2, 1, "", "close"], [691, 2, 1, "", "connect"], [691, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[692, 2, 1, "", "DIO_loadStartup"], [692, 2, 1, "", "DIO_loadStartup_async"], [692, 2, 1, "", "DIO_saveStartup"], [692, 2, 1, "", "DIO_saveStartup_async"], [692, 2, 1, "", "DIO_setPortDI"], [692, 2, 1, "", "DIO_setPortDI_async"], [692, 2, 1, "", "DIO_setPortDO"], [692, 2, 1, "", "DIO_setPortDO_async"], [692, 2, 1, "", "DIO_setPortIdle"], [692, 2, 1, "", "DIO_setPortIdle_async"], [692, 2, 1, "", "DI_closePins"], [692, 2, 1, "", "DI_closePins_async"], [692, 2, 1, "", "DI_closePort"], [692, 2, 1, "", "DI_closePort_async"], [692, 2, 1, "", "DI_getPinMap"], [692, 2, 1, "", "DI_openPins"], [692, 2, 1, "", "DI_openPins_async"], [692, 2, 1, "", "DI_openPort"], [692, 2, 1, "", "DI_openPort_async"], [692, 2, 1, "", "DI_readPins"], [692, 2, 1, "", "DI_readPins_async"], [692, 2, 1, "", "DI_readPort"], [692, 2, 1, "", "DI_readPort_async"], [692, 2, 1, "", "DO_closePins"], [692, 2, 1, "", "DO_closePins_async"], [692, 2, 1, "", "DO_closePort"], [692, 2, 1, "", "DO_closePort_async"], [692, 2, 1, "", "DO_getPinMap"], [692, 2, 1, "", "DO_openPins"], [692, 2, 1, "", "DO_openPins_async"], [692, 2, 1, "", "DO_openPort"], [692, 2, 1, "", "DO_openPort_async"], [692, 2, 1, "", "DO_togglePins"], [692, 2, 1, "", "DO_togglePins_async"], [692, 2, 1, "", "DO_togglePort"], [692, 2, 1, "", "DO_togglePort_async"], [692, 2, 1, "", "DO_writePins"], [692, 2, 1, "", "DO_writePins_async"], [692, 2, 1, "", "DO_writePort"], [692, 2, 1, "", "DO_writePort_async"], [692, 2, 1, "", "Logger_openFile"], [692, 2, 1, "", "Logger_write2DList"], [692, 2, 1, "", "Logger_writeHeader"], [692, 2, 1, "", "Logger_writeList"], [692, 2, 1, "", "Logger_writeValue"], [692, 2, 1, "", "Net_getGateway"], [692, 2, 1, "", "Net_getGateway_async"], [692, 2, 1, "", "Net_getIPAddrAndSubmask"], [692, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [692, 2, 1, "", "Net_getMACAddr"], [692, 2, 1, "", "Net_getMACAddr_async"], [692, 2, 1, "", "Net_setIPAddrAndSubmask"], [692, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [692, 2, 1, "", "Relay_close"], [692, 2, 1, "", "Relay_close_async"], [692, 2, 1, "", "Relay_open"], [692, 2, 1, "", "Relay_open_async"], [692, 2, 1, "", "Relay_read"], [692, 2, 1, "", "Relay_read_async"], [692, 2, 1, "", "Sys_getDriverInfo"], [692, 2, 1, "", "Sys_getDriverInfo_async"], [692, 2, 1, "", "Sys_getGateway"], [692, 2, 1, "", "Sys_getGateway_async"], [692, 2, 1, "", "Sys_getIPAddrAndSubmask"], [692, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [692, 2, 1, "", "Sys_getMACAddr"], [692, 2, 1, "", "Sys_getMACAddr_async"], [692, 2, 1, "", "Sys_getMode"], [692, 2, 1, "", "Sys_getMode_async"], [692, 2, 1, "", "Sys_getPinModeInPort"], [692, 2, 1, "", "Sys_getPinModeInPort_async"], [692, 2, 1, "", "Sys_getPythonVersion"], [692, 2, 1, "", "Sys_getPythonVersion_async"], [692, 2, 1, "", "Sys_getRTC"], [692, 2, 1, "", "Sys_getRTC_async"], [692, 2, 1, "", "Sys_getSerialNumber"], [692, 2, 1, "", "Sys_getSerialNumber_async"], [692, 2, 1, "", "Sys_reboot"], [692, 2, 1, "", "Sys_rebootOnBootloader"], [692, 2, 1, "", "Sys_rebootOnBootloader_async"], [692, 2, 1, "", "Sys_reboot_async"], [692, 2, 1, "", "Sys_setAIOMode"], [692, 2, 1, "", "Sys_setAIOMode_async"], [692, 2, 1, "", "Sys_setDIMode"], [692, 2, 1, "", "Sys_setDIMode_async"], [692, 2, 1, "", "Sys_setDIOMode"], [692, 2, 1, "", "Sys_setDIOMode_async"], [692, 2, 1, "", "Sys_setDOMode"], [692, 2, 1, "", "Sys_setDOMode_async"], [692, 2, 1, "", "Sys_setIPAddrAndSubmask"], [692, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [692, 2, 1, "", "Sys_setIdleMode"], [692, 2, 1, "", "Sys_setIdleMode_async"], [692, 2, 1, "", "Sys_setMotionMode"], [692, 2, 1, "", "Sys_setMotionMode_async"], [692, 2, 1, "", "Sys_setRTC"], [692, 2, 1, "", "Sys_setRTC_async"], [692, 2, 1, "", "Sys_setSwitchMode"], [692, 2, 1, "", "Sys_setSwitchMode_async"], [692, 2, 1, "", "close"], [692, 2, 1, "", "connect"], [692, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[693, 2, 1, "", "AO_close"], [693, 2, 1, "", "AO_closeStreaming"], [693, 2, 1, "", "AO_closeStreaming_async"], [693, 2, 1, "", "AO_close_async"], [693, 2, 1, "", "AO_getEnableChannels"], [693, 2, 1, "", "AO_getMode"], [693, 2, 1, "", "AO_getMode_async"], [693, 2, 1, "", "AO_getPort"], [693, 2, 1, "", "AO_getState"], [693, 2, 1, "", "AO_getValues"], [693, 2, 1, "", "AO_getValues_async"], [693, 2, 1, "", "AO_open"], [693, 2, 1, "", "AO_openStreaming"], [693, 2, 1, "", "AO_openStreaming_async"], [693, 2, 1, "", "AO_open_async"], [693, 2, 1, "", "AO_setEnableChannels"], [693, 2, 1, "", "AO_setEnableChannels_async"], [693, 2, 1, "", "AO_setForm"], [693, 2, 1, "", "AO_setFormParam"], [693, 2, 1, "", "AO_setFormParam_async"], [693, 2, 1, "", "AO_setForm_async"], [693, 2, 1, "", "AO_setMode"], [693, 2, 1, "", "AO_setMode_async"], [693, 2, 1, "", "AO_setNumSamples"], [693, 2, 1, "", "AO_setNumSamples_async"], [693, 2, 1, "", "AO_setSamplingRate"], [693, 2, 1, "", "AO_setSamplingRate_async"], [693, 2, 1, "", "AO_startStreaming"], [693, 2, 1, "", "AO_startStreaming_async"], [693, 2, 1, "", "AO_writeAllChannels"], [693, 2, 1, "", "AO_writeAllChannels_async"], [693, 2, 1, "", "AO_writeOneChannel"], [693, 2, 1, "", "AO_writeOneChannel_async"], [693, 2, 1, "", "Logger_openFile"], [693, 2, 1, "", "Logger_write2DList"], [693, 2, 1, "", "Logger_writeHeader"], [693, 2, 1, "", "Logger_writeList"], [693, 2, 1, "", "Logger_writeValue"], [693, 2, 1, "", "Net_getGateway"], [693, 2, 1, "", "Net_getGateway_async"], [693, 2, 1, "", "Net_getIPAddrAndSubmask"], [693, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [693, 2, 1, "", "Net_getMACAddr"], [693, 2, 1, "", "Net_getMACAddr_async"], [693, 2, 1, "", "Net_setIPAddrAndSubmask"], [693, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [693, 2, 1, "", "Sys_getDriverInfo"], [693, 2, 1, "", "Sys_getDriverInfo_async"], [693, 2, 1, "", "Sys_getGateway"], [693, 2, 1, "", "Sys_getGateway_async"], [693, 2, 1, "", "Sys_getIPAddrAndSubmask"], [693, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [693, 2, 1, "", "Sys_getMACAddr"], [693, 2, 1, "", "Sys_getMACAddr_async"], [693, 2, 1, "", "Sys_getMode"], [693, 2, 1, "", "Sys_getMode_async"], [693, 2, 1, "", "Sys_getPinModeInPort"], [693, 2, 1, "", "Sys_getPinModeInPort_async"], [693, 2, 1, "", "Sys_getPythonVersion"], [693, 2, 1, "", "Sys_getPythonVersion_async"], [693, 2, 1, "", "Sys_getRTC"], [693, 2, 1, "", "Sys_getRTC_async"], [693, 2, 1, "", "Sys_getSerialNumber"], [693, 2, 1, "", "Sys_getSerialNumber_async"], [693, 2, 1, "", "Sys_reboot"], [693, 2, 1, "", "Sys_rebootOnBootloader"], [693, 2, 1, "", "Sys_rebootOnBootloader_async"], [693, 2, 1, "", "Sys_reboot_async"], [693, 2, 1, "", "Sys_setAIOMode"], [693, 2, 1, "", "Sys_setAIOMode_async"], [693, 2, 1, "", "Sys_setDIMode"], [693, 2, 1, "", "Sys_setDIMode_async"], [693, 2, 1, "", "Sys_setDIOMode"], [693, 2, 1, "", "Sys_setDIOMode_async"], [693, 2, 1, "", "Sys_setDOMode"], [693, 2, 1, "", "Sys_setDOMode_async"], [693, 2, 1, "", "Sys_setIPAddrAndSubmask"], [693, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [693, 2, 1, "", "Sys_setIdleMode"], [693, 2, 1, "", "Sys_setIdleMode_async"], [693, 2, 1, "", "Sys_setMotionMode"], [693, 2, 1, "", "Sys_setMotionMode_async"], [693, 2, 1, "", "Sys_setRTC"], [693, 2, 1, "", "Sys_setRTC_async"], [693, 2, 1, "", "Sys_setSwitchMode"], [693, 2, 1, "", "Sys_setSwitchMode_async"], [693, 2, 1, "", "close"], [693, 2, 1, "", "connect"], [693, 2, 1, "", "disconnect"]], "pywpc.EthanP": [[694, 2, 1, "", "DPOT_close"], [694, 2, 1, "", "DPOT_close_async"], [694, 2, 1, "", "DPOT_open"], [694, 2, 1, "", "DPOT_open_async"], [694, 2, 1, "", "DPOT_readByChannel"], [694, 2, 1, "", "DPOT_readByChannel_async"], [694, 2, 1, "", "DPOT_writeAllChannel"], [694, 2, 1, "", "DPOT_writeAllChannel_async"], [694, 2, 1, "", "Logger_openFile"], [694, 2, 1, "", "Logger_write2DList"], [694, 2, 1, "", "Logger_writeHeader"], [694, 2, 1, "", "Logger_writeList"], [694, 2, 1, "", "Logger_writeValue"], [694, 2, 1, "", "Net_getGateway"], [694, 2, 1, "", "Net_getGateway_async"], [694, 2, 1, "", "Net_getIPAddrAndSubmask"], [694, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [694, 2, 1, "", "Net_getMACAddr"], [694, 2, 1, "", "Net_getMACAddr_async"], [694, 2, 1, "", "Net_setIPAddrAndSubmask"], [694, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [694, 2, 1, "", "Sys_getDriverInfo"], [694, 2, 1, "", "Sys_getDriverInfo_async"], [694, 2, 1, "", "Sys_getGateway"], [694, 2, 1, "", "Sys_getGateway_async"], [694, 2, 1, "", "Sys_getIPAddrAndSubmask"], [694, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [694, 2, 1, "", "Sys_getMACAddr"], [694, 2, 1, "", "Sys_getMACAddr_async"], [694, 2, 1, "", "Sys_getMode"], [694, 2, 1, "", "Sys_getMode_async"], [694, 2, 1, "", "Sys_getPinModeInPort"], [694, 2, 1, "", "Sys_getPinModeInPort_async"], [694, 2, 1, "", "Sys_getPythonVersion"], [694, 2, 1, "", "Sys_getPythonVersion_async"], [694, 2, 1, "", "Sys_getRTC"], [694, 2, 1, "", "Sys_getRTC_async"], [694, 2, 1, "", "Sys_getSerialNumber"], [694, 2, 1, "", "Sys_getSerialNumber_async"], [694, 2, 1, "", "Sys_reboot"], [694, 2, 1, "", "Sys_rebootOnBootloader"], [694, 2, 1, "", "Sys_rebootOnBootloader_async"], [694, 2, 1, "", "Sys_reboot_async"], [694, 2, 1, "", "Sys_setAIOMode"], [694, 2, 1, "", "Sys_setAIOMode_async"], [694, 2, 1, "", "Sys_setDIMode"], [694, 2, 1, "", "Sys_setDIMode_async"], [694, 2, 1, "", "Sys_setDIOMode"], [694, 2, 1, "", "Sys_setDIOMode_async"], [694, 2, 1, "", "Sys_setDOMode"], [694, 2, 1, "", "Sys_setDOMode_async"], [694, 2, 1, "", "Sys_setIPAddrAndSubmask"], [694, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [694, 2, 1, "", "Sys_setIdleMode"], [694, 2, 1, "", "Sys_setIdleMode_async"], [694, 2, 1, "", "Sys_setMotionMode"], [694, 2, 1, "", "Sys_setMotionMode_async"], [694, 2, 1, "", "Sys_setRTC"], [694, 2, 1, "", "Sys_setRTC_async"], [694, 2, 1, "", "Sys_setSwitchMode"], [694, 2, 1, "", "Sys_setSwitchMode_async"], [694, 2, 1, "", "close"], [694, 2, 1, "", "connect"], [694, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[695, 2, 1, "", "Logger_openFile"], [695, 2, 1, "", "Logger_write2DList"], [695, 2, 1, "", "Logger_writeHeader"], [695, 2, 1, "", "Logger_writeList"], [695, 2, 1, "", "Logger_writeValue"], [695, 2, 1, "", "Net_getGateway"], [695, 2, 1, "", "Net_getGateway_async"], [695, 2, 1, "", "Net_getIPAddrAndSubmask"], [695, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [695, 2, 1, "", "Net_getMACAddr"], [695, 2, 1, "", "Net_getMACAddr_async"], [695, 2, 1, "", "Net_setIPAddrAndSubmask"], [695, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [695, 2, 1, "", "Sys_getDriverInfo"], [695, 2, 1, "", "Sys_getDriverInfo_async"], [695, 2, 1, "", "Sys_getGateway"], [695, 2, 1, "", "Sys_getGateway_async"], [695, 2, 1, "", "Sys_getIPAddrAndSubmask"], [695, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [695, 2, 1, "", "Sys_getMACAddr"], [695, 2, 1, "", "Sys_getMACAddr_async"], [695, 2, 1, "", "Sys_getMode"], [695, 2, 1, "", "Sys_getMode_async"], [695, 2, 1, "", "Sys_getPinModeInPort"], [695, 2, 1, "", "Sys_getPinModeInPort_async"], [695, 2, 1, "", "Sys_getPythonVersion"], [695, 2, 1, "", "Sys_getPythonVersion_async"], [695, 2, 1, "", "Sys_getRTC"], [695, 2, 1, "", "Sys_getRTC_async"], [695, 2, 1, "", "Sys_getSerialNumber"], [695, 2, 1, "", "Sys_getSerialNumber_async"], [695, 2, 1, "", "Sys_reboot"], [695, 2, 1, "", "Sys_rebootOnBootloader"], [695, 2, 1, "", "Sys_rebootOnBootloader_async"], [695, 2, 1, "", "Sys_reboot_async"], [695, 2, 1, "", "Sys_setAIOMode"], [695, 2, 1, "", "Sys_setAIOMode_async"], [695, 2, 1, "", "Sys_setDIMode"], [695, 2, 1, "", "Sys_setDIMode_async"], [695, 2, 1, "", "Sys_setDIOMode"], [695, 2, 1, "", "Sys_setDIOMode_async"], [695, 2, 1, "", "Sys_setDOMode"], [695, 2, 1, "", "Sys_setDOMode_async"], [695, 2, 1, "", "Sys_setIPAddrAndSubmask"], [695, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [695, 2, 1, "", "Sys_setIdleMode"], [695, 2, 1, "", "Sys_setIdleMode_async"], [695, 2, 1, "", "Sys_setMotionMode"], [695, 2, 1, "", "Sys_setMotionMode_async"], [695, 2, 1, "", "Sys_setRTC"], [695, 2, 1, "", "Sys_setRTC_async"], [695, 2, 1, "", "Sys_setSwitchMode"], [695, 2, 1, "", "Sys_setSwitchMode_async"], [695, 2, 1, "", "Thermal_close"], [695, 2, 1, "", "Thermal_close_async"], [695, 2, 1, "", "Thermal_getPinMap"], [695, 2, 1, "", "Thermal_getStatus"], [695, 2, 1, "", "Thermal_getStatus_async"], [695, 2, 1, "", "Thermal_open"], [695, 2, 1, "", "Thermal_open_async"], [695, 2, 1, "", "Thermal_readSensor"], [695, 2, 1, "", "Thermal_readSensor_async"], [695, 2, 1, "", "Thermal_setOverSampling"], [695, 2, 1, "", "Thermal_setOverSampling_async"], [695, 2, 1, "", "Thermal_setType"], [695, 2, 1, "", "Thermal_setType_async"], [695, 2, 1, "", "close"], [695, 2, 1, "", "connect"], [695, 2, 1, "", "disconnect"]], "pywpc.STEM": [[696, 2, 1, "", "AI_close"], [696, 2, 1, "", "AI_close_async"], [696, 2, 1, "", "AI_enableCS"], [696, 2, 1, "", "AI_enableCS_async"], [696, 2, 1, "", "AI_enableChannel"], [696, 2, 1, "", "AI_enableChannel_async"], [696, 2, 1, "", "AI_getPort"], [696, 2, 1, "", "AI_open"], [696, 2, 1, "", "AI_open_async"], [696, 2, 1, "", "AI_readOnDemand"], [696, 2, 1, "", "AI_readOnDemand_async"], [696, 2, 1, "", "AI_readStreaming"], [696, 2, 1, "", "AI_readStreaming_async"], [696, 2, 1, "", "AI_setMode"], [696, 2, 1, "", "AI_setMode_async"], [696, 2, 1, "", "AI_setNumSamples"], [696, 2, 1, "", "AI_setNumSamples_async"], [696, 2, 1, "", "AI_setSamplingRate"], [696, 2, 1, "", "AI_setSamplingRate_async"], [696, 2, 1, "", "AI_start"], [696, 2, 1, "", "AI_start_async"], [696, 2, 1, "", "AI_stop"], [696, 2, 1, "", "AI_stop_async"], [696, 2, 1, "", "AO_close"], [696, 2, 1, "", "AO_closeStreaming"], [696, 2, 1, "", "AO_closeStreaming_async"], [696, 2, 1, "", "AO_close_async"], [696, 2, 1, "", "AO_getEnableChannels"], [696, 2, 1, "", "AO_getMode"], [696, 2, 1, "", "AO_getMode_async"], [696, 2, 1, "", "AO_getPort"], [696, 2, 1, "", "AO_getState"], [696, 2, 1, "", "AO_getValues"], [696, 2, 1, "", "AO_getValues_async"], [696, 2, 1, "", "AO_open"], [696, 2, 1, "", "AO_openStreaming"], [696, 2, 1, "", "AO_openStreaming_async"], [696, 2, 1, "", "AO_open_async"], [696, 2, 1, "", "AO_setEnableChannels"], [696, 2, 1, "", "AO_setEnableChannels_async"], [696, 2, 1, "", "AO_setForm"], [696, 2, 1, "", "AO_setFormParam"], [696, 2, 1, "", "AO_setFormParam_async"], [696, 2, 1, "", "AO_setForm_async"], [696, 2, 1, "", "AO_setMode"], [696, 2, 1, "", "AO_setMode_async"], [696, 2, 1, "", "AO_setNumSamples"], [696, 2, 1, "", "AO_setNumSamples_async"], [696, 2, 1, "", "AO_setSamplingRate"], [696, 2, 1, "", "AO_setSamplingRate_async"], [696, 2, 1, "", "AO_startStreaming"], [696, 2, 1, "", "AO_startStreaming_async"], [696, 2, 1, "", "AO_writeAllChannels"], [696, 2, 1, "", "AO_writeAllChannels_async"], [696, 2, 1, "", "AO_writeOneChannel"], [696, 2, 1, "", "AO_writeOneChannel_async"], [696, 2, 1, "", "DIO_loadStartup"], [696, 2, 1, "", "DIO_loadStartup_async"], [696, 2, 1, "", "DIO_saveStartup"], [696, 2, 1, "", "DIO_saveStartup_async"], [696, 2, 1, "", "DIO_setPortDI"], [696, 2, 1, "", "DIO_setPortDI_async"], [696, 2, 1, "", "DIO_setPortDO"], [696, 2, 1, "", "DIO_setPortDO_async"], [696, 2, 1, "", "DIO_setPortIdle"], [696, 2, 1, "", "DIO_setPortIdle_async"], [696, 2, 1, "", "DI_closePins"], [696, 2, 1, "", "DI_closePins_async"], [696, 2, 1, "", "DI_closePort"], [696, 2, 1, "", "DI_closePort_async"], [696, 2, 1, "", "DI_getPinMap"], [696, 2, 1, "", "DI_openPins"], [696, 2, 1, "", "DI_openPins_async"], [696, 2, 1, "", "DI_openPort"], [696, 2, 1, "", "DI_openPort_async"], [696, 2, 1, "", "DI_readPins"], [696, 2, 1, "", "DI_readPins_async"], [696, 2, 1, "", "DI_readPort"], [696, 2, 1, "", "DI_readPort_async"], [696, 2, 1, "", "DO_closePins"], [696, 2, 1, "", "DO_closePins_async"], [696, 2, 1, "", "DO_closePort"], [696, 2, 1, "", "DO_closePort_async"], [696, 2, 1, "", "DO_getPinMap"], [696, 2, 1, "", "DO_openPins"], [696, 2, 1, "", "DO_openPins_async"], [696, 2, 1, "", "DO_openPort"], [696, 2, 1, "", "DO_openPort_async"], [696, 2, 1, "", "DO_togglePins"], [696, 2, 1, "", "DO_togglePins_async"], [696, 2, 1, "", "DO_togglePort"], [696, 2, 1, "", "DO_togglePort_async"], [696, 2, 1, "", "DO_writePins"], [696, 2, 1, "", "DO_writePins_async"], [696, 2, 1, "", "DO_writePort"], [696, 2, 1, "", "DO_writePort_async"], [696, 2, 1, "", "Logger_openFile"], [696, 2, 1, "", "Logger_write2DList"], [696, 2, 1, "", "Logger_writeHeader"], [696, 2, 1, "", "Logger_writeList"], [696, 2, 1, "", "Logger_writeValue"], [696, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [696, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [696, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [696, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [696, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [696, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [696, 2, 1, "", "Motion_cfgAlarm"], [696, 2, 1, "", "Motion_cfgAlarm_async"], [696, 2, 1, "", "Motion_cfgAxis"], [696, 2, 1, "", "Motion_cfgAxisMove"], [696, 2, 1, "", "Motion_cfgAxisMove_async"], [696, 2, 1, "", "Motion_cfgAxis_async"], [696, 2, 1, "", "Motion_cfgBreakPoint"], [696, 2, 1, "", "Motion_cfgBreakPoint_async"], [696, 2, 1, "", "Motion_cfgCapture"], [696, 2, 1, "", "Motion_cfgCapture_async"], [696, 2, 1, "", "Motion_cfgCircularInterpo"], [696, 2, 1, "", "Motion_cfgCircularInterpo_async"], [696, 2, 1, "", "Motion_cfgEncoder"], [696, 2, 1, "", "Motion_cfgEncoder_async"], [696, 2, 1, "", "Motion_cfgFindRef"], [696, 2, 1, "", "Motion_cfgFindRef_async"], [696, 2, 1, "", "Motion_cfgHelicalInterpo"], [696, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [696, 2, 1, "", "Motion_cfgHome"], [696, 2, 1, "", "Motion_cfgHome_async"], [696, 2, 1, "", "Motion_cfgInposi"], [696, 2, 1, "", "Motion_cfgInposi_async"], [696, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [696, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [696, 2, 1, "", "Motion_cfgLimit"], [696, 2, 1, "", "Motion_cfgLimit_async"], [696, 2, 1, "", "Motion_checkRef"], [696, 2, 1, "", "Motion_checkRef_async"], [696, 2, 1, "", "Motion_close"], [696, 2, 1, "", "Motion_close_async"], [696, 2, 1, "", "Motion_enableBreakPoint"], [696, 2, 1, "", "Motion_enableBreakPoint_async"], [696, 2, 1, "", "Motion_enableCapture"], [696, 2, 1, "", "Motion_enableCapture_async"], [696, 2, 1, "", "Motion_enableServoOff"], [696, 2, 1, "", "Motion_enableServoOff_async"], [696, 2, 1, "", "Motion_enableServoOn"], [696, 2, 1, "", "Motion_enableServoOn_async"], [696, 2, 1, "", "Motion_findRef"], [696, 2, 1, "", "Motion_findRef_async"], [696, 2, 1, "", "Motion_getEncoderPosi"], [696, 2, 1, "", "Motion_getEncoderPosi_async"], [696, 2, 1, "", "Motion_getHomeStatus"], [696, 2, 1, "", "Motion_getHomeStatus_async"], [696, 2, 1, "", "Motion_getLimitStatus"], [696, 2, 1, "", "Motion_getLimitStatus_async"], [696, 2, 1, "", "Motion_getLogicalPosi"], [696, 2, 1, "", "Motion_getLogicalPosi_async"], [696, 2, 1, "", "Motion_getMoveStatus"], [696, 2, 1, "", "Motion_getMoveStatus_async"], [696, 2, 1, "", "Motion_loadCfgFile"], [696, 2, 1, "", "Motion_loadCfgFile_async"], [696, 2, 1, "", "Motion_open"], [696, 2, 1, "", "Motion_openCfgFile"], [696, 2, 1, "", "Motion_openCfgFile_async"], [696, 2, 1, "", "Motion_open_async"], [696, 2, 1, "", "Motion_overrideAxisAccel"], [696, 2, 1, "", "Motion_overrideAxisAccel_async"], [696, 2, 1, "", "Motion_overrideAxisPosi"], [696, 2, 1, "", "Motion_overrideAxisPosi_async"], [696, 2, 1, "", "Motion_overrideAxisVelocity"], [696, 2, 1, "", "Motion_overrideAxisVelocity_async"], [696, 2, 1, "", "Motion_readCapturePoint"], [696, 2, 1, "", "Motion_readCapturePoint_async"], [696, 2, 1, "", "Motion_rstEncoderPosi"], [696, 2, 1, "", "Motion_rstEncoderPosi_async"], [696, 2, 1, "", "Motion_saveCfgFile"], [696, 2, 1, "", "Motion_saveCfgFile_async"], [696, 2, 1, "", "Motion_setLogicalPosi"], [696, 2, 1, "", "Motion_setLogicalPosi_async"], [696, 2, 1, "", "Motion_startCircularInterpo"], [696, 2, 1, "", "Motion_startCircularInterpo_async"], [696, 2, 1, "", "Motion_startHelicalInterpo"], [696, 2, 1, "", "Motion_startHelicalInterpo_async"], [696, 2, 1, "", "Motion_startLinearInterpo"], [696, 2, 1, "", "Motion_startLinearInterpo_async"], [696, 2, 1, "", "Motion_startMultiAxisMove"], [696, 2, 1, "", "Motion_startMultiAxisMove_async"], [696, 2, 1, "", "Motion_startSingleAxisMove"], [696, 2, 1, "", "Motion_startSingleAxisMove_async"], [696, 2, 1, "", "Motion_stop"], [696, 2, 1, "", "Motion_stop_async"], [696, 2, 1, "", "Net_getGateway"], [696, 2, 1, "", "Net_getGateway_async"], [696, 2, 1, "", "Net_getIPAddrAndSubmask"], [696, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [696, 2, 1, "", "Net_getMACAddr"], [696, 2, 1, "", "Net_getMACAddr_async"], [696, 2, 1, "", "Net_setIPAddrAndSubmask"], [696, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [696, 2, 1, "", "Sys_getDriverInfo"], [696, 2, 1, "", "Sys_getDriverInfo_async"], [696, 2, 1, "", "Sys_getGateway"], [696, 2, 1, "", "Sys_getGateway_async"], [696, 2, 1, "", "Sys_getIPAddrAndSubmask"], [696, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [696, 2, 1, "", "Sys_getMACAddr"], [696, 2, 1, "", "Sys_getMACAddr_async"], [696, 2, 1, "", "Sys_getMode"], [696, 2, 1, "", "Sys_getMode_async"], [696, 2, 1, "", "Sys_getPinModeInPort"], [696, 2, 1, "", "Sys_getPinModeInPort_async"], [696, 2, 1, "", "Sys_getPythonVersion"], [696, 2, 1, "", "Sys_getPythonVersion_async"], [696, 2, 1, "", "Sys_getRTC"], [696, 2, 1, "", "Sys_getRTC_async"], [696, 2, 1, "", "Sys_getSerialNumber"], [696, 2, 1, "", "Sys_getSerialNumber_async"], [696, 2, 1, "", "Sys_reboot"], [696, 2, 1, "", "Sys_rebootOnBootloader"], [696, 2, 1, "", "Sys_rebootOnBootloader_async"], [696, 2, 1, "", "Sys_reboot_async"], [696, 2, 1, "", "Sys_setAIOMode"], [696, 2, 1, "", "Sys_setAIOMode_async"], [696, 2, 1, "", "Sys_setDIMode"], [696, 2, 1, "", "Sys_setDIMode_async"], [696, 2, 1, "", "Sys_setDIOMode"], [696, 2, 1, "", "Sys_setDIOMode_async"], [696, 2, 1, "", "Sys_setDOMode"], [696, 2, 1, "", "Sys_setDOMode_async"], [696, 2, 1, "", "Sys_setIPAddrAndSubmask"], [696, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [696, 2, 1, "", "Sys_setIdleMode"], [696, 2, 1, "", "Sys_setIdleMode_async"], [696, 2, 1, "", "Sys_setMotionMode"], [696, 2, 1, "", "Sys_setMotionMode_async"], [696, 2, 1, "", "Sys_setRTC"], [696, 2, 1, "", "Sys_setRTC_async"], [696, 2, 1, "", "Sys_setSwitchMode"], [696, 2, 1, "", "Sys_setSwitchMode_async"], [696, 2, 1, "", "close"], [696, 2, 1, "", "connect"], [696, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[697, 2, 1, "", "AI_close"], [697, 2, 1, "", "AI_close_async"], [697, 2, 1, "", "AI_enableCS"], [697, 2, 1, "", "AI_enableCS_async"], [697, 2, 1, "", "AI_enableChannel"], [697, 2, 1, "", "AI_enableChannel_async"], [697, 2, 1, "", "AI_getPort"], [697, 2, 1, "", "AI_open"], [697, 2, 1, "", "AI_open_async"], [697, 2, 1, "", "AI_readOnDemand"], [697, 2, 1, "", "AI_readOnDemand_async"], [697, 2, 1, "", "AI_readStreaming"], [697, 2, 1, "", "AI_readStreaming_async"], [697, 2, 1, "", "AI_setMode"], [697, 2, 1, "", "AI_setMode_async"], [697, 2, 1, "", "AI_setNumSamples"], [697, 2, 1, "", "AI_setNumSamples_async"], [697, 2, 1, "", "AI_setSamplingRate"], [697, 2, 1, "", "AI_setSamplingRate_async"], [697, 2, 1, "", "AI_start"], [697, 2, 1, "", "AI_start_async"], [697, 2, 1, "", "AI_stop"], [697, 2, 1, "", "AI_stop_async"], [697, 2, 1, "", "Counter_close"], [697, 2, 1, "", "Counter_close_async"], [697, 2, 1, "", "Counter_open"], [697, 2, 1, "", "Counter_open_async"], [697, 2, 1, "", "Counter_read"], [697, 2, 1, "", "Counter_read_async"], [697, 2, 1, "", "Counter_start"], [697, 2, 1, "", "Counter_start_async"], [697, 2, 1, "", "Counter_stop"], [697, 2, 1, "", "Counter_stop_async"], [697, 2, 1, "", "DIO_loadStartup"], [697, 2, 1, "", "DIO_loadStartup_async"], [697, 2, 1, "", "DIO_saveStartup"], [697, 2, 1, "", "DIO_saveStartup_async"], [697, 2, 1, "", "DIO_setPortDI"], [697, 2, 1, "", "DIO_setPortDI_async"], [697, 2, 1, "", "DIO_setPortDO"], [697, 2, 1, "", "DIO_setPortDO_async"], [697, 2, 1, "", "DIO_setPortIdle"], [697, 2, 1, "", "DIO_setPortIdle_async"], [697, 2, 1, "", "DI_closePins"], [697, 2, 1, "", "DI_closePins_async"], [697, 2, 1, "", "DI_closePort"], [697, 2, 1, "", "DI_closePort_async"], [697, 2, 1, "", "DI_getPinMap"], [697, 2, 1, "", "DI_openPins"], [697, 2, 1, "", "DI_openPins_async"], [697, 2, 1, "", "DI_openPort"], [697, 2, 1, "", "DI_openPort_async"], [697, 2, 1, "", "DI_readPins"], [697, 2, 1, "", "DI_readPins_async"], [697, 2, 1, "", "DI_readPort"], [697, 2, 1, "", "DI_readPort_async"], [697, 2, 1, "", "DO_closePins"], [697, 2, 1, "", "DO_closePins_async"], [697, 2, 1, "", "DO_closePort"], [697, 2, 1, "", "DO_closePort_async"], [697, 2, 1, "", "DO_getPinMap"], [697, 2, 1, "", "DO_openPins"], [697, 2, 1, "", "DO_openPins_async"], [697, 2, 1, "", "DO_openPort"], [697, 2, 1, "", "DO_openPort_async"], [697, 2, 1, "", "DO_togglePins"], [697, 2, 1, "", "DO_togglePins_async"], [697, 2, 1, "", "DO_togglePort"], [697, 2, 1, "", "DO_togglePort_async"], [697, 2, 1, "", "DO_writePins"], [697, 2, 1, "", "DO_writePins_async"], [697, 2, 1, "", "DO_writePort"], [697, 2, 1, "", "DO_writePort_async"], [697, 2, 1, "", "I2C_close"], [697, 2, 1, "", "I2C_close_async"], [697, 2, 1, "", "I2C_getPinMap"], [697, 2, 1, "", "I2C_open"], [697, 2, 1, "", "I2C_open_async"], [697, 2, 1, "", "I2C_read"], [697, 2, 1, "", "I2C_read_async"], [697, 2, 1, "", "I2C_reset"], [697, 2, 1, "", "I2C_reset_async"], [697, 2, 1, "", "I2C_setAddressSize"], [697, 2, 1, "", "I2C_setAddressSize_async"], [697, 2, 1, "", "I2C_setClockRate"], [697, 2, 1, "", "I2C_setClockRate_async"], [697, 2, 1, "", "I2C_write"], [697, 2, 1, "", "I2C_write_async"], [697, 2, 1, "", "Logger_openFile"], [697, 2, 1, "", "Logger_write2DList"], [697, 2, 1, "", "Logger_writeHeader"], [697, 2, 1, "", "Logger_writeList"], [697, 2, 1, "", "Logger_writeValue"], [697, 2, 1, "", "PWM_close"], [697, 2, 1, "", "PWM_close_async"], [697, 2, 1, "", "PWM_open"], [697, 2, 1, "", "PWM_open_async"], [697, 2, 1, "", "PWM_setDutyCycle"], [697, 2, 1, "", "PWM_setDutyCycle_async"], [697, 2, 1, "", "PWM_setFrequency"], [697, 2, 1, "", "PWM_setFrequency_async"], [697, 2, 1, "", "PWM_start"], [697, 2, 1, "", "PWM_start_async"], [697, 2, 1, "", "PWM_stop"], [697, 2, 1, "", "PWM_stop_async"], [697, 2, 1, "", "SPI_close"], [697, 2, 1, "", "SPI_close_async"], [697, 2, 1, "", "SPI_getPinMap"], [697, 2, 1, "", "SPI_open"], [697, 2, 1, "", "SPI_open_async"], [697, 2, 1, "", "SPI_read"], [697, 2, 1, "", "SPI_readAndWrite"], [697, 2, 1, "", "SPI_readAndWrite_async"], [697, 2, 1, "", "SPI_read_async"], [697, 2, 1, "", "SPI_reset"], [697, 2, 1, "", "SPI_reset_async"], [697, 2, 1, "", "SPI_setDataSize"], [697, 2, 1, "", "SPI_setDataSize_async"], [697, 2, 1, "", "SPI_setFirstBit"], [697, 2, 1, "", "SPI_setFirstBit_async"], [697, 2, 1, "", "SPI_setMode"], [697, 2, 1, "", "SPI_setMode_async"], [697, 2, 1, "", "SPI_setPrescaler"], [697, 2, 1, "", "SPI_setPrescaler_async"], [697, 2, 1, "", "SPI_write"], [697, 2, 1, "", "SPI_write_async"], [697, 2, 1, "", "Sys_getDriverInfo"], [697, 2, 1, "", "Sys_getDriverInfo_async"], [697, 2, 1, "", "Sys_getMode"], [697, 2, 1, "", "Sys_getMode_async"], [697, 2, 1, "", "Sys_getPinModeInPort"], [697, 2, 1, "", "Sys_getPinModeInPort_async"], [697, 2, 1, "", "Sys_getPythonVersion"], [697, 2, 1, "", "Sys_getPythonVersion_async"], [697, 2, 1, "", "Sys_getRTC"], [697, 2, 1, "", "Sys_getRTC_async"], [697, 2, 1, "", "Sys_getSerialNumber"], [697, 2, 1, "", "Sys_getSerialNumber_async"], [697, 2, 1, "", "Sys_reboot"], [697, 2, 1, "", "Sys_rebootOnBootloader"], [697, 2, 1, "", "Sys_rebootOnBootloader_async"], [697, 2, 1, "", "Sys_reboot_async"], [697, 2, 1, "", "Sys_setAIOMode"], [697, 2, 1, "", "Sys_setAIOMode_async"], [697, 2, 1, "", "Sys_setDIMode"], [697, 2, 1, "", "Sys_setDIMode_async"], [697, 2, 1, "", "Sys_setDIOMode"], [697, 2, 1, "", "Sys_setDIOMode_async"], [697, 2, 1, "", "Sys_setDOMode"], [697, 2, 1, "", "Sys_setDOMode_async"], [697, 2, 1, "", "Sys_setIdleMode"], [697, 2, 1, "", "Sys_setIdleMode_async"], [697, 2, 1, "", "Sys_setMotionMode"], [697, 2, 1, "", "Sys_setMotionMode_async"], [697, 2, 1, "", "Sys_setRTC"], [697, 2, 1, "", "Sys_setRTC_async"], [697, 2, 1, "", "Sys_setSwitchMode"], [697, 2, 1, "", "Sys_setSwitchMode_async"], [697, 2, 1, "", "UART_close"], [697, 2, 1, "", "UART_close_async"], [697, 2, 1, "", "UART_getPinMap"], [697, 2, 1, "", "UART_open"], [697, 2, 1, "", "UART_open_async"], [697, 2, 1, "", "UART_read"], [697, 2, 1, "", "UART_read_async"], [697, 2, 1, "", "UART_reset"], [697, 2, 1, "", "UART_reset_async"], [697, 2, 1, "", "UART_setBaudRate"], [697, 2, 1, "", "UART_setBaudRate_async"], [697, 2, 1, "", "UART_setDataBit"], [697, 2, 1, "", "UART_setDataBit_async"], [697, 2, 1, "", "UART_setNumStopBit"], [697, 2, 1, "", "UART_setNumStopBit_async"], [697, 2, 1, "", "UART_setParity"], [697, 2, 1, "", "UART_setParity_async"], [697, 2, 1, "", "UART_stopReading"], [697, 2, 1, "", "UART_stopReading_async"], [697, 2, 1, "", "UART_write"], [697, 2, 1, "", "UART_write_async"], [697, 2, 1, "", "close"], [697, 2, 1, "", "connect"], [697, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[698, 2, 1, "", "AI_close"], [698, 2, 1, "", "AI_close_async"], [698, 2, 1, "", "AI_enableCS"], [698, 2, 1, "", "AI_enableCS_async"], [698, 2, 1, "", "AI_enableChannel"], [698, 2, 1, "", "AI_enableChannel_async"], [698, 2, 1, "", "AI_getPort"], [698, 2, 1, "", "AI_open"], [698, 2, 1, "", "AI_open_async"], [698, 2, 1, "", "AI_readOnDemand"], [698, 2, 1, "", "AI_readOnDemand_async"], [698, 2, 1, "", "AI_readStreaming"], [698, 2, 1, "", "AI_readStreaming_async"], [698, 2, 1, "", "AI_setMode"], [698, 2, 1, "", "AI_setMode_async"], [698, 2, 1, "", "AI_setNumSamples"], [698, 2, 1, "", "AI_setNumSamples_async"], [698, 2, 1, "", "AI_setSamplingRate"], [698, 2, 1, "", "AI_setSamplingRate_async"], [698, 2, 1, "", "AI_start"], [698, 2, 1, "", "AI_start_async"], [698, 2, 1, "", "AI_stop"], [698, 2, 1, "", "AI_stop_async"], [698, 2, 1, "", "AO_close"], [698, 2, 1, "", "AO_closeStreaming"], [698, 2, 1, "", "AO_closeStreaming_async"], [698, 2, 1, "", "AO_close_async"], [698, 2, 1, "", "AO_getEnableChannels"], [698, 2, 1, "", "AO_getMode"], [698, 2, 1, "", "AO_getMode_async"], [698, 2, 1, "", "AO_getPort"], [698, 2, 1, "", "AO_getState"], [698, 2, 1, "", "AO_getValues"], [698, 2, 1, "", "AO_getValues_async"], [698, 2, 1, "", "AO_open"], [698, 2, 1, "", "AO_openStreaming"], [698, 2, 1, "", "AO_openStreaming_async"], [698, 2, 1, "", "AO_open_async"], [698, 2, 1, "", "AO_setEnableChannels"], [698, 2, 1, "", "AO_setEnableChannels_async"], [698, 2, 1, "", "AO_setForm"], [698, 2, 1, "", "AO_setFormParam"], [698, 2, 1, "", "AO_setFormParam_async"], [698, 2, 1, "", "AO_setForm_async"], [698, 2, 1, "", "AO_setMode"], [698, 2, 1, "", "AO_setMode_async"], [698, 2, 1, "", "AO_setNumSamples"], [698, 2, 1, "", "AO_setNumSamples_async"], [698, 2, 1, "", "AO_setSamplingRate"], [698, 2, 1, "", "AO_setSamplingRate_async"], [698, 2, 1, "", "AO_startStreaming"], [698, 2, 1, "", "AO_startStreaming_async"], [698, 2, 1, "", "AO_writeAllChannels"], [698, 2, 1, "", "AO_writeAllChannels_async"], [698, 2, 1, "", "AO_writeOneChannel"], [698, 2, 1, "", "AO_writeOneChannel_async"], [698, 2, 1, "", "Counter_close"], [698, 2, 1, "", "Counter_close_async"], [698, 2, 1, "", "Counter_open"], [698, 2, 1, "", "Counter_open_async"], [698, 2, 1, "", "Counter_read"], [698, 2, 1, "", "Counter_read_async"], [698, 2, 1, "", "Counter_start"], [698, 2, 1, "", "Counter_start_async"], [698, 2, 1, "", "Counter_stop"], [698, 2, 1, "", "Counter_stop_async"], [698, 2, 1, "", "DIO_loadStartup"], [698, 2, 1, "", "DIO_loadStartup_async"], [698, 2, 1, "", "DIO_saveStartup"], [698, 2, 1, "", "DIO_saveStartup_async"], [698, 2, 1, "", "DIO_setPortDI"], [698, 2, 1, "", "DIO_setPortDI_async"], [698, 2, 1, "", "DIO_setPortDO"], [698, 2, 1, "", "DIO_setPortDO_async"], [698, 2, 1, "", "DIO_setPortIdle"], [698, 2, 1, "", "DIO_setPortIdle_async"], [698, 2, 1, "", "DI_closePins"], [698, 2, 1, "", "DI_closePins_async"], [698, 2, 1, "", "DI_closePort"], [698, 2, 1, "", "DI_closePort_async"], [698, 2, 1, "", "DI_getPinMap"], [698, 2, 1, "", "DI_openPins"], [698, 2, 1, "", "DI_openPins_async"], [698, 2, 1, "", "DI_openPort"], [698, 2, 1, "", "DI_openPort_async"], [698, 2, 1, "", "DI_readPins"], [698, 2, 1, "", "DI_readPins_async"], [698, 2, 1, "", "DI_readPort"], [698, 2, 1, "", "DI_readPort_async"], [698, 2, 1, "", "DO_closePins"], [698, 2, 1, "", "DO_closePins_async"], [698, 2, 1, "", "DO_closePort"], [698, 2, 1, "", "DO_closePort_async"], [698, 2, 1, "", "DO_getPinMap"], [698, 2, 1, "", "DO_openPins"], [698, 2, 1, "", "DO_openPins_async"], [698, 2, 1, "", "DO_openPort"], [698, 2, 1, "", "DO_openPort_async"], [698, 2, 1, "", "DO_togglePins"], [698, 2, 1, "", "DO_togglePins_async"], [698, 2, 1, "", "DO_togglePort"], [698, 2, 1, "", "DO_togglePort_async"], [698, 2, 1, "", "DO_writePins"], [698, 2, 1, "", "DO_writePins_async"], [698, 2, 1, "", "DO_writePort"], [698, 2, 1, "", "DO_writePort_async"], [698, 2, 1, "", "I2C_close"], [698, 2, 1, "", "I2C_close_async"], [698, 2, 1, "", "I2C_getPinMap"], [698, 2, 1, "", "I2C_open"], [698, 2, 1, "", "I2C_open_async"], [698, 2, 1, "", "I2C_read"], [698, 2, 1, "", "I2C_read_async"], [698, 2, 1, "", "I2C_reset"], [698, 2, 1, "", "I2C_reset_async"], [698, 2, 1, "", "I2C_setAddressSize"], [698, 2, 1, "", "I2C_setAddressSize_async"], [698, 2, 1, "", "I2C_setClockRate"], [698, 2, 1, "", "I2C_setClockRate_async"], [698, 2, 1, "", "I2C_write"], [698, 2, 1, "", "I2C_write_async"], [698, 2, 1, "", "Logger_openFile"], [698, 2, 1, "", "Logger_write2DList"], [698, 2, 1, "", "Logger_writeHeader"], [698, 2, 1, "", "Logger_writeList"], [698, 2, 1, "", "Logger_writeValue"], [698, 2, 1, "", "PWM_close"], [698, 2, 1, "", "PWM_close_async"], [698, 2, 1, "", "PWM_open"], [698, 2, 1, "", "PWM_open_async"], [698, 2, 1, "", "PWM_setDutyCycle"], [698, 2, 1, "", "PWM_setDutyCycle_async"], [698, 2, 1, "", "PWM_setFrequency"], [698, 2, 1, "", "PWM_setFrequency_async"], [698, 2, 1, "", "PWM_start"], [698, 2, 1, "", "PWM_start_async"], [698, 2, 1, "", "PWM_stop"], [698, 2, 1, "", "PWM_stop_async"], [698, 2, 1, "", "Sys_getDriverInfo"], [698, 2, 1, "", "Sys_getDriverInfo_async"], [698, 2, 1, "", "Sys_getMode"], [698, 2, 1, "", "Sys_getMode_async"], [698, 2, 1, "", "Sys_getPinModeInPort"], [698, 2, 1, "", "Sys_getPinModeInPort_async"], [698, 2, 1, "", "Sys_getPythonVersion"], [698, 2, 1, "", "Sys_getPythonVersion_async"], [698, 2, 1, "", "Sys_getRTC"], [698, 2, 1, "", "Sys_getRTC_async"], [698, 2, 1, "", "Sys_getSerialNumber"], [698, 2, 1, "", "Sys_getSerialNumber_async"], [698, 2, 1, "", "Sys_reboot"], [698, 2, 1, "", "Sys_rebootOnBootloader"], [698, 2, 1, "", "Sys_rebootOnBootloader_async"], [698, 2, 1, "", "Sys_reboot_async"], [698, 2, 1, "", "Sys_setAIOMode"], [698, 2, 1, "", "Sys_setAIOMode_async"], [698, 2, 1, "", "Sys_setDIMode"], [698, 2, 1, "", "Sys_setDIMode_async"], [698, 2, 1, "", "Sys_setDIOMode"], [698, 2, 1, "", "Sys_setDIOMode_async"], [698, 2, 1, "", "Sys_setDOMode"], [698, 2, 1, "", "Sys_setDOMode_async"], [698, 2, 1, "", "Sys_setIdleMode"], [698, 2, 1, "", "Sys_setIdleMode_async"], [698, 2, 1, "", "Sys_setMotionMode"], [698, 2, 1, "", "Sys_setMotionMode_async"], [698, 2, 1, "", "Sys_setRTC"], [698, 2, 1, "", "Sys_setRTC_async"], [698, 2, 1, "", "Sys_setSwitchMode"], [698, 2, 1, "", "Sys_setSwitchMode_async"], [698, 2, 1, "", "UART_close"], [698, 2, 1, "", "UART_close_async"], [698, 2, 1, "", "UART_getPinMap"], [698, 2, 1, "", "UART_open"], [698, 2, 1, "", "UART_open_async"], [698, 2, 1, "", "UART_read"], [698, 2, 1, "", "UART_read_async"], [698, 2, 1, "", "UART_reset"], [698, 2, 1, "", "UART_reset_async"], [698, 2, 1, "", "UART_setBaudRate"], [698, 2, 1, "", "UART_setBaudRate_async"], [698, 2, 1, "", "UART_setDataBit"], [698, 2, 1, "", "UART_setDataBit_async"], [698, 2, 1, "", "UART_setNumStopBit"], [698, 2, 1, "", "UART_setNumStopBit_async"], [698, 2, 1, "", "UART_setParity"], [698, 2, 1, "", "UART_setParity_async"], [698, 2, 1, "", "UART_stopReading"], [698, 2, 1, "", "UART_stopReading_async"], [698, 2, 1, "", "UART_write"], [698, 2, 1, "", "UART_write_async"], [698, 2, 1, "", "close"], [698, 2, 1, "", "connect"], [698, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[699, 2, 1, "", "CAN_close"], [699, 2, 1, "", "CAN_close_async"], [699, 2, 1, "", "CAN_getPort"], [699, 2, 1, "", "CAN_open"], [699, 2, 1, "", "CAN_open_async"], [699, 2, 1, "", "CAN_read"], [699, 2, 1, "", "CAN_read_async"], [699, 2, 1, "", "CAN_setRXFilterOrMask"], [699, 2, 1, "", "CAN_setRXFilterOrMask_async"], [699, 2, 1, "", "CAN_setRXFilteringOn"], [699, 2, 1, "", "CAN_setRXFilteringOn_async"], [699, 2, 1, "", "CAN_setSpeed"], [699, 2, 1, "", "CAN_setSpeed_async"], [699, 2, 1, "", "CAN_start"], [699, 2, 1, "", "CAN_start_async"], [699, 2, 1, "", "CAN_stop"], [699, 2, 1, "", "CAN_stop_async"], [699, 2, 1, "", "CAN_write"], [699, 2, 1, "", "CAN_write_async"], [699, 2, 1, "", "Counter_close"], [699, 2, 1, "", "Counter_close_async"], [699, 2, 1, "", "Counter_open"], [699, 2, 1, "", "Counter_open_async"], [699, 2, 1, "", "Counter_read"], [699, 2, 1, "", "Counter_read_async"], [699, 2, 1, "", "Counter_start"], [699, 2, 1, "", "Counter_start_async"], [699, 2, 1, "", "Counter_stop"], [699, 2, 1, "", "Counter_stop_async"], [699, 2, 1, "", "DIO_loadStartup"], [699, 2, 1, "", "DIO_loadStartup_async"], [699, 2, 1, "", "DIO_saveStartup"], [699, 2, 1, "", "DIO_saveStartup_async"], [699, 2, 1, "", "DIO_setPortDI"], [699, 2, 1, "", "DIO_setPortDI_async"], [699, 2, 1, "", "DIO_setPortDO"], [699, 2, 1, "", "DIO_setPortDO_async"], [699, 2, 1, "", "DIO_setPortIdle"], [699, 2, 1, "", "DIO_setPortIdle_async"], [699, 2, 1, "", "DI_closePins"], [699, 2, 1, "", "DI_closePins_async"], [699, 2, 1, "", "DI_closePort"], [699, 2, 1, "", "DI_closePort_async"], [699, 2, 1, "", "DI_getPinMap"], [699, 2, 1, "", "DI_openPins"], [699, 2, 1, "", "DI_openPins_async"], [699, 2, 1, "", "DI_openPort"], [699, 2, 1, "", "DI_openPort_async"], [699, 2, 1, "", "DI_readPins"], [699, 2, 1, "", "DI_readPins_async"], [699, 2, 1, "", "DI_readPort"], [699, 2, 1, "", "DI_readPort_async"], [699, 2, 1, "", "DO_closePins"], [699, 2, 1, "", "DO_closePins_async"], [699, 2, 1, "", "DO_closePort"], [699, 2, 1, "", "DO_closePort_async"], [699, 2, 1, "", "DO_getPinMap"], [699, 2, 1, "", "DO_openPins"], [699, 2, 1, "", "DO_openPins_async"], [699, 2, 1, "", "DO_openPort"], [699, 2, 1, "", "DO_openPort_async"], [699, 2, 1, "", "DO_togglePins"], [699, 2, 1, "", "DO_togglePins_async"], [699, 2, 1, "", "DO_togglePort"], [699, 2, 1, "", "DO_togglePort_async"], [699, 2, 1, "", "DO_writePins"], [699, 2, 1, "", "DO_writePins_async"], [699, 2, 1, "", "DO_writePort"], [699, 2, 1, "", "DO_writePort_async"], [699, 2, 1, "", "I2C_close"], [699, 2, 1, "", "I2C_close_async"], [699, 2, 1, "", "I2C_getPinMap"], [699, 2, 1, "", "I2C_open"], [699, 2, 1, "", "I2C_open_async"], [699, 2, 1, "", "I2C_read"], [699, 2, 1, "", "I2C_read_async"], [699, 2, 1, "", "I2C_reset"], [699, 2, 1, "", "I2C_reset_async"], [699, 2, 1, "", "I2C_setAddressSize"], [699, 2, 1, "", "I2C_setAddressSize_async"], [699, 2, 1, "", "I2C_setClockRate"], [699, 2, 1, "", "I2C_setClockRate_async"], [699, 2, 1, "", "I2C_write"], [699, 2, 1, "", "I2C_write_async"], [699, 2, 1, "", "Logger_openFile"], [699, 2, 1, "", "Logger_write2DList"], [699, 2, 1, "", "Logger_writeHeader"], [699, 2, 1, "", "Logger_writeList"], [699, 2, 1, "", "Logger_writeValue"], [699, 2, 1, "", "PWM_close"], [699, 2, 1, "", "PWM_close_async"], [699, 2, 1, "", "PWM_open"], [699, 2, 1, "", "PWM_open_async"], [699, 2, 1, "", "PWM_setDutyCycle"], [699, 2, 1, "", "PWM_setDutyCycle_async"], [699, 2, 1, "", "PWM_setFrequency"], [699, 2, 1, "", "PWM_setFrequency_async"], [699, 2, 1, "", "PWM_start"], [699, 2, 1, "", "PWM_start_async"], [699, 2, 1, "", "PWM_stop"], [699, 2, 1, "", "PWM_stop_async"], [699, 2, 1, "", "SPI_close"], [699, 2, 1, "", "SPI_close_async"], [699, 2, 1, "", "SPI_getPinMap"], [699, 2, 1, "", "SPI_open"], [699, 2, 1, "", "SPI_open_async"], [699, 2, 1, "", "SPI_read"], [699, 2, 1, "", "SPI_readAndWrite"], [699, 2, 1, "", "SPI_readAndWrite_async"], [699, 2, 1, "", "SPI_read_async"], [699, 2, 1, "", "SPI_reset"], [699, 2, 1, "", "SPI_reset_async"], [699, 2, 1, "", "SPI_setDataSize"], [699, 2, 1, "", "SPI_setDataSize_async"], [699, 2, 1, "", "SPI_setFirstBit"], [699, 2, 1, "", "SPI_setFirstBit_async"], [699, 2, 1, "", "SPI_setMode"], [699, 2, 1, "", "SPI_setMode_async"], [699, 2, 1, "", "SPI_setPrescaler"], [699, 2, 1, "", "SPI_setPrescaler_async"], [699, 2, 1, "", "SPI_write"], [699, 2, 1, "", "SPI_write_async"], [699, 2, 1, "", "Sys_getDriverInfo"], [699, 2, 1, "", "Sys_getDriverInfo_async"], [699, 2, 1, "", "Sys_getMode"], [699, 2, 1, "", "Sys_getMode_async"], [699, 2, 1, "", "Sys_getPinModeInPort"], [699, 2, 1, "", "Sys_getPinModeInPort_async"], [699, 2, 1, "", "Sys_getPythonVersion"], [699, 2, 1, "", "Sys_getPythonVersion_async"], [699, 2, 1, "", "Sys_getRTC"], [699, 2, 1, "", "Sys_getRTC_async"], [699, 2, 1, "", "Sys_getSerialNumber"], [699, 2, 1, "", "Sys_getSerialNumber_async"], [699, 2, 1, "", "Sys_reboot"], [699, 2, 1, "", "Sys_rebootOnBootloader"], [699, 2, 1, "", "Sys_rebootOnBootloader_async"], [699, 2, 1, "", "Sys_reboot_async"], [699, 2, 1, "", "Sys_setAIOMode"], [699, 2, 1, "", "Sys_setAIOMode_async"], [699, 2, 1, "", "Sys_setDIMode"], [699, 2, 1, "", "Sys_setDIMode_async"], [699, 2, 1, "", "Sys_setDIOMode"], [699, 2, 1, "", "Sys_setDIOMode_async"], [699, 2, 1, "", "Sys_setDOMode"], [699, 2, 1, "", "Sys_setDOMode_async"], [699, 2, 1, "", "Sys_setIdleMode"], [699, 2, 1, "", "Sys_setIdleMode_async"], [699, 2, 1, "", "Sys_setMotionMode"], [699, 2, 1, "", "Sys_setMotionMode_async"], [699, 2, 1, "", "Sys_setRTC"], [699, 2, 1, "", "Sys_setRTC_async"], [699, 2, 1, "", "Sys_setSwitchMode"], [699, 2, 1, "", "Sys_setSwitchMode_async"], [699, 2, 1, "", "UART_close"], [699, 2, 1, "", "UART_close_async"], [699, 2, 1, "", "UART_getPinMap"], [699, 2, 1, "", "UART_open"], [699, 2, 1, "", "UART_open_async"], [699, 2, 1, "", "UART_read"], [699, 2, 1, "", "UART_read_async"], [699, 2, 1, "", "UART_reset"], [699, 2, 1, "", "UART_reset_async"], [699, 2, 1, "", "UART_setBaudRate"], [699, 2, 1, "", "UART_setBaudRate_async"], [699, 2, 1, "", "UART_setDataBit"], [699, 2, 1, "", "UART_setDataBit_async"], [699, 2, 1, "", "UART_setNumStopBit"], [699, 2, 1, "", "UART_setNumStopBit_async"], [699, 2, 1, "", "UART_setParity"], [699, 2, 1, "", "UART_setParity_async"], [699, 2, 1, "", "UART_stopReading"], [699, 2, 1, "", "UART_stopReading_async"], [699, 2, 1, "", "UART_write"], [699, 2, 1, "", "UART_write_async"], [699, 2, 1, "", "close"], [699, 2, 1, "", "connect"], [699, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[700, 2, 1, "", "Counter_close"], [700, 2, 1, "", "Counter_close_async"], [700, 2, 1, "", "Counter_open"], [700, 2, 1, "", "Counter_open_async"], [700, 2, 1, "", "Counter_read"], [700, 2, 1, "", "Counter_read_async"], [700, 2, 1, "", "Counter_start"], [700, 2, 1, "", "Counter_start_async"], [700, 2, 1, "", "Counter_stop"], [700, 2, 1, "", "Counter_stop_async"], [700, 2, 1, "", "DIO_loadStartup"], [700, 2, 1, "", "DIO_loadStartup_async"], [700, 2, 1, "", "DIO_saveStartup"], [700, 2, 1, "", "DIO_saveStartup_async"], [700, 2, 1, "", "DIO_setPortDI"], [700, 2, 1, "", "DIO_setPortDI_async"], [700, 2, 1, "", "DIO_setPortDO"], [700, 2, 1, "", "DIO_setPortDO_async"], [700, 2, 1, "", "DIO_setPortIdle"], [700, 2, 1, "", "DIO_setPortIdle_async"], [700, 2, 1, "", "DI_closePins"], [700, 2, 1, "", "DI_closePins_async"], [700, 2, 1, "", "DI_closePort"], [700, 2, 1, "", "DI_closePort_async"], [700, 2, 1, "", "DI_getPinMap"], [700, 2, 1, "", "DI_openPins"], [700, 2, 1, "", "DI_openPins_async"], [700, 2, 1, "", "DI_openPort"], [700, 2, 1, "", "DI_openPort_async"], [700, 2, 1, "", "DI_readPins"], [700, 2, 1, "", "DI_readPins_async"], [700, 2, 1, "", "DI_readPort"], [700, 2, 1, "", "DI_readPort_async"], [700, 2, 1, "", "DO_closePins"], [700, 2, 1, "", "DO_closePins_async"], [700, 2, 1, "", "DO_closePort"], [700, 2, 1, "", "DO_closePort_async"], [700, 2, 1, "", "DO_getPinMap"], [700, 2, 1, "", "DO_openPins"], [700, 2, 1, "", "DO_openPins_async"], [700, 2, 1, "", "DO_openPort"], [700, 2, 1, "", "DO_openPort_async"], [700, 2, 1, "", "DO_togglePins"], [700, 2, 1, "", "DO_togglePins_async"], [700, 2, 1, "", "DO_togglePort"], [700, 2, 1, "", "DO_togglePort_async"], [700, 2, 1, "", "DO_writePins"], [700, 2, 1, "", "DO_writePins_async"], [700, 2, 1, "", "DO_writePort"], [700, 2, 1, "", "DO_writePort_async"], [700, 2, 1, "", "I2C_close"], [700, 2, 1, "", "I2C_close_async"], [700, 2, 1, "", "I2C_getPinMap"], [700, 2, 1, "", "I2C_open"], [700, 2, 1, "", "I2C_open_async"], [700, 2, 1, "", "I2C_read"], [700, 2, 1, "", "I2C_read_async"], [700, 2, 1, "", "I2C_reset"], [700, 2, 1, "", "I2C_reset_async"], [700, 2, 1, "", "I2C_setAddressSize"], [700, 2, 1, "", "I2C_setAddressSize_async"], [700, 2, 1, "", "I2C_setClockRate"], [700, 2, 1, "", "I2C_setClockRate_async"], [700, 2, 1, "", "I2C_write"], [700, 2, 1, "", "I2C_write_async"], [700, 2, 1, "", "Logger_openFile"], [700, 2, 1, "", "Logger_write2DList"], [700, 2, 1, "", "Logger_writeHeader"], [700, 2, 1, "", "Logger_writeList"], [700, 2, 1, "", "Logger_writeValue"], [700, 2, 1, "", "PWM_close"], [700, 2, 1, "", "PWM_close_async"], [700, 2, 1, "", "PWM_open"], [700, 2, 1, "", "PWM_open_async"], [700, 2, 1, "", "PWM_setDutyCycle"], [700, 2, 1, "", "PWM_setDutyCycle_async"], [700, 2, 1, "", "PWM_setFrequency"], [700, 2, 1, "", "PWM_setFrequency_async"], [700, 2, 1, "", "PWM_start"], [700, 2, 1, "", "PWM_start_async"], [700, 2, 1, "", "PWM_stop"], [700, 2, 1, "", "PWM_stop_async"], [700, 2, 1, "", "SPI_close"], [700, 2, 1, "", "SPI_close_async"], [700, 2, 1, "", "SPI_getPinMap"], [700, 2, 1, "", "SPI_open"], [700, 2, 1, "", "SPI_open_async"], [700, 2, 1, "", "SPI_read"], [700, 2, 1, "", "SPI_readAndWrite"], [700, 2, 1, "", "SPI_readAndWrite_async"], [700, 2, 1, "", "SPI_read_async"], [700, 2, 1, "", "SPI_reset"], [700, 2, 1, "", "SPI_reset_async"], [700, 2, 1, "", "SPI_setDataSize"], [700, 2, 1, "", "SPI_setDataSize_async"], [700, 2, 1, "", "SPI_setFirstBit"], [700, 2, 1, "", "SPI_setFirstBit_async"], [700, 2, 1, "", "SPI_setMode"], [700, 2, 1, "", "SPI_setMode_async"], [700, 2, 1, "", "SPI_setPrescaler"], [700, 2, 1, "", "SPI_setPrescaler_async"], [700, 2, 1, "", "SPI_write"], [700, 2, 1, "", "SPI_write_async"], [700, 2, 1, "", "Sys_getDriverInfo"], [700, 2, 1, "", "Sys_getDriverInfo_async"], [700, 2, 1, "", "Sys_getMode"], [700, 2, 1, "", "Sys_getMode_async"], [700, 2, 1, "", "Sys_getPinModeInPort"], [700, 2, 1, "", "Sys_getPinModeInPort_async"], [700, 2, 1, "", "Sys_getPythonVersion"], [700, 2, 1, "", "Sys_getPythonVersion_async"], [700, 2, 1, "", "Sys_getRTC"], [700, 2, 1, "", "Sys_getRTC_async"], [700, 2, 1, "", "Sys_getSerialNumber"], [700, 2, 1, "", "Sys_getSerialNumber_async"], [700, 2, 1, "", "Sys_reboot"], [700, 2, 1, "", "Sys_rebootOnBootloader"], [700, 2, 1, "", "Sys_rebootOnBootloader_async"], [700, 2, 1, "", "Sys_reboot_async"], [700, 2, 1, "", "Sys_setAIOMode"], [700, 2, 1, "", "Sys_setAIOMode_async"], [700, 2, 1, "", "Sys_setDIMode"], [700, 2, 1, "", "Sys_setDIMode_async"], [700, 2, 1, "", "Sys_setDIOMode"], [700, 2, 1, "", "Sys_setDIOMode_async"], [700, 2, 1, "", "Sys_setDOMode"], [700, 2, 1, "", "Sys_setDOMode_async"], [700, 2, 1, "", "Sys_setIdleMode"], [700, 2, 1, "", "Sys_setIdleMode_async"], [700, 2, 1, "", "Sys_setMotionMode"], [700, 2, 1, "", "Sys_setMotionMode_async"], [700, 2, 1, "", "Sys_setRTC"], [700, 2, 1, "", "Sys_setRTC_async"], [700, 2, 1, "", "Sys_setSwitchMode"], [700, 2, 1, "", "Sys_setSwitchMode_async"], [700, 2, 1, "", "UART_close"], [700, 2, 1, "", "UART_close_async"], [700, 2, 1, "", "UART_getPinMap"], [700, 2, 1, "", "UART_open"], [700, 2, 1, "", "UART_open_async"], [700, 2, 1, "", "UART_read"], [700, 2, 1, "", "UART_read_async"], [700, 2, 1, "", "UART_reset"], [700, 2, 1, "", "UART_reset_async"], [700, 2, 1, "", "UART_setBaudRate"], [700, 2, 1, "", "UART_setBaudRate_async"], [700, 2, 1, "", "UART_setDataBit"], [700, 2, 1, "", "UART_setDataBit_async"], [700, 2, 1, "", "UART_setNumStopBit"], [700, 2, 1, "", "UART_setNumStopBit_async"], [700, 2, 1, "", "UART_setParity"], [700, 2, 1, "", "UART_setParity_async"], [700, 2, 1, "", "UART_stopReading"], [700, 2, 1, "", "UART_stopReading_async"], [700, 2, 1, "", "UART_write"], [700, 2, 1, "", "UART_write_async"], [700, 2, 1, "", "close"], [700, 2, 1, "", "connect"], [700, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[701, 2, 1, "", "Counter_close"], [701, 2, 1, "", "Counter_close_async"], [701, 2, 1, "", "Counter_open"], [701, 2, 1, "", "Counter_open_async"], [701, 2, 1, "", "Counter_read"], [701, 2, 1, "", "Counter_read_async"], [701, 2, 1, "", "Counter_start"], [701, 2, 1, "", "Counter_start_async"], [701, 2, 1, "", "Counter_stop"], [701, 2, 1, "", "Counter_stop_async"], [701, 2, 1, "", "DIO_loadStartup"], [701, 2, 1, "", "DIO_loadStartup_async"], [701, 2, 1, "", "DIO_saveStartup"], [701, 2, 1, "", "DIO_saveStartup_async"], [701, 2, 1, "", "DIO_setPortDI"], [701, 2, 1, "", "DIO_setPortDI_async"], [701, 2, 1, "", "DIO_setPortDO"], [701, 2, 1, "", "DIO_setPortDO_async"], [701, 2, 1, "", "DIO_setPortIdle"], [701, 2, 1, "", "DIO_setPortIdle_async"], [701, 2, 1, "", "DI_closePins"], [701, 2, 1, "", "DI_closePins_async"], [701, 2, 1, "", "DI_closePort"], [701, 2, 1, "", "DI_closePort_async"], [701, 2, 1, "", "DI_getPinMap"], [701, 2, 1, "", "DI_openPins"], [701, 2, 1, "", "DI_openPins_async"], [701, 2, 1, "", "DI_openPort"], [701, 2, 1, "", "DI_openPort_async"], [701, 2, 1, "", "DI_readPins"], [701, 2, 1, "", "DI_readPins_async"], [701, 2, 1, "", "DI_readPort"], [701, 2, 1, "", "DI_readPort_async"], [701, 2, 1, "", "DO_closePins"], [701, 2, 1, "", "DO_closePins_async"], [701, 2, 1, "", "DO_closePort"], [701, 2, 1, "", "DO_closePort_async"], [701, 2, 1, "", "DO_getPinMap"], [701, 2, 1, "", "DO_openPins"], [701, 2, 1, "", "DO_openPins_async"], [701, 2, 1, "", "DO_openPort"], [701, 2, 1, "", "DO_openPort_async"], [701, 2, 1, "", "DO_togglePins"], [701, 2, 1, "", "DO_togglePins_async"], [701, 2, 1, "", "DO_togglePort"], [701, 2, 1, "", "DO_togglePort_async"], [701, 2, 1, "", "DO_writePins"], [701, 2, 1, "", "DO_writePins_async"], [701, 2, 1, "", "DO_writePort"], [701, 2, 1, "", "DO_writePort_async"], [701, 2, 1, "", "Logger_openFile"], [701, 2, 1, "", "Logger_write2DList"], [701, 2, 1, "", "Logger_writeHeader"], [701, 2, 1, "", "Logger_writeList"], [701, 2, 1, "", "Logger_writeValue"], [701, 2, 1, "", "PWM_close"], [701, 2, 1, "", "PWM_close_async"], [701, 2, 1, "", "PWM_open"], [701, 2, 1, "", "PWM_open_async"], [701, 2, 1, "", "PWM_setDutyCycle"], [701, 2, 1, "", "PWM_setDutyCycle_async"], [701, 2, 1, "", "PWM_setFrequency"], [701, 2, 1, "", "PWM_setFrequency_async"], [701, 2, 1, "", "PWM_start"], [701, 2, 1, "", "PWM_start_async"], [701, 2, 1, "", "PWM_stop"], [701, 2, 1, "", "PWM_stop_async"], [701, 2, 1, "", "Sys_getDriverInfo"], [701, 2, 1, "", "Sys_getDriverInfo_async"], [701, 2, 1, "", "Sys_getMode"], [701, 2, 1, "", "Sys_getMode_async"], [701, 2, 1, "", "Sys_getPinModeInPort"], [701, 2, 1, "", "Sys_getPinModeInPort_async"], [701, 2, 1, "", "Sys_getPythonVersion"], [701, 2, 1, "", "Sys_getPythonVersion_async"], [701, 2, 1, "", "Sys_getRTC"], [701, 2, 1, "", "Sys_getRTC_async"], [701, 2, 1, "", "Sys_getSerialNumber"], [701, 2, 1, "", "Sys_getSerialNumber_async"], [701, 2, 1, "", "Sys_reboot"], [701, 2, 1, "", "Sys_rebootOnBootloader"], [701, 2, 1, "", "Sys_rebootOnBootloader_async"], [701, 2, 1, "", "Sys_reboot_async"], [701, 2, 1, "", "Sys_setAIOMode"], [701, 2, 1, "", "Sys_setAIOMode_async"], [701, 2, 1, "", "Sys_setDIMode"], [701, 2, 1, "", "Sys_setDIMode_async"], [701, 2, 1, "", "Sys_setDIOMode"], [701, 2, 1, "", "Sys_setDIOMode_async"], [701, 2, 1, "", "Sys_setDOMode"], [701, 2, 1, "", "Sys_setDOMode_async"], [701, 2, 1, "", "Sys_setIdleMode"], [701, 2, 1, "", "Sys_setIdleMode_async"], [701, 2, 1, "", "Sys_setMotionMode"], [701, 2, 1, "", "Sys_setMotionMode_async"], [701, 2, 1, "", "Sys_setRTC"], [701, 2, 1, "", "Sys_setRTC_async"], [701, 2, 1, "", "Sys_setSwitchMode"], [701, 2, 1, "", "Sys_setSwitchMode_async"], [701, 2, 1, "", "close"], [701, 2, 1, "", "connect"], [701, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[702, 2, 1, "", "Counter_close"], [702, 2, 1, "", "Counter_close_async"], [702, 2, 1, "", "Counter_open"], [702, 2, 1, "", "Counter_open_async"], [702, 2, 1, "", "Counter_read"], [702, 2, 1, "", "Counter_read_async"], [702, 2, 1, "", "Counter_start"], [702, 2, 1, "", "Counter_start_async"], [702, 2, 1, "", "Counter_stop"], [702, 2, 1, "", "Counter_stop_async"], [702, 2, 1, "", "DIO_loadStartup"], [702, 2, 1, "", "DIO_loadStartup_async"], [702, 2, 1, "", "DIO_saveStartup"], [702, 2, 1, "", "DIO_saveStartup_async"], [702, 2, 1, "", "DIO_setPortDI"], [702, 2, 1, "", "DIO_setPortDI_async"], [702, 2, 1, "", "DIO_setPortDO"], [702, 2, 1, "", "DIO_setPortDO_async"], [702, 2, 1, "", "DIO_setPortIdle"], [702, 2, 1, "", "DIO_setPortIdle_async"], [702, 2, 1, "", "DI_closePins"], [702, 2, 1, "", "DI_closePins_async"], [702, 2, 1, "", "DI_closePort"], [702, 2, 1, "", "DI_closePort_async"], [702, 2, 1, "", "DI_getPinMap"], [702, 2, 1, "", "DI_openPins"], [702, 2, 1, "", "DI_openPins_async"], [702, 2, 1, "", "DI_openPort"], [702, 2, 1, "", "DI_openPort_async"], [702, 2, 1, "", "DI_readPins"], [702, 2, 1, "", "DI_readPins_async"], [702, 2, 1, "", "DI_readPort"], [702, 2, 1, "", "DI_readPort_async"], [702, 2, 1, "", "DO_closePins"], [702, 2, 1, "", "DO_closePins_async"], [702, 2, 1, "", "DO_closePort"], [702, 2, 1, "", "DO_closePort_async"], [702, 2, 1, "", "DO_getPinMap"], [702, 2, 1, "", "DO_openPins"], [702, 2, 1, "", "DO_openPins_async"], [702, 2, 1, "", "DO_openPort"], [702, 2, 1, "", "DO_openPort_async"], [702, 2, 1, "", "DO_togglePins"], [702, 2, 1, "", "DO_togglePins_async"], [702, 2, 1, "", "DO_togglePort"], [702, 2, 1, "", "DO_togglePort_async"], [702, 2, 1, "", "DO_writePins"], [702, 2, 1, "", "DO_writePins_async"], [702, 2, 1, "", "DO_writePort"], [702, 2, 1, "", "DO_writePort_async"], [702, 2, 1, "", "I2C_close"], [702, 2, 1, "", "I2C_close_async"], [702, 2, 1, "", "I2C_getPinMap"], [702, 2, 1, "", "I2C_open"], [702, 2, 1, "", "I2C_open_async"], [702, 2, 1, "", "I2C_read"], [702, 2, 1, "", "I2C_read_async"], [702, 2, 1, "", "I2C_reset"], [702, 2, 1, "", "I2C_reset_async"], [702, 2, 1, "", "I2C_setAddressSize"], [702, 2, 1, "", "I2C_setAddressSize_async"], [702, 2, 1, "", "I2C_setClockRate"], [702, 2, 1, "", "I2C_setClockRate_async"], [702, 2, 1, "", "I2C_write"], [702, 2, 1, "", "I2C_write_async"], [702, 2, 1, "", "Logger_openFile"], [702, 2, 1, "", "Logger_write2DList"], [702, 2, 1, "", "Logger_writeHeader"], [702, 2, 1, "", "Logger_writeList"], [702, 2, 1, "", "Logger_writeValue"], [702, 2, 1, "", "PWM_close"], [702, 2, 1, "", "PWM_close_async"], [702, 2, 1, "", "PWM_open"], [702, 2, 1, "", "PWM_open_async"], [702, 2, 1, "", "PWM_setDutyCycle"], [702, 2, 1, "", "PWM_setDutyCycle_async"], [702, 2, 1, "", "PWM_setFrequency"], [702, 2, 1, "", "PWM_setFrequency_async"], [702, 2, 1, "", "PWM_start"], [702, 2, 1, "", "PWM_start_async"], [702, 2, 1, "", "PWM_stop"], [702, 2, 1, "", "PWM_stop_async"], [702, 2, 1, "", "SPI_close"], [702, 2, 1, "", "SPI_close_async"], [702, 2, 1, "", "SPI_getPinMap"], [702, 2, 1, "", "SPI_open"], [702, 2, 1, "", "SPI_open_async"], [702, 2, 1, "", "SPI_read"], [702, 2, 1, "", "SPI_readAndWrite"], [702, 2, 1, "", "SPI_readAndWrite_async"], [702, 2, 1, "", "SPI_read_async"], [702, 2, 1, "", "SPI_reset"], [702, 2, 1, "", "SPI_reset_async"], [702, 2, 1, "", "SPI_setDataSize"], [702, 2, 1, "", "SPI_setDataSize_async"], [702, 2, 1, "", "SPI_setFirstBit"], [702, 2, 1, "", "SPI_setFirstBit_async"], [702, 2, 1, "", "SPI_setMode"], [702, 2, 1, "", "SPI_setMode_async"], [702, 2, 1, "", "SPI_setPrescaler"], [702, 2, 1, "", "SPI_setPrescaler_async"], [702, 2, 1, "", "SPI_write"], [702, 2, 1, "", "SPI_write_async"], [702, 2, 1, "", "Sys_getDriverInfo"], [702, 2, 1, "", "Sys_getDriverInfo_async"], [702, 2, 1, "", "Sys_getMode"], [702, 2, 1, "", "Sys_getMode_async"], [702, 2, 1, "", "Sys_getPinModeInPort"], [702, 2, 1, "", "Sys_getPinModeInPort_async"], [702, 2, 1, "", "Sys_getPythonVersion"], [702, 2, 1, "", "Sys_getPythonVersion_async"], [702, 2, 1, "", "Sys_getRTC"], [702, 2, 1, "", "Sys_getRTC_async"], [702, 2, 1, "", "Sys_getSerialNumber"], [702, 2, 1, "", "Sys_getSerialNumber_async"], [702, 2, 1, "", "Sys_reboot"], [702, 2, 1, "", "Sys_rebootOnBootloader"], [702, 2, 1, "", "Sys_rebootOnBootloader_async"], [702, 2, 1, "", "Sys_reboot_async"], [702, 2, 1, "", "Sys_setAIOMode"], [702, 2, 1, "", "Sys_setAIOMode_async"], [702, 2, 1, "", "Sys_setDIMode"], [702, 2, 1, "", "Sys_setDIMode_async"], [702, 2, 1, "", "Sys_setDIOMode"], [702, 2, 1, "", "Sys_setDIOMode_async"], [702, 2, 1, "", "Sys_setDOMode"], [702, 2, 1, "", "Sys_setDOMode_async"], [702, 2, 1, "", "Sys_setIdleMode"], [702, 2, 1, "", "Sys_setIdleMode_async"], [702, 2, 1, "", "Sys_setMotionMode"], [702, 2, 1, "", "Sys_setMotionMode_async"], [702, 2, 1, "", "Sys_setRTC"], [702, 2, 1, "", "Sys_setRTC_async"], [702, 2, 1, "", "Sys_setSwitchMode"], [702, 2, 1, "", "Sys_setSwitchMode_async"], [702, 2, 1, "", "Thermal_close"], [702, 2, 1, "", "Thermal_close_async"], [702, 2, 1, "", "Thermal_getPinMap"], [702, 2, 1, "", "Thermal_getStatus"], [702, 2, 1, "", "Thermal_getStatus_async"], [702, 2, 1, "", "Thermal_open"], [702, 2, 1, "", "Thermal_open_async"], [702, 2, 1, "", "Thermal_readSensor"], [702, 2, 1, "", "Thermal_readSensor_async"], [702, 2, 1, "", "Thermal_setType"], [702, 2, 1, "", "Thermal_setType_async"], [702, 2, 1, "", "UART_close"], [702, 2, 1, "", "UART_close_async"], [702, 2, 1, "", "UART_getPinMap"], [702, 2, 1, "", "UART_open"], [702, 2, 1, "", "UART_open_async"], [702, 2, 1, "", "UART_read"], [702, 2, 1, "", "UART_read_async"], [702, 2, 1, "", "UART_reset"], [702, 2, 1, "", "UART_reset_async"], [702, 2, 1, "", "UART_setBaudRate"], [702, 2, 1, "", "UART_setBaudRate_async"], [702, 2, 1, "", "UART_setDataBit"], [702, 2, 1, "", "UART_setDataBit_async"], [702, 2, 1, "", "UART_setNumStopBit"], [702, 2, 1, "", "UART_setNumStopBit_async"], [702, 2, 1, "", "UART_setParity"], [702, 2, 1, "", "UART_setParity_async"], [702, 2, 1, "", "UART_stopReading"], [702, 2, 1, "", "UART_stopReading_async"], [702, 2, 1, "", "UART_write"], [702, 2, 1, "", "UART_write_async"], [702, 2, 1, "", "close"], [702, 2, 1, "", "connect"], [702, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[703, 2, 1, "", "Counter_close"], [703, 2, 1, "", "Counter_close_async"], [703, 2, 1, "", "Counter_open"], [703, 2, 1, "", "Counter_open_async"], [703, 2, 1, "", "Counter_read"], [703, 2, 1, "", "Counter_read_async"], [703, 2, 1, "", "Counter_start"], [703, 2, 1, "", "Counter_start_async"], [703, 2, 1, "", "Counter_stop"], [703, 2, 1, "", "Counter_stop_async"], [703, 2, 1, "", "DIO_loadStartup"], [703, 2, 1, "", "DIO_loadStartup_async"], [703, 2, 1, "", "DIO_saveStartup"], [703, 2, 1, "", "DIO_saveStartup_async"], [703, 2, 1, "", "DIO_setPortDI"], [703, 2, 1, "", "DIO_setPortDI_async"], [703, 2, 1, "", "DIO_setPortDO"], [703, 2, 1, "", "DIO_setPortDO_async"], [703, 2, 1, "", "DIO_setPortIdle"], [703, 2, 1, "", "DIO_setPortIdle_async"], [703, 2, 1, "", "DI_closePins"], [703, 2, 1, "", "DI_closePins_async"], [703, 2, 1, "", "DI_closePort"], [703, 2, 1, "", "DI_closePort_async"], [703, 2, 1, "", "DI_getPinMap"], [703, 2, 1, "", "DI_openPins"], [703, 2, 1, "", "DI_openPins_async"], [703, 2, 1, "", "DI_openPort"], [703, 2, 1, "", "DI_openPort_async"], [703, 2, 1, "", "DI_readPins"], [703, 2, 1, "", "DI_readPins_async"], [703, 2, 1, "", "DI_readPort"], [703, 2, 1, "", "DI_readPort_async"], [703, 2, 1, "", "DO_closePins"], [703, 2, 1, "", "DO_closePins_async"], [703, 2, 1, "", "DO_closePort"], [703, 2, 1, "", "DO_closePort_async"], [703, 2, 1, "", "DO_getPinMap"], [703, 2, 1, "", "DO_openPins"], [703, 2, 1, "", "DO_openPins_async"], [703, 2, 1, "", "DO_openPort"], [703, 2, 1, "", "DO_openPort_async"], [703, 2, 1, "", "DO_togglePins"], [703, 2, 1, "", "DO_togglePins_async"], [703, 2, 1, "", "DO_togglePort"], [703, 2, 1, "", "DO_togglePort_async"], [703, 2, 1, "", "DO_writePins"], [703, 2, 1, "", "DO_writePins_async"], [703, 2, 1, "", "DO_writePort"], [703, 2, 1, "", "DO_writePort_async"], [703, 2, 1, "", "I2C_close"], [703, 2, 1, "", "I2C_close_async"], [703, 2, 1, "", "I2C_getPinMap"], [703, 2, 1, "", "I2C_open"], [703, 2, 1, "", "I2C_open_async"], [703, 2, 1, "", "I2C_read"], [703, 2, 1, "", "I2C_read_async"], [703, 2, 1, "", "I2C_reset"], [703, 2, 1, "", "I2C_reset_async"], [703, 2, 1, "", "I2C_setAddressSize"], [703, 2, 1, "", "I2C_setAddressSize_async"], [703, 2, 1, "", "I2C_setClockRate"], [703, 2, 1, "", "I2C_setClockRate_async"], [703, 2, 1, "", "I2C_write"], [703, 2, 1, "", "I2C_write_async"], [703, 2, 1, "", "Logger_openFile"], [703, 2, 1, "", "Logger_write2DList"], [703, 2, 1, "", "Logger_writeHeader"], [703, 2, 1, "", "Logger_writeList"], [703, 2, 1, "", "Logger_writeValue"], [703, 2, 1, "", "PWM_close"], [703, 2, 1, "", "PWM_close_async"], [703, 2, 1, "", "PWM_open"], [703, 2, 1, "", "PWM_open_async"], [703, 2, 1, "", "PWM_setDutyCycle"], [703, 2, 1, "", "PWM_setDutyCycle_async"], [703, 2, 1, "", "PWM_setFrequency"], [703, 2, 1, "", "PWM_setFrequency_async"], [703, 2, 1, "", "PWM_start"], [703, 2, 1, "", "PWM_start_async"], [703, 2, 1, "", "PWM_stop"], [703, 2, 1, "", "PWM_stop_async"], [703, 2, 1, "", "SPI_close"], [703, 2, 1, "", "SPI_close_async"], [703, 2, 1, "", "SPI_getPinMap"], [703, 2, 1, "", "SPI_open"], [703, 2, 1, "", "SPI_open_async"], [703, 2, 1, "", "SPI_read"], [703, 2, 1, "", "SPI_readAndWrite"], [703, 2, 1, "", "SPI_readAndWrite_async"], [703, 2, 1, "", "SPI_read_async"], [703, 2, 1, "", "SPI_reset"], [703, 2, 1, "", "SPI_reset_async"], [703, 2, 1, "", "SPI_setDataSize"], [703, 2, 1, "", "SPI_setDataSize_async"], [703, 2, 1, "", "SPI_setFirstBit"], [703, 2, 1, "", "SPI_setFirstBit_async"], [703, 2, 1, "", "SPI_setMode"], [703, 2, 1, "", "SPI_setMode_async"], [703, 2, 1, "", "SPI_setPrescaler"], [703, 2, 1, "", "SPI_setPrescaler_async"], [703, 2, 1, "", "SPI_write"], [703, 2, 1, "", "SPI_write_async"], [703, 2, 1, "", "Sys_getDriverInfo"], [703, 2, 1, "", "Sys_getDriverInfo_async"], [703, 2, 1, "", "Sys_getMode"], [703, 2, 1, "", "Sys_getMode_async"], [703, 2, 1, "", "Sys_getPinModeInPort"], [703, 2, 1, "", "Sys_getPinModeInPort_async"], [703, 2, 1, "", "Sys_getPythonVersion"], [703, 2, 1, "", "Sys_getPythonVersion_async"], [703, 2, 1, "", "Sys_getRTC"], [703, 2, 1, "", "Sys_getRTC_async"], [703, 2, 1, "", "Sys_getSerialNumber"], [703, 2, 1, "", "Sys_getSerialNumber_async"], [703, 2, 1, "", "Sys_reboot"], [703, 2, 1, "", "Sys_rebootOnBootloader"], [703, 2, 1, "", "Sys_rebootOnBootloader_async"], [703, 2, 1, "", "Sys_reboot_async"], [703, 2, 1, "", "Sys_setAIOMode"], [703, 2, 1, "", "Sys_setAIOMode_async"], [703, 2, 1, "", "Sys_setDIMode"], [703, 2, 1, "", "Sys_setDIMode_async"], [703, 2, 1, "", "Sys_setDIOMode"], [703, 2, 1, "", "Sys_setDIOMode_async"], [703, 2, 1, "", "Sys_setDOMode"], [703, 2, 1, "", "Sys_setDOMode_async"], [703, 2, 1, "", "Sys_setIdleMode"], [703, 2, 1, "", "Sys_setIdleMode_async"], [703, 2, 1, "", "Sys_setMotionMode"], [703, 2, 1, "", "Sys_setMotionMode_async"], [703, 2, 1, "", "Sys_setRTC"], [703, 2, 1, "", "Sys_setRTC_async"], [703, 2, 1, "", "Sys_setSwitchMode"], [703, 2, 1, "", "Sys_setSwitchMode_async"], [703, 2, 1, "", "Thermal_close"], [703, 2, 1, "", "Thermal_close_async"], [703, 2, 1, "", "Thermal_getPinMap"], [703, 2, 1, "", "Thermal_getStatus"], [703, 2, 1, "", "Thermal_getStatus_async"], [703, 2, 1, "", "Thermal_open"], [703, 2, 1, "", "Thermal_open_async"], [703, 2, 1, "", "Thermal_readSensor"], [703, 2, 1, "", "Thermal_readSensor_async"], [703, 2, 1, "", "Thermal_setOverSampling"], [703, 2, 1, "", "Thermal_setOverSampling_async"], [703, 2, 1, "", "Thermal_setType"], [703, 2, 1, "", "Thermal_setType_async"], [703, 2, 1, "", "UART_close"], [703, 2, 1, "", "UART_close_async"], [703, 2, 1, "", "UART_getPinMap"], [703, 2, 1, "", "UART_open"], [703, 2, 1, "", "UART_open_async"], [703, 2, 1, "", "UART_read"], [703, 2, 1, "", "UART_read_async"], [703, 2, 1, "", "UART_reset"], [703, 2, 1, "", "UART_reset_async"], [703, 2, 1, "", "UART_setBaudRate"], [703, 2, 1, "", "UART_setBaudRate_async"], [703, 2, 1, "", "UART_setDataBit"], [703, 2, 1, "", "UART_setDataBit_async"], [703, 2, 1, "", "UART_setNumStopBit"], [703, 2, 1, "", "UART_setNumStopBit_async"], [703, 2, 1, "", "UART_setParity"], [703, 2, 1, "", "UART_setParity_async"], [703, 2, 1, "", "UART_stopReading"], [703, 2, 1, "", "UART_stopReading_async"], [703, 2, 1, "", "UART_write"], [703, 2, 1, "", "UART_write_async"], [703, 2, 1, "", "close"], [703, 2, 1, "", "connect"], [703, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[704, 2, 1, "", "AI_close"], [704, 2, 1, "", "AI_close_async"], [704, 2, 1, "", "AI_enableCS"], [704, 2, 1, "", "AI_enableCS_async"], [704, 2, 1, "", "AI_enableChannel"], [704, 2, 1, "", "AI_enableChannel_async"], [704, 2, 1, "", "AI_getPort"], [704, 2, 1, "", "AI_open"], [704, 2, 1, "", "AI_open_async"], [704, 2, 1, "", "AI_readOnDemand"], [704, 2, 1, "", "AI_readOnDemand_async"], [704, 2, 1, "", "AI_readStreaming"], [704, 2, 1, "", "AI_readStreaming_async"], [704, 2, 1, "", "AI_setMode"], [704, 2, 1, "", "AI_setMode_async"], [704, 2, 1, "", "AI_setNumSamples"], [704, 2, 1, "", "AI_setNumSamples_async"], [704, 2, 1, "", "AI_setSamplingRate"], [704, 2, 1, "", "AI_setSamplingRate_async"], [704, 2, 1, "", "AI_start"], [704, 2, 1, "", "AI_start_async"], [704, 2, 1, "", "AI_stop"], [704, 2, 1, "", "AI_stop_async"], [704, 2, 1, "", "Logger_openFile"], [704, 2, 1, "", "Logger_write2DList"], [704, 2, 1, "", "Logger_writeHeader"], [704, 2, 1, "", "Logger_writeList"], [704, 2, 1, "", "Logger_writeValue"], [704, 2, 1, "", "Net_getGateway"], [704, 2, 1, "", "Net_getGateway_async"], [704, 2, 1, "", "Net_getIPAddrAndSubmask"], [704, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [704, 2, 1, "", "Net_getMACAddr"], [704, 2, 1, "", "Net_getMACAddr_async"], [704, 2, 1, "", "Net_setIPAddrAndSubmask"], [704, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [704, 2, 1, "", "Sys_getDriverInfo"], [704, 2, 1, "", "Sys_getDriverInfo_async"], [704, 2, 1, "", "Sys_getGateway"], [704, 2, 1, "", "Sys_getGateway_async"], [704, 2, 1, "", "Sys_getIPAddrAndSubmask"], [704, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [704, 2, 1, "", "Sys_getMACAddr"], [704, 2, 1, "", "Sys_getMACAddr_async"], [704, 2, 1, "", "Sys_getMode"], [704, 2, 1, "", "Sys_getMode_async"], [704, 2, 1, "", "Sys_getPinModeInPort"], [704, 2, 1, "", "Sys_getPinModeInPort_async"], [704, 2, 1, "", "Sys_getPythonVersion"], [704, 2, 1, "", "Sys_getPythonVersion_async"], [704, 2, 1, "", "Sys_getRTC"], [704, 2, 1, "", "Sys_getRTC_async"], [704, 2, 1, "", "Sys_getSerialNumber"], [704, 2, 1, "", "Sys_getSerialNumber_async"], [704, 2, 1, "", "Sys_reboot"], [704, 2, 1, "", "Sys_rebootOnBootloader"], [704, 2, 1, "", "Sys_rebootOnBootloader_async"], [704, 2, 1, "", "Sys_reboot_async"], [704, 2, 1, "", "Sys_setAIOMode"], [704, 2, 1, "", "Sys_setAIOMode_async"], [704, 2, 1, "", "Sys_setDIMode"], [704, 2, 1, "", "Sys_setDIMode_async"], [704, 2, 1, "", "Sys_setDIOMode"], [704, 2, 1, "", "Sys_setDIOMode_async"], [704, 2, 1, "", "Sys_setDOMode"], [704, 2, 1, "", "Sys_setDOMode_async"], [704, 2, 1, "", "Sys_setIPAddrAndSubmask"], [704, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [704, 2, 1, "", "Sys_setIdleMode"], [704, 2, 1, "", "Sys_setIdleMode_async"], [704, 2, 1, "", "Sys_setMotionMode"], [704, 2, 1, "", "Sys_setMotionMode_async"], [704, 2, 1, "", "Sys_setRTC"], [704, 2, 1, "", "Sys_setRTC_async"], [704, 2, 1, "", "Sys_setSwitchMode"], [704, 2, 1, "", "Sys_setSwitchMode_async"], [704, 2, 1, "", "Wifi_getChargeStatus"], [704, 2, 1, "", "Wifi_getChargeStatus_async"], [704, 2, 1, "", "Wifi_getPowerGoodStatus"], [704, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [704, 2, 1, "", "Wifi_getWifiBandWidth"], [704, 2, 1, "", "Wifi_getWifiBandWidth_async"], [704, 2, 1, "", "Wifi_getWifiConfiguration"], [704, 2, 1, "", "Wifi_getWifiConfiguration_async"], [704, 2, 1, "", "Wifi_readAcceleration"], [704, 2, 1, "", "Wifi_readAccleration_async"], [704, 2, 1, "", "Wifi_readBattery"], [704, 2, 1, "", "Wifi_readBattery_async"], [704, 2, 1, "", "Wifi_readRSSI"], [704, 2, 1, "", "Wifi_readRSSI_async"], [704, 2, 1, "", "Wifi_readThermo"], [704, 2, 1, "", "Wifi_readThermo_async"], [704, 2, 1, "", "Wifi_resetLED"], [704, 2, 1, "", "Wifi_resetLED_async"], [704, 2, 1, "", "Wifi_setAP"], [704, 2, 1, "", "Wifi_setAP_async"], [704, 2, 1, "", "Wifi_setBandwidth"], [704, 2, 1, "", "Wifi_setBandwidth_async"], [704, 2, 1, "", "Wifi_setBlueLED"], [704, 2, 1, "", "Wifi_setBlueLED_async"], [704, 2, 1, "", "Wifi_setGreenLED"], [704, 2, 1, "", "Wifi_setGreenLED_async"], [704, 2, 1, "", "Wifi_setRedLED"], [704, 2, 1, "", "Wifi_setRedLED_async"], [704, 2, 1, "", "close"], [704, 2, 1, "", "connect"], [704, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3AH": [[705, 2, 1, "", "AHRS_close"], [705, 2, 1, "", "AHRS_close_async"], [705, 2, 1, "", "AHRS_getEstimate"], [705, 2, 1, "", "AHRS_getEstimate_async"], [705, 2, 1, "", "AHRS_open"], [705, 2, 1, "", "AHRS_open_async"], [705, 2, 1, "", "AHRS_reset"], [705, 2, 1, "", "AHRS_reset_async"], [705, 2, 1, "", "AHRS_setSamplingPeriod"], [705, 2, 1, "", "AHRS_setSamplingPeriod_async"], [705, 2, 1, "", "AHRS_start"], [705, 2, 1, "", "AHRS_start_async"], [705, 2, 1, "", "AHRS_stop"], [705, 2, 1, "", "AHRS_stop_async"], [705, 2, 1, "", "AI_close"], [705, 2, 1, "", "AI_close_async"], [705, 2, 1, "", "AI_enableCS"], [705, 2, 1, "", "AI_enableCS_async"], [705, 2, 1, "", "AI_enableChannel"], [705, 2, 1, "", "AI_enableChannel_async"], [705, 2, 1, "", "AI_getPort"], [705, 2, 1, "", "AI_open"], [705, 2, 1, "", "AI_open_async"], [705, 2, 1, "", "AI_readOnDemand"], [705, 2, 1, "", "AI_readOnDemand_async"], [705, 2, 1, "", "AI_readStreaming"], [705, 2, 1, "", "AI_readStreaming_async"], [705, 2, 1, "", "AI_setMode"], [705, 2, 1, "", "AI_setMode_async"], [705, 2, 1, "", "AI_setNumSamples"], [705, 2, 1, "", "AI_setNumSamples_async"], [705, 2, 1, "", "AI_setSamplingRate"], [705, 2, 1, "", "AI_setSamplingRate_async"], [705, 2, 1, "", "AI_start"], [705, 2, 1, "", "AI_start_async"], [705, 2, 1, "", "AI_stop"], [705, 2, 1, "", "AI_stop_async"], [705, 2, 1, "", "Logger_openFile"], [705, 2, 1, "", "Logger_write2DList"], [705, 2, 1, "", "Logger_writeHeader"], [705, 2, 1, "", "Logger_writeList"], [705, 2, 1, "", "Logger_writeValue"], [705, 2, 1, "", "Net_getGateway"], [705, 2, 1, "", "Net_getGateway_async"], [705, 2, 1, "", "Net_getIPAddrAndSubmask"], [705, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [705, 2, 1, "", "Net_getMACAddr"], [705, 2, 1, "", "Net_getMACAddr_async"], [705, 2, 1, "", "Net_setIPAddrAndSubmask"], [705, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [705, 2, 1, "", "Sys_getDriverInfo"], [705, 2, 1, "", "Sys_getDriverInfo_async"], [705, 2, 1, "", "Sys_getGateway"], [705, 2, 1, "", "Sys_getGateway_async"], [705, 2, 1, "", "Sys_getIPAddrAndSubmask"], [705, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [705, 2, 1, "", "Sys_getMACAddr"], [705, 2, 1, "", "Sys_getMACAddr_async"], [705, 2, 1, "", "Sys_getMode"], [705, 2, 1, "", "Sys_getMode_async"], [705, 2, 1, "", "Sys_getPinModeInPort"], [705, 2, 1, "", "Sys_getPinModeInPort_async"], [705, 2, 1, "", "Sys_getPythonVersion"], [705, 2, 1, "", "Sys_getPythonVersion_async"], [705, 2, 1, "", "Sys_getRTC"], [705, 2, 1, "", "Sys_getRTC_async"], [705, 2, 1, "", "Sys_getSerialNumber"], [705, 2, 1, "", "Sys_getSerialNumber_async"], [705, 2, 1, "", "Sys_reboot"], [705, 2, 1, "", "Sys_rebootOnBootloader"], [705, 2, 1, "", "Sys_rebootOnBootloader_async"], [705, 2, 1, "", "Sys_reboot_async"], [705, 2, 1, "", "Sys_setAIOMode"], [705, 2, 1, "", "Sys_setAIOMode_async"], [705, 2, 1, "", "Sys_setDIMode"], [705, 2, 1, "", "Sys_setDIMode_async"], [705, 2, 1, "", "Sys_setDIOMode"], [705, 2, 1, "", "Sys_setDIOMode_async"], [705, 2, 1, "", "Sys_setDOMode"], [705, 2, 1, "", "Sys_setDOMode_async"], [705, 2, 1, "", "Sys_setIPAddrAndSubmask"], [705, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [705, 2, 1, "", "Sys_setIdleMode"], [705, 2, 1, "", "Sys_setIdleMode_async"], [705, 2, 1, "", "Sys_setMotionMode"], [705, 2, 1, "", "Sys_setMotionMode_async"], [705, 2, 1, "", "Sys_setRTC"], [705, 2, 1, "", "Sys_setRTC_async"], [705, 2, 1, "", "Sys_setSwitchMode"], [705, 2, 1, "", "Sys_setSwitchMode_async"], [705, 2, 1, "", "Wifi_getChargeStatus"], [705, 2, 1, "", "Wifi_getChargeStatus_async"], [705, 2, 1, "", "Wifi_getPowerGoodStatus"], [705, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [705, 2, 1, "", "Wifi_getWifiBandWidth"], [705, 2, 1, "", "Wifi_getWifiBandWidth_async"], [705, 2, 1, "", "Wifi_getWifiConfiguration"], [705, 2, 1, "", "Wifi_getWifiConfiguration_async"], [705, 2, 1, "", "Wifi_readAcceleration"], [705, 2, 1, "", "Wifi_readAccleration_async"], [705, 2, 1, "", "Wifi_readBattery"], [705, 2, 1, "", "Wifi_readBattery_async"], [705, 2, 1, "", "Wifi_readRSSI"], [705, 2, 1, "", "Wifi_readRSSI_async"], [705, 2, 1, "", "Wifi_readThermo"], [705, 2, 1, "", "Wifi_readThermo_async"], [705, 2, 1, "", "Wifi_resetLED"], [705, 2, 1, "", "Wifi_resetLED_async"], [705, 2, 1, "", "Wifi_setAP"], [705, 2, 1, "", "Wifi_setAP_async"], [705, 2, 1, "", "Wifi_setBandwidth"], [705, 2, 1, "", "Wifi_setBandwidth_async"], [705, 2, 1, "", "Wifi_setBlueLED"], [705, 2, 1, "", "Wifi_setBlueLED_async"], [705, 2, 1, "", "Wifi_setGreenLED"], [705, 2, 1, "", "Wifi_setGreenLED_async"], [705, 2, 1, "", "Wifi_setRedLED"], [705, 2, 1, "", "Wifi_setRedLED_async"], [705, 2, 1, "", "close"], [705, 2, 1, "", "connect"], [705, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[706, 2, 1, "", "AI_close"], [706, 2, 1, "", "AI_close_async"], [706, 2, 1, "", "AI_enableCS"], [706, 2, 1, "", "AI_enableCS_async"], [706, 2, 1, "", "AI_enableChannel"], [706, 2, 1, "", "AI_enableChannel_async"], [706, 2, 1, "", "AI_getPort"], [706, 2, 1, "", "AI_open"], [706, 2, 1, "", "AI_open_async"], [706, 2, 1, "", "AI_readOnDemand"], [706, 2, 1, "", "AI_readOnDemand_async"], [706, 2, 1, "", "AI_readStreaming"], [706, 2, 1, "", "AI_readStreaming_async"], [706, 2, 1, "", "AI_setMode"], [706, 2, 1, "", "AI_setMode_async"], [706, 2, 1, "", "AI_setNumSamples"], [706, 2, 1, "", "AI_setNumSamples_async"], [706, 2, 1, "", "AI_setSamplingRate"], [706, 2, 1, "", "AI_setSamplingRate_async"], [706, 2, 1, "", "AI_start"], [706, 2, 1, "", "AI_start_async"], [706, 2, 1, "", "AI_stop"], [706, 2, 1, "", "AI_stop_async"], [706, 2, 1, "", "Logger_openFile"], [706, 2, 1, "", "Logger_write2DList"], [706, 2, 1, "", "Logger_writeHeader"], [706, 2, 1, "", "Logger_writeList"], [706, 2, 1, "", "Logger_writeValue"], [706, 2, 1, "", "Net_getGateway"], [706, 2, 1, "", "Net_getGateway_async"], [706, 2, 1, "", "Net_getIPAddrAndSubmask"], [706, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [706, 2, 1, "", "Net_getMACAddr"], [706, 2, 1, "", "Net_getMACAddr_async"], [706, 2, 1, "", "Net_setIPAddrAndSubmask"], [706, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [706, 2, 1, "", "Sys_getDriverInfo"], [706, 2, 1, "", "Sys_getDriverInfo_async"], [706, 2, 1, "", "Sys_getGateway"], [706, 2, 1, "", "Sys_getGateway_async"], [706, 2, 1, "", "Sys_getIPAddrAndSubmask"], [706, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [706, 2, 1, "", "Sys_getMACAddr"], [706, 2, 1, "", "Sys_getMACAddr_async"], [706, 2, 1, "", "Sys_getMode"], [706, 2, 1, "", "Sys_getMode_async"], [706, 2, 1, "", "Sys_getPinModeInPort"], [706, 2, 1, "", "Sys_getPinModeInPort_async"], [706, 2, 1, "", "Sys_getPythonVersion"], [706, 2, 1, "", "Sys_getPythonVersion_async"], [706, 2, 1, "", "Sys_getRTC"], [706, 2, 1, "", "Sys_getRTC_async"], [706, 2, 1, "", "Sys_getSerialNumber"], [706, 2, 1, "", "Sys_getSerialNumber_async"], [706, 2, 1, "", "Sys_reboot"], [706, 2, 1, "", "Sys_rebootOnBootloader"], [706, 2, 1, "", "Sys_rebootOnBootloader_async"], [706, 2, 1, "", "Sys_reboot_async"], [706, 2, 1, "", "Sys_setAIOMode"], [706, 2, 1, "", "Sys_setAIOMode_async"], [706, 2, 1, "", "Sys_setDIMode"], [706, 2, 1, "", "Sys_setDIMode_async"], [706, 2, 1, "", "Sys_setDIOMode"], [706, 2, 1, "", "Sys_setDIOMode_async"], [706, 2, 1, "", "Sys_setDOMode"], [706, 2, 1, "", "Sys_setDOMode_async"], [706, 2, 1, "", "Sys_setIPAddrAndSubmask"], [706, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [706, 2, 1, "", "Sys_setIdleMode"], [706, 2, 1, "", "Sys_setIdleMode_async"], [706, 2, 1, "", "Sys_setMotionMode"], [706, 2, 1, "", "Sys_setMotionMode_async"], [706, 2, 1, "", "Sys_setRTC"], [706, 2, 1, "", "Sys_setRTC_async"], [706, 2, 1, "", "Sys_setSwitchMode"], [706, 2, 1, "", "Sys_setSwitchMode_async"], [706, 2, 1, "", "Wifi_getChargeStatus"], [706, 2, 1, "", "Wifi_getChargeStatus_async"], [706, 2, 1, "", "Wifi_getPowerGoodStatus"], [706, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [706, 2, 1, "", "Wifi_getWifiBandWidth"], [706, 2, 1, "", "Wifi_getWifiBandWidth_async"], [706, 2, 1, "", "Wifi_getWifiConfiguration"], [706, 2, 1, "", "Wifi_getWifiConfiguration_async"], [706, 2, 1, "", "Wifi_readAcceleration"], [706, 2, 1, "", "Wifi_readAccleration_async"], [706, 2, 1, "", "Wifi_readBattery"], [706, 2, 1, "", "Wifi_readBattery_async"], [706, 2, 1, "", "Wifi_readRSSI"], [706, 2, 1, "", "Wifi_readRSSI_async"], [706, 2, 1, "", "Wifi_readThermo"], [706, 2, 1, "", "Wifi_readThermo_async"], [706, 2, 1, "", "Wifi_resetLED"], [706, 2, 1, "", "Wifi_resetLED_async"], [706, 2, 1, "", "Wifi_setAP"], [706, 2, 1, "", "Wifi_setAP_async"], [706, 2, 1, "", "Wifi_setBandwidth"], [706, 2, 1, "", "Wifi_setBandwidth_async"], [706, 2, 1, "", "Wifi_setBlueLED"], [706, 2, 1, "", "Wifi_setBlueLED_async"], [706, 2, 1, "", "Wifi_setGreenLED"], [706, 2, 1, "", "Wifi_setGreenLED_async"], [706, 2, 1, "", "Wifi_setRedLED"], [706, 2, 1, "", "Wifi_setRedLED_async"], [706, 2, 1, "", "close"], [706, 2, 1, "", "connect"], [706, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 682], "architectur": [0, 682], "instal": [0, 682], "upgrad": [0, 682], "quick": [0, 682], "start": [0, 682], "refer": [0, 682, 711], "licens": [0, 682], "find": [1, 2, 3, 30, 31, 32, 379, 380, 381, 404, 405, 406, 711], "all": [1, 113, 123, 147, 151, 199, 203, 379, 459, 465, 481, 485, 525, 529], "devic": [1, 379, 674, 675, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "drive": [2, 3, 4, 5, 6, 7, 8, 9, 380, 381, 382, 383, 384, 385, 386, 387], "home": [2, 30, 380, 404], "limit": [3, 32, 381, 406], "posit": [4, 5, 33, 35, 382, 383, 407, 409], "blend": [4, 8, 35, 38, 39, 382, 386, 409, 412, 413], "move": [5, 6, 9, 17, 18, 19, 20, 21, 22, 23, 26, 29, 383, 384, 387, 391, 392, 393, 394, 395, 396, 397, 400, 403], "scan": [6, 384], "servo": [7, 37, 385, 411], "veloc": [8, 9, 38, 386, 387, 412], "acceler": [8, 39, 386, 413], "system": [10, 11, 40, 41, 53, 54, 67, 68, 80, 81, 88, 89, 96, 97, 105, 106, 115, 116, 124, 125, 131, 132, 159, 160, 183, 184, 185, 214, 215, 216, 237, 238, 239, 258, 259, 260, 276, 277, 278, 295, 296, 297, 319, 320, 321, 338, 339, 340, 355, 356, 357, 370, 371, 372, 388, 389, 414, 415, 423, 424, 433, 434, 442, 443, 446, 447, 450, 451, 455, 456, 461, 462, 466, 467, 469, 470, 493, 494, 513, 514, 515, 540, 541, 542, 559, 560, 561, 576, 577, 578, 590, 591, 592, 605, 606, 607, 625, 626, 627, 640, 641, 642, 653, 654, 655, 664, 665, 666, 679], "get": [10, 12, 33, 40, 42, 53, 55, 67, 69, 80, 82, 88, 90, 96, 98, 105, 107, 115, 117, 124, 126, 131, 133, 159, 161, 183, 184, 186, 214, 215, 217, 237, 238, 240, 258, 259, 261, 276, 277, 279, 295, 296, 298, 319, 320, 322, 338, 339, 342, 355, 356, 359, 370, 371, 374, 388, 390, 407, 414, 416, 423, 425, 433, 435, 442, 444, 446, 448, 450, 452, 455, 457, 461, 463, 466, 468, 469, 471, 493, 495, 513, 514, 516, 540, 541, 543, 559, 560, 562, 576, 577, 579, 590, 591, 593, 605, 606, 608, 625, 626, 628, 640, 641, 644, 653, 654, 657, 664, 665, 668], "network": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 641, 654, 665, 674, 675], "info": [10, 40, 53, 67, 80, 88, 96, 105, 115, 124, 131, 159, 183, 214, 237, 258, 276, 295, 319, 339, 356, 371, 388, 414, 423, 433, 442, 446, 450, 455, 461, 466, 469, 493, 513, 540, 559, 576, 590, 605, 625, 641, 654, 665, 675], "hello": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "world": [11, 41, 54, 68, 81, 89, 97, 106, 116, 125, 132, 160, 185, 216, 239, 260, 278, 297, 321, 340, 357, 372, 389, 415, 424, 434, 443, 447, 451, 456, 462, 467, 470, 494, 515, 542, 561, 578, 592, 607, 627, 642, 655, 666], "set": [12, 42, 55, 69, 82, 90, 98, 104, 107, 117, 126, 133, 161, 186, 217, 240, 261, 279, 298, 322, 341, 342, 358, 359, 373, 374, 390, 416, 425, 435, 444, 448, 452, 454, 457, 463, 468, 471, 495, 516, 543, 562, 579, 593, 608, 628, 643, 644, 656, 657, 667, 668, 711], "rtc": [12, 42, 55, 69, 82, 90, 98, 107, 117, 126, 133, 161, 186, 217, 240, 261, 279, 298, 322, 342, 359, 374, 390, 416, 425, 435, 444, 448, 452, 457, 463, 468, 471, 495, 516, 543, 562, 579, 593, 608, 628, 644, 657, 668], "tutori": [13, 14, 15, 16, 43, 44, 45, 46, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 162, 163, 164, 165, 187, 188, 189, 190, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 343, 344, 345, 346, 360, 361, 362, 363, 375, 376, 377, 378], "multipl": [13, 14, 43, 44, 56, 57, 70, 71, 83, 84, 91, 92, 99, 100, 108, 109, 118, 119, 127, 128, 137, 138, 162, 163, 187, 188, 218, 219, 241, 242, 262, 263, 280, 281, 302, 303, 326, 327, 343, 344, 360, 361, 375, 376], "loop": [13, 14, 15, 16, 43, 44, 45, 46, 51, 56, 57, 58, 59, 70, 71, 72, 73, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 102, 108, 109, 110, 111, 118, 119, 120, 121, 127, 128, 129, 130, 137, 138, 139, 140, 145, 162, 163, 164, 165, 170, 187, 188, 189, 190, 197, 218, 219, 220, 221, 241, 242, 243, 244, 262, 263, 264, 265, 280, 281, 282, 283, 302, 303, 304, 305, 326, 327, 328, 329, 336, 343, 344, 345, 346, 353, 360, 361, 362, 363, 368, 375, 376, 377, 378, 421, 479, 500, 523, 638, 651, 662], "async": [13, 15, 26, 43, 45, 56, 58, 70, 72, 83, 85, 91, 93, 99, 101, 108, 110, 118, 120, 127, 129, 137, 139, 162, 164, 187, 189, 218, 220, 241, 243, 262, 264, 280, 282, 302, 304, 326, 328, 343, 345, 360, 362, 375, 377, 400, 680], "thread": [14, 16, 44, 46, 57, 59, 71, 73, 84, 86, 92, 94, 100, 102, 109, 111, 119, 121, 128, 130, 138, 140, 163, 165, 188, 190, 219, 221, 242, 244, 263, 265, 281, 283, 303, 305, 327, 329, 344, 346, 361, 363, 376, 378], "singl": [15, 16, 45, 46, 58, 59, 72, 73, 85, 86, 93, 94, 101, 102, 110, 111, 120, 121, 129, 130, 139, 140, 164, 165, 189, 190, 220, 221, 243, 244, 264, 265, 282, 283, 304, 305, 328, 329, 345, 346, 362, 363, 377, 378], "motion": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 711], "1axi": [17, 18, 19, 20, 21, 22, 23, 391, 392, 393, 394, 395, 396, 397], "scurv": [18, 392], "alarm": [19, 393], "breakpoint": [20, 394], "captur": [21, 395, 711], "config": [22, 34, 36, 396, 408, 410], "file": [22, 34, 36, 396, 408, 410], "inposit": [23, 397], "2axi": [24, 25, 398, 399], "circular": [24, 398], "interpo": [24, 25, 27, 28, 398, 399, 401, 402], "linear": [25, 28, 399, 402], "3axi": [26, 27, 28, 29, 400, 401, 402, 403], "helic": [27, 401], "sync": [29, 403, 679, 681], "index": [31, 405], "logic": [33, 407], "load": [34, 408], "save": [36, 410], "ai": [47, 48, 49, 50, 51, 52, 87, 95, 141, 142, 143, 144, 145, 146, 149, 166, 167, 168, 169, 170, 171, 193, 194, 195, 196, 197, 198, 201, 332, 333, 334, 335, 336, 337, 349, 350, 351, 352, 353, 354, 364, 365, 366, 367, 368, 369, 417, 418, 419, 420, 421, 422, 445, 449, 475, 476, 477, 478, 479, 480, 483, 496, 497, 498, 499, 500, 501, 519, 520, 521, 522, 523, 524, 527, 634, 635, 636, 637, 638, 639, 647, 648, 649, 650, 651, 652, 658, 659, 660, 661, 662, 663, 669, 679, 708, 711], "n": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658], "sampl": [47, 141, 166, 193, 332, 349, 364, 417, 475, 496, 519, 634, 647, 658, 708], "onc": [47, 52, 87, 95, 141, 146, 166, 171, 193, 198, 332, 337, 349, 354, 364, 369, 417, 422, 445, 449, 475, 480, 496, 501, 519, 524, 634, 639, 647, 652, 658, 663], "continu": [48, 49, 50, 142, 143, 144, 167, 168, 169, 194, 195, 196, 333, 334, 335, 350, 351, 352, 365, 366, 367, 418, 419, 420, 476, 477, 478, 497, 498, 499, 520, 521, 522, 635, 636, 637, 648, 649, 650, 659, 660, 661], "multi": [49, 143, 168, 195, 334, 351, 366, 419, 477, 498, 521, 636, 649, 660], "slot": [49, 143, 168, 195, 334, 351, 366, 419, 477, 498, 521, 636, 649, 660], "logger": [50, 135, 144, 169, 196, 300, 324, 335, 352, 367, 420, 473, 478, 499, 522, 610, 630, 637, 650, 661], "demand": [51, 52, 87, 95, 145, 146, 170, 171, 197, 198, 336, 337, 353, 354, 368, 369, 421, 422, 445, 449, 479, 480, 500, 501, 523, 524, 638, 639, 651, 652, 662, 663], "dio": [60, 61, 74, 75, 153, 154, 173, 174, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 487, 488, 503, 504, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616], "loopback": [60, 61, 74, 75, 147, 148, 153, 154, 173, 174, 199, 200, 206, 207, 227, 228, 248, 249, 269, 270, 285, 286, 309, 310, 426, 427, 436, 437, 481, 482, 487, 488, 503, 504, 525, 526, 532, 533, 549, 550, 566, 567, 583, 584, 595, 596, 615, 616], "pin": [60, 62, 64, 74, 76, 78, 153, 155, 157, 173, 175, 177, 184, 206, 208, 210, 215, 227, 229, 231, 238, 248, 250, 252, 259, 269, 271, 273, 277, 285, 287, 289, 296, 309, 311, 313, 320, 426, 428, 430, 436, 438, 440, 487, 489, 491, 503, 505, 507, 514, 532, 534, 536, 541, 549, 551, 553, 560, 566, 568, 570, 577, 583, 585, 587, 591, 595, 597, 599, 606, 615, 617, 619, 626], "port": [61, 63, 65, 75, 77, 79, 154, 156, 158, 174, 176, 178, 207, 209, 211, 228, 230, 232, 249, 251, 253, 270, 272, 274, 286, 288, 290, 310, 312, 314, 427, 429, 431, 437, 439, 441, 488, 490, 492, 504, 506, 508, 533, 535, 537, 550, 552, 554, 567, 569, 571, 584, 586, 588, 596, 598, 600, 616, 618, 620, 712], "do": [62, 63, 64, 65, 76, 77, 78, 79, 155, 156, 157, 158, 175, 176, 177, 178, 208, 209, 210, 211, 229, 230, 231, 232, 250, 251, 252, 253, 271, 272, 273, 274, 287, 288, 289, 290, 311, 312, 313, 314, 428, 429, 430, 431, 438, 439, 440, 441, 489, 490, 491, 492, 505, 506, 507, 508, 534, 535, 536, 537, 551, 552, 553, 554, 568, 569, 570, 571, 585, 586, 587, 588, 597, 598, 599, 600, 617, 618, 619, 620, 671, 679], "blinki": [62, 63, 76, 77, 155, 156, 175, 176, 208, 209, 229, 230, 250, 251, 271, 272, 287, 288, 311, 312, 428, 429, 438, 439, 489, 490, 505, 506, 534, 535, 551, 552, 568, 569, 585, 586, 597, 598, 617, 618], "write": [64, 65, 78, 79, 113, 114, 123, 151, 152, 157, 158, 177, 178, 179, 181, 182, 192, 203, 204, 210, 211, 212, 223, 225, 231, 232, 233, 235, 236, 246, 252, 253, 254, 256, 257, 267, 273, 274, 289, 290, 291, 293, 294, 307, 313, 314, 315, 317, 318, 331, 430, 431, 440, 441, 459, 460, 465, 485, 486, 491, 492, 507, 508, 509, 511, 512, 518, 529, 530, 536, 537, 538, 545, 547, 553, 554, 555, 557, 558, 564, 570, 571, 572, 574, 575, 581, 587, 588, 599, 600, 601, 603, 604, 613, 619, 620, 621, 623, 624, 633], "pwm": [66, 180, 213, 234, 255, 275, 292, 316, 432, 510, 539, 556, 573, 589, 602, 622], "gener": [66, 112, 150, 180, 202, 213, 234, 255, 275, 292, 316, 432, 458, 484, 510, 528, 539, 556, 573, 589, 602, 622], "relai": [103, 104, 453, 454], "read": [103, 122, 134, 135, 136, 172, 179, 181, 191, 205, 212, 222, 224, 226, 233, 235, 245, 247, 254, 256, 266, 268, 284, 291, 293, 299, 300, 301, 306, 308, 315, 317, 323, 324, 325, 330, 347, 453, 464, 472, 473, 474, 502, 509, 511, 517, 531, 538, 544, 546, 548, 555, 557, 563, 565, 572, 574, 580, 582, 594, 601, 603, 609, 610, 611, 612, 614, 621, 623, 629, 630, 631, 632, 645], "counter": [103, 172, 205, 226, 247, 268, 284, 308, 453, 502, 531, 548, 565, 582, 594, 614], "channel": [104, 113, 114, 122, 123, 134, 135, 136, 147, 148, 151, 152, 199, 200, 203, 204, 299, 300, 301, 323, 324, 325, 454, 459, 460, 464, 465, 472, 473, 474, 481, 482, 485, 486, 525, 526, 529, 530, 609, 610, 611, 629, 630, 631, 709, 711], "ao": [112, 113, 114, 149, 150, 151, 152, 201, 202, 203, 204, 458, 459, 460, 483, 484, 485, 486, 527, 528, 529, 530, 670, 679, 711], "waveform": [112, 150, 202, 458, 484, 528], "one": [114, 148, 152, 200, 204, 460, 482, 486, 526, 530], "dpot": [122, 123, 464, 465], "tc": [134, 135, 136, 323, 324, 325, 472, 473, 474, 629, 630, 631, 677, 679], "data": [134, 135, 299, 300, 323, 324, 472, 473, 609, 610, 629, 630, 711], "statu": [136, 301, 325, 338, 341, 355, 358, 370, 373, 474, 611, 631, 640, 643, 653, 656, 664, 667], "aio": [147, 148, 199, 200, 481, 482, 525, 526], "output": [149, 201, 483, 527, 711], "while": [149, 201, 483, 527], "stream": [149, 201, 483, 527], "i2c": [179, 212, 233, 254, 291, 315, 509, 538, 555, 572, 601, 621, 672, 679, 711], "spi": [181, 182, 235, 236, 256, 257, 293, 294, 317, 318, 511, 512, 557, 558, 574, 575, 603, 604, 623, 624, 673, 679, 711], "usb": [183, 214, 237, 258, 276, 295, 319, 513, 540, 559, 576, 590, 605, 625, 680, 681, 683, 697, 698, 699, 700, 701, 702, 703], "mode": [184, 215, 238, 259, 277, 296, 320, 514, 541, 560, 577, 591, 606, 626, 711], "uart": [191, 192, 222, 223, 245, 246, 266, 267, 306, 307, 330, 331, 517, 518, 544, 545, 563, 564, 580, 581, 612, 613, 632, 633, 678, 679, 711], "can": [224, 225, 546, 547, 711], "rtd": [299, 300, 301, 609, 610, 611, 676, 679], "wifi": [338, 355, 370, 640, 653, 664, 680, 681, 683, 704, 705, 706], "daq": [338, 355, 370, 640, 653, 664, 680, 681, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "led": [341, 358, 373, 643, 656, 667], "ahr": [347, 348, 645, 646], "visual": [348, 646], "test": [669, 670, 671, 672, 673, 676, 677, 678], "panel": [669, 670, 671, 672, 673, 676, 677, 678], "finder": [674, 680, 681, 684], "center": 675, "exampl": [679, 680, 681], "code": [679, 680, 681, 710], "gui": 679, "temperatur": 679, "consol": [680, 681], "stem": [680, 681, 696], "edriv": [680, 681, 685], "st": [680, 681, 685], "emot": [680, 681, 686], "ethan": [680, 681, 687, 688, 689, 690, 691, 692, 693, 694, 695], "A": [680, 681, 687, 704, 706], "d": [680, 681, 688, 689, 700, 701], "ex": [680, 681, 689], "i": [680, 681, 690, 709, 712], "ia": [680, 681, 691], "l": [680, 681, 692], "o": [680, 681, 693, 709, 712], "p": [680, 681, 694], "t": [680, 681, 695], "f1": [680, 681, 697, 698, 699, 700, 701, 702, 703], "ad": [680, 681, 697], "aod": [680, 681, 698], "cd": [680, 681, 699], "snk": [680, 681, 701], "rd": [680, 681, 702], "td": [680, 681, 703], "e3": [680, 681, 704, 705], "ah": [680, 681, 705], "f4": [680, 681, 706], "product": [683, 707], "usag": 683, "util": 683, "ethernet": 683, "api": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "function": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 709, 712], "descript": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "pinout": [685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "featur": 707, "max": 708, "rate": 708, "tabl": [708, 709, 710, 711, 712], "error": 710, "form": 711, "speed": 711, "type": 711, "address": 711, "direct": 711, "enabl": 711, "oper": 711, "polar": 711, "search": 711, "stepper": 711, "stop": 711, "clock": 711, "size": 711, "endian": 711, "thermal": 711, "oversampl": 711, "pariti": 711, "bit": 711}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Overview": [[0, "overview"], [682, "overview"]], "Architecture": [[0, "architecture"], [682, "architecture"]], "Install and Upgrade": [[0, "install-and-upgrade"], [682, "install-and-upgrade"]], "Quick Start": [[0, "quick-start"], [682, "quick-start"]], "References": [[0, "references"], [682, "references"]], "License": [[0, "license"], [682, "license"]], "Find all devices": [[1, "find-all-devices"], [379, "find-all-devices"]], "Drive find home": [[2, "drive-find-home"], [380, "drive-find-home"]], "Drive find limit": [[3, "drive-find-limit"], [381, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [382, "drive-position-blending"]], "Drive position move": [[5, "drive-position-move"], [383, "drive-position-move"]], "Drive scan move": [[6, "drive-scan-move"], [384, "drive-scan-move"]], "Drive servo on": [[7, "drive-servo-on"], [385, "drive-servo-on"]], "Drive velocity blending acceleration": [[8, "drive-velocity-blending-acceleration"], [386, "drive-velocity-blending-acceleration"]], "Drive velocity move": [[9, "drive-velocity-move"], [387, "drive-velocity-move"]], "System get network info": [[10, "system-get-network-info"], [40, "system-get-network-info"], [53, "system-get-network-info"], [67, "system-get-network-info"], [80, "system-get-network-info"], [88, "system-get-network-info"], [96, "system-get-network-info"], [105, "system-get-network-info"], [115, "system-get-network-info"], [124, "system-get-network-info"], [131, "system-get-network-info"], [159, "system-get-network-info"], [339, "system-get-network-info"], [356, "system-get-network-info"], [371, "system-get-network-info"], [388, "system-get-network-info"], [414, "system-get-network-info"], [423, "system-get-network-info"], [433, "system-get-network-info"], [442, "system-get-network-info"], [446, "system-get-network-info"], [450, "system-get-network-info"], [455, "system-get-network-info"], [461, "system-get-network-info"], [466, "system-get-network-info"], [469, "system-get-network-info"], [493, "system-get-network-info"], [641, "system-get-network-info"], [654, "system-get-network-info"], [665, "system-get-network-info"]], "System hello world": [[11, "system-hello-world"], [41, "system-hello-world"], [54, "system-hello-world"], [68, "system-hello-world"], [81, "system-hello-world"], [89, "system-hello-world"], [97, "system-hello-world"], [106, "system-hello-world"], [116, "system-hello-world"], [125, "system-hello-world"], [132, "system-hello-world"], [160, "system-hello-world"], [185, "system-hello-world"], [216, "system-hello-world"], [239, "system-hello-world"], [260, "system-hello-world"], [278, "system-hello-world"], [297, "system-hello-world"], [321, "system-hello-world"], [340, "system-hello-world"], [357, "system-hello-world"], [372, "system-hello-world"], [389, "system-hello-world"], [415, "system-hello-world"], [424, "system-hello-world"], [434, "system-hello-world"], [443, "system-hello-world"], [447, "system-hello-world"], [451, "system-hello-world"], [456, "system-hello-world"], [462, "system-hello-world"], [467, "system-hello-world"], [470, "system-hello-world"], [494, "system-hello-world"], [515, "system-hello-world"], [542, "system-hello-world"], [561, "system-hello-world"], [578, "system-hello-world"], [592, "system-hello-world"], [607, "system-hello-world"], [627, "system-hello-world"], [642, "system-hello-world"], [655, "system-hello-world"], [666, "system-hello-world"]], "Set and get RTC": [[12, "set-and-get-rtc"], [42, "set-and-get-rtc"], [55, "set-and-get-rtc"], [69, "set-and-get-rtc"], [82, "set-and-get-rtc"], [90, "set-and-get-rtc"], [98, "set-and-get-rtc"], [107, "set-and-get-rtc"], [117, "set-and-get-rtc"], [126, "set-and-get-rtc"], [133, "set-and-get-rtc"], [161, "set-and-get-rtc"], [186, "set-and-get-rtc"], [217, "set-and-get-rtc"], [240, "set-and-get-rtc"], [261, "set-and-get-rtc"], [279, "set-and-get-rtc"], [298, "set-and-get-rtc"], [322, "set-and-get-rtc"], [342, "set-and-get-rtc"], [359, "set-and-get-rtc"], [374, "set-and-get-rtc"], [390, "set-and-get-rtc"], [416, "set-and-get-rtc"], [425, "set-and-get-rtc"], [435, "set-and-get-rtc"], [444, "set-and-get-rtc"], [448, "set-and-get-rtc"], [452, "set-and-get-rtc"], [457, "set-and-get-rtc"], [463, "set-and-get-rtc"], [468, "set-and-get-rtc"], [471, "set-and-get-rtc"], [495, "set-and-get-rtc"], [516, "set-and-get-rtc"], [543, "set-and-get-rtc"], [562, "set-and-get-rtc"], [579, "set-and-get-rtc"], [593, "set-and-get-rtc"], [608, "set-and-get-rtc"], [628, "set-and-get-rtc"], [644, "set-and-get-rtc"], [657, "set-and-get-rtc"], [668, "set-and-get-rtc"]], "Tutorial multiple loops async": [[13, "tutorial-multiple-loops-async"], [43, "tutorial-multiple-loops-async"], [56, "tutorial-multiple-loops-async"], [70, "tutorial-multiple-loops-async"], [83, "tutorial-multiple-loops-async"], [91, "tutorial-multiple-loops-async"], [99, "tutorial-multiple-loops-async"], [108, "tutorial-multiple-loops-async"], [118, "tutorial-multiple-loops-async"], [127, "tutorial-multiple-loops-async"], [137, "tutorial-multiple-loops-async"], [162, "tutorial-multiple-loops-async"], [187, "tutorial-multiple-loops-async"], [218, "tutorial-multiple-loops-async"], [241, "tutorial-multiple-loops-async"], [262, "tutorial-multiple-loops-async"], [280, "tutorial-multiple-loops-async"], [302, "tutorial-multiple-loops-async"], [326, "tutorial-multiple-loops-async"], [343, "tutorial-multiple-loops-async"], [360, "tutorial-multiple-loops-async"], [375, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[14, "tutorial-multiple-loops-thread"], [44, "tutorial-multiple-loops-thread"], [57, "tutorial-multiple-loops-thread"], [71, "tutorial-multiple-loops-thread"], [84, "tutorial-multiple-loops-thread"], [92, "tutorial-multiple-loops-thread"], [100, "tutorial-multiple-loops-thread"], [109, "tutorial-multiple-loops-thread"], [119, "tutorial-multiple-loops-thread"], [128, "tutorial-multiple-loops-thread"], [138, "tutorial-multiple-loops-thread"], [163, "tutorial-multiple-loops-thread"], [188, "tutorial-multiple-loops-thread"], [219, "tutorial-multiple-loops-thread"], [242, "tutorial-multiple-loops-thread"], [263, "tutorial-multiple-loops-thread"], [281, "tutorial-multiple-loops-thread"], [303, "tutorial-multiple-loops-thread"], [327, "tutorial-multiple-loops-thread"], [344, "tutorial-multiple-loops-thread"], [361, "tutorial-multiple-loops-thread"], [376, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[15, "tutorial-single-loop-async"], [45, "tutorial-single-loop-async"], [58, "tutorial-single-loop-async"], [72, "tutorial-single-loop-async"], [85, "tutorial-single-loop-async"], [93, "tutorial-single-loop-async"], [101, "tutorial-single-loop-async"], [110, "tutorial-single-loop-async"], [120, "tutorial-single-loop-async"], [129, "tutorial-single-loop-async"], [139, "tutorial-single-loop-async"], [164, "tutorial-single-loop-async"], [189, "tutorial-single-loop-async"], [220, "tutorial-single-loop-async"], [243, "tutorial-single-loop-async"], [264, "tutorial-single-loop-async"], [282, "tutorial-single-loop-async"], [304, "tutorial-single-loop-async"], [328, "tutorial-single-loop-async"], [345, "tutorial-single-loop-async"], [362, "tutorial-single-loop-async"], [377, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[16, "tutorial-single-loop-thread"], [46, "tutorial-single-loop-thread"], [59, "tutorial-single-loop-thread"], [73, "tutorial-single-loop-thread"], [86, "tutorial-single-loop-thread"], [94, "tutorial-single-loop-thread"], [102, "tutorial-single-loop-thread"], [111, "tutorial-single-loop-thread"], [121, "tutorial-single-loop-thread"], [130, "tutorial-single-loop-thread"], [140, "tutorial-single-loop-thread"], [165, "tutorial-single-loop-thread"], [190, "tutorial-single-loop-thread"], [221, "tutorial-single-loop-thread"], [244, "tutorial-single-loop-thread"], [265, "tutorial-single-loop-thread"], [283, "tutorial-single-loop-thread"], [305, "tutorial-single-loop-thread"], [329, "tutorial-single-loop-thread"], [346, "tutorial-single-loop-thread"], [363, "tutorial-single-loop-thread"], [378, "tutorial-single-loop-thread"]], "Motion 1axis move": [[17, "motion-1axis-move"], [391, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[18, "motion-1axis-move-with-scurve"], [392, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[19, "motion-1axis-move-with-alarm-in"], [393, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[20, "motion-1axis-move-with-breakpoint"], [394, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[21, "motion-1axis-move-with-capture"], [395, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[22, "motion-1axis-move-with-config-file"], [396, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[23, "motion-1axis-move-with-inposition"], [397, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[24, "motion-2axis-circular-interpo"], [398, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[25, "motion-2axis-linear-interpo"], [399, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[26, "motion-3axis-async-move"], [400, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[27, "motion-3axis-helical-interpo"], [401, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[28, "motion-3axis-linear-interpo"], [402, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[29, "motion-3axis-sync-move"], [403, "motion-3axis-sync-move"]], "Motion find home": [[30, "motion-find-home"], [404, "motion-find-home"]], "Motion find index": [[31, "motion-find-index"], [405, "motion-find-index"]], "Motion find limit": [[32, "motion-find-limit"], [406, "motion-find-limit"]], "Motion get logical position": [[33, "motion-get-logical-position"], [407, "motion-get-logical-position"]], "Motion load config file": [[34, "motion-load-config-file"], [408, "motion-load-config-file"]], "Motion position blending": [[35, "motion-position-blending"], [409, "motion-position-blending"]], "Motion save config file": [[36, "motion-save-config-file"], [410, "motion-save-config-file"]], "Motion servo on": [[37, "motion-servo-on"], [411, "motion-servo-on"]], "Motion velocity blending": [[38, "motion-velocity-blending"], [412, "motion-velocity-blending"]], "Motion acceleration blending": [[39, "motion-acceleration-blending"], [413, "motion-acceleration-blending"]], "AI N samples once": [[47, "ai-n-samples-once"], [141, "ai-n-samples-once"], [166, "ai-n-samples-once"], [193, "ai-n-samples-once"], [332, "ai-n-samples-once"], [349, "ai-n-samples-once"], [364, "ai-n-samples-once"], [417, "ai-n-samples-once"], [475, "ai-n-samples-once"], [496, "ai-n-samples-once"], [519, "ai-n-samples-once"], [634, "ai-n-samples-once"], [647, "ai-n-samples-once"], [658, "ai-n-samples-once"]], "AI continuous": [[48, "ai-continuous"], [142, "ai-continuous"], [167, "ai-continuous"], [194, "ai-continuous"], [333, "ai-continuous"], [350, "ai-continuous"], [365, "ai-continuous"], [418, "ai-continuous"], [476, "ai-continuous"], [497, "ai-continuous"], [520, "ai-continuous"], [635, "ai-continuous"], [648, "ai-continuous"], [659, "ai-continuous"]], "AI continuous multi slot": [[49, "ai-continuous-multi-slot"], [143, "ai-continuous-multi-slot"], [168, "ai-continuous-multi-slot"], [195, "ai-continuous-multi-slot"], [334, "ai-continuous-multi-slot"], [351, "ai-continuous-multi-slot"], [366, "ai-continuous-multi-slot"], [419, "ai-continuous-multi-slot"], [477, "ai-continuous-multi-slot"], [498, "ai-continuous-multi-slot"], [521, "ai-continuous-multi-slot"], [636, "ai-continuous-multi-slot"], [649, "ai-continuous-multi-slot"], [660, "ai-continuous-multi-slot"]], "AI continuous with logger": [[50, "ai-continuous-with-logger"], [144, "ai-continuous-with-logger"], [169, "ai-continuous-with-logger"], [196, "ai-continuous-with-logger"], [335, "ai-continuous-with-logger"], [352, "ai-continuous-with-logger"], [367, "ai-continuous-with-logger"], [420, "ai-continuous-with-logger"], [478, "ai-continuous-with-logger"], [499, "ai-continuous-with-logger"], [522, "ai-continuous-with-logger"], [637, "ai-continuous-with-logger"], [650, "ai-continuous-with-logger"], [661, "ai-continuous-with-logger"]], "AI on demand in loop": [[51, "ai-on-demand-in-loop"], [145, "ai-on-demand-in-loop"], [170, "ai-on-demand-in-loop"], [197, "ai-on-demand-in-loop"], [336, "ai-on-demand-in-loop"], [353, "ai-on-demand-in-loop"], [368, "ai-on-demand-in-loop"], [421, "ai-on-demand-in-loop"], [479, "ai-on-demand-in-loop"], [500, "ai-on-demand-in-loop"], [523, "ai-on-demand-in-loop"], [638, "ai-on-demand-in-loop"], [651, "ai-on-demand-in-loop"], [662, "ai-on-demand-in-loop"]], "AI on demand once": [[52, "ai-on-demand-once"], [87, "ai-on-demand-once"], [95, "ai-on-demand-once"], [146, "ai-on-demand-once"], [171, "ai-on-demand-once"], [198, "ai-on-demand-once"], [337, "ai-on-demand-once"], [354, "ai-on-demand-once"], [369, "ai-on-demand-once"], [422, "ai-on-demand-once"], [445, "ai-on-demand-once"], [449, "ai-on-demand-once"], [480, "ai-on-demand-once"], [501, "ai-on-demand-once"], [524, "ai-on-demand-once"], [639, "ai-on-demand-once"], [652, "ai-on-demand-once"], [663, "ai-on-demand-once"]], "DIO loopback pins": [[60, "dio-loopback-pins"], [74, "dio-loopback-pins"], [153, "dio-loopback-pins"], [173, "dio-loopback-pins"], [206, "dio-loopback-pins"], [227, "dio-loopback-pins"], [248, "dio-loopback-pins"], [269, "dio-loopback-pins"], [285, "dio-loopback-pins"], [309, "dio-loopback-pins"], [426, "dio-loopback-pins"], [436, "dio-loopback-pins"], [487, "dio-loopback-pins"], [503, "dio-loopback-pins"], [532, "dio-loopback-pins"], [549, "dio-loopback-pins"], [566, "dio-loopback-pins"], [583, "dio-loopback-pins"], [595, "dio-loopback-pins"], [615, "dio-loopback-pins"]], "DIO loopback port": [[61, "dio-loopback-port"], [75, "dio-loopback-port"], [154, "dio-loopback-port"], [174, "dio-loopback-port"], [207, "dio-loopback-port"], [228, "dio-loopback-port"], [249, "dio-loopback-port"], [270, "dio-loopback-port"], [286, "dio-loopback-port"], [310, "dio-loopback-port"], [427, "dio-loopback-port"], [437, "dio-loopback-port"], [488, "dio-loopback-port"], [504, "dio-loopback-port"], [533, "dio-loopback-port"], [550, "dio-loopback-port"], [567, "dio-loopback-port"], [584, "dio-loopback-port"], [596, "dio-loopback-port"], [616, "dio-loopback-port"]], "DO blinky pins": [[62, "do-blinky-pins"], [76, "do-blinky-pins"], [155, "do-blinky-pins"], [175, "do-blinky-pins"], [208, "do-blinky-pins"], [229, "do-blinky-pins"], [250, "do-blinky-pins"], [271, "do-blinky-pins"], [287, "do-blinky-pins"], [311, "do-blinky-pins"], [428, "do-blinky-pins"], [438, "do-blinky-pins"], [489, "do-blinky-pins"], [505, "do-blinky-pins"], [534, "do-blinky-pins"], [551, "do-blinky-pins"], [568, "do-blinky-pins"], [585, "do-blinky-pins"], [597, "do-blinky-pins"], [617, "do-blinky-pins"]], "DO blinky port": [[63, "do-blinky-port"], [77, "do-blinky-port"], [156, "do-blinky-port"], [176, "do-blinky-port"], [209, "do-blinky-port"], [230, "do-blinky-port"], [251, "do-blinky-port"], [272, "do-blinky-port"], [288, "do-blinky-port"], [312, "do-blinky-port"], [429, "do-blinky-port"], [439, "do-blinky-port"], [490, "do-blinky-port"], [506, "do-blinky-port"], [535, "do-blinky-port"], [552, "do-blinky-port"], [569, "do-blinky-port"], [586, "do-blinky-port"], [598, "do-blinky-port"], [618, "do-blinky-port"]], "DO write pins": [[64, "do-write-pins"], [78, "do-write-pins"], [157, "do-write-pins"], [177, "do-write-pins"], [210, "do-write-pins"], [231, "do-write-pins"], [252, "do-write-pins"], [273, "do-write-pins"], [289, "do-write-pins"], [313, "do-write-pins"], [430, "do-write-pins"], [440, "do-write-pins"], [491, "do-write-pins"], [507, "do-write-pins"], [536, "do-write-pins"], [553, "do-write-pins"], [570, "do-write-pins"], [587, "do-write-pins"], [599, "do-write-pins"], [619, "do-write-pins"]], "DO write port": [[65, "do-write-port"], [79, "do-write-port"], [158, "do-write-port"], [178, "do-write-port"], [211, "do-write-port"], [232, "do-write-port"], [253, "do-write-port"], [274, "do-write-port"], [290, "do-write-port"], [314, "do-write-port"], [431, "do-write-port"], [441, "do-write-port"], [492, "do-write-port"], [508, "do-write-port"], [537, "do-write-port"], [554, "do-write-port"], [571, "do-write-port"], [588, "do-write-port"], [600, "do-write-port"], [620, "do-write-port"]], "PWM generate": [[66, "pwm-generate"], [180, "pwm-generate"], [213, "pwm-generate"], [234, "pwm-generate"], [255, "pwm-generate"], [275, "pwm-generate"], [292, "pwm-generate"], [316, "pwm-generate"], [432, "pwm-generate"], [510, "pwm-generate"], [539, "pwm-generate"], [556, "pwm-generate"], [573, "pwm-generate"], [589, "pwm-generate"], [602, "pwm-generate"], [622, "pwm-generate"]], "Relay read counters": [[103, "relay-read-counters"], [453, "relay-read-counters"]], "Relay set channel": [[104, "relay-set-channel"], [454, "relay-set-channel"]], "AO waveform generation": [[112, "ao-waveform-generation"], [150, "ao-waveform-generation"], [202, "ao-waveform-generation"], [458, "ao-waveform-generation"], [484, "ao-waveform-generation"], [528, "ao-waveform-generation"]], "AO write all channels": [[113, "ao-write-all-channels"], [151, "ao-write-all-channels"], [203, "ao-write-all-channels"], [459, "ao-write-all-channels"], [485, "ao-write-all-channels"], [529, "ao-write-all-channels"]], "AO write one channel": [[114, "ao-write-one-channel"], [152, "ao-write-one-channel"], [204, "ao-write-one-channel"], [460, "ao-write-one-channel"], [486, "ao-write-one-channel"], [530, "ao-write-one-channel"]], "DPOT read by channel": [[122, "dpot-read-by-channel"], [464, "dpot-read-by-channel"]], "DPOT write all channels": [[123, "dpot-write-all-channels"], [465, "dpot-write-all-channels"]], "TC read channel data": [[134, "tc-read-channel-data"], [323, "tc-read-channel-data"], [472, "tc-read-channel-data"], [629, "tc-read-channel-data"]], "TC read channel data with logger": [[135, "tc-read-channel-data-with-logger"], [324, "tc-read-channel-data-with-logger"], [473, "tc-read-channel-data-with-logger"], [630, "tc-read-channel-data-with-logger"]], "TC read channel status": [[136, "tc-read-channel-status"], [325, "tc-read-channel-status"], [474, "tc-read-channel-status"], [631, "tc-read-channel-status"]], "AIO all channels loopback": [[147, "aio-all-channels-loopback"], [199, "aio-all-channels-loopback"], [481, "aio-all-channels-loopback"], [525, "aio-all-channels-loopback"]], "AIO one channel loopback": [[148, "aio-one-channel-loopback"], [200, "aio-one-channel-loopback"], [482, "aio-one-channel-loopback"], [526, "aio-one-channel-loopback"]], "AO output while AI streaming": [[149, "ao-output-while-ai-streaming"], [201, "ao-output-while-ai-streaming"], [483, "ao-output-while-ai-streaming"], [527, "ao-output-while-ai-streaming"]], "Counter read": [[172, "counter-read"], [205, "counter-read"], [226, "counter-read"], [247, "counter-read"], [268, "counter-read"], [284, "counter-read"], [308, "counter-read"], [502, "counter-read"], [531, "counter-read"], [548, "counter-read"], [565, "counter-read"], [582, "counter-read"], [594, "counter-read"], [614, "counter-read"]], "I2C write and read": [[179, "i2c-write-and-read"], [212, "i2c-write-and-read"], [233, "i2c-write-and-read"], [254, "i2c-write-and-read"], [291, "i2c-write-and-read"], [315, "i2c-write-and-read"], [509, "i2c-write-and-read"], [538, "i2c-write-and-read"], [555, "i2c-write-and-read"], [572, "i2c-write-and-read"], [601, "i2c-write-and-read"], [621, "i2c-write-and-read"]], "SPI read and write": [[181, "spi-read-and-write"], [235, "spi-read-and-write"], [256, "spi-read-and-write"], [293, "spi-read-and-write"], [317, "spi-read-and-write"], [511, "spi-read-and-write"], [557, "spi-read-and-write"], [574, "spi-read-and-write"], [603, "spi-read-and-write"], [623, "spi-read-and-write"]], "SPI write": [[182, "spi-write"], [236, "spi-write"], [257, "spi-write"], [294, "spi-write"], [318, "spi-write"], [512, "spi-write"], [558, "spi-write"], [575, "spi-write"], [604, "spi-write"], [624, "spi-write"]], "System get USB info": [[183, "system-get-usb-info"], [214, "system-get-usb-info"], [237, "system-get-usb-info"], [258, "system-get-usb-info"], [276, "system-get-usb-info"], [295, "system-get-usb-info"], [319, "system-get-usb-info"], [513, "system-get-usb-info"], [540, "system-get-usb-info"], [559, "system-get-usb-info"], [576, "system-get-usb-info"], [590, "system-get-usb-info"], [605, "system-get-usb-info"], [625, "system-get-usb-info"]], "System get pin mode": [[184, "system-get-pin-mode"], [215, "system-get-pin-mode"], [238, "system-get-pin-mode"], [259, "system-get-pin-mode"], [277, "system-get-pin-mode"], [296, "system-get-pin-mode"], [320, "system-get-pin-mode"], [514, "system-get-pin-mode"], [541, "system-get-pin-mode"], [560, "system-get-pin-mode"], [577, "system-get-pin-mode"], [591, "system-get-pin-mode"], [606, "system-get-pin-mode"], [626, "system-get-pin-mode"]], "UART read": [[191, "uart-read"], [222, "uart-read"], [245, "uart-read"], [266, "uart-read"], [306, "uart-read"], [330, "uart-read"], [517, "uart-read"], [544, "uart-read"], [563, "uart-read"], [580, "uart-read"], [612, "uart-read"], [632, "uart-read"]], "UART write": [[192, "uart-write"], [223, "uart-write"], [246, "uart-write"], [267, "uart-write"], [307, "uart-write"], [331, "uart-write"], [518, "uart-write"], [545, "uart-write"], [564, "uart-write"], [581, "uart-write"], [613, "uart-write"], [633, "uart-write"]], "CAN read": [[224, "can-read"], [546, "can-read"]], "CAN write": [[225, "can-write"], [547, "can-write"]], "RTD read channel data": [[299, "rtd-read-channel-data"], [609, "rtd-read-channel-data"]], "RTD read channel data with logger": [[300, "rtd-read-channel-data-with-logger"], [610, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[301, "rtd-read-channel-status"], [611, "rtd-read-channel-status"]], "System get Wifi DAQ status": [[338, "system-get-wifi-daq-status"], [355, "system-get-wifi-daq-status"], [370, "system-get-wifi-daq-status"], [640, "system-get-wifi-daq-status"], [653, "system-get-wifi-daq-status"], [664, "system-get-wifi-daq-status"]], "Set LED status": [[341, "set-led-status"], [358, "set-led-status"], [373, "set-led-status"], [643, "set-led-status"], [656, "set-led-status"], [667, "set-led-status"]], "AHRS read": [[347, "ahrs-read"], [645, "ahrs-read"]], "AHRS visualize": [[348, "ahrs-visualize"], [646, "ahrs-visualize"]], "AI test panel": [[669, "ai-test-panel"]], "AO test panel": [[670, "ao-test-panel"]], "DO test panel": [[671, "do-test-panel"]], "I2C test panel": [[672, "i2c-test-panel"]], "SPI test panel": [[673, "spi-test-panel"]], "Network device finder": [[674, "network-device-finder"]], "Device network info center": [[675, "device-network-info-center"]], "RTD test panel": [[676, "rtd-test-panel"]], "TC test panel": [[677, "tc-test-panel"]], "UART test panel": [[678, "uart-test-panel"]], "Example Codes - GUI (sync)": [[679, "example-codes-gui-sync"]], "AI": [[679, "ai"]], "AO": [[679, "ao"]], "DO": [[679, "do"]], "I2C": [[679, "i2c"]], "SPI": [[679, "spi"]], "System": [[679, "system"]], "Temperature-RTD": [[679, "temperature-rtd"]], "Temperature-TC": [[679, "temperature-tc"]], "UART": [[679, "uart"]], "Example Codes - Console (async)": [[680, "example-codes-console-async"]], "Device finder": [[680, "device-finder"], [681, "device-finder"], [684, "device-finder"]], "STEM": [[680, "stem"], [681, "stem"], [696, "stem"]], "EDrive-ST": [[680, "edrive-st"], [681, "edrive-st"], [685, "edrive-st"]], "EMotion": [[680, "emotion"], [681, "emotion"], [686, "emotion"]], "Ethan-A": [[680, "ethan-a"], [681, "ethan-a"], [687, "ethan-a"]], "Ethan-D": [[680, "ethan-d"], [681, "ethan-d"], [688, "ethan-d"]], "Ethan-EX-D": [[680, "ethan-ex-d"], [681, "ethan-ex-d"], [689, "ethan-ex-d"]], "Ethan-I": [[680, "ethan-i"], [681, "ethan-i"], [690, "ethan-i"]], "Ethan-IA": [[680, "ethan-ia"], [681, "ethan-ia"], [691, "ethan-ia"]], "Ethan-L": [[680, "ethan-l"], [681, "ethan-l"], [692, "ethan-l"]], "Ethan-O": [[680, "ethan-o"], [681, "ethan-o"], [693, "ethan-o"]], "Ethan-P": [[680, "ethan-p"], [681, "ethan-p"], [694, "ethan-p"]], "Ethan-T": [[680, "ethan-t"], [681, "ethan-t"], [695, "ethan-t"]], "USB-DAQ-F1-AD": [[680, "usb-daq-f1-ad"], [681, "usb-daq-f1-ad"], [697, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[680, "usb-daq-f1-aod"], [681, "usb-daq-f1-aod"], [698, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[680, "usb-daq-f1-cd"], [681, "usb-daq-f1-cd"], [699, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[680, "usb-daq-f1-d"], [681, "usb-daq-f1-d"], [700, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[680, "usb-daq-f1-d-snk"], [681, "usb-daq-f1-d-snk"], [701, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[680, "usb-daq-f1-rd"], [681, "usb-daq-f1-rd"], [702, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[680, "usb-daq-f1-td"], [681, "usb-daq-f1-td"], [703, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[680, "wifi-daq-e3-a"], [681, "wifi-daq-e3-a"], [704, "wifi-daq-e3-a"]], "Wifi-DAQ-E3-AH": [[680, "wifi-daq-e3-ah"], [681, "wifi-daq-e3-ah"], [705, "wifi-daq-e3-ah"]], "Wifi-DAQ-F4-A": [[680, "wifi-daq-f4-a"], [681, "wifi-daq-f4-a"], [706, "wifi-daq-f4-a"]], "Example Codes - Console (sync)": [[681, "example-codes-console-sync"]], "Products Usage": [[683, "products-usage"]], "Utilities": [[683, "utilities"]], "Wifi devices": [[683, "wifi-devices"]], "Ethernet devices": [[683, "ethernet-devices"]], "USB devices": [[683, "usb-devices"]], "API function description": [[684, "api-function-description"], [685, "api-function-description"], [686, "api-function-description"], [687, "api-function-description"], [688, "api-function-description"], [689, "api-function-description"], [690, "api-function-description"], [691, "api-function-description"], [692, "api-function-description"], [693, "api-function-description"], [694, "api-function-description"], [695, "api-function-description"], [696, "api-function-description"], [697, "api-function-description"], [698, "api-function-description"], [699, "api-function-description"], [700, "api-function-description"], [701, "api-function-description"], [702, "api-function-description"], [703, "api-function-description"], [704, "api-function-description"], [705, "api-function-description"], [706, "api-function-description"]], "Device pinout": [[685, "device-pinout"], [686, "device-pinout"], [687, "device-pinout"], [688, "device-pinout"], [689, "device-pinout"], [690, "device-pinout"], [691, "device-pinout"], [692, "device-pinout"], [693, "device-pinout"], [694, "device-pinout"], [695, "device-pinout"], [696, "device-pinout"], [697, "device-pinout"], [698, "device-pinout"], [699, "device-pinout"], [700, "device-pinout"], [701, "device-pinout"], [702, "device-pinout"], [703, "device-pinout"], [704, "device-pinout"], [705, "device-pinout"], [706, "device-pinout"]], "Products Feature": [[707, "products-feature"]], "AI Max Sampling Rate Table": [[708, "ai-max-sampling-rate-table"]], "I/O Channel Function Table": [[709, "i-o-channel-function-table"]], "Error Code Table": [[710, "error-code-table"]], "Setting Table": [[711, "setting-table"]], "AI Mode": [[711, "ai-mode"]], "AO Form": [[711, "ao-form"]], "AO Mode": [[711, "ao-mode"]], "CAN Speed": [[711, "can-speed"]], "CAN Type": [[711, "can-type"]], "I2C Address": [[711, "i2c-address"]], "I2C Speed": [[711, "i2c-speed"]], "Motion Capture Mode": [[711, "motion-capture-mode"]], "Motion Capture Type": [[711, "motion-capture-type"]], "Motion Direction": [[711, "motion-direction"]], "Motion Enable": [[711, "motion-enable"]], "Motion Find Reference Type": [[711, "motion-find-reference-type"]], "Motion Operation Mode": [[711, "motion-operation-mode"]], "Motion Polarity": [[711, "motion-polarity"]], "Motion Search Direction": [[711, "motion-search-direction"]], "Motion Stepper Output": [[711, "motion-stepper-output"]], "Motion Stop Type": [[711, "motion-stop-type"]], "SPI Clock": [[711, "spi-clock"]], "SPI Data Size": [[711, "spi-data-size"]], "SPI Endianness": [[711, "spi-endianness"]], "SPI Mode": [[711, "spi-mode"]], "Thermal Channel": [[711, "thermal-channel"]], "Thermal OverSampling": [[711, "thermal-oversampling"]], "Thermal Type": [[711, "thermal-type"]], "UART Data Size": [[711, "uart-data-size"]], "UART Parity": [[711, "uart-parity"]], "UART Stop Bit": [[711, "uart-stop-bit"]], "I/O Port Function Table": [[712, "i-o-port-function-table"]]}, "indexentries": {"module": [[682, "module-pywpc"]], "pywpc": [[682, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[684, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[684, "pywpc.DeviceFinder.disconnect"]], "edrivest (class in pywpc)": [[685, "pywpc.EDriveST"]], "motion_cfgaxisdirection() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_cfgAxisDirection"]], "motion_cfgaxisdirection_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_cfgAxisDirection_async"]], "motion_cfgencoder() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_cfgEncoder_async"]], "motion_cfglimit() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_cfgLimit_async"]], "motion_close() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_close"]], "motion_close_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_close_async"]], "motion_enableservooff() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_enableServoOn_async"]], "motion_getalarmstatus() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getAlarmStatus"]], "motion_getalarmstatus_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getAlarmStatus_async"]], "motion_getlimitstatus() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getLimitStatus_async"]], "motion_getparameters() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getParameters"]], "motion_getparameters_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getParameters_async"]], "motion_getprocessstate() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getProcessState"]], "motion_getprocessstate_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_getProcessState_async"]], "motion_loadcfgfile() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_loadCfgFile_async"]], "motion_loadparameters() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_loadParameters"]], "motion_loadparameters_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_loadParameters_async"]], "motion_open() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_open"]], "motion_opencfgfile() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_open_async"]], "motion_readcurrentvelocity() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_readCurrentVelocity"]], "motion_readcurrentvelocity_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_readCurrentVelocity_async"]], "motion_readencoderposition() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_readEncoderPosition"]], "motion_readencoderposition_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_readEncoderPosition_async"]], "motion_resetfactory() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_resetFactory"]], "motion_resetfactory_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_resetFactory_async"]], "motion_rstencoderposi() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_saveCfgFile_async"]], "motion_saveparameters() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_saveParameters"]], "motion_saveparameters_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_saveParameters_async"]], "motion_setparameters() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_setParameters"]], "motion_setparameters_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_setParameters_async"]], "motion_startfindhome() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startFindHome"]], "motion_startfindhome_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startFindHome_async"]], "motion_startfindlimit() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startFindLimit"]], "motion_startfindlimit_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startFindLimit_async"]], "motion_startfindzpolarity() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startFindZPolarity"]], "motion_startfindzpolarity_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startFindZPolarity_async"]], "motion_startpositionmove() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startPositionMove"]], "motion_startpositionmove_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startPositionMove_async"]], "motion_startscanmove() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startScanMove"]], "motion_startscanmove_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startScanMove_async"]], "motion_startvelocticymove() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startVelocticyMove"]], "motion_startvelocticymove_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_startVelocticyMove_async"]], "motion_stopprocess() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_stopProcess"]], "motion_stopprocess_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Motion_stopProcess_async"]], "net_getgateway() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.Sys_setSwitchMode_async"]], "close() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.close"]], "connect() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.connect"]], "disconnect() (pywpc.edrivest method)": [[685, "pywpc.EDriveST.disconnect"]], "emotion (class in pywpc)": [[686, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[686, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[686, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[686, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[686, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[686, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[686, "pywpc.EMotion.Sys_setSwitchMode_async"]], "close() (pywpc.emotion method)": [[686, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[686, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[686, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_enableCS_async"]], "ai_enablechannel() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_enableChannel_async"]], "ai_getport() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_getPort"]], "ai_open() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[687, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[687, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[687, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[687, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[687, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[687, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[687, "pywpc.EthanA.Sys_setSwitchMode_async"]], "close() (pywpc.ethana method)": [[687, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[687, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[687, "pywpc.EthanA.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[688, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[688, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[688, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[688, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[688, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[688, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "pwm_close() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_close"]], "pwm_close_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_close_async"]], "pwm_open() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_open"]], "pwm_open_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_setFrequency_async"]], "pwm_start() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_start"]], "pwm_start_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_start_async"]], "pwm_stop() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_stop"]], "pwm_stop_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[688, "pywpc.EthanD.Sys_setSwitchMode_async"]], "close() (pywpc.ethand method)": [[688, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[688, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[688, "pywpc.EthanD.disconnect"]], "dio_loadstartup() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_closePins"]], "di_closepins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_closePins_async"]], "di_closeport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_closePort"]], "di_closeport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_getPinMap"]], "di_openpins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_openPins"]], "di_openpins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_openPins_async"]], "di_openport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_openPort"]], "di_openport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_openPort_async"]], "di_readpins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_readPins"]], "di_readpins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_readPins_async"]], "di_readport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_readPort"]], "di_readport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DI_readPort_async"]], "do_closepins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_closePins"]], "do_closepins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_closePins_async"]], "do_closeport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_closePort"]], "do_closeport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_getPinMap"]], "do_openpins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_openPins"]], "do_openpins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_openPins_async"]], "do_openport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_openPort"]], "do_openport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_openPort_async"]], "do_togglepins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_togglePort_async"]], "do_writepins() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_writePins"]], "do_writepins_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_writePins_async"]], "do_writeport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_writePort"]], "do_writeport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.DO_writePort_async"]], "ethanexd (class in pywpc)": [[689, "pywpc.EthanEXD"]], "logger_openfile() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Logger_writeList"]], "logger_writevalue() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Logger_writeValue"]], "net_getgateway() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.Sys_setSwitchMode_async"]], "close() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.close"]], "connect() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.connect"]], "disconnect() (pywpc.ethanexd method)": [[689, "pywpc.EthanEXD.disconnect"]], "ai_close() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_close_async"]], "ai_getport() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_getPort"]], "ai_open() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[690, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[690, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[690, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[690, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[690, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[690, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[690, "pywpc.EthanI.Sys_setSwitchMode_async"]], "close() (pywpc.ethani method)": [[690, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[690, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[690, "pywpc.EthanI.disconnect"]], "ai_close() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_close"]], "ai_close_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_close_async"]], "ai_getport() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_getPort"]], "ai_open() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_open"]], "ai_open_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_open_async"]], "ai_readondemand() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.AI_readOnDemand_async"]], "ethania (class in pywpc)": [[691, "pywpc.EthanIA"]], "logger_openfile() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Logger_writeList"]], "logger_writevalue() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Logger_writeValue"]], "net_getgateway() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethania method)": [[691, "pywpc.EthanIA.Sys_setSwitchMode_async"]], "close() (pywpc.ethania method)": [[691, "pywpc.EthanIA.close"]], "connect() (pywpc.ethania method)": [[691, "pywpc.EthanIA.connect"]], "disconnect() (pywpc.ethania method)": [[691, "pywpc.EthanIA.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DIO_setPortIdle_async"]], "di_closepins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[692, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[692, "pywpc.EthanL.Sys_setSwitchMode_async"]], "close() (pywpc.ethanl method)": [[692, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[692, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[692, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_close_async"]], "ao_getenablechannels() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getEnableChannels"]], "ao_getmode() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getMode"]], "ao_getmode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getMode_async"]], "ao_getport() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getPort"]], "ao_getstate() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getState"]], "ao_getvalues() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_open_async"]], "ao_setenablechannels() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[693, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[693, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[693, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[693, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[693, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[693, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[693, "pywpc.EthanO.Sys_setSwitchMode_async"]], "close() (pywpc.ethano method)": [[693, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[693, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[693, "pywpc.EthanO.disconnect"]], "dpot_close() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_close"]], "dpot_close_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_close_async"]], "dpot_open() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_open"]], "dpot_open_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_open_async"]], "dpot_readbychannel() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_readByChannel"]], "dpot_readbychannel_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_readByChannel_async"]], "dpot_writeallchannel() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_writeAllChannel"]], "dpot_writeallchannel_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.DPOT_writeAllChannel_async"]], "ethanp (class in pywpc)": [[694, "pywpc.EthanP"]], "logger_openfile() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Logger_writeList"]], "logger_writevalue() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Logger_writeValue"]], "net_getgateway() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanp method)": [[694, "pywpc.EthanP.Sys_setSwitchMode_async"]], "close() (pywpc.ethanp method)": [[694, "pywpc.EthanP.close"]], "connect() (pywpc.ethanp method)": [[694, "pywpc.EthanP.connect"]], "disconnect() (pywpc.ethanp method)": [[694, "pywpc.EthanP.disconnect"]], "ethant (class in pywpc)": [[695, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[695, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[695, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[695, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[695, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[695, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[695, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[695, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[695, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[695, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[696, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[696, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_enableCS_async"]], "ai_enablechannel() (pywpc.stem method)": [[696, "pywpc.STEM.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_enableChannel_async"]], "ai_getport() (pywpc.stem method)": [[696, "pywpc.STEM.AI_getPort"]], "ai_open() (pywpc.stem method)": [[696, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[696, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[696, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[696, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[696, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[696, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[696, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[696, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[696, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[696, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[696, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_close_async"]], "ao_getenablechannels() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getEnableChannels"]], "ao_getmode() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getMode"]], "ao_getmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getMode_async"]], "ao_getport() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getPort"]], "ao_getstate() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getState"]], "ao_getvalues() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[696, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[696, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_open_async"]], "ao_setenablechannels() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[696, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[696, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[696, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[696, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.stem method)": [[696, "pywpc.STEM.DIO_setPortIdle_async"]], "di_closepins() (pywpc.stem method)": [[696, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[696, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[696, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[696, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[696, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[696, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[696, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[696, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[696, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[696, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[696, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[696, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[696, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[696, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[696, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[696, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[696, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[696, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[696, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[696, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[696, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[696, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[696, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[696, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[696, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[696, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[696, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[696, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[696, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[696, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[696, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[696, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[696, "pywpc.STEM.Sys_setSwitchMode_async"]], "close() (pywpc.stem method)": [[696, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[696, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[696, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.AI_stop_async"]], "counter_close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[697, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[697, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getenablechannels() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getEnableChannels"]], "ao_getmode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getMode"]], "ao_getmode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getMode_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getstate() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getState"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "counter_close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[698, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[698, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.CAN_write_async"]], "counter_close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[699, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[699, "pywpc.USBDAQF1CD.disconnect"]], "counter_close() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[700, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[700, "pywpc.USBDAQF1D.disconnect"]], "counter_close() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "usbdaqf1dsnk (class in pywpc)": [[701, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[701, "pywpc.USBDAQF1DSNK.disconnect"]], "counter_close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[702, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[702, "pywpc.USBDAQF1RD.disconnect"]], "counter_close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "dio_savestartup() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_saveStartup"]], "dio_savestartup_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_saveStartup_async"]], "dio_setportdi() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_setPortDI"]], "dio_setportdi_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_setPortDI_async"]], "dio_setportdo() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_setPortDO"]], "dio_setportdo_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_setPortDO_async"]], "dio_setportidle() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_setPortIdle"]], "dio_setportidle_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DIO_setPortIdle_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_stopreading() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_stopReading"]], "uart_stopreading_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_stopReading_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[703, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[703, "pywpc.USBDAQF1TD.disconnect"]], "ai_close() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_getPort"]], "ai_open() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "wifidaqe3a (class in pywpc)": [[704, "pywpc.WifiDAQE3A"]], "wifi_getchargestatus() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getChargeStatus_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_readThermo_async"]], "wifi_resetled() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_resetLED_async"]], "wifi_setap() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setBandwidth_async"]], "wifi_setblueled() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[704, "pywpc.WifiDAQE3A.disconnect"]], "ahrs_close() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_close"]], "ahrs_close_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_close_async"]], "ahrs_getestimate() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_getEstimate"]], "ahrs_getestimate_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_getEstimate_async"]], "ahrs_open() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_open"]], "ahrs_open_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_open_async"]], "ahrs_reset() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_reset"]], "ahrs_reset_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_reset_async"]], "ahrs_setsamplingperiod() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_setSamplingPeriod"]], "ahrs_setsamplingperiod_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_setSamplingPeriod_async"]], "ahrs_start() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_start"]], "ahrs_start_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_start_async"]], "ahrs_stop() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_stop"]], "ahrs_stop_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AHRS_stop_async"]], "ai_close() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_close"]], "ai_close_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_getPort"]], "ai_open() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_open"]], "ai_open_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_start"]], "ai_start_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Sys_setSwitchMode_async"]], "wifidaqe3ah (class in pywpc)": [[705, "pywpc.WifiDAQE3AH"]], "wifi_getchargestatus() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_readThermo_async"]], "wifi_resetled() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_resetLED_async"]], "wifi_setap() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setBandwidth_async"]], "wifi_setblueled() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.close"]], "connect() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.connect"]], "disconnect() (pywpc.wifidaqe3ah method)": [[705, "pywpc.WifiDAQE3AH.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_getPort"]], "ai_open() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_rebootonbootloader() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader"]], "sys_rebootonbootloader_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_rebootOnBootloader_async"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "wifidaqf4a (class in pywpc)": [[706, "pywpc.WifiDAQF4A"]], "wifi_getchargestatus() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getChargeStatus_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth_async"]], "wifi_getwificonfiguration() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration"]], "wifi_getwificonfiguration_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_getWifiConfiguration_async"]], "wifi_readacceleration() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readAcceleration"]], "wifi_readaccleration_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readAccleration_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_readthermo() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readThermo"]], "wifi_readthermo_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_readThermo_async"]], "wifi_resetled() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_resetLED_async"]], "wifi_setap() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setAP"]], "wifi_setap_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setAP_async"]], "wifi_setbandwidth() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setBandwidth"]], "wifi_setbandwidth_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setBandwidth_async"]], "wifi_setblueled() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[706, "pywpc.WifiDAQF4A.disconnect"]]}})