Search.setIndex({"docnames": ["README", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Asynchronous/EDriveST/System_ETH/get_serial_number", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info", "examples/Console/Asynchronous/EMotion/System_ETH/get_serial_number", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Asynchronous/EthanA/AI/AI_continuous", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanA/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanD/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanI/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanIA/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanL/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanO/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanP/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info", "examples/Console/Asynchronous/EthanT/System_ETH/get_serial_number", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once", "examples/Console/Asynchronous/STEM/AI/AI_continuous", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins", "examples/Console/Asynchronous/STEM/DIO/DO_write_port", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info", "examples/Console/Asynchronous/STEM/System_ETH/get_serial_number", "examples/Console/Asynchronous/STEM/System_ETH/hello_world", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_serial_number", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_serial_number", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info", "examples/Console/Synchronous/EDriveST/System_ETH/get_serial_number", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info", "examples/Console/Synchronous/EMotion/System_ETH/get_serial_number", "examples/Console/Synchronous/EMotion/System_ETH/hello_world", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once", "examples/Console/Synchronous/EthanA/AI/AI_continuous", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanA/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanA/System_ETH/hello_world", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanD/DIO/DO_write_port", "examples/Console/Synchronous/EthanD/PWM/PWM_generate", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanD/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanD/System_ETH/hello_world", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info", "examples/Console/Synchronous/EthanEXD/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info", "examples/Console/Synchronous/EthanI/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanI/System_ETH/hello_world", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info", "examples/Console/Synchronous/EthanIA/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info", "examples/Console/Synchronous/EthanL/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanL/System_ETH/hello_world", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info", "examples/Console/Synchronous/EthanO/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanO/System_ETH/hello_world", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info", "examples/Console/Synchronous/EthanP/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanP/System_ETH/hello_world", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info", "examples/Console/Synchronous/EthanT/System_ETH/get_serial_number", "examples/Console/Synchronous/EthanT/System_ETH/hello_world", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once", "examples/Console/Synchronous/STEM/AI/AI_continuous", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port", "examples/Console/Synchronous/STEM/DIO/DO_write_pins", "examples/Console/Synchronous/STEM/DIO/DO_write_port", "examples/Console/Synchronous/STEM/System_ETH/get_network_info", "examples/Console/Synchronous/STEM/System_ETH/get_serial_number", "examples/Console/Synchronous/STEM/System_ETH/hello_world", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_serial_number", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_serial_number", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC", "examples/GUI/Synchronous/AI/AI_integrated_gui", "examples/GUI/Synchronous/AO/AO_gui", "examples/GUI/Synchronous/DO/DO_gui", "examples/GUI/Synchronous/I2C/I2C_gui", "examples/GUI/Synchronous/SPI/SPI_gui", "examples/GUI/Synchronous/System/find_all_devices_gui", "examples/GUI/Synchronous/System/get_device_info_gui", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui", "examples/GUI/Synchronous/Temperature_TC/TC_gui", "examples/GUI/Synchronous/UART/UART_gui", "examples_GUI_Synchronous", "examples_console_Asynchronous", "examples_console_Synchronous", "index", "product_list", "products/DeviceFinder", "products/EDriveST", "products/EMotion", "products/EthanA", "products/EthanD", "products/EthanEXD", "products/EthanI", "products/EthanIA", "products/EthanL", "products/EthanO", "products/EthanP", "products/EthanT", "products/STEM", "products/USBDAQF1AD", "products/USBDAQF1AOD", "products/USBDAQF1CD", "products/USBDAQF1D", "products/USBDAQF1DSNK", "products/USBDAQF1RD", "products/USBDAQF1TD", "products/WifiDAQE3A", "products/WifiDAQE3AH", "products/WifiDAQF4A", "products_summary", "ref_AIO", "ref_channel", "ref_error", "ref_param", "ref_port"], "filenames": ["README.rst", "examples/Console/Asynchronous/DeviceFinder/Find_devices/find_all_devices.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_home.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_find_limit.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_blending.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_position_move.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_scan_move.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_servo_on.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_blending_acceleration.rst", "examples/Console/Asynchronous/EDriveST/Drive/Drive_velocity_move.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EDriveST/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EDriveST/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_capture.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_1axis_move_with_inposition.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_circular_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_2axis_linear_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_asynchronous_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_helical_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_linear_interpolation.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_3axis_synchronous_move.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_home.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_index.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_find_limit.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_get_logical_position.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_load_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_position_blending.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_save_configuration_file.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_servo_on.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending.rst", "examples/Console/Asynchronous/EMotion/Motion/Motion_velocity_blending_acceleration.rst", "examples/Console/Asynchronous/EMotion/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EMotion/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EMotion/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EMotion/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EMotion/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EMotion/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanA/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/EthanA/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/EthanA/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanA/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanA/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanA/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanA/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanA/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanA/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/EthanD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/EthanD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/EthanD/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanD/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanD/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanD/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/EthanEXD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanEXD/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanEXD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanI/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanI/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanI/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanI/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanI/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanI/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanI/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanIA/AI24Bit/AI_on_demand_once.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanIA/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanIA/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanL/Relay/Relay_read_counters.rst", "examples/Console/Asynchronous/EthanL/Relay/Relay_set_channel.rst", "examples/Console/Asynchronous/EthanL/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanL/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanL/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanL/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanL/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanL/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanO/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/EthanO/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/EthanO/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/EthanO/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanO/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanO/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanO/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanO/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanO/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_readByChannel.rst", "examples/Console/Asynchronous/EthanP/DPOT/DPOT_writeAllChannels.rst", "examples/Console/Asynchronous/EthanP/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanP/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanP/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanP/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanP/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanP/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/EthanT/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/EthanT/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/EthanT/System_ETH/hello_world.rst", "examples/Console/Asynchronous/EthanT/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/EthanT/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/EthanT/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/EthanT/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/STEM/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/STEM/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/STEM/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/STEM/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/STEM/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/STEM/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/STEM/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/STEM/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/STEM/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/STEM/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/STEM/DIO/DO_write_port.rst", "examples/Console/Asynchronous/STEM/System_ETH/get_network_info.rst", "examples/Console/Asynchronous/STEM/System_ETH/get_serial_number.rst", "examples/Console/Asynchronous/STEM/System_ETH/hello_world.rst", "examples/Console/Asynchronous/STEM/System_ETH/set_and_get_RTC.rst", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/STEM/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/STEM/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/USBDAQF1AD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/USBDAQF1AD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1AD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1AD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1AD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1AD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1AD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1AD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_waveform_gen.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_all_channels.rst", "examples/Console/Asynchronous/USBDAQF1AOD/AO/AO_write_one_channel.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1AOD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1AOD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1AOD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1AOD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1AOD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/CAN/CAN_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1CD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1CD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1CD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1CD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1CD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1D/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1D/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1D/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1D/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1D/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1D/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1D/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1D/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1DSNK/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1RD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1RD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1RD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1RD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1RD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1RD/UART/UART_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/Counter/Counter_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DIO_loopback_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_blinky_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_pins.rst", "examples/Console/Asynchronous/USBDAQF1TD/DIO/DO_write_port.rst", "examples/Console/Asynchronous/USBDAQF1TD/I2C/I2C_write_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/PWM/PWM_generate.rst", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_read_and_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/SPI/SPI_write.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_pin_mode.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/get_serial_number.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/hello_world.rst", "examples/Console/Asynchronous/USBDAQF1TD/System_USB/set_and_get_RTC.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Asynchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/USBDAQF1TD/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_read.rst", "examples/Console/Asynchronous/USBDAQF1TD/UART/UART_write.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3A/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3A/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AHRS/AHRS_visualize.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQE3AH/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQE3AH/Tutorial/single_loop_thread.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_N_samples_once.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_multi_slot.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_continuous_with_logger.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_in_loop.rst", "examples/Console/Asynchronous/WifiDAQF4A/AI/AI_on_demand_once.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_network_info.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/get_serial_number.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/hello_world.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_LED_status.rst", "examples/Console/Asynchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_async.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/multiple_loops_thread.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_async.rst", "examples/Console/Asynchronous/WifiDAQF4A/Tutorial/single_loop_thread.rst", "examples/Console/Synchronous/DeviceFinder/Find_devices/find_all_devices.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_home.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_find_limit.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_blending.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_position_move.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_scan_move.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_servo_on.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_blending_acceleration.rst", "examples/Console/Synchronous/EDriveST/Drive/Drive_velocity_move.rst", "examples/Console/Synchronous/EDriveST/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EDriveST/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EDriveST/System_ETH/hello_world.rst", "examples/Console/Synchronous/EDriveST/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_S_curve_acceleration.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_alarm_in.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_breakpoint.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_capture.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_1axis_move_with_inposition.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_circular_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_2axis_linear_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_asynchronous_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_helical_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_linear_interpolation.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_3axis_synchronous_move.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_home.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_index.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_find_limit.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_get_logical_position.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_load_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_position_blending.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_save_configuration_file.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_servo_on.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending.rst", "examples/Console/Synchronous/EMotion/Motion/Motion_velocity_blending_acceleration.rst", "examples/Console/Synchronous/EMotion/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EMotion/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EMotion/System_ETH/hello_world.rst", "examples/Console/Synchronous/EMotion/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanA/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/EthanA/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/EthanA/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanA/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanA/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanA/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanA/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/EthanD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/EthanD/DIO/DO_write_port.rst", "examples/Console/Synchronous/EthanD/PWM/PWM_generate.rst", "examples/Console/Synchronous/EthanD/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanD/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanD/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanD/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/EthanEXD/DIO/DO_write_port.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanEXD/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanI/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanI/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanI/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanI/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanI/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanIA/AI24Bit/AI_on_demand_once.rst", "examples/Console/Synchronous/EthanIA/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanIA/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanIA/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanIA/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanL/Relay/Relay_read_counters.rst", "examples/Console/Synchronous/EthanL/Relay/Relay_set_channel.rst", "examples/Console/Synchronous/EthanL/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanL/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanL/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanL/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanO/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/EthanO/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/EthanO/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/EthanO/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanO/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanO/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanO/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_readByChannel.rst", "examples/Console/Synchronous/EthanP/DPOT/DPOT_writeAllChannels.rst", "examples/Console/Synchronous/EthanP/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanP/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanP/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanP/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanT/System_ETH/get_network_info.rst", "examples/Console/Synchronous/EthanT/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/EthanT/System_ETH/hello_world.rst", "examples/Console/Synchronous/EthanT/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Synchronous/EthanT/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Synchronous/STEM/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/STEM/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/STEM/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/STEM/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/STEM/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/STEM/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/STEM/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/STEM/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/STEM/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/STEM/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/STEM/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/STEM/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/STEM/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/STEM/DIO/DO_write_pins.rst", "examples/Console/Synchronous/STEM/DIO/DO_write_port.rst", "examples/Console/Synchronous/STEM/System_ETH/get_network_info.rst", "examples/Console/Synchronous/STEM/System_ETH/get_serial_number.rst", "examples/Console/Synchronous/STEM/System_ETH/hello_world.rst", "examples/Console/Synchronous/STEM/System_ETH/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/USBDAQF1AD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/USBDAQF1AD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1AD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1AD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1AD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1AD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1AD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1AD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/USBDAQF1AOD/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_all_channels_loopback.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AIO_one_channel_loopback.rst", "examples/Console/Synchronous/USBDAQF1AOD/AIO/AO_output_while_AI_streaming.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_waveform_gen.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_all_channels.rst", "examples/Console/Synchronous/USBDAQF1AOD/AO/AO_write_one_channel.rst", "examples/Console/Synchronous/USBDAQF1AOD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1AOD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1AOD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1AOD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1AOD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_read.rst", "examples/Console/Synchronous/USBDAQF1CD/CAN/CAN_write.rst", "examples/Console/Synchronous/USBDAQF1CD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1CD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1CD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1CD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1CD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1CD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1CD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1D/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1D/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1D/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1D/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1D/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1D/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1D/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1D/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1DSNK/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1DSNK/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1DSNK/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1DSNK/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1RD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1RD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1RD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1RD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1RD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1RD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_data_with_logger.rst", "examples/Console/Synchronous/USBDAQF1RD/Temperature_RTD/RTD_read_channel_status.rst", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1RD/UART/UART_write.rst", "examples/Console/Synchronous/USBDAQF1TD/Counter/Counter_read.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DIO_loopback_port.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_blinky_port.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_pins.rst", "examples/Console/Synchronous/USBDAQF1TD/DIO/DO_write_port.rst", "examples/Console/Synchronous/USBDAQF1TD/I2C/I2C_write_read.rst", "examples/Console/Synchronous/USBDAQF1TD/PWM/PWM_generate.rst", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_read_and_write.rst", "examples/Console/Synchronous/USBDAQF1TD/SPI/SPI_write.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_pin_mode.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/get_serial_number.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/hello_world.rst", "examples/Console/Synchronous/USBDAQF1TD/System_USB/set_and_get_RTC.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_data_with_logger.rst", "examples/Console/Synchronous/USBDAQF1TD/Temperature_TC/TC_read_channel_status.rst", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_read.rst", "examples/Console/Synchronous/USBDAQF1TD/UART/UART_write.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3A/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3A/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAcceleration.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getAngularVelocity.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getEstimation.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_getOrientation.rst", "examples/Console/Synchronous/WifiDAQE3AH/AHRS/AHRS_visualize.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQE3AH/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQE3AH/System_Wifi/set_and_get_RTC.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_N_samples_once.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_multi_slot.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_continuous_with_logger.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_in_loop.rst", "examples/Console/Synchronous/WifiDAQF4A/AI/AI_on_demand_once.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_Wifi_DAQ_status.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_network_info.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/get_serial_number.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/hello_world.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_LED_status.rst", "examples/Console/Synchronous/WifiDAQF4A/System_Wifi/set_and_get_RTC.rst", "examples/GUI/Synchronous/AI/AI_integrated_gui.rst", "examples/GUI/Synchronous/AO/AO_gui.rst", "examples/GUI/Synchronous/DO/DO_gui.rst", "examples/GUI/Synchronous/I2C/I2C_gui.rst", "examples/GUI/Synchronous/SPI/SPI_gui.rst", "examples/GUI/Synchronous/System/find_all_devices_gui.rst", "examples/GUI/Synchronous/System/get_device_info_gui.rst", "examples/GUI/Synchronous/Temperature_RTD/RTD_gui.rst", "examples/GUI/Synchronous/Temperature_TC/TC_gui.rst", "examples/GUI/Synchronous/UART/UART_gui.rst", "examples_GUI_Synchronous.rst", "examples_console_Asynchronous.rst", "examples_console_Synchronous.rst", "index.rst", "product_list.rst", "products/DeviceFinder.rst", "products/EDriveST.rst", "products/EMotion.rst", "products/EthanA.rst", "products/EthanD.rst", "products/EthanEXD.rst", "products/EthanI.rst", "products/EthanIA.rst", "products/EthanL.rst", "products/EthanO.rst", "products/EthanP.rst", "products/EthanT.rst", "products/STEM.rst", "products/USBDAQF1AD.rst", "products/USBDAQF1AOD.rst", "products/USBDAQF1CD.rst", "products/USBDAQF1D.rst", "products/USBDAQF1DSNK.rst", "products/USBDAQF1RD.rst", "products/USBDAQF1TD.rst", "products/WifiDAQE3A.rst", "products/WifiDAQE3AH.rst", "products/WifiDAQF4A.rst", "products_summary.rst", "ref_AIO.rst", "ref_channel.rst", "ref_error.rst", "ref_param.rst", "ref_port.rst"], "titles": ["Overview", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Relay read counters", "Relay set channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "DPOT read by channel", "DPOT write all channels", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AHRS getAcceleration", "AHRS getAngularVelocity", "AHRS getEstimation", "AHRS getOrientation", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "Tutorial multiple loops async", "Tutorial multiple loops thread", "Tutorial single loop async", "Tutorial single loop thread", "Find all devices", "Drive find home", "Drive find limit", "Drive position blending", "Drive position move", "Drive scan move", "Drive servo on", "Drive velocity blending acceleration", "Drive velocity move", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Motion 1axis move", "Motion 1axis move with Scurve", "Motion 1axis move with alarm in", "Motion 1axis move with breakpoint", "Motion 1axis move with capture", "Motion 1axis move with config file", "Motion 1axis move with inposition", "Motion 2axis circular interpo", "Motion 2axis linear interpo", "Motion 3axis async move", "Motion 3axis helical interpo", "Motion 3axis linear interpo", "Motion 3axis sync move", "Motion find home", "Motion find index", "Motion find limit", "Motion get logical position", "Motion load config file", "Motion position blending", "Motion save config file", "Motion servo on", "Motion velocity blending", "Motion acceleration blending", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI on demand once", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "Relay read counters", "Relay set channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AO waveform generation", "AO write all channels", "AO write one channel", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "DPOT read by channel", "DPOT write all channels", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "System get network info", "Get serial number", "System hello world", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "AIO all channels loopback", "AIO one channel loopback", "AO output while AI streaming", "AO waveform generation", "AO write all channels", "AO write one channel", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "CAN read", "CAN write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "PWM generate", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "RTD read channel data", "RTD read channel data with logger", "RTD read channel status", "UART read", "UART write", "Counter read", "DIO loopback pins", "DIO loopback port", "DO blinky pins", "DO blinky port", "DO write pins", "DO write port", "I2C write and read", "PWM generate", "SPI read and write", "SPI write", "System get pin mode", "Get serial number", "System hello world", "Set and get RTC", "TC read channel data", "TC read channel data with logger", "TC read channel status", "UART read", "UART write", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AHRS getAcceleration", "AHRS getAngularVelocity", "AHRS getEstimation", "AHRS getOrientation", "AHRS visualize", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI N samples once", "AI continuous", "AI continuous multi slot", "AI continuous with logger", "AI on demand in loop", "AI on demand once", "System get Wifi DAQ status", "System get network info", "Get serial number", "System hello world", "Set LED status", "Set and get RTC", "AI test panel", "AO test panel", "DO test panel", "I2C test panel", "SPI test panel", "Network device finder", "Device network info center", "RTD test panel", "TC test panel", "UART test panel", "Example Codes - GUI (sync)", "Example Codes - Console (async)", "Example Codes - Console (sync)", "Overview", "Products Usage", "Device finder", "EDrive-ST", "EMotion", "Ethan-A", "Ethan-D", "Ethan-EX-D", "Ethan-I", "Ethan-IA", "Ethan-L", "Ethan-O", "Ethan-P", "Ethan-T", "STEM", "USB-DAQ-F1-AD", "USB-DAQ-F1-AOD", "USB-DAQ-F1-CD", "USB-DAQ-F1-D", "USB-DAQ-F1-D-SNK", "USB-DAQ-F1-RD", "USB-DAQ-F1-TD", "Wifi-DAQ-E3-A", "Wifi-DAQ-E3-AH", "Wifi-DAQ-F4-A", "Products Feature", "AI Max Sampling Rate Table", "I/O Channel Function Table", "Error Code Table", "Setting Table", "I/O Port Function Table"], "terms": {"welcom": [0, 718], "wpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "driver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 748], "api": [0, 718, 719, 746], "document": [0, 718], "It": [0, 63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 718, 722, 724, 732, 733, 734, 735, 736, 737, 738, 739], "i": [0, 12, 13, 15, 17, 25, 26, 27, 29, 30, 34, 43, 44, 46, 48, 49, 53, 57, 58, 60, 62, 65, 66, 67, 68, 72, 73, 75, 77, 80, 81, 82, 83, 86, 87, 89, 91, 95, 96, 98, 100, 104, 105, 107, 109, 111, 114, 115, 117, 119, 121, 122, 125, 126, 128, 130, 131, 135, 136, 138, 140, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 177, 178, 182, 184, 187, 188, 189, 190, 191, 193, 195, 197, 198, 200, 202, 205, 209, 211, 212, 215, 216, 217, 220, 221, 222, 223, 224, 226, 228, 229, 231, 233, 236, 238, 241, 242, 243, 244, 245, 247, 249, 251, 252, 254, 256, 259, 262, 263, 264, 265, 266, 268, 270, 272, 273, 275, 277, 280, 283, 284, 285, 286, 288, 290, 291, 293, 295, 296, 299, 300, 301, 302, 303, 305, 307, 309, 310, 315, 317, 320, 323, 324, 325, 326, 327, 329, 331, 333, 334, 339, 341, 344, 348, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 369, 374, 375, 376, 378, 380, 381, 385, 390, 391, 392, 394, 396, 408, 409, 417, 418, 419, 421, 422, 426, 435, 436, 437, 441, 445, 446, 449, 450, 451, 452, 456, 457, 460, 461, 462, 463, 466, 467, 471, 472, 476, 477, 479, 482, 483, 485, 486, 489, 490, 491, 495, 496, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 530, 532, 535, 536, 537, 538, 539, 541, 543, 545, 546, 549, 553, 555, 556, 559, 560, 561, 564, 565, 566, 567, 568, 570, 572, 573, 576, 578, 581, 582, 583, 584, 585, 587, 589, 591, 592, 595, 598, 599, 600, 601, 602, 604, 606, 608, 609, 612, 615, 616, 617, 618, 620, 622, 623, 624, 627, 628, 629, 630, 631, 633, 635, 637, 638, 644, 647, 648, 649, 650, 651, 653, 655, 657, 658, 664, 668, 673, 674, 675, 676, 677, 678, 679, 680, 681, 685, 690, 691, 692, 693, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746], "an": [0, 711, 718, 721, 722, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "easi": [0, 718, 743], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 539, 555, 556, 562, 563, 568, 579, 580, 585, 596, 597, 602, 613, 614, 625, 626, 631, 645, 646, 651, 680, 718, 722, 723, 729, 732, 733, 734, 735, 740, 741, 742, 748], "open": [0, 2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 92, 101, 110, 111, 120, 121, 122, 131, 132, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 342, 343, 344, 345, 347, 348, 349, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 468, 473, 478, 479, 484, 485, 486, 491, 492, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 706, 707, 708, 709, 712, 713, 714, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sourc": [0, 718, 743], "tool": [0, 718], "beginn": [0, 718], "we": [0, 191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 718], "provid": [0, 718], "excel": [0, 718], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 748], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "help": [0, 718], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 723, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745], "quickli": [0, 718], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 435, 437, 438, 440, 441, 442, 445, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 476, 478, 479, 482, 484, 485, 486, 489, 491, 492, 495, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 657, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 673, 674, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 690, 691, 693, 694, 696, 697, 698, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "our": [0, 718], "product": [0, 152, 153, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 364, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 680, 718, 726, 727, 744, 745, 746, 748], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746], "real": [0, 718], "world": [0, 716, 717, 718], "usag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 723, 729, 732, 733, 734, 735, 740, 741, 742, 744, 746], "make": [0, 191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 718], "great": [0, 718], "wai": [0, 69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 718], "learn": [0, 718], "therefor": [0, 718], "highli": [0, 718], "recommend": [0, 718], "becaus": [0, 14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 174, 175, 176, 177, 199, 200, 201, 202, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 356, 357, 358, 359, 377, 378, 379, 380, 393, 394, 395, 396, 718], "": [0, 6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 166, 167, 172, 173, 174, 175, 176, 177, 179, 181, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 206, 208, 214, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 246, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 267, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 304, 309, 310, 311, 312, 314, 315, 316, 317, 318, 323, 324, 325, 326, 328, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 347, 353, 354, 355, 356, 357, 358, 359, 366, 368, 374, 375, 376, 377, 378, 379, 380, 382, 384, 390, 391, 392, 393, 394, 395, 396, 402, 404, 405, 408, 409, 419, 422, 430, 431, 432, 435, 436, 438, 440, 445, 446, 449, 450, 451, 452, 453, 456, 457, 460, 461, 462, 463, 466, 467, 471, 472, 476, 477, 479, 482, 483, 484, 489, 490, 495, 496, 499, 500, 501, 502, 505, 507, 518, 519, 524, 525, 527, 529, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 550, 552, 558, 564, 565, 566, 567, 568, 569, 572, 573, 574, 576, 577, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 615, 616, 617, 618, 619, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 642, 647, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 662, 665, 667, 673, 674, 675, 682, 684, 690, 691, 692, 694, 696, 702, 703, 704, 705, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 747], "simpl": [0, 718], "just": [0, 718], "read": [0, 33, 49, 50, 52, 53, 54, 63, 64, 78, 79, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 178, 179, 181, 182, 183, 185, 186, 205, 206, 208, 209, 210, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 423, 425, 437, 438, 440, 441, 442, 447, 448, 458, 459, 468, 473, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 526, 527, 529, 530, 531, 533, 534, 549, 550, 552, 553, 554, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 708, 709, 712, 713, 714, 716, 717, 718, 721, 722, 723, 724, 725, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "write": [0, 52, 63, 64, 65, 66, 78, 79, 80, 81, 111, 120, 146, 155, 158, 159, 160, 164, 165, 166, 167, 181, 185, 186, 187, 188, 208, 211, 212, 214, 218, 219, 220, 221, 239, 240, 241, 242, 260, 261, 262, 263, 281, 282, 283, 284, 297, 298, 299, 300, 312, 321, 322, 323, 324, 336, 347, 368, 384, 440, 447, 448, 449, 450, 458, 459, 460, 461, 479, 484, 502, 507, 510, 511, 512, 516, 517, 518, 519, 529, 533, 534, 535, 536, 552, 555, 556, 558, 562, 563, 564, 565, 579, 580, 581, 582, 596, 597, 598, 599, 613, 614, 615, 616, 625, 626, 627, 628, 640, 645, 646, 647, 648, 660, 667, 684, 696, 706, 707, 708, 709, 714, 716, 717, 718, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "allow": [0, 718, 744], "access": [0, 718], "updat": [0, 50, 52, 153, 154, 155, 160, 179, 181, 206, 208, 345, 347, 360, 361, 362, 363, 364, 366, 368, 382, 384, 438, 440, 505, 506, 507, 512, 527, 529, 550, 552, 665, 667, 676, 677, 678, 679, 680, 682, 684, 694, 696, 705, 706, 707, 708, 709, 711, 712, 713, 714, 718, 743], "data": [0, 15, 16, 17, 46, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 75, 76, 77, 89, 90, 91, 92, 98, 99, 100, 101, 107, 108, 109, 117, 118, 119, 128, 129, 130, 138, 139, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 181, 182, 183, 191, 193, 194, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 224, 231, 232, 233, 234, 235, 236, 237, 245, 247, 248, 254, 255, 256, 257, 258, 266, 268, 269, 275, 276, 277, 278, 279, 293, 294, 295, 303, 305, 306, 315, 316, 317, 318, 319, 327, 329, 330, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 378, 379, 380, 381, 382, 384, 385, 386, 394, 395, 396, 437, 438, 440, 441, 442, 468, 473, 504, 505, 506, 507, 508, 509, 510, 511, 512, 526, 527, 529, 530, 531, 539, 541, 542, 547, 548, 549, 550, 552, 553, 554, 555, 556, 568, 574, 575, 576, 577, 585, 587, 588, 593, 594, 602, 604, 605, 610, 611, 631, 633, 634, 642, 643, 651, 653, 654, 662, 663, 664, 665, 667, 668, 669, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 706, 708, 709, 712, 713, 714, 716, 717, 718, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "eas": [0, 718], "ad": [0, 718, 719, 744, 745, 748], "your": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 726, 727], "toolkit": [0, 718], "onli": [0, 718, 723, 729, 732, 733, 734, 740, 741, 742], "simplifi": [0, 718], "task": [0, 718], "also": [0, 718], "practic": [0, 718], "experi": [0, 718], "bridg": [0, 718], "theori": [0, 718], "applic": [0, 718], "last": [0, 10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 145, 146, 147, 170, 191, 193, 194, 195, 203, 204, 224, 226, 234, 235, 236, 237, 245, 247, 248, 249, 257, 258, 266, 268, 269, 270, 278, 279, 288, 303, 305, 306, 307, 311, 312, 313, 318, 319, 327, 329, 330, 331, 335, 336, 337, 342, 343, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 501, 502, 503, 522, 539, 541, 542, 543, 547, 548, 568, 570, 574, 575, 576, 577, 585, 587, 588, 589, 593, 594, 602, 604, 605, 606, 610, 611, 620, 631, 633, 634, 635, 639, 640, 641, 642, 643, 651, 653, 654, 655, 659, 660, 661, 662, 663, 671, 688, 700, 718], "least": [0, 145, 146, 311, 312, 335, 336, 501, 502, 639, 640, 659, 660, 718], "valuabl": [0, 718], "resourc": [0, 718], "both": [0, 718], "work": [0, 718], "effici": [0, 718], "support": [0, 51, 161, 180, 207, 213, 346, 367, 383, 439, 485, 513, 514, 528, 551, 557, 559, 666, 683, 695, 718, 738, 743, 746], "synchron": [0, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718], "asynchron": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 492, 512, 718], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746], "comput": [0, 718], "process": [0, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 92, 101, 120, 121, 122, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 468, 473, 484, 485, 486, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 718, 721, 746], "thread": [0, 14, 16, 27, 30, 45, 47, 59, 61, 74, 76, 88, 90, 97, 99, 106, 108, 116, 118, 127, 129, 137, 139, 148, 150, 174, 176, 199, 201, 230, 232, 253, 255, 274, 276, 292, 294, 314, 316, 338, 340, 356, 358, 377, 379, 393, 395, 419, 422, 705, 716, 718], "mean": [0, 718, 723, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "two": [0, 14, 15, 17, 45, 46, 48, 59, 60, 62, 74, 75, 77, 88, 89, 91, 97, 98, 100, 106, 107, 109, 116, 117, 119, 127, 128, 130, 137, 138, 140, 148, 149, 151, 174, 175, 177, 191, 199, 200, 202, 224, 230, 231, 233, 245, 253, 254, 256, 266, 274, 275, 277, 292, 293, 295, 303, 311, 312, 313, 314, 315, 317, 327, 338, 339, 341, 356, 357, 359, 377, 378, 380, 393, 394, 396, 539, 568, 585, 602, 631, 639, 640, 641, 651, 712, 718, 722, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 747], "more": [0, 718], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 721], "step": [0, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 484, 485, 486, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 718, 721, 722, 732, 743, 747], "manner": [0, 718], "one": [0, 716, 717, 718, 722, 723, 731, 732, 733, 734, 738, 739, 740, 741, 742], "after": [0, 145, 146, 335, 336, 501, 502, 659, 660, 718, 721, 722, 723, 732, 733, 734, 735, 740, 741, 742], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "In": [0, 121, 122, 158, 159, 160, 162, 163, 211, 212, 215, 216, 485, 486, 510, 511, 512, 514, 515, 555, 556, 559, 560, 718, 733, 734, 735, 736, 738, 739, 746, 748], "execut": [0, 14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 174, 175, 176, 177, 199, 200, 201, 202, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 356, 357, 358, 359, 377, 378, 379, 380, 393, 394, 395, 396, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "block": [0, 718], "until": [0, 718], "previou": [0, 718], "complet": [0, 25, 26, 27, 29, 30, 417, 418, 419, 420, 421, 422, 718, 722, 732], "independ": [0, 718], "each": [0, 65, 66, 80, 81, 111, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 479, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 718, 720, 723, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "don": [0, 718], "t": [0, 16, 47, 61, 76, 90, 99, 108, 118, 129, 139, 145, 146, 150, 176, 201, 232, 255, 276, 294, 316, 335, 336, 340, 358, 379, 395, 501, 502, 659, 660, 718, 719, 739, 743, 747, 748], "wait": [0, 6, 8, 9, 27, 30, 38, 50, 52, 65, 66, 67, 68, 69, 80, 81, 82, 83, 111, 120, 145, 146, 153, 154, 155, 166, 167, 179, 181, 187, 188, 189, 190, 192, 203, 206, 208, 214, 220, 221, 222, 223, 225, 234, 236, 237, 241, 242, 243, 244, 246, 257, 262, 263, 264, 265, 267, 278, 283, 284, 285, 286, 287, 299, 300, 301, 302, 304, 311, 312, 318, 323, 324, 325, 326, 328, 335, 336, 342, 345, 347, 366, 368, 382, 384, 402, 404, 405, 419, 422, 430, 431, 432, 438, 440, 449, 450, 451, 452, 453, 460, 461, 462, 463, 479, 484, 501, 502, 505, 507, 518, 519, 527, 529, 535, 536, 537, 538, 540, 547, 550, 552, 558, 564, 565, 566, 567, 569, 574, 576, 577, 581, 582, 583, 584, 586, 593, 598, 599, 600, 601, 603, 610, 615, 616, 617, 618, 619, 627, 628, 629, 630, 632, 639, 640, 642, 647, 648, 649, 650, 652, 659, 660, 662, 665, 667, 682, 684, 694, 696, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "instead": [0, 718, 746], "its": [0, 158, 159, 211, 212, 510, 511, 555, 556, 718, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "own": [0, 718], "without": [0, 718], "gener": [0, 191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 716, 717, 718, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 746], "easier": [0, 718], "understand": [0, 718], "debug": [0, 718], "while": [0, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 45, 46, 47, 48, 50, 52, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 153, 154, 155, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 179, 181, 199, 200, 201, 202, 206, 208, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 345, 347, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 377, 378, 379, 380, 382, 384, 393, 394, 395, 396, 398, 399, 400, 401, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 438, 440, 505, 506, 507, 516, 517, 518, 519, 520, 521, 527, 529, 550, 552, 665, 667, 676, 677, 678, 679, 680, 682, 684, 694, 696, 705, 716, 717, 718, 740, 741, 742, 744, 748], "scalabl": [0, 718], "greater": [0, 718], "concurr": [0, 718], "sure": [0, 191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 718], "latest": [0, 718], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "firmwar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 703, 704, 711, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "up": [0, 164, 165, 166, 167, 168, 169, 516, 517, 518, 519, 520, 521, 718], "date": [0, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pip": [0, 718], "wpcsy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718], "fast": [0, 718, 733, 734, 735, 736, 738, 739, 747], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718], "pywpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pkg_name": [0, 718], "handle_list": [0, 718], "devicefind": [0, 1, 397, 710, 718, 719, 720], "wifidaqe3a": [0, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 705, 711, 718, 719, 740, 743], "wifidaqe3ah": [0, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 718, 719, 741, 743], "wifidaqf4a": [0, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 719, 742, 743], "stem": [0, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 485, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 559, 705, 718, 719, 723, 733, 734, 740, 741, 742, 743, 744, 746, 748], "emot": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 718, 719, 743, 748], "edrivest": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 718, 719, 721], "ethana": [0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 705, 711, 718, 719, 723, 743], "ethand": [0, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 707, 711, 718, 719, 724, 743], "ethanexd": [0, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 718, 719, 725], "ethani": [0, 92, 93, 94, 95, 96, 97, 98, 99, 100, 468, 469, 470, 471, 472, 718, 719, 726, 727, 743], "ethania": [0, 101, 102, 103, 104, 105, 106, 107, 108, 109, 473, 474, 475, 476, 477, 718, 719, 726, 727, 743], "ethanl": [0, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 478, 479, 480, 481, 482, 483, 718, 719, 728, 743], "ethano": [0, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 484, 485, 486, 487, 488, 489, 490, 718, 719, 729, 743], "ethanp": [0, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 491, 492, 493, 494, 495, 496, 718, 719, 730, 743], "ethant": [0, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 497, 498, 499, 500, 501, 502, 503, 718, 719, 731, 743], "usbdaqf1d": [0, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 707, 708, 709, 714, 718, 719, 736, 743], "usbdaqf1dsnk": [0, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 707, 718, 719, 737, 743], "usbdaqf1ad": [0, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 705, 707, 708, 709, 714, 718, 719, 723, 732, 733, 734, 740, 741, 742, 743], "usbdaqf1aod": [0, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 705, 706, 707, 708, 709, 714, 718, 719, 723, 732, 733, 734, 740, 741, 742, 743], "usbdaqf1td": [0, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 707, 708, 709, 713, 714, 718, 719, 739, 743], "usbdaqf1rd": [0, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 707, 708, 709, 712, 714, 718, 719, 738, 743], "usbdaqf1cd": [0, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 707, 708, 709, 714, 718, 719, 735, 743], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718], "conda": [0, 718], "command": [0, 718, 740, 741, 742], "consol": [0, 718], "how": [0, 1, 10, 11, 13, 14, 15, 16, 17, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 69, 70, 71, 73, 74, 75, 76, 77, 84, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 217, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 289, 291, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 406, 407, 409, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 453, 454, 455, 457, 464, 465, 467, 469, 470, 472, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 514, 515, 522, 523, 525, 526, 527, 529, 530, 531, 532, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 558, 559, 560, 561, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 619, 620, 621, 623, 624, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 703, 704, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "build": [0, 718], "ex": [0, 718, 719, 748], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 716, 717, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "miniconda": [0, 718], "virtual": [0, 718], "environ": [0, 718], "labview": [0, 718, 743], "time": [0, 14, 15, 16, 17, 27, 30, 45, 46, 47, 48, 53, 59, 60, 61, 62, 65, 66, 74, 75, 76, 77, 80, 81, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 111, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 156, 167, 174, 175, 176, 177, 182, 187, 188, 199, 200, 201, 202, 209, 220, 221, 230, 231, 232, 233, 236, 241, 242, 253, 254, 255, 256, 262, 263, 274, 275, 276, 277, 283, 284, 292, 293, 294, 295, 299, 300, 314, 315, 316, 317, 323, 324, 338, 339, 340, 341, 348, 356, 357, 358, 359, 369, 377, 378, 379, 380, 385, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 711, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746], "engin": [0, 718], "under": [0, 718, 744], "mit": [0, 718], "style": [0, 364, 680, 718], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "incorpor": [0, 718], "project": [0, 14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 174, 175, 176, 177, 199, 200, 201, 202, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 356, 357, 358, 359, 364, 377, 378, 379, 380, 393, 394, 395, 396, 680, 718], "mai": [0, 718], "differ": [0, 65, 66, 80, 81, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 720, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "non": [0, 718], "commerci": [0, 718], "find_devic": [1, 397], "find_all_devic": [1, 397], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "demonstr": [1, 10, 11, 13, 14, 15, 16, 17, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 406, 407, 409, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 703, 704], "avail": [1, 397, 710, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 748], "usb": [1, 397, 718, 743, 744, 745, 746, 748], "ethernet": [1, 397, 710, 718, 722, 743], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 711, 733, 735, 736, 738, 739, 746], "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714], "correct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 746], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 702, 703, 704, 711, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 702, 703, 704, 705, 711, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746], "ip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742, 746], "port": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 453, 454, 455, 456, 457, 458, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 518, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 619, 620, 621, 622, 623, 624, 625, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "For": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 723, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744], "check": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 711, 722, 732, 733, 735, 736, 738, 739, 746], "http": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "com": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "system": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 488, 490, 491, 492, 494, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 689, 691, 692, 693, 694, 696, 697, 698, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717], "ltd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "wpc_python_driver_releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "tree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "readm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "md": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "detail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "2022": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705], "2024": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 733, 734, 735, 736, 738, 739], "asyncio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "def": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pkg_full_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "creat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710], "handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "dev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "perform": [1, 15, 16, 17, 46, 47, 48, 60, 61, 62, 63, 64, 75, 76, 77, 78, 79, 89, 90, 91, 98, 99, 100, 107, 108, 109, 117, 118, 119, 128, 129, 130, 138, 139, 140, 149, 150, 151, 164, 165, 175, 176, 177, 185, 186, 200, 201, 202, 218, 219, 231, 232, 233, 239, 240, 254, 255, 256, 260, 261, 275, 276, 277, 281, 282, 293, 294, 295, 297, 298, 315, 316, 317, 321, 322, 339, 340, 341, 357, 358, 359, 378, 379, 380, 394, 395, 396, 397, 447, 448, 458, 459, 516, 517, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 710, 721, 722, 732], "inform": [1, 10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 164, 165, 166, 167, 168, 169, 170, 350, 351, 371, 372, 387, 388, 397, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 516, 517, 518, 519, 520, 521, 522, 670, 671, 687, 688, 699, 700, 705, 707, 710, 711, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "try": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714], "dev_list": [1, 397], "bcst_enumerateusbdevic": [1, 397, 719, 720], "except": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714], "err": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714], "printgenericerror": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "network": [1, 11, 12, 13, 42, 43, 44, 56, 57, 58, 71, 72, 73, 85, 86, 87, 94, 95, 96, 103, 104, 105, 113, 114, 115, 124, 125, 126, 134, 135, 136, 142, 143, 144, 171, 172, 173, 196, 197, 198, 227, 228, 229, 250, 251, 252, 271, 272, 273, 289, 290, 291, 308, 309, 310, 332, 333, 334, 350, 352, 353, 354, 355, 371, 373, 374, 375, 376, 387, 389, 390, 391, 392, 397, 407, 408, 409, 434, 435, 436, 444, 445, 446, 455, 456, 457, 465, 466, 467, 470, 471, 472, 475, 476, 477, 481, 482, 483, 488, 489, 490, 494, 495, 496, 498, 499, 500, 523, 524, 525, 544, 545, 546, 571, 572, 573, 590, 591, 592, 607, 608, 609, 621, 622, 623, 636, 637, 638, 656, 657, 658, 670, 672, 673, 674, 675, 687, 689, 690, 691, 692, 699, 701, 702, 703, 704, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742, 746], "await": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "bcst_enumeratenetworkdevices_async": [1, 719, 720], "disconnect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 743], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "main_for_spyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "arg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 419, 422, 705], "get_event_loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "is_run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "create_task": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 449, 450, 460, 461, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 733, 734, 735, 736, 737, 738, 739], "els": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417, 418, 421, 437, 479, 504, 526, 549, 576, 664, 681, 693, 705, 707, 711], "__name__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "__main__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "termin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "ipython": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "7": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 409, 436, 446, 449, 457, 460, 467, 472, 477, 483, 490, 492, 496, 500, 501, 502, 516, 517, 518, 519, 520, 521, 525, 535, 546, 564, 573, 581, 592, 598, 609, 615, 623, 627, 638, 647, 658, 659, 660, 675, 680, 692, 704, 707, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 747, 748], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748], "spyder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "drive_find_hom": [2, 398], "devic": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715], "192": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "168": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748], "110": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "depend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 726, 727, 735, 744], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 92, 101, 110, 111, 120, 121, 122, 131, 132, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 336, 337, 342, 343, 344, 345, 347, 348, 349, 354, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 375, 381, 382, 384, 385, 386, 391, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "set": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 92, 101, 110, 120, 121, 122, 131, 132, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 342, 343, 344, 345, 347, 348, 349, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 693, 694, 696, 697, 698, 699, 700, 701, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745], "searching_spe": [2, 3, 398, 399, 721], "50000": [2, 3, 4, 5, 8, 9, 398, 399, 400, 401, 404, 405], "approaching_spe": [2, 3, 398, 399, 721], "10000": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 37, 120, 214, 398, 399, 400, 401, 402, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 428, 429, 484, 558, 706, 722, 732], "acceler": [2, 3, 4, 5, 6, 9, 360, 362, 364, 398, 399, 400, 401, 402, 405, 676, 678, 680, 716, 717, 721, 722, 732, 741, 743, 746], "search_direct": [2, 398, 721], "point": [2, 49, 152, 178, 205, 344, 365, 381, 398, 437, 504, 526, 549, 664, 681, 693, 721, 722, 732, 743], "forward": [2, 3, 31, 33, 364, 398, 399, 423, 425, 680, 707, 721, 722, 732, 747], "revers": [2, 3, 31, 33, 398, 399, 423, 425, 721, 722, 732, 747], "approach_direct": [2, 398, 721], "offset": [2, 3, 120, 214, 398, 399, 484, 558, 721, 722, 729, 732, 734], "reset_posit": [2, 3, 398, 399, 721], "fals": [2, 3, 28, 49, 152, 178, 205, 237, 344, 364, 365, 381, 398, 399, 420, 437, 504, 526, 549, 577, 664, 680, 681, 693, 705, 707, 711, 721, 722, 732, 735, 747], "en_forward": [2, 3, 4, 5, 6, 8, 9, 398, 399, 400, 401, 402, 404, 405, 721, 722, 732], "en_revers": [2, 3, 4, 5, 6, 8, 9, 398, 399, 400, 401, 402, 404, 405, 721, 722, 732], "active_high": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 398, 399, 400, 401, 402, 404, 405, 410, 411, 412, 413, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432], "model": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 703, 704, 710, 711, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "driver_info": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 703, 704, 711, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_getdriverinfo_async": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "name": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 688, 689, 691, 692, 693, 694, 696, 697, 698, 700, 701, 703, 704, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "motion": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "motion_open_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 719, 721, 722, 732], "motion_open": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 719, 721, 722, 732], "config": [2, 3, 399, 716, 717], "motion_cfglimit_async": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 24, 27, 30, 31, 32, 33, 36, 39, 40, 719, 721, 722, 732], "motion_cfglimit": [2, 3, 4, 5, 6, 8, 9, 398, 399, 400, 401, 402, 404, 405, 410, 411, 412, 416, 419, 422, 423, 424, 425, 428, 431, 432, 719, 721, 722, 732], "reset": [2, 3, 4, 5, 8, 9, 354, 375, 391, 398, 399, 400, 401, 404, 405, 674, 691, 703, 721, 722, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742], "motion_rstencoderposi_async": [2, 3, 4, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40, 719, 721, 722, 732], "motion_resetencod": [2, 3, 4, 5], "servo": [2, 3, 4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 36, 39, 40, 398, 399, 400, 401, 402, 404, 405, 410, 411, 412, 413, 414, 415, 416, 423, 424, 425, 428, 431, 432, 716, 717, 721, 722, 732, 743], "motion_enableservoon_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39, 40, 719, 721, 722, 732], "motion_enableservoon": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 428, 430, 431, 432, 719, 721, 722, 732], "refer": [2, 3, 31, 32, 33, 158, 159, 211, 212, 423, 424, 425, 510, 511, 555, 556, 721, 722, 732], "motion_startfindhome_async": [2, 719, 721], "motion_startfindhom": [2, 398, 719, 721], "statu": [2, 3, 4, 5, 31, 33, 65, 66, 67, 68, 80, 81, 82, 83, 166, 167, 187, 188, 189, 190, 220, 221, 222, 223, 241, 242, 243, 244, 262, 263, 264, 265, 283, 284, 285, 286, 299, 300, 301, 302, 323, 324, 325, 326, 398, 399, 400, 401, 423, 425, 449, 450, 451, 452, 460, 461, 462, 463, 518, 519, 535, 536, 537, 538, 564, 565, 566, 567, 581, 582, 583, 584, 598, 599, 600, 601, 615, 616, 617, 618, 627, 628, 629, 630, 647, 648, 649, 650, 705, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "motion_getprocessstate_async": [2, 3, 4, 5, 719, 721], "motion_getprocessst": [2, 3, 4, 5, 398, 399, 400, 401, 719, 721], "limit": [2, 31, 160, 398, 423, 512, 705, 716, 717, 721, 722, 732, 743, 747], "state_list": [2, 3, 63, 64, 78, 79, 164, 165, 185, 186, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 398, 399, 447, 448, 458, 459, 516, 517, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "motion_getlimitstatus_async": [2, 3, 31, 33, 719, 721, 722, 732], "2": [2, 3, 14, 27, 29, 30, 33, 39, 40, 45, 49, 50, 52, 59, 63, 67, 74, 78, 79, 82, 88, 97, 106, 111, 116, 120, 121, 122, 127, 132, 137, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 174, 178, 179, 181, 185, 189, 193, 194, 199, 203, 204, 205, 206, 208, 211, 212, 214, 215, 216, 218, 222, 230, 234, 235, 236, 237, 239, 243, 247, 248, 253, 257, 258, 260, 264, 268, 269, 274, 278, 279, 281, 282, 283, 284, 285, 286, 292, 297, 301, 305, 306, 314, 318, 319, 321, 325, 329, 330, 335, 336, 338, 342, 343, 344, 345, 347, 356, 364, 365, 366, 368, 377, 381, 382, 384, 393, 398, 399, 419, 421, 422, 425, 431, 432, 437, 438, 440, 447, 451, 458, 459, 462, 479, 484, 485, 486, 492, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 533, 537, 541, 542, 547, 548, 549, 550, 552, 555, 556, 558, 559, 560, 562, 566, 574, 575, 576, 577, 579, 583, 587, 588, 593, 594, 596, 600, 604, 605, 610, 611, 613, 614, 615, 616, 617, 618, 625, 629, 633, 634, 642, 643, 645, 649, 653, 654, 659, 660, 662, 663, 664, 665, 667, 680, 681, 682, 684, 693, 694, 696, 705, 707, 708, 709, 710, 711, 712, 713, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748], "keyboardinterrupt": [2, 3, 4, 5, 6, 7, 8, 9, 154, 160, 360, 361, 362, 363, 364, 398, 399, 400, 401, 402, 403, 404, 405, 506, 512, 676, 677, 678, 679, 680], "press": [2, 3, 4, 5, 6, 7, 8, 9, 154, 160, 360, 361, 362, 363, 364, 398, 399, 400, 401, 402, 403, 404, 405, 506, 512, 676, 677, 678, 679, 680], "keyboard": [2, 3, 4, 5, 6, 7, 8, 9, 154, 160, 360, 361, 362, 363, 364, 398, 399, 400, 401, 402, 403, 404, 405, 506, 512, 676, 677, 678, 679, 680], "final": [2, 3, 4, 5, 6, 7, 8, 9, 49, 50, 52, 53, 54, 120, 121, 122, 152, 153, 154, 155, 156, 157, 160, 162, 163, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 214, 215, 216, 344, 345, 347, 348, 349, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 398, 399, 400, 401, 402, 403, 404, 405, 437, 438, 440, 441, 442, 484, 485, 486, 504, 505, 506, 507, 508, 509, 512, 514, 515, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 558, 559, 560, 664, 665, 667, 668, 669, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 722, 732], "stop": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 49, 50, 52, 69, 152, 153, 154, 155, 160, 178, 179, 181, 184, 192, 203, 204, 205, 206, 208, 217, 225, 234, 235, 236, 237, 238, 246, 257, 258, 259, 267, 278, 279, 280, 287, 296, 304, 318, 319, 320, 328, 342, 343, 344, 345, 347, 360, 361, 362, 363, 364, 365, 366, 368, 381, 382, 384, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 431, 432, 437, 438, 440, 453, 504, 505, 506, 507, 512, 526, 527, 529, 532, 540, 547, 548, 549, 550, 552, 561, 569, 574, 575, 576, 577, 578, 586, 593, 594, 595, 603, 610, 611, 612, 619, 624, 632, 642, 643, 644, 652, 662, 663, 664, 665, 667, 676, 677, 678, 679, 680, 681, 682, 684, 693, 694, 696, 705, 714, 721, 722, 723, 724, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "motion_stopprocess_async": [2, 3, 4, 5, 6, 7, 8, 9, 719, 721], "motion_stopprocess": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405, 719, 721], "off": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 36, 38, 39, 40, 364, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 423, 424, 425, 428, 430, 431, 432, 680, 721, 722, 732, 735, 740, 741, 742], "motion_enableservooff_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39, 40, 719, 721, 722, 732], "motion_enableservooff": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 428, 430, 431, 432, 719, 721, 722, 732], "motion_close_async": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 719, 721, 722, 732], "motion_clos": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 719, 721, 722, 732], "drive_find_limit": [3, 399], "motion_startfindlimit_async": [3, 719, 721], "motion_startfindlimit": [3, 399, 719, 721], "home": [3, 33, 399, 425, 716, 717, 721, 722, 732, 747], "drive_position_blend": [4, 400], "80000": [4, 400], "position1": [4, 400], "position2": [4, 400], "speed": [4, 5, 6, 8, 9, 25, 26, 28, 29, 236, 237, 400, 401, 402, 404, 405, 417, 418, 420, 421, 576, 577, 721, 722, 732, 733, 734, 735, 736, 738, 739, 743, 744, 746], "deceler": [4, 5, 8, 9, 400, 401, 404, 405, 721, 722, 732, 747], "absolut": [4, 5, 400, 401, 721, 722, 732, 747], "rel": [4, 5, 400, 401, 721, 722, 724, 732, 733, 734, 735, 736, 737, 738, 739, 747], "configur": [4, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 49, 50, 52, 53, 54, 120, 145, 146, 152, 153, 154, 155, 156, 157, 178, 179, 181, 182, 183, 191, 193, 194, 203, 204, 205, 206, 208, 209, 210, 214, 224, 234, 235, 236, 237, 245, 247, 248, 257, 258, 266, 268, 269, 278, 279, 303, 305, 306, 318, 319, 327, 329, 330, 335, 336, 342, 343, 344, 345, 347, 348, 349, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 398, 400, 401, 402, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 437, 438, 440, 441, 442, 484, 501, 502, 504, 505, 506, 507, 508, 509, 526, 527, 529, 530, 531, 539, 541, 542, 547, 548, 549, 550, 552, 553, 554, 558, 568, 574, 575, 576, 577, 585, 587, 588, 593, 594, 602, 604, 605, 610, 611, 631, 633, 634, 642, 643, 651, 653, 654, 659, 660, 662, 663, 664, 665, 667, 668, 669, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 721, 722, 723, 729, 732, 733, 734, 740, 741, 742, 743], "start": [4, 5, 6, 8, 9, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 46, 48, 49, 50, 52, 60, 62, 69, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 120, 128, 130, 138, 140, 149, 151, 152, 153, 154, 155, 160, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 181, 184, 192, 200, 202, 205, 206, 208, 214, 217, 225, 231, 233, 236, 237, 238, 246, 254, 256, 259, 267, 275, 277, 280, 287, 293, 295, 296, 304, 315, 317, 320, 328, 339, 341, 344, 345, 347, 357, 359, 360, 361, 362, 363, 364, 365, 366, 368, 378, 380, 381, 382, 384, 394, 396, 400, 401, 402, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 431, 432, 437, 438, 440, 453, 484, 504, 505, 506, 507, 512, 516, 517, 518, 519, 520, 521, 526, 527, 529, 532, 540, 549, 550, 552, 558, 561, 569, 576, 577, 578, 586, 595, 603, 612, 619, 624, 632, 644, 652, 664, 665, 667, 676, 677, 678, 679, 680, 681, 682, 684, 693, 694, 696, 705, 721, 722, 723, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "motion_startpositionmove_async": [4, 5, 719, 721], "motion_startpositionmov": [4, 5, 400, 401, 719, 721], "drive_position_mov": [5, 401], "drive_scan_mov": [6, 402], "position_0": [6, 402, 721], "30000": [6, 402], "position_1": [6, 402, 721], "motion_startscanmove_async": [6, 719, 721], "motion_startscanmov": [6, 402, 719, 721], "second": [6, 8, 9, 12, 14, 27, 30, 43, 45, 49, 50, 52, 57, 59, 65, 66, 67, 68, 69, 72, 74, 80, 81, 82, 83, 86, 88, 95, 97, 104, 106, 111, 114, 116, 125, 127, 135, 137, 143, 145, 146, 147, 148, 152, 153, 154, 155, 160, 166, 167, 172, 174, 178, 179, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 203, 204, 205, 206, 208, 220, 221, 222, 223, 224, 225, 226, 228, 230, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 278, 279, 283, 284, 285, 286, 287, 288, 290, 292, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 342, 343, 344, 345, 347, 353, 356, 365, 366, 368, 374, 377, 381, 382, 384, 390, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sleep": [6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 166, 167, 172, 173, 174, 175, 176, 177, 179, 181, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 206, 208, 214, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 246, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 267, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 304, 309, 310, 311, 312, 314, 315, 316, 317, 318, 323, 324, 325, 326, 328, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 347, 353, 354, 355, 356, 357, 358, 359, 366, 368, 374, 375, 376, 377, 378, 379, 380, 382, 384, 390, 391, 392, 393, 394, 395, 396, 402, 404, 405, 408, 409, 419, 422, 430, 431, 432, 435, 436, 438, 440, 445, 446, 449, 450, 451, 452, 453, 456, 457, 460, 461, 462, 463, 466, 467, 471, 472, 476, 477, 479, 482, 483, 484, 489, 490, 495, 496, 499, 500, 501, 502, 505, 507, 518, 519, 524, 525, 527, 529, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 550, 552, 558, 564, 565, 566, 567, 568, 569, 572, 573, 574, 576, 577, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 615, 616, 617, 618, 619, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 642, 647, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 662, 665, 667, 673, 674, 675, 682, 684, 690, 691, 692, 694, 696, 702, 703, 704, 705], "10": [6, 12, 13, 43, 44, 57, 58, 65, 66, 72, 73, 80, 81, 86, 87, 95, 96, 104, 105, 111, 114, 115, 120, 125, 126, 135, 136, 143, 144, 160, 166, 167, 172, 173, 184, 187, 188, 197, 198, 203, 214, 217, 220, 221, 228, 229, 234, 237, 238, 241, 242, 251, 252, 257, 259, 262, 263, 272, 273, 278, 280, 283, 284, 290, 291, 296, 299, 300, 309, 310, 318, 320, 323, 324, 333, 334, 342, 353, 355, 364, 374, 376, 390, 392, 402, 408, 409, 435, 436, 445, 446, 449, 450, 456, 457, 460, 461, 466, 467, 471, 472, 476, 477, 479, 482, 483, 484, 489, 490, 495, 496, 499, 500, 512, 518, 519, 524, 525, 532, 535, 536, 545, 546, 547, 558, 561, 564, 565, 572, 573, 574, 577, 578, 581, 582, 591, 592, 593, 595, 598, 599, 608, 609, 610, 612, 615, 616, 622, 623, 624, 627, 628, 637, 638, 642, 644, 647, 648, 657, 658, 662, 673, 675, 680, 690, 692, 702, 704, 705, 730, 733, 734, 735, 736, 738, 739, 743, 747], "delai": [6, 8, 9, 12, 13, 14, 15, 16, 17, 27, 30, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 166, 167, 172, 173, 174, 175, 176, 177, 179, 181, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 206, 208, 214, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 246, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 267, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 304, 309, 310, 311, 312, 314, 315, 316, 317, 318, 323, 324, 325, 326, 328, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 347, 353, 354, 355, 356, 357, 358, 359, 366, 368, 374, 375, 376, 377, 378, 379, 380, 382, 384, 390, 391, 392, 393, 394, 395, 396, 402, 404, 405, 408, 409, 419, 422, 430, 431, 432, 435, 436, 438, 440, 445, 446, 449, 450, 451, 452, 453, 456, 457, 460, 461, 462, 463, 466, 467, 471, 472, 476, 477, 479, 482, 483, 484, 489, 490, 495, 496, 499, 500, 501, 502, 505, 507, 518, 519, 524, 525, 527, 529, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 550, 552, 558, 564, 565, 566, 567, 568, 569, 572, 573, 574, 576, 577, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 615, 616, 617, 618, 619, 622, 623, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 642, 647, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 662, 665, 667, 673, 674, 675, 682, 684, 690, 691, 692, 694, 696, 702, 703, 704, 723, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742], "drive_servo_on": [7, 403], "drive_velocity_blending_acceler": [8, 404], "dir": [8, 9, 404, 405, 721, 722, 732, 747], "motion_resetencoderposi": [8, 9, 398, 399, 400, 401, 404, 405], "motion_startvelocticymove_async": [8, 9, 719, 721], "motion_startvelocticymov": [8, 9, 404, 405, 719, 721], "move": [8, 25, 26, 29, 404, 417, 418, 420, 421, 431, 432, 716, 717, 721, 722, 732, 743], "3": [8, 9, 16, 39, 47, 61, 63, 65, 67, 68, 76, 78, 80, 82, 83, 90, 99, 108, 118, 120, 121, 122, 129, 139, 145, 146, 150, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 176, 185, 187, 189, 190, 193, 194, 195, 201, 203, 204, 211, 212, 214, 215, 216, 218, 220, 222, 223, 226, 232, 234, 235, 236, 237, 239, 241, 243, 244, 247, 248, 249, 255, 257, 258, 260, 262, 264, 265, 268, 269, 270, 276, 278, 279, 281, 283, 285, 286, 288, 294, 297, 299, 301, 302, 305, 306, 307, 316, 318, 319, 321, 323, 325, 326, 329, 330, 331, 335, 336, 340, 342, 343, 354, 358, 360, 362, 364, 375, 379, 391, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748], "new_spe": [8, 404], "new_dir": [8, 404], "new_acceler": [8, 404], "20000": [8, 404], "new_deceler": [8, 404], "drive_velocity_mov": [9, 405], "system_eth": [10, 11, 12, 13, 41, 42, 43, 44, 55, 56, 57, 58, 70, 71, 72, 73, 84, 85, 86, 87, 93, 94, 95, 96, 102, 103, 104, 105, 112, 113, 114, 115, 123, 124, 125, 126, 133, 134, 135, 136, 141, 142, 143, 144, 170, 171, 172, 173, 406, 407, 408, 409, 433, 434, 435, 436, 443, 444, 445, 446, 454, 455, 456, 457, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 480, 481, 482, 483, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 522, 523, 524, 525], "get_network_info": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700], "hardwar": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 721, 722, 732], "first": [10, 41, 55, 69, 70, 84, 93, 102, 112, 123, 133, 141, 145, 146, 147, 170, 191, 192, 193, 194, 195, 203, 204, 224, 225, 226, 234, 235, 236, 237, 245, 246, 247, 248, 249, 257, 258, 266, 267, 268, 269, 270, 278, 279, 287, 288, 303, 304, 305, 306, 307, 311, 312, 313, 318, 319, 327, 328, 329, 330, 331, 335, 336, 337, 342, 343, 351, 372, 388, 406, 433, 443, 453, 454, 464, 469, 474, 480, 487, 493, 497, 501, 502, 503, 522, 539, 540, 541, 542, 543, 547, 548, 568, 569, 570, 574, 575, 576, 577, 585, 586, 587, 588, 589, 593, 594, 602, 603, 604, 605, 606, 610, 611, 619, 620, 631, 632, 633, 634, 635, 639, 640, 641, 642, 643, 651, 652, 653, 654, 655, 659, 660, 661, 662, 663, 671, 688, 700, 705, 707, 711, 733, 735, 736, 738, 739, 746, 747], "submask": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 710, 711], "mac": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 710, 711, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "ip_addr": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "net_getipaddrandsubmask_async": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "net_getmacaddr_async": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "get_serial_numb": [11, 42, 56, 71, 85, 94, 103, 113, 124, 134, 142, 171, 196, 227, 250, 271, 289, 308, 332, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 494, 498, 523, 544, 571, 590, 607, 621, 636, 656, 672, 689, 701], "serial_numb": [11, 42, 56, 71, 85, 94, 103, 113, 124, 134, 142, 171, 196, 227, 250, 271, 289, 308, 332, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 494, 498, 523, 544, 571, 590, 607, 621, 636, 656, 672, 689, 701, 705, 706, 707, 708, 709, 711, 712, 713, 714], "sys_getserialnumber_async": [11, 42, 56, 71, 85, 94, 103, 113, 124, 134, 142, 171, 196, 227, 250, 271, 289, 308, 332, 352, 373, 389, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "hello_world": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "public": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "domain": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "rang": [12, 13, 25, 34, 43, 44, 53, 57, 58, 65, 66, 72, 73, 80, 81, 86, 87, 95, 96, 104, 105, 111, 114, 115, 125, 126, 131, 135, 136, 143, 144, 156, 166, 167, 172, 173, 182, 184, 187, 188, 195, 197, 198, 209, 217, 220, 221, 226, 228, 229, 236, 238, 241, 242, 249, 251, 252, 259, 262, 263, 270, 272, 273, 280, 283, 284, 288, 290, 291, 296, 299, 300, 307, 309, 310, 320, 323, 324, 331, 333, 334, 348, 353, 354, 355, 369, 374, 375, 376, 385, 390, 391, 392, 408, 409, 417, 426, 435, 436, 441, 445, 446, 449, 450, 456, 457, 460, 461, 466, 467, 471, 472, 476, 477, 479, 482, 483, 489, 490, 491, 495, 496, 499, 500, 508, 518, 519, 524, 525, 530, 532, 535, 536, 543, 545, 546, 553, 561, 564, 565, 570, 572, 573, 576, 578, 581, 582, 589, 591, 592, 595, 598, 599, 606, 608, 609, 612, 615, 616, 620, 622, 623, 624, 627, 628, 635, 637, 638, 644, 647, 648, 655, 657, 658, 668, 673, 674, 675, 685, 690, 691, 692, 697, 702, 703, 704, 705, 706, 707, 710, 712, 713, 743, 746], "restart": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "now": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "sys_reboot_async": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "set_and_get_rtc": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704], "sys_setrtc_async": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 376, 392, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "2023": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714], "5": [13, 38, 40, 44, 49, 53, 58, 65, 66, 69, 73, 80, 81, 87, 96, 105, 111, 115, 121, 122, 126, 132, 136, 144, 145, 146, 152, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 173, 178, 182, 187, 188, 192, 198, 203, 204, 205, 209, 211, 212, 215, 216, 220, 221, 225, 229, 234, 235, 236, 241, 242, 246, 252, 257, 258, 262, 263, 267, 273, 278, 279, 283, 284, 287, 291, 299, 300, 304, 310, 318, 319, 323, 324, 328, 334, 335, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 409, 430, 432, 436, 437, 441, 446, 449, 450, 453, 457, 460, 461, 467, 472, 477, 479, 483, 485, 486, 490, 492, 496, 500, 501, 502, 504, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 530, 535, 536, 540, 546, 547, 548, 549, 553, 555, 556, 559, 560, 564, 565, 569, 573, 574, 575, 576, 581, 582, 586, 592, 593, 594, 598, 599, 603, 609, 610, 611, 615, 616, 619, 623, 627, 628, 632, 638, 642, 643, 647, 648, 652, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747], "8": [13, 44, 49, 50, 52, 53, 54, 58, 73, 87, 96, 105, 115, 126, 132, 136, 144, 145, 146, 152, 153, 155, 160, 173, 178, 179, 181, 182, 183, 191, 193, 194, 198, 203, 204, 205, 206, 208, 209, 210, 211, 212, 224, 229, 234, 235, 237, 245, 247, 248, 252, 257, 258, 266, 268, 269, 273, 278, 279, 291, 303, 305, 306, 310, 318, 319, 327, 329, 330, 334, 335, 336, 342, 343, 344, 345, 347, 348, 349, 355, 364, 365, 366, 368, 369, 370, 376, 381, 382, 384, 385, 386, 392, 409, 436, 437, 438, 440, 441, 442, 446, 457, 467, 472, 477, 483, 490, 492, 496, 500, 501, 502, 504, 505, 507, 512, 525, 526, 527, 529, 530, 531, 539, 541, 542, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 568, 573, 574, 575, 577, 585, 587, 588, 592, 593, 594, 602, 604, 605, 609, 610, 611, 623, 631, 633, 634, 638, 642, 643, 651, 653, 654, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 675, 680, 681, 682, 684, 685, 686, 692, 693, 694, 696, 697, 698, 704, 705, 706, 707, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747], "15": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 364, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 680, 692, 704], "05": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 364, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 539, 541, 542, 546, 568, 573, 585, 587, 588, 592, 602, 604, 605, 609, 623, 631, 633, 634, 638, 651, 653, 654, 658, 675, 680, 692, 704, 705], "08": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704], "07": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704], "sys_getrtc_async": [13, 14, 15, 16, 17, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 73, 74, 75, 76, 77, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 148, 149, 150, 151, 173, 174, 175, 176, 177, 198, 199, 200, 201, 202, 229, 230, 231, 232, 233, 252, 253, 254, 255, 256, 273, 274, 275, 276, 277, 291, 292, 293, 294, 295, 310, 314, 315, 316, 317, 334, 338, 339, 340, 341, 355, 356, 357, 358, 359, 376, 377, 378, 379, 380, 392, 393, 394, 395, 396, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "multiple_loops_async": [14, 45, 59, 74, 88, 97, 106, 116, 127, 137, 148, 174, 199, 230, 253, 274, 292, 314, 338, 356, 377, 393], "rtc": [14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 174, 175, 176, 177, 199, 200, 201, 202, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 356, 357, 358, 359, 377, 378, 379, 380, 393, 394, 395, 396, 711, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "string": [14, 15, 45, 46, 59, 60, 74, 75, 88, 89, 97, 98, 106, 107, 116, 117, 127, 128, 137, 138, 148, 149, 174, 175, 199, 200, 204, 230, 231, 235, 253, 254, 258, 274, 275, 279, 292, 293, 314, 315, 319, 338, 339, 343, 356, 357, 377, 378, 393, 394, 548, 575, 594, 611, 643, 663, 708, 709, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "readrtc_loop": [14, 45, 59, 74, 88, 97, 106, 116, 127, 137, 148, 174, 199, 230, 253, 274, 292, 314, 338, 356, 377, 393], "true": [14, 15, 17, 21, 22, 45, 46, 48, 49, 59, 60, 62, 74, 75, 77, 88, 89, 91, 97, 98, 100, 106, 107, 109, 116, 117, 119, 127, 128, 130, 137, 138, 140, 148, 149, 151, 152, 174, 175, 177, 178, 199, 200, 202, 205, 230, 231, 233, 237, 253, 254, 256, 274, 275, 277, 292, 293, 295, 314, 315, 317, 338, 339, 341, 344, 356, 357, 359, 360, 361, 362, 363, 364, 365, 377, 378, 380, 381, 393, 394, 396, 413, 414, 437, 504, 526, 549, 577, 664, 676, 677, 678, 679, 680, 681, 693, 705, 707, 711, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 747], "printstring_loop": [14, 45, 59, 74, 88, 97, 106, 116, 127, 137, 148, 174, 199, 230, 253, 274, 292, 314, 338, 356, 377, 393], "gather": [14, 45, 59, 74, 88, 97, 106, 116, 127, 137, 148, 174, 199, 230, 253, 274, 292, 314, 338, 356, 377, 393], "part": [14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 174, 175, 176, 177, 199, 200, 201, 202, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 356, 357, 358, 359, 377, 378, 379, 380, 393, 394, 395, 396], "never": [14, 16, 45, 47, 59, 61, 74, 76, 88, 90, 97, 99, 106, 108, 116, 118, 127, 129, 137, 139, 148, 150, 174, 176, 199, 201, 230, 232, 253, 255, 274, 276, 292, 294, 314, 316, 338, 340, 356, 358, 377, 379, 393, 395], "multiple_loops_thread": [15, 46, 60, 75, 89, 98, 107, 117, 128, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "getrtc": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "str": [15, 16, 17, 46, 47, 48, 60, 61, 62, 75, 76, 77, 89, 90, 91, 98, 99, 100, 107, 108, 109, 117, 118, 119, 128, 129, 130, 138, 139, 140, 149, 150, 151, 175, 176, 177, 200, 201, 202, 231, 232, 233, 254, 255, 256, 275, 276, 277, 293, 294, 295, 315, 316, 317, 339, 340, 341, 357, 358, 359, 378, 379, 380, 394, 395, 396, 705, 706, 707, 708, 709, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "printstr": [15, 46, 60, 75, 89, 98, 107, 117, 128, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "rtc_thread": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "print_thread": [15, 46, 60, 75, 89, 98, 107, 117, 128, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "sync": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396, 716, 743], "queri": [15, 16, 17, 46, 47, 48, 60, 61, 62, 75, 76, 77, 89, 90, 91, 98, 99, 100, 107, 108, 109, 117, 118, 119, 128, 129, 130, 138, 139, 140, 149, 150, 151, 175, 176, 177, 200, 201, 202, 231, 232, 233, 254, 255, 256, 275, 276, 277, 293, 294, 295, 315, 316, 317, 339, 340, 341, 357, 358, 359, 378, 379, 380, 394, 395, 396], "_threadprint": [15, 46, 60, 75, 89, 98, 107, 117, 128, 138, 149, 175, 200, 231, 254, 275, 293, 315, 339, 357, 378, 394], "target": [15, 17, 27, 30, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396, 419, 422, 705, 721, 722, 732], "_threadrtc": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "immedi": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "parallel": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "single_loop_async": [16, 47, 61, 76, 90, 99, 108, 118, 129, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395], "loop_func": [16, 47, 61, 76, 90, 99, 108, 118, 129, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395], "timeout": [16, 47, 61, 76, 90, 99, 108, 118, 129, 139, 150, 176, 201, 232, 255, 276, 294, 316, 340, 358, 379, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "single_loop_thread": [17, 48, 62, 77, 91, 100, 109, 119, 130, 140, 151, 177, 202, 233, 256, 277, 295, 317, 341, 359, 380, 396], "motion_1axis_mov": [18, 410], "axi": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 360, 361, 362, 363, 364, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 676, 677, 678, 679, 680, 705, 721, 722, 732, 741, 746], "two_pulse_mod": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 410, 412, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432], "rel_posi_mod": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 36, 37, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 428, 429], "stop_decel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 431, 432], "encod": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 410, 412, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432, 721, 722, 732, 743, 746, 747], "axis_dir_cw": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 410, 412, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432], "encoder_dir_cw": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 410, 412, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432], "polar": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 410, 411, 412, 413, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432, 721, 722, 732, 733, 735, 736, 738, 739, 746], "enabl": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 120, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 214, 410, 411, 412, 413, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432, 484, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 558, 721, 722, 723, 724, 725, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746], "active_low": [18, 19, 20, 21, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 410, 411, 412, 413, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432], "forward_enable_tru": [18, 19, 20, 24, 31, 32, 33, 36, 39, 40, 410, 411, 412, 416, 423, 424, 425, 428, 431, 432], "reverse_enable_tru": [18, 19, 20, 24, 31, 32, 33, 36, 39, 40, 410, 411, 412, 416, 423, 424, 425, 428, 431, 432], "home_enable_fals": [18, 31, 33, 36, 410, 423, 425, 428], "open_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "motion_opencfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 719, 721, 722, 732], "user": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 723, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742], "desktop": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432], "3axisstage_2p": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432], "ini": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 721, 722, 732, 746], "opencfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40], "load": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 364, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 431, 432, 680, 716, 717, 721, 722, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "motion_loadcfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 719, 721, 722, 732], "loadcfgfile_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40], "motion_cfgaxis_async": [18, 20, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40, 719, 722, 732], "cfgaxis_async": [18, 24, 27, 30, 31, 32, 33, 36, 37, 39, 40], "cfglimit_async": [18, 19, 20, 24, 27, 30, 31, 32, 33, 36, 39, 40], "motion_cfghome_async": [18, 31, 33, 36, 719, 722, 732], "cfghome_async": [18, 31, 33, 36], "motion_cfgaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 719, 722, 732], "target_posi": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 428, 429, 431, 432, 722, 732], "5000": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 428, 429, 431, 432], "velo": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 428, 429, 431, 432, 722, 732], "accel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 428, 429, 431, 432, 722, 732], "100000": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 428, 429, 431, 432, 722, 732, 733, 734, 735, 736, 738, 739, 747], "decel": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 428, 429, 431, 432, 722, 732], "cfgaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 39, 40], "encoder_posi": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 428, 431, 432, 721, 722, 732], "rstencoderposi_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 39, 40], "enableservoon_async": [18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 38, 39, 40], "motion_startsingleaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 39, 40, 719, 722, 732], "startsingleaxismove_async": [18, 19, 20, 21, 22, 23, 24, 25, 27, 36, 39, 40], "move_statu": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428], "motion_getmovestatus_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 719, 722, 732], "logical_posi": [18, 36, 410, 428], "motion_getlogicalposi_async": [18, 34, 36, 719, 722, 732], "motion_getencoderposi_async": [18, 36, 719, 722, 732], "motion_stop_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 719, 722, 732], "stop_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40], "enableservooff_async": [18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 38, 39, 40], "close_async": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "motion_1axis_move_with_s_curve_acceler": [19, 411], "jerk": [19, 25, 411, 417, 722, 732], "accelet": [19, 25, 411, 417], "motion_cfgjerkandaccelmode_async": [19, 25, 719, 722, 732], "cfgjerkandaccelmode_async": [19, 25], "getmovestatus_async": [19, 22, 23, 24, 28], "motion_1axis_move_with_alarm_in": [20, 412], "alarm_enable_fals": [20, 412], "cfgaxisparam_async": 20, "motion_cfgalarm_async": [20, 719, 722, 732], "cfgalarm_async": 20, "getmovestatu": [20, 21], "motion_1axis_move_with_breakpoint": [21, 413], "start_posit": [21, 413], "100": [21, 28, 34, 40, 69, 192, 225, 246, 267, 287, 304, 311, 312, 328, 413, 420, 426, 432, 453, 540, 569, 586, 603, 619, 632, 639, 640, 652, 705, 738, 743], "pulse_width": [21, 413, 722, 732], "pulse_period": [21, 413, 722, 732], "pulse_numb": [21, 413, 722, 732], "motion_cfgbreakpoint_async": [21, 719, 722, 732], "cfgbreakpoint_async": 21, "motion_enablebreakpoint_async": [21, 719, 722, 732], "int": [21, 22, 28, 364, 413, 414, 420, 680, 705, 706, 707, 708, 709, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "enablebreakpoint_async": 21, "motion_1axis_move_with_captur": [22, 414], "rising_edg": [22, 414], "capture_logical_posit": [22, 414], "motion_cfgcapture_async": [22, 719, 722, 732], "cfgcapture_async": 22, "motion_enablecapture_async": [22, 719, 722, 732], "enablecapture_async": 22, "capture_point": [22, 414], "motion_readcapturepoint_async": [22, 719, 722, 732], "readcapturepoint_async": 22, "motion_1axis_move_with_configuration_fil": [23, 415], "motion_1axis_move_with_inposit": [24, 416], "inposi_enable_fals": [24, 416], "motion_cfginposi_async": [24, 719, 722, 732], "cfginposi_async": 24, "motion_2axis_circular_interpol": [25, 417], "interpol": [25, 26, 29, 417, 418, 421, 722, 732, 743], "x_axi": [25, 417, 722, 732], "y_axi": [25, 417, 722, 732], "center_point_x": [25, 417, 722, 732], "2000": [25, 26, 29, 417, 418, 421, 706, 712, 713, 714], "center_point_i": [25, 417, 722, 732], "finish_point_x": [25, 417, 722, 732], "finish_point_i": [25, 417, 722, 732], "circular_dir_cw": [25, 417], "scurv": [25, 417, 716, 717], "motion_cfgcircularinterpo_async": [25, 719, 722, 732], "1000": [25, 27, 28, 30, 39, 49, 152, 178, 205, 236, 344, 365, 381, 417, 419, 420, 422, 431, 437, 504, 526, 549, 576, 664, 681, 693, 738, 743], "cfgcircularinterpo_async": 25, "motion_startcircularinterpo_async": [25, 719, 722, 732], "startcircularinterpo_async": 25, "4": [25, 131, 145, 146, 160, 164, 165, 166, 167, 168, 169, 195, 204, 226, 235, 249, 258, 270, 279, 288, 307, 319, 331, 335, 336, 343, 417, 491, 501, 502, 512, 516, 517, 518, 519, 520, 521, 543, 548, 570, 575, 589, 594, 606, 611, 620, 635, 643, 655, 659, 660, 663, 705, 707, 708, 709, 710, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748], "x_axis_move_statu": [25, 417], "y_axis_move_statu": [25, 417], "motion_2axis_linear_interpol": [26, 418], "axis1": [26, 27, 29, 30, 418, 419, 421, 422, 722, 732], "dest_posi1": [26, 29, 418, 421, 722, 732], "axis2": [26, 27, 29, 30, 418, 419, 421, 422, 722, 732], "dest_posi2": [26, 29, 418, 421, 722, 732], "motion_cfg2axislinearinterpo_async": [26, 719, 722, 732], "cfg2axislinearinterpo_async": 26, "motion_startlinearinterpo_async": [26, 29, 719, 722, 732], "startlinearinterpo_async": [26, 29], "axis1_move_statu": [26, 29, 418, 421], "axis2_move_statu": [26, 29, 418, 421], "motion_3axis_asynchronous_mov": 27, "getaxisstatu": [27, 30], "005": [27, 30, 203, 234, 236, 257, 278, 318, 342, 419, 422, 547, 574, 576, 593, 610, 642, 662, 723, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742], "axis1_thread": [27, 30, 419, 422], "axis2_thread": [27, 30, 419, 422], "axis3_thread": [27, 30, 419, 422], "axis3": [27, 29, 30, 419, 421, 422, 722, 732], "forward_enable_fals": [27, 30, 419, 422], "reverse_enable_fals": [27, 30, 419, 422], "defin": [27, 30, 419, 422, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "thread_1": [27, 30, 419, 422], "thread_2": [27, 30, 419, 422], "thread_3": [27, 30, 419, 422], "servoon": [27, 30], "join": [27, 30, 419, 422], "servooff_async": 27, "motion_3axis_helical_interpol": [28, 420], "center_x": [28, 420], "center_i": [28, 420], "finish_x": [28, 420], "finish_i": [28, 420], "pitch_axis3": [28, 420, 722, 732], "pitch_axis4": [28, 420, 722, 732], "rotation_num": [28, 420], "cal_timeout": [28, 420], "helical_dir_cw": [28, 420], "motion_cfghelicalinterpo_async": [28, 719, 722, 732], "cfghelicalinterpo_async": 28, "motion_starthelicalinterpo_async": [28, 719, 722, 732], "starthelicalinterpo_async": 28, "motion_3axis_linear_interpol": [29, 421], "dest_posi3": [29, 421, 722, 732], "motion_cfg3axislinearinterpo_async": [29, 719, 722, 732], "cfg3axislinearinterpo_async": 29, "axis3_move_statu": [29, 421], "motion_3axis_synchronous_mov": [30, 422], "motion_startmultiaxismove_async": [30, 719, 722, 732], "startmultiaxismove_async": 30, "servooff": 30, "motion_find_hom": [31, 423], "find_hom": [31, 423], "dir_revers": [31, 32, 33, 423, 424, 425], "motion_cfgfindref_async": [31, 32, 33, 719, 722, 732], "search_velo": [31, 32, 33, 423, 424, 425, 722, 732], "search_accl": [31, 32, 33, 423, 424, 425, 722, 732], "approach_velo_perc": [31, 32, 33, 423, 424, 425, 722, 732], "20": [31, 32, 33, 120, 203, 214, 234, 237, 257, 278, 318, 342, 364, 423, 424, 425, 484, 547, 558, 574, 577, 593, 610, 642, 662, 680, 722, 732], "en_reset_posi": [31, 32, 33, 423, 424, 425, 722, 732], "offset_posi": [31, 32, 33, 423, 424, 425, 722, 732], "1500": [31, 32, 33, 423, 424, 425], "cfgfindref_async": [31, 32, 33], "motion_findref_async": [31, 32, 33, 719, 722, 732], "findref_async": [31, 32, 33], "home_statu": [31, 33, 423, 425], "hit_statu": [31, 33, 423, 425], "forward_hit": [31, 33, 423, 425], "reverse_hit": [31, 33, 423, 425], "hit": [31, 33, 423, 425], "motion_gethomestatus_async": [31, 33, 719, 722, 732], "found": [31, 33, 423, 425, 722, 732, 746], "driving_statu": [31, 32, 33, 423, 424, 425], "motion_checkref_async": [31, 32, 33, 719, 722, 732], "motion_find_index": [32, 424], "one_pulse_mod": [32, 424], "find_index": [32, 424], "motion_cfgencoder_async": [32, 39, 40, 719, 721, 722, 732], "cfgencoder_async": [32, 39, 40], "motion_find_limit": [33, 425], "find_limit": [33, 425], "motion_get_logical_posit": [34, 426], "motion_setlogicalposi_async": [34, 719, 722, 732], "setlogicalposi_async": 34, "posi": [34, 426], "getlogicalposi": 34, "motion_load_configuration_fil": [35, 427], "motion_position_blend": [36, 428], "new_posit": [36, 428, 722, 732], "motion_overrideaxisposi_async": [36, 719, 722, 732], "overrideaxisposi_async": 36, "motion_save_configuration_fil": [37, 429], "motion_savecfgfile_async": [37, 719, 721, 722, 732], "savecfgfile_async": 37, "motion_servo_on": [38, 430], "motion_velocity_blend": [39, 431], "velocity_mod": [39, 40, 431, 432], "overrid": [39, 40, 431, 432, 722, 732], "new_velo": [39, 40, 431, 432, 722, 732], "motion_overrideaxisvelocity_async": [39, 40, 719, 722, 732], "overrideaxisvelocity_async": [39, 40], "3000": [39, 40, 160, 431, 432, 512], "motion_velocity_blending_acceler": [40, 432], "veloc": [40, 360, 361, 362, 363, 432, 677, 678, 716, 717, 721, 722, 732, 741, 747], "new_accel": [40, 432, 722, 732], "new_decel": [40, 432, 722, 732], "motion_overrideaxisaccel_async": [40, 719, 722, 732], "overrideaxisaccel_async": 40, "6000": [40, 432], "ai_n_samples_onc": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693], "obtain": [49, 50, 52, 53, 54, 92, 101, 152, 153, 154, 155, 156, 157, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 468, 473, 504, 505, 506, 507, 508, 509, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "addition": [49, 53, 54, 92, 101, 152, 156, 157, 178, 182, 183, 205, 209, 210, 344, 348, 349, 365, 369, 370, 381, 385, 386, 437, 441, 442, 468, 473, 504, 508, 509, 526, 530, 531, 549, 553, 554, 664, 668, 669, 681, 685, 686, 693, 697, 698, 748], "To": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 205, 206, 208, 209, 210, 214, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 484, 485, 486, 504, 505, 506, 507, 508, 509, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 549, 550, 552, 553, 554, 558, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "begin": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 205, 206, 208, 209, 210, 214, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 484, 485, 486, 504, 505, 506, 507, 508, 509, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 549, 550, 552, 553, 554, 558, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "next": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 484, 485, 486, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "outlin": [49, 50, 52, 53, 54, 120, 121, 122, 152, 153, 154, 155, 156, 157, 162, 163, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 214, 215, 216, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 484, 485, 486, 504, 505, 506, 507, 508, 509, 514, 515, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 558, 559, 560, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "procedur": [49, 50, 52, 53, 54, 120, 121, 122, 152, 153, 154, 155, 156, 157, 162, 163, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 214, 215, 216, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 484, 485, 486, 504, 505, 506, 507, 508, 509, 514, 515, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 558, 559, 560, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "stream": [49, 50, 52, 120, 152, 153, 154, 155, 178, 179, 181, 205, 206, 208, 214, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 484, 504, 505, 506, 507, 526, 527, 529, 549, 550, 552, 558, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 716, 717, 723, 732, 733, 734, 735, 740, 741, 742, 744], "conclud": [49, 50, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 120, 121, 122, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 205, 206, 208, 209, 210, 214, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 484, 485, 486, 504, 505, 506, 507, 508, 509, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 549, 550, 552, 553, 554, 558, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "explain": [49, 50, 52, 53, 54, 120, 121, 122, 152, 153, 154, 155, 156, 157, 162, 163, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 214, 215, 216, 344, 345, 347, 348, 349, 360, 361, 362, 363, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 484, 485, 486, 504, 505, 506, 507, 508, 509, 514, 515, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 558, 559, 560, 664, 665, 667, 668, 669, 676, 677, 678, 679, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698], "channel": [49, 50, 52, 53, 54, 69, 120, 153, 155, 160, 178, 179, 181, 182, 183, 184, 192, 205, 206, 208, 209, 210, 214, 217, 225, 238, 246, 259, 267, 280, 287, 296, 304, 320, 328, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 453, 484, 505, 507, 512, 526, 527, 529, 530, 531, 532, 540, 549, 550, 552, 553, 554, 558, 561, 569, 578, 586, 595, 603, 612, 619, 624, 632, 644, 652, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 712, 713, 716, 717, 723, 724, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746], "On": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 747], "demand": [49, 50, 52, 120, 152, 153, 154, 155, 158, 159, 160, 178, 179, 181, 205, 206, 208, 211, 212, 214, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 484, 504, 505, 506, 507, 510, 511, 512, 526, 527, 529, 549, 550, 552, 555, 556, 558, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 716, 717, 723, 729, 732, 733, 734, 740, 741, 742, 743, 747], "continu": [49, 120, 152, 160, 178, 205, 214, 344, 365, 381, 437, 484, 504, 512, 526, 549, 558, 664, 681, 693, 705, 716, 717, 723, 729, 732, 733, 734, 740, 741, 742, 747], "sampling_r": [49, 50, 52, 120, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 214, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 484, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 558, 664, 665, 667, 681, 682, 684, 693, 694, 696, 723, 729, 732, 733, 734, 740, 741, 742], "200": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 743], "read_point": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696], "read_delai": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 236, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696], "ai_open_async": [49, 50, 52, 53, 54, 92, 101, 152, 153, 154, 155, 156, 157, 158, 159, 160, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 211, 212, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "acquisit": [49, 50, 52, 53, 54, 92, 101, 152, 153, 154, 155, 156, 157, 158, 159, 160, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 211, 212, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 437, 438, 440, 441, 442, 468, 473, 504, 505, 506, 507, 508, 509, 510, 511, 512, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 555, 556, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 723, 732, 733, 734, 740, 741, 742], "ai_setmode_async": [49, 50, 52, 53, 54, 152, 153, 154, 155, 156, 157, 160, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 719, 723, 732, 733, 734, 740, 741, 742], "rate": [49, 50, 52, 120, 152, 153, 154, 155, 160, 178, 179, 181, 191, 205, 206, 208, 214, 224, 245, 266, 303, 327, 344, 345, 347, 360, 361, 362, 363, 364, 365, 366, 368, 381, 382, 384, 437, 438, 440, 484, 504, 505, 506, 507, 512, 526, 527, 529, 539, 549, 550, 552, 558, 568, 585, 602, 631, 651, 664, 665, 667, 676, 677, 678, 679, 680, 681, 682, 684, 693, 694, 696, 705, 708, 722, 723, 729, 732, 733, 734, 740, 741, 742, 743, 746], "ai_setsamplingrate_async": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 719, 723, 732, 733, 734, 740, 741, 742], "ai_setnumsamples_async": [49, 152, 178, 205, 344, 365, 381, 719, 723, 732, 733, 734, 740, 741, 742], "ai_start_async": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 719, 723, 732, 733, 734, 740, 741, 742], "ai_2dlist": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696], "ai_readstreaming_async": [49, 50, 52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 506, 512, 719, 723, 732, 733, 734, 740, 741, 742], "len": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 236, 344, 345, 347, 364, 365, 366, 368, 381, 382, 384, 437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 576, 664, 665, 667, 680, 681, 682, 684, 693, 694, 696, 705, 710, 723, 732, 733, 734, 740, 741, 742], "ok": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693, 705, 707, 711], "ai_list": [49, 53, 54, 152, 156, 157, 158, 159, 178, 182, 183, 205, 209, 210, 211, 212, 344, 348, 349, 365, 369, 370, 381, 385, 386, 437, 441, 442, 504, 508, 509, 510, 511, 526, 530, 531, 549, 553, 554, 555, 556, 664, 668, 669, 681, 685, 686, 693, 697, 698], "enumer": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693, 705], "ani": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693, 705], "miss": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693], "ng": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693], "ai_stop_async": [49, 50, 52, 152, 153, 154, 155, 160, 178, 179, 181, 205, 206, 208, 344, 345, 347, 365, 366, 368, 381, 382, 384, 719, 723, 732, 733, 734, 740, 741, 742], "ai_close_async": [49, 50, 52, 53, 54, 92, 101, 152, 153, 154, 155, 156, 157, 158, 159, 160, 178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 211, 212, 344, 345, 347, 348, 349, 365, 366, 368, 369, 370, 381, 382, 384, 385, 386, 719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "ai_continu": [50, 153, 179, 206, 345, 366, 382, 438, 505, 527, 550, 665, 682, 694], "n": [50, 52, 120, 145, 146, 153, 154, 155, 160, 179, 181, 206, 208, 214, 335, 336, 345, 347, 364, 366, 368, 382, 384, 438, 440, 484, 501, 502, 505, 506, 507, 512, 527, 529, 550, 552, 558, 659, 660, 665, 667, 680, 682, 684, 694, 696, 705, 716, 717, 723, 729, 731, 732, 733, 734, 739, 740, 741, 742, 743, 747], "sampl": [50, 52, 120, 145, 146, 153, 154, 155, 160, 179, 181, 206, 208, 214, 335, 336, 345, 347, 366, 368, 382, 384, 438, 440, 484, 501, 502, 505, 506, 507, 512, 527, 529, 550, 552, 558, 659, 660, 665, 667, 682, 684, 694, 696, 705, 713, 716, 717, 723, 729, 731, 732, 733, 734, 739, 740, 741, 742, 743, 746, 747], "data_len": [50, 52, 153, 154, 155, 160, 179, 181, 206, 208, 345, 347, 366, 368, 382, 384, 438, 440, 505, 506, 507, 512, 527, 529, 550, 552, 665, 667, 682, 684, 694, 696], "did": [51, 180, 207, 213, 346, 367, 383, 439, 528, 551, 557, 666, 683, 695], "ai_continuous_with_logg": [52, 155, 181, 208, 347, 368, 384, 440, 507, 529, 552, 667, 684, 696], "Then": [52, 155, 181, 208, 347, 368, 384, 440, 507, 529, 552, 667, 684, 696], "save": [52, 146, 155, 181, 208, 312, 336, 347, 364, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 680, 684, 696, 716, 717, 721, 722, 732, 743], "csv": [52, 146, 155, 181, 208, 312, 336, 347, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 684, 696, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "wpc_test": [52, 146, 155, 181, 208, 312, 336, 347, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 684, 696], "logger_openfil": [52, 146, 155, 181, 208, 312, 336, 347, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 684, 696, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "header": [52, 146, 155, 181, 208, 312, 336, 347, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 684, 696, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "logger_writehead": [52, 146, 155, 181, 208, 312, 336, 347, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 684, 696, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ch0": [52, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 311, 312, 313, 337, 347, 368, 384, 440, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 639, 640, 641, 661, 667, 684, 696, 705], "ch1": [52, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 311, 312, 313, 336, 337, 347, 368, 384, 440, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 639, 640, 641, 660, 661, 667, 684, 696, 705], "ch2": [52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 347, 368, 384, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 667, 684, 696, 705], "ch3": [52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 347, 368, 384, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 667, 684, 696, 705], "ch4": [52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 347, 368, 384, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 667, 684, 696, 705], "ch5": [52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 347, 368, 384, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 667, 684, 696, 705], "ch6": [52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 347, 368, 384, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 667, 684, 696, 705], "ch7": [52, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 208, 347, 368, 384, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 529, 552, 667, 684, 696, 705], "logger_write2dlist": [52, 155, 181, 208, 347, 368, 384, 440, 507, 529, 552, 667, 684, 696, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ai_on_demand_in_loop": [53, 156, 182, 209, 348, 369, 385, 441, 508, 530, 553, 668, 685, 697], "util": [53, 156, 182, 209, 348, 364, 369, 385, 441, 508, 530, 553, 668, 680, 685, 697], "retriev": [53, 54, 92, 101, 156, 157, 182, 183, 209, 210, 348, 349, 369, 370, 385, 386, 441, 442, 468, 473, 508, 509, 530, 531, 553, 554, 668, 669, 685, 686, 697, 698, 723, 732, 733, 734, 735, 740, 741, 742], "chip_select": [53, 152, 153, 154, 155, 156, 157, 158, 159, 160, 182, 209, 211, 212, 348, 369, 385, 504, 505, 506, 507, 508, 509, 510, 511, 512, 723, 732, 733, 734, 740, 741, 742], "ai_readondemand_async": [53, 54, 92, 101, 152, 153, 154, 155, 156, 157, 158, 159, 160, 182, 183, 209, 210, 211, 212, 348, 349, 369, 370, 385, 386, 506, 512, 719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "ai_on_demand_onc": [54, 92, 101, 157, 183, 210, 349, 370, 386, 442, 468, 473, 509, 531, 554, 669, 686, 698], "dio_loopback_pin": [63, 78, 164, 185, 218, 239, 260, 281, 297, 321, 447, 458, 516, 533, 562, 579, 596, 613, 625, 645], "involv": [63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646], "do": [63, 64, 78, 79, 164, 165, 185, 186, 193, 194, 195, 218, 219, 226, 239, 240, 247, 248, 249, 260, 261, 268, 269, 270, 281, 282, 288, 297, 298, 305, 306, 307, 321, 322, 329, 330, 331, 447, 448, 458, 459, 516, 517, 533, 534, 541, 542, 543, 562, 563, 570, 579, 580, 587, 588, 589, 596, 597, 604, 605, 606, 613, 614, 620, 625, 626, 633, 634, 635, 645, 646, 653, 654, 655, 709, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "send": [63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 705, 733, 734, 735, 736, 738, 739], "signal": [63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 120, 121, 122, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 192, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 239, 240, 241, 242, 243, 244, 246, 260, 261, 262, 263, 264, 265, 267, 281, 282, 283, 284, 285, 286, 287, 297, 298, 299, 300, 301, 302, 304, 321, 322, 323, 324, 325, 326, 328, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 484, 485, 486, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 540, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 579, 580, 581, 582, 583, 584, 586, 596, 597, 598, 599, 600, 601, 603, 613, 614, 615, 616, 617, 618, 619, 625, 626, 627, 628, 629, 630, 632, 645, 646, 647, 648, 649, 650, 652, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "di": [63, 64, 69, 78, 79, 164, 165, 185, 186, 192, 195, 218, 219, 225, 226, 239, 240, 246, 249, 260, 261, 267, 270, 281, 282, 287, 288, 297, 298, 304, 307, 321, 322, 328, 331, 447, 448, 453, 458, 459, 516, 517, 533, 534, 540, 543, 562, 563, 569, 570, 579, 580, 586, 589, 596, 597, 603, 606, 613, 614, 619, 620, 625, 626, 632, 635, 645, 646, 652, 655, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "receiv": [63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 203, 211, 212, 218, 219, 234, 239, 240, 257, 260, 261, 278, 281, 282, 297, 298, 318, 321, 322, 342, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 547, 555, 556, 562, 563, 574, 579, 580, 593, 596, 597, 610, 613, 614, 625, 626, 642, 645, 646, 662, 733, 734, 735, 736, 738, 739, 746], "singl": [63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 716, 722, 732], "commonli": [63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646], "known": [63, 64, 78, 79, 164, 165, 185, 186, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 516, 517, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646], "illustr": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650], "requir": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 158, 159, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 211, 212, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 510, 511, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 555, 556, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650, 743], "oper": [63, 64, 78, 79, 164, 165, 185, 186, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 516, 517, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 722, 732, 743, 746], "lastli": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 158, 159, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 211, 212, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 260, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 510, 511, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 555, 556, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 645, 646, 647, 648, 649, 650], "do_port": [63, 64, 78, 79, 111, 164, 165, 166, 167, 168, 169, 185, 186, 193, 194, 218, 219, 239, 240, 247, 248, 260, 261, 268, 269, 281, 282, 297, 298, 305, 306, 321, 322, 329, 330, 447, 448, 458, 459, 479, 516, 517, 518, 519, 520, 521, 533, 534, 541, 542, 562, 563, 579, 580, 587, 588, 596, 597, 604, 605, 613, 614, 625, 626, 633, 634, 645, 646, 653, 654, 709, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_port": [63, 64, 78, 79, 164, 165, 185, 186, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 516, 517, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_pin": [63, 78, 164, 185, 218, 239, 260, 281, 297, 321, 447, 458, 516, 533, 562, 579, 596, 613, 625, 645], "di_pin": [63, 78, 164, 185, 218, 239, 260, 281, 297, 321, 447, 458, 516, 533, 562, 579, 596, 613, 625, 645], "do_valu": [63, 64, 67, 68, 78, 79, 82, 83, 164, 165, 168, 169, 185, 186, 189, 190, 218, 219, 222, 223, 239, 240, 243, 244, 260, 261, 264, 265, 281, 282, 285, 286, 297, 298, 301, 302, 321, 322, 325, 326, 447, 448, 451, 452, 458, 459, 462, 463, 516, 517, 520, 521, 533, 534, 537, 538, 562, 563, 566, 567, 579, 580, 583, 584, 596, 597, 600, 601, 613, 614, 617, 618, 625, 626, 629, 630, 645, 646, 649, 650], "digit": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 111, 121, 122, 131, 132, 158, 159, 162, 163, 167, 185, 186, 187, 188, 189, 190, 193, 194, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 247, 248, 260, 261, 262, 263, 264, 265, 268, 269, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 305, 306, 321, 322, 323, 324, 325, 326, 329, 330, 364, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 479, 485, 486, 491, 492, 510, 511, 514, 515, 518, 519, 533, 534, 535, 536, 537, 538, 541, 542, 555, 556, 559, 560, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 587, 588, 596, 597, 598, 599, 600, 601, 604, 605, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 633, 634, 645, 646, 647, 648, 649, 650, 653, 654, 680, 707, 709, 724, 725, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739, 743], "output": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 193, 194, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 247, 248, 260, 261, 262, 263, 264, 265, 268, 269, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 305, 306, 321, 322, 323, 324, 325, 326, 329, 330, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 541, 542, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 587, 588, 596, 597, 598, 599, 600, 601, 604, 605, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 633, 634, 645, 646, 647, 648, 649, 650, 653, 654, 706, 707, 709, 716, 717, 724, 725, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 743, 746], "do_openpins_async": [63, 65, 67, 78, 80, 82, 185, 187, 189, 193, 194, 218, 220, 222, 239, 241, 243, 247, 248, 260, 262, 264, 268, 269, 281, 283, 285, 297, 299, 301, 305, 306, 321, 323, 325, 329, 330, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "high": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 193, 194, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 247, 248, 260, 261, 262, 263, 264, 265, 268, 269, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 305, 306, 321, 322, 323, 324, 325, 326, 329, 330, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 541, 542, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 587, 588, 596, 597, 598, 599, 600, 601, 604, 605, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 633, 634, 645, 646, 647, 648, 649, 650, 653, 654, 709, 721, 722, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 747], "low": [63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 189, 190, 193, 194, 218, 219, 220, 221, 222, 223, 239, 240, 241, 242, 243, 244, 247, 248, 260, 261, 262, 263, 264, 265, 268, 269, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 305, 306, 321, 322, 323, 324, 325, 326, 329, 330, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 541, 542, 562, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 584, 587, 588, 596, 597, 598, 599, 600, 601, 604, 605, 613, 614, 615, 616, 617, 618, 625, 626, 627, 628, 629, 630, 633, 634, 645, 646, 647, 648, 649, 650, 653, 654, 709, 721, 722, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 747], "do_writepins_async": [63, 67, 78, 82, 164, 168, 185, 189, 193, 194, 218, 222, 239, 243, 247, 248, 260, 264, 268, 269, 281, 285, 297, 301, 305, 306, 321, 325, 329, 330, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "iutput": [63, 78, 185, 218, 239, 260, 281, 297, 321, 447, 458, 533, 562, 579, 596, 613, 625, 645], "di_openpins_async": [63, 78, 185, 218, 239, 260, 281, 297, 321, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "state": [63, 64, 65, 66, 78, 79, 80, 81, 111, 164, 165, 166, 167, 168, 169, 185, 186, 187, 188, 218, 219, 220, 221, 239, 240, 241, 242, 260, 261, 262, 263, 281, 282, 283, 284, 297, 298, 299, 300, 321, 322, 323, 324, 447, 448, 449, 450, 458, 459, 460, 461, 479, 516, 517, 518, 519, 520, 521, 533, 534, 535, 536, 562, 563, 564, 565, 579, 580, 581, 582, 596, 597, 598, 599, 613, 614, 615, 616, 625, 626, 627, 628, 645, 646, 647, 648, 707, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "di_readpins_async": [63, 78, 164, 185, 218, 239, 260, 281, 297, 321, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_closepins_async": [63, 65, 67, 78, 80, 82, 185, 187, 189, 193, 194, 218, 220, 222, 239, 241, 243, 247, 248, 260, 262, 264, 268, 269, 281, 283, 285, 297, 299, 301, 305, 306, 321, 323, 325, 329, 330, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "input": [63, 64, 78, 79, 185, 186, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746], "di_closepins_async": [63, 78, 185, 218, 239, 260, 281, 297, 321, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "dio_loopback_port": [64, 79, 165, 186, 219, 240, 261, 282, 298, 322, 448, 459, 517, 534, 563, 580, 597, 614, 626, 646], "pin": [64, 69, 79, 121, 122, 158, 159, 162, 163, 165, 186, 192, 193, 194, 211, 212, 215, 216, 219, 225, 240, 246, 247, 248, 261, 267, 268, 269, 282, 287, 298, 304, 305, 306, 322, 328, 329, 330, 448, 453, 459, 485, 486, 510, 511, 514, 515, 517, 534, 540, 541, 542, 555, 556, 559, 560, 563, 569, 580, 586, 587, 588, 597, 603, 604, 605, 614, 619, 626, 632, 633, 634, 646, 652, 653, 654, 709, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "do_openport_async": [64, 66, 68, 79, 81, 83, 186, 188, 190, 219, 221, 223, 240, 242, 244, 261, 263, 265, 282, 284, 286, 298, 300, 302, 322, 324, 326, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_openport_async": [64, 79, 186, 219, 240, 261, 282, 298, 322, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_writeport_async": [64, 68, 79, 83, 111, 165, 169, 186, 190, 219, 223, 240, 244, 261, 265, 282, 286, 298, 302, 322, 326, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_readport_async": [64, 79, 165, 186, 219, 240, 261, 282, 298, 322, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_closeport_async": [64, 66, 68, 79, 81, 83, 186, 188, 190, 219, 221, 223, 240, 242, 244, 261, 263, 265, 282, 284, 286, 298, 300, 302, 322, 324, 326, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_closeport_async": [64, 79, 186, 219, 240, 261, 282, 298, 322, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "dio": [65, 66, 67, 68, 80, 81, 82, 83, 166, 167, 168, 169, 187, 188, 189, 190, 193, 194, 220, 221, 222, 223, 241, 242, 243, 244, 247, 248, 262, 263, 264, 265, 268, 269, 283, 284, 285, 286, 299, 300, 301, 302, 305, 306, 323, 324, 325, 326, 329, 330, 449, 450, 451, 452, 460, 461, 462, 463, 518, 519, 520, 521, 535, 536, 537, 538, 541, 542, 564, 565, 566, 567, 581, 582, 583, 584, 587, 588, 598, 599, 600, 601, 604, 605, 615, 616, 617, 618, 627, 628, 629, 630, 633, 634, 647, 648, 649, 650, 653, 654, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "do_blinky_pin": [65, 80, 166, 187, 220, 241, 262, 283, 299, 323, 449, 460, 518, 535, 564, 581, 598, 615, 627, 647], "loop": [65, 66, 80, 81, 131, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 491, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 716, 717], "voltag": [65, 66, 67, 68, 80, 81, 82, 83, 120, 166, 167, 168, 169, 187, 188, 189, 190, 214, 220, 221, 222, 223, 241, 242, 243, 244, 262, 263, 264, 265, 283, 284, 285, 286, 299, 300, 301, 302, 323, 324, 325, 326, 449, 450, 451, 452, 460, 461, 462, 463, 484, 518, 519, 520, 521, 535, 536, 537, 538, 558, 564, 565, 566, 567, 581, 582, 583, 584, 598, 599, 600, 601, 615, 616, 617, 618, 627, 628, 629, 630, 647, 648, 649, 650, 705, 706, 723, 726, 727, 729, 732, 734, 743, 747], "appli": [65, 66, 80, 81, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 364, 449, 450, 460, 461, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 680], "blink": [65, 66, 80, 81, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "effect": [65, 66, 80, 81, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 723, 729, 732, 733, 734, 740, 741, 742], "pinindex": [65, 80, 166, 187, 220, 241, 262, 283, 299, 323, 449, 460, 518, 535, 564, 581, 598, 615, 627, 647], "toggl": [65, 66, 80, 81, 111, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 479, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_togglepins_async": [65, 80, 166, 187, 220, 241, 262, 283, 299, 323, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "led": [65, 66, 67, 68, 80, 81, 82, 83, 166, 167, 187, 188, 189, 190, 220, 221, 222, 223, 241, 242, 243, 244, 262, 263, 264, 265, 283, 284, 285, 286, 299, 300, 301, 302, 323, 324, 325, 326, 449, 450, 451, 452, 460, 461, 462, 463, 518, 519, 535, 536, 537, 538, 564, 565, 566, 567, 581, 582, 583, 584, 598, 599, 600, 601, 615, 616, 617, 618, 627, 628, 629, 630, 647, 648, 649, 650, 705, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 740, 741, 742], "do_blinky_port": [66, 81, 167, 188, 221, 242, 263, 284, 300, 324, 450, 461, 519, 536, 565, 582, 599, 616, 628, 648], "do_toggleport_async": [66, 81, 167, 188, 221, 242, 263, 284, 300, 324, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_write_pin": [67, 82, 168, 189, 222, 243, 264, 285, 301, 325, 451, 462, 520, 537, 566, 583, 600, 617, 629, 649], "written": [67, 68, 82, 83, 168, 169, 189, 190, 191, 193, 222, 223, 224, 243, 244, 245, 247, 264, 265, 266, 268, 285, 286, 301, 302, 303, 305, 325, 326, 327, 329, 451, 452, 462, 463, 520, 521, 537, 538, 539, 541, 566, 567, 568, 583, 584, 585, 587, 600, 601, 602, 604, 617, 618, 629, 630, 631, 633, 649, 650, 651, 653, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pin_index": [67, 82, 168, 189, 222, 243, 264, 285, 301, 325, 451, 462, 520, 537, 566, 583, 600, 617, 629, 649, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_write_port": [68, 83, 169, 190, 223, 244, 265, 286, 302, 326, 452, 463, 521, 538, 567, 584, 601, 618, 630, 650], "pwm_gener": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652], "should": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 723, 729, 732, 733, 734, 735, 740, 741, 742], "frequenc": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739, 747], "duti": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739], "cycl": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739], "so": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652], "can": [69, 160, 192, 225, 246, 267, 287, 304, 328, 453, 512, 540, 569, 586, 603, 619, 632, 652, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748], "proper": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652], "By": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652], "want": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 723, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "could": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 728, 730, 731, 738, 739], "duty_cycl": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739], "50": [69, 192, 225, 246, 267, 287, 304, 328, 364, 453, 540, 569, 586, 603, 619, 632, 652, 680], "pwm_open_async": [69, 192, 225, 246, 267, 287, 304, 328, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_setfrequency_async": [69, 192, 225, 246, 267, 287, 304, 328, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_setdutycycle_async": [69, 192, 225, 246, 267, 287, 304, 328, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_start_async": [69, 192, 225, 246, 267, 287, 304, 328, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_stop_async": [69, 192, 225, 246, 267, 287, 304, 328, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_close_async": [69, 192, 225, 246, 267, 287, 304, 328, 719, 724, 733, 734, 735, 736, 737, 738, 739], "ai24bit": [92, 101, 468, 473], "relay_read_count": [110, 478], "index": [110, 478, 716, 717, 722, 728, 732, 735, 746, 747], "relay_open_async": [110, 111, 719, 728], "relay_read_async": [110, 719, 728], "relay_close_async": [110, 111, 719, 728], "relay_set_channel": [111, 479], "valu": [111, 121, 122, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 191, 193, 211, 212, 215, 216, 224, 245, 247, 266, 268, 303, 305, 327, 329, 354, 375, 391, 479, 485, 486, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 539, 541, 555, 556, 559, 560, 568, 585, 587, 602, 604, 631, 633, 651, 653, 674, 691, 703, 705, 706, 709, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 747, 748], "ao_waveform_gen": [120, 214, 484, 558], "number_of_sampl": [120, 214, 484, 558], "form_mod": [120, 214, 484, 558], "dc": [120, 214, 484, 558, 729, 732, 734, 747], "retangular": [120, 214, 484, 558, 729, 732, 734], "triangular": [120, 214, 484, 558, 729, 732, 734, 747], "sine": [120, 214, 484, 558, 729, 732, 734, 747], "amplitud": [120, 214, 484, 558, 729, 732, 734], "freq_0": [120, 214, 484, 558], "freq_1": [120, 214, 484, 558], "ao_open_async": [120, 121, 122, 158, 159, 160, 162, 163, 211, 212, 214, 215, 216, 719, 729, 732, 734], "ao_setmode_async": [120, 214, 719, 729, 732, 734], "10k": [120, 214, 484, 558, 744], "hz": [120, 160, 214, 360, 361, 362, 363, 364, 484, 512, 558, 676, 677, 678, 679, 680, 723, 724, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ao_setsamplingrate_async": [120, 214, 719, 729, 732, 734], "numsampl": [120, 214, 484, 558, 705], "ao_setnumsamples_async": [120, 214, 719, 729, 732, 734], "ao_setnumsampl": [120, 214, 484, 558, 719, 729, 732, 734], "ao_setenablechannels_async": [120, 214, 719, 729, 732, 734], "form": [120, 214, 484, 558, 729, 732, 734, 743, 746], "ao_setform_async": [120, 214, 719, 729, 732, 734], "ao_setformparam_async": [120, 214, 719, 729, 732, 734], "info": [120, 164, 165, 166, 167, 168, 169, 214, 484, 516, 517, 518, 519, 520, 521, 558, 705, 715, 716, 717, 729, 732, 734], "ao_openstreaming_async": [120, 214, 719, 729, 732, 734], "ao_startstreaming_async": [120, 214, 719, 729, 732, 734], "ao_closestreaming_async": [120, 214, 719, 729, 732, 734], "ao_close_async": [120, 121, 122, 158, 159, 160, 162, 163, 211, 212, 214, 215, 216, 719, 729, 732, 734], "ao_write_all_channel": [121, 162, 215, 485, 514, 559], "simultan": [121, 158, 162, 211, 215, 485, 510, 514, 555, 559, 706, 723, 729, 732, 733, 734, 740, 741, 742, 743], "ao_value_list": [121, 122, 158, 159, 162, 163, 211, 212, 215, 216, 485, 486, 510, 511, 514, 515, 555, 556, 559, 560], "ao_writeallchannels_async": [121, 158, 162, 211, 215, 706, 719, 729, 732, 734], "ao_write_one_channel": [122, 163, 216, 486, 515, 560], "vaul": [122, 159, 160, 163, 212, 216, 486, 511, 512, 515, 556, 560], "ao_writeonechannel_async": [122, 159, 160, 163, 212, 216, 719, 729, 732, 734], "dpot_readbychannel": [131, 491, 719, 730], "potentiomet": [131, 132, 491, 492, 730], "resist": [131, 132, 491, 492, 730], "dpot_open_async": [131, 132, 719, 730], "resistance_ratio": [131, 132, 491, 492, 730], "dpot_readbychannel_async": [131, 719, 730], "dpot_close_async": [131, 132, 719, 730], "dpot_writeallchannel": [132, 492, 719, 730], "dpot_writeallchannel_async": [132, 719, 730], "temperature_tc": [145, 146, 147, 335, 336, 337, 501, 502, 503, 659, 660, 661], "tc_read_channel_data": [145, 335, 501, 659], "thermocoupl": [145, 146, 335, 336, 501, 502, 659, 660, 713, 731, 738, 739, 743, 748], "show": [145, 146, 147, 191, 193, 194, 195, 203, 204, 224, 226, 234, 235, 236, 237, 245, 247, 248, 249, 257, 258, 266, 268, 269, 270, 278, 279, 288, 303, 305, 306, 307, 311, 312, 313, 318, 319, 327, 329, 330, 331, 335, 336, 337, 342, 343, 364, 501, 502, 503, 539, 541, 542, 543, 547, 548, 568, 570, 574, 575, 576, 577, 585, 587, 588, 589, 593, 594, 602, 604, 605, 606, 610, 611, 620, 631, 633, 634, 635, 639, 640, 641, 642, 643, 651, 653, 654, 655, 659, 660, 661, 662, 663, 680, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "thermal": [145, 146, 147, 311, 312, 313, 335, 336, 337, 501, 502, 503, 639, 640, 641, 659, 660, 661, 731, 738, 739, 746], "ch": [145, 146, 335, 336, 501, 502, 659, 660], "over_sampling_mod": [145, 146, 335, 336, 501, 502, 659, 660], "16": [145, 146, 193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 335, 336, 501, 502, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 659, 660, 708, 709, 731, 733, 735, 736, 738, 739, 740, 741, 742, 743, 747], "thermo_typ": [145, 146, 335, 336, 501, 502, 659, 660], "b": [145, 146, 335, 336, 501, 502, 659, 660, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 747], "type": [145, 146, 335, 336, 501, 502, 659, 660, 712, 713, 721, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 743, 746], "e": [145, 146, 335, 336, 501, 502, 659, 660, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 747], "j": [145, 146, 335, 336, 501, 502, 659, 660, 705, 731, 739, 743, 747], "k": [145, 146, 335, 336, 364, 501, 502, 659, 660, 680, 705, 731, 739, 743, 747], "r": [145, 146, 335, 336, 501, 502, 659, 660, 731, 739, 743, 747], "6": [145, 146, 160, 164, 165, 166, 167, 168, 169, 335, 336, 360, 362, 364, 501, 502, 512, 516, 517, 518, 519, 520, 521, 659, 660, 678, 680, 705, 707, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 747], "thermo": [145, 146, 147, 335, 336, 337, 350, 371, 387, 501, 502, 503, 659, 660, 661, 670, 687, 699, 713], "thermal_open_async": [145, 146, 147, 311, 312, 313, 335, 336, 337, 719, 731, 738, 739], "over": [145, 146, 335, 336, 501, 502, 659, 660, 713, 731, 739], "thermal_setoversampling_async": [145, 146, 335, 336, 719, 731, 739], "thermal_settype_async": [145, 146, 335, 336, 712, 719, 731, 738, 739], "500": [145, 146, 236, 237, 335, 336, 501, 502, 576, 577, 659, 660, 735], "m": [145, 146, 311, 312, 335, 336, 501, 502, 639, 640, 659, 660, 705], "oversampl": [145, 146, 335, 336, 501, 502, 659, 660, 713, 731, 739], "thermal_readsensor_async": [145, 146, 311, 312, 335, 336, 719, 731, 738, 739], "sensor": [145, 146, 191, 224, 245, 266, 303, 311, 312, 327, 335, 336, 364, 501, 502, 539, 568, 585, 602, 631, 639, 640, 651, 659, 660, 680, 712, 713, 731, 738, 739, 743], "thermal_close_async": [145, 146, 147, 311, 312, 313, 335, 336, 337, 719, 731, 738, 739], "tc_read_channel_data_with_logg": [146, 336, 502, 660], "them": [146, 312, 336, 502, 640, 660, 723, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "logger_writevalu": [146, 336, 502, 660, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "tc_read_channel_statu": [147, 337, 503, 661], "thermal_getstatus_async": [147, 313, 337, 719, 731, 738, 739], "If": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 364, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 680, 722, 723, 726, 727, 728, 729, 732, 733, 734, 735, 740, 741, 742, 745], "invok": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521], "function": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 364, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 680, 719, 743, 746], "sys_setaiomode_async": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 506, 512, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ai_enablecs_async": [152, 153, 154, 155, 156, 157, 158, 159, 160, 506, 512, 719, 723, 732, 733, 734, 740, 741, 742], "subsequ": [152, 153, 154, 155, 156, 157, 158, 159, 160, 504, 505, 506, 507, 508, 509, 510, 511, 512], "displai": [152, 153, 154, 155, 156, 157, 158, 159, 160, 211, 212, 364, 504, 505, 506, 507, 508, 509, 510, 511, 512, 555, 556, 680], "follow": [152, 153, 154, 155, 156, 157, 158, 159, 160, 211, 212, 504, 505, 506, 507, 508, 509, 510, 511, 512, 555, 556], "cs0": [152, 153, 154, 155, 156, 157, 158, 159, 160, 504, 505, 506, 507, 508, 509, 510, 511, 512], "cs2": [152, 153, 154, 155, 156, 157, 158, 159, 160, 504, 505, 506, 507, 508, 509, 510, 511, 512], "sample0": [152, 153, 154, 155, 156, 157, 158, 159, 160, 504, 505, 506, 507, 508, 509, 510, 511, 512], "sample1": [152, 153, 154, 155, 156, 157, 158, 159, 160, 504, 505, 506, 507, 508, 509, 510, 511, 512], "samplen": [152, 153, 154, 155, 156, 157, 158, 159, 160, 504, 505, 506, 507, 508, 509, 510, 511, 512], "slot": [152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "aio": [152, 153, 154, 155, 156, 157, 160, 162, 163, 504, 505, 506, 507, 508, 509, 512, 514, 515, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 748], "modul": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 721, 722, 723, 726, 727, 728, 729, 730, 732, 733, 734, 735, 740, 741, 742, 743, 745, 748], "slot_mod": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521], "sys_getmode_async": [152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ai_continuous_multi_slot": [154, 506], "slot_list": [154, 506], "counter": [154, 160, 506, 512, 716, 717, 722, 728, 732, 733, 734, 735, 736, 737, 738, 739, 745, 746], "aio_all_channels_loopback": [158, 211, 510, 555], "across": [158, 211, 510, 555], "ao": [158, 159, 211, 212, 510, 511, 555, 556, 716, 717, 729, 732, 734, 744, 746, 748], "ai": [158, 159, 211, 212, 510, 511, 555, 556, 716, 717, 723, 726, 727, 732, 733, 734, 740, 741, 742, 746, 748], "The": [158, 159, 164, 165, 166, 167, 168, 169, 191, 211, 212, 224, 245, 266, 303, 327, 510, 511, 516, 517, 518, 519, 520, 521, 539, 555, 556, 568, 585, 602, 631, 651, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746], "ar": [158, 159, 164, 165, 166, 167, 168, 169, 211, 212, 510, 511, 516, 517, 518, 519, 520, 521, 555, 556, 723, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 748], "wire": [158, 159, 211, 212, 510, 511, 555, 556, 738, 743], "initi": [158, 159, 211, 212, 510, 511, 555, 556, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 722, 732], "correspond": [158, 159, 211, 212, 510, 511, 555, 556, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "onc": [158, 159, 211, 212, 510, 511, 555, 556, 716, 717], "again": [158, 159, 195, 211, 212, 226, 249, 270, 288, 307, 331, 364, 510, 511, 543, 555, 556, 570, 589, 606, 620, 635, 655, 680], "aio_one_channel_loopback": [159, 212, 511, 556], "specif": [159, 212, 511, 556, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744], "ao_output_while_ai_stream": [160, 512], "Not": [160, 512], "alter": [160, 512], "Its": [160, 512, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "must": [160, 512], "less": [160, 237, 512, 577], "than": [160, 237, 512, 577, 723, 732, 733, 734, 740, 741, 742], "equal": [160, 512, 723, 732, 733, 734, 740, 741, 742], "random": [160, 191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 512, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653], "ao_list": [160, 512], "select": [160, 512, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 722, 723, 732, 733, 734, 740, 741, 742, 744], "list": [160, 204, 235, 258, 279, 319, 343, 512, 548, 575, 594, 611, 643, 663, 705, 708, 709, 710, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ao_valu": [160, 512], "choic": [160, 512], "ha": [161, 364, 485, 513, 514, 559, 680, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745], "yet": [161, 485, 513, 514, 559], "sys_setdiomode_async": [164, 165, 166, 167, 168, 169, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "assign": [164, 165, 166, 167, 168, 169, 516, 517, 518, 519, 520, 521, 748], "dio_loadstartup_async": [164, 165, 166, 167, 168, 169, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "direct": [164, 165, 166, 167, 168, 169, 516, 517, 518, 519, 520, 521, 721, 722, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 743, 746], "state_list_async": 164, "default": [178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "ai_enablechannel_async": [178, 179, 181, 182, 183, 205, 206, 208, 209, 210, 211, 212, 719, 723, 732, 733, 734, 740, 741, 742], "counter_read": [184, 217, 238, 259, 280, 296, 320, 532, 561, 578, 595, 612, 624, 644, 719, 733, 734, 735, 736, 737, 738, 739], "counter_open_async": [184, 217, 238, 259, 280, 296, 320, 719, 733, 734, 735, 736, 737, 738, 739], "counter_start_async": [184, 217, 238, 259, 280, 296, 320, 719, 733, 734, 735, 736, 737, 738, 739], "counter_read_async": [184, 217, 238, 259, 280, 296, 320, 719, 733, 734, 735, 736, 737, 738, 739], "counter_stop_async": [184, 217, 238, 259, 280, 296, 320, 719, 733, 734, 735, 736, 737, 738, 739], "counter_close_async": [184, 217, 238, 259, 280, 296, 320, 719, 733, 734, 735, 736, 737, 738, 739], "i2c_write_read": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "commun": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654, 735], "master": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654], "24c08c": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "slave": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654, 733, 734, 735, 736, 738, 739], "interfac": [191, 193, 194, 203, 204, 224, 234, 235, 236, 237, 245, 247, 248, 257, 258, 266, 268, 269, 278, 279, 303, 305, 306, 318, 319, 327, 329, 330, 342, 343, 539, 541, 542, 547, 548, 568, 574, 575, 576, 577, 585, 587, 588, 593, 594, 602, 604, 605, 610, 611, 631, 633, 634, 642, 643, 651, 653, 654, 662, 663, 743], "some": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654], "byte": [191, 193, 194, 203, 204, 224, 234, 235, 236, 237, 245, 247, 248, 257, 258, 266, 268, 269, 278, 279, 303, 305, 306, 318, 319, 327, 329, 330, 342, 343, 539, 541, 542, 547, 548, 568, 574, 575, 576, 577, 585, 587, 588, 593, 594, 602, 604, 605, 610, 611, 631, 633, 634, 642, 643, 651, 653, 654, 662, 663, 708, 709, 714, 733, 734, 735, 736, 738, 739], "address": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654, 708, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 746], "eeprom": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 746], "have": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 364, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 680, 723, 729, 732, 733, 734, 740, 741, 742], "howev": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653], "expeci": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "wore": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "device_address": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "0x50": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "01010000": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "numpi": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 364, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 680, 705], "np": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 364, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 680, 705], "word_address": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651], "randint": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653], "256": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 733, 735, 736, 738, 739, 747], "take": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654, 748], "i2c_open_async": [191, 224, 245, 266, 303, 327, 719, 733, 734, 735, 736, 738, 739], "clock": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651, 708, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "standard": [191, 224, 237, 245, 266, 303, 327, 539, 568, 577, 585, 602, 631, 651, 733, 734, 735, 736, 738, 739, 747], "i2c_setclockrate_async": [191, 224, 245, 266, 303, 327, 719, 733, 734, 735, 736, 738, 739], "via": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 539, 541, 542, 568, 585, 587, 588, 602, 604, 605, 631, 633, 634, 651, 653, 654, 733, 734, 735, 736, 738, 739], "wren": [191, 193, 194, 224, 245, 247, 248, 266, 268, 269, 303, 305, 306, 327, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709], "i2c_write_async": [191, 224, 245, 266, 303, 327, 719, 733, 734, 735, 736, 738, 739], "0x": [191, 224, 245, 266, 303, 327, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653], "02x": [191, 193, 224, 245, 247, 266, 268, 303, 305, 327, 329, 539, 541, 568, 585, 587, 602, 604, 631, 633, 651, 653, 709], "i2c_read_async": [191, 224, 245, 266, 303, 327, 719, 733, 734, 735, 736, 738, 739], "i2c_close_async": [191, 224, 245, 266, 303, 327, 719, 733, 734, 735, 736, 738, 739], "spi_read_and_writ": [193, 247, 268, 305, 329, 541, 587, 604, 633, 653], "25lc640": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654], "datas": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654], "bit": [193, 194, 203, 204, 234, 235, 247, 248, 257, 258, 268, 269, 278, 279, 305, 306, 318, 319, 329, 330, 342, 343, 541, 542, 547, 548, 574, 575, 587, 588, 593, 594, 604, 605, 610, 611, 633, 634, 642, 643, 653, 654, 662, 663, 714, 726, 727, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 746], "first_bit": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654], "msb": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 733, 735, 736, 738, 739, 747], "lsb": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 747], "prescal": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 733, 735, 736, 738, 739, 746, 747], "64": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 733, 735, 736, 738, 739, 747], "cpol": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 733, 735, 736, 738, 739, 747], "cpha": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 733, 735, 736, 738, 739, 747], "do_index": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709], "elif": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 705, 707, 708, 709, 711, 714], "addr": [193, 247, 268, 305, 329, 541, 587, 604, 633, 653], "0x02": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709], "dummi": [193, 247, 268, 305, 329, 541, 587, 604, 633, 653], "0x01": [193, 247, 268, 305, 329, 541, 587, 604, 633, 653], "0x03": [193, 247, 268, 305, 329, 541, 587, 604, 633, 653], "0x06": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709], "pin0": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "spi_open_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "spi_setdatasize_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "spi_setfirstbit_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "spi_setprescaler_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "spi_setmode_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "spi_write_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "0x00": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654], "spi_readandwrite_async": [193, 247, 268, 305, 329, 719, 733, 735, 736, 738, 739], "format": [193, 204, 235, 247, 258, 268, 279, 305, 319, 329, 343, 364, 541, 548, 575, 587, 594, 604, 611, 633, 643, 653, 663, 680, 705, 709, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "spi_close_async": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 719, 733, 735, 736, 738, 739], "spi_writ": [194, 248, 269, 306, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 719, 733, 735, 736, 738, 739], "0x55": [194, 248, 269, 306, 330, 542, 588, 605, 634, 654], "0x0002": [194, 248, 269, 306, 330, 542, 588, 605, 634, 654], "system_usb": [195, 196, 197, 198, 226, 227, 228, 229, 249, 250, 251, 252, 270, 271, 272, 273, 288, 289, 290, 291, 307, 308, 309, 310, 331, 332, 333, 334, 543, 544, 545, 546, 570, 571, 572, 573, 589, 590, 591, 592, 606, 607, 608, 609, 620, 621, 622, 623, 635, 636, 637, 638, 655, 656, 657, 658], "get_pin_mod": [195, 226, 249, 270, 288, 307, 331, 543, 570, 589, 606, 620, 635, 655], "idl": [195, 226, 249, 270, 288, 307, 331, 543, 570, 589, 606, 620, 635, 655, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pinmod": [195, 226, 249, 270, 288, 307, 331, 543, 570, 589, 606, 620, 635, 655, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pin_mod": [195, 226, 249, 270, 288, 307, 331, 543, 570, 589, 606, 620, 635, 655, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_getpinmodeinport_async": [195, 226, 249, 270, 288, 307, 331, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "uart_read": [203, 234, 257, 278, 318, 342, 547, 574, 593, 610, 642, 662, 714, 719, 733, 734, 735, 736, 738, 739], "anoth": [203, 204, 234, 235, 236, 237, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 576, 577, 593, 594, 610, 611, 642, 643, 662, 663, 746], "baudrat": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 733, 734, 735, 736, 738, 739], "9600": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663], "data_bit_mod": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663], "9": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 733, 734, 735, 736, 738, 739, 747], "parity_mod": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663], "none": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 364, 543, 547, 548, 570, 574, 575, 589, 593, 594, 606, 610, 611, 620, 635, 642, 643, 655, 662, 663, 680, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 747], "even": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 733, 734, 735, 736, 738, 739, 747], "pariti": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 733, 734, 735, 736, 738, 739, 746], "odd": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 733, 734, 735, 736, 738, 739, 747], "stop_bit_mod": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663], "read_byt": [203, 234, 257, 278, 318, 342, 547, 574, 593, 610, 642, 662, 714], "uart_open_async": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 719, 733, 734, 735, 736, 738, 739], "uart_setbaudrate_async": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 719, 733, 734, 735, 736, 738, 739], "uart_setdatabit_async": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 719, 733, 734, 735, 736, 738, 739], "uart_setparity_async": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 719, 733, 734, 735, 736, 738, 739], "uart_setnumstopbit_async": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 719, 733, 734, 735, 736, 738, 739], "informaion": [203, 234, 257, 278, 318, 342, 547, 574, 593, 610, 642, 662], "uart_read_async": [203, 234, 257, 278, 318, 342, 719, 733, 734, 735, 736, 738, 739], "uart_close_async": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 719, 733, 734, 735, 736, 738, 739], "uart_writ": [204, 235, 258, 279, 319, 343, 548, 575, 594, 611, 643, 663, 714, 719, 733, 734, 735, 736, 738, 739], "12345": [204, 235, 258, 279, 319, 343, 548, 575, 594, 611, 643, 663], "uart_write_async": [204, 235, 258, 279, 319, 343, 719, 733, 734, 735, 736, 738, 739], "chungle": [204, 235, 258, 279, 319, 343, 548, 575, 594, 611, 643, 663], "peopl": [204, 235, 258, 279, 319, 343, 548, 575, 594, 611, 643, 663], "can_read": [236, 576, 719, 735], "125": [236, 237, 576, 577, 735, 747], "khz": [236, 237, 576, 577, 735, 747], "250": [236, 237, 576, 577, 735, 743], "mhz": [236, 237, 576, 577, 735, 747], "can_open_async": [236, 237, 719, 735], "can_setspeed_async": [236, 237, 719, 735], "can_start_async": [236, 237, 719, 735], "frame": [236, 576, 733, 735, 736, 738, 739], "frame_list": [236, 576, 735], "can_read_async": [236, 719, 735], "01": [236, 541, 542, 576, 587, 588, 604, 605, 633, 634, 653, 654], "can_stop_async": [236, 237, 719, 735], "can_close_async": [236, 237, 719, 735], "can_writ": [237, 577, 719, 735], "can_length": [237, 577], "extend": [237, 577, 705, 735, 747], "can_typ": [237, 577], "remot": [237, 577, 735, 747], "id": [237, 577, 735], "can_write_async": [237, 719, 735], "33": [237, 577], "22": [237, 577], "11": [237, 577, 735, 743], "88": [237, 577], "77": [237, 577], "55": [237, 577], "66": [237, 577], "sec": [237, 577, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "temperature_rtd": [311, 312, 313, 639, 640, 641], "rtd_read_channel_data": [311, 639], "data0": [311, 312, 639, 640], "data1": [311, 312, 639, 640], "rtd_read_channel_data_with_logg": [312, 640], "logger_writelist": [312, 640, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "rtd_read_channel_statu": [313, 641], "38": [344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704], "system_wifi": [350, 351, 352, 353, 354, 355, 371, 372, 373, 374, 375, 376, 387, 388, 389, 390, 391, 392, 670, 671, 672, 673, 674, 675, 687, 688, 689, 690, 691, 692, 699, 700, 701, 702, 703, 704], "get_wifi_daq_statu": [350, 371, 387, 670, 687, 699], "basic": [350, 371, 387, 670, 687, 699], "rssi": [350, 371, 387, 670, 687, 699, 740, 741, 742], "batteri": [350, 371, 387, 670, 687, 699, 740, 741, 742], "power": [350, 371, 387, 670, 687, 699, 743], "charg": [350, 371, 387, 670, 687, 699, 740, 741, 742], "wifi_readrssi_async": [350, 371, 387, 719, 740, 741, 742], "wifi_readbattery_async": [350, 371, 387, 719, 740, 741, 742], "power_statu": [350, 371, 387, 670, 687, 699], "wifi_getpowergoodstatus_async": [350, 371, 387, 719, 740, 741, 742], "charge_statu": [350, 371, 387, 670, 687, 699], "wifi_getchargestatus_async": [350, 371, 387, 719, 740, 741, 742], "dbm": [350, 371, 387, 670, 687, 699, 740, 741, 742], "mv": [350, 371, 387, 670, 687, 699, 740, 741, 742], "set_led_statu": [354, 375, 391, 674, 691, 703], "wifi_resetled_async": [354, 375, 391, 719, 740, 741, 742], "green": [354, 375, 391, 674, 691, 703, 740, 741, 742], "wifi_setgreenled_async": [354, 375, 391, 719, 740, 741, 742], "blue": [354, 375, 391, 674, 691, 703, 740, 741, 742], "wifi_setblueled_async": [354, 375, 391, 719, 740, 741, 742], "red": [354, 375, 391, 674, 691, 703, 740, 741, 742], "wifi_setredled_async": [354, 375, 391, 719, 740, 741, 742], "ahrs_getacceler": [360, 676, 719, 741], "three": [360, 361, 362, 363, 676, 677, 678, 679, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "orient": [360, 362, 363, 364, 678, 679, 680, 741], "angular": [360, 361, 362, 363, 677, 678, 741], "333": [360, 361, 362, 363, 364, 676, 677, 678, 679, 680], "ahrs_open_async": [360, 361, 362, 363, 364, 719, 741], "ahrs_start_async": [360, 361, 362, 363, 364, 719, 741], "ahrs_list": [360, 361, 362, 363, 364, 678, 680], "ahrs_getacceleration_async": [360, 719, 741], "ahrs_stop_async": [360, 361, 362, 363, 364, 719, 741], "ahrs_close_async": [360, 361, 362, 363, 364, 719, 741], "ahrs_getangularveloc": [361, 677, 719, 741], "ahrs_getangularvelocity_async": [361, 363, 719, 741], "ahrs_getestim": [362, 678, 680, 719, 741], "ahrs_getestimate_async": [362, 364, 719, 741], "ahrs_getorient": [363, 679, 719, 741], "ahrs_visu": [364, 680], "3d": [364, 680], "stl": [364, 680], "mesh": [364, 680], "mpl_toolkit": [364, 680], "mplot3d": [364, 680], "pil": [364, 680], "imag": [364, 680, 707], "matplotlib": [364, 680, 705], "pyplot": [364, 680], "plt": [364, 680], "gridspec": [364, 680], "mpimg": [364, 680], "font_manag": [364, 680], "rcparam": [364, 680], "transform": [364, 680], "affine2d": [364, 680], "data_path": [364, 680], "materi": [364, 680, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "viz_data": [364, 680], "img_path": [364, 680], "avion_": [364, 680], "font": [364, 680], "findsystemfont": [364, 680], "fontmanag": [364, 680], "addfont": [364, 680], "famili": [364, 680], "global": [364, 680], "mono": [364, 680], "bmh": [364, 680], "bmh_burgundi": [364, 680], "a70f34": [364, 680], "bmh_blue": [364, 680], "3d90be": [364, 680], "bmh_purpl": [364, 680], "7c6ca4": [364, 680], "img_wpc": [364, 680], "imread": [364, 680], "trademark": [364, 680, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "jpg": [364, 680, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "img_wpc_pil": [364, 680], "plane": [364, 680], "constant": [364, 680], "img_yaw": [364, 680], "yaw": [364, 680], "png": [364, 680, 705, 706, 707, 708, 709, 711, 712, 713, 714], "img_pitch": [364, 680], "pitch": [364, 680, 722, 732], "img_rol": [364, 680], "roll": [364, 680], "size_yaw": [364, 680], "arrai": [364, 680, 705], "shape": [364, 680], "center_yaw": [364, 680], "diag_yaw": [364, 680], "sqrt": [364, 680], "sum": [364, 680], "alpha_yaw": [364, 680], "size_pitch": [364, 680], "center_pitch": [364, 680], "diag_pitch": [364, 680], "alpha_pitch": [364, 680], "size_rol": [364, 680], "center_rol": [364, 680], "diag_rol": [364, 680], "alpha_rol": [364, 680], "dictionari": [364, 680, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "plane_dict": [364, 680], "dict": [364, 680], "img": [364, 680], "size": [364, 680, 733, 734, 735, 736, 738, 739, 746], "center": [364, 680, 705, 715, 722, 732], "diag": [364, 680], "alpha": [364, 680, 705], "model_dict": [364, 680], "cat": [364, 680], "label": [364, 680, 705], "view": [364, 680], "400": [364, 680], "rat": [364, 680], "default_model": [364, 680], "degree_to_radian": [364, 680], "pi": [364, 680], "180": [364, 680], "radian_to_degre": [364, 680], "wpc_initializefigur": [364, 680], "nb_row": [364, 680], "nb_col": [364, 680], "share_x": [364, 680], "share_i": [364, 680], "option": [364, 680], "fig": [364, 680], "figur": [364, 680], "figsiz": [364, 680], "clf": [364, 680], "g": [364, 680, 743], "width_ratio": [364, 680], "height_ratio": [364, 680], "d": [364, 680, 706, 707, 719, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 745, 748], "ax_main": [364, 680], "add_subplot": [364, 680], "set_titl": [364, 680], "plot": [364, 680, 705], "ax_plane_yaw": [364, 680], "ax_plane_pitch": [364, 680], "ax_plane_rol": [364, 680], "ax_value_yaw": [364, 680], "ax_value_pitch": [364, 680], "ax_value_rol": [364, 680], "pil_width": [364, 680], "width": [364, 680, 707, 722, 732], "pil_height": [364, 680], "height": [364, 680, 707], "new_pil_imag": [364, 680], "resiz": [364, 680], "figimag": [364, 680], "xo": [364, 680], "bbox": [364, 680], "xmin": [364, 680, 705], "yo": [364, 680], "ymin": [364, 680], "zorder": [364, 680], "ax_dict": [364, 680], "plane_yaw": [364, 680], "plane_pitch": [364, 680], "plane_rol": [364, 680], "value_yaw": [364, 680], "value_pitch": [364, 680], "value_rol": [364, 680], "grid": [364, 680, 705], "further": [364, 680], "ax_grid": [364, 680], "empti": [364, 680], "row": [364, 680, 710], "column": [364, 680, 710], "subplot": [364, 680], "ax_mat": [364, 680], "sharex": [364, 680], "sharei": [364, 680], "squeez": [364, 680], "would": [364, 680], "share": [364, 680], "same": [364, 680], "ensur": [364, 680], "2d": [364, 680], "ax_arr": [364, 680], "flatten": [364, 680], "ax": [364, 680, 705, 722, 732, 743], "add": [364, 680, 710], "wpc_initialize_plan": [364, 680], "angle_typ": [364, 680], "set_axis_off": [364, 680], "d_plane": [364, 680], "img_plan": [364, 680], "im": [364, 680], "imshow": [364, 680], "size_plan": [364, 680], "center_plan": [364, 680], "diag_plan": [364, 680], "alpha_plan": [364, 680], "tt": [364, 680], "toler": [364, 680], "threshold": [364, 680], "percent": [364, 680, 722, 732], "cut": [364, 680], "circl": [364, 680], "set_xlim": [364, 680, 705], "set_ylim": [364, 680, 705], "cc": [364, 680], "fill": [364, 680], "color": [364, 680, 705, 710], "black": [364, 680], "linewidth": [364, 680, 705], "linestyl": [364, 680, 705], "dashdot": [364, 680], "add_artist": [364, 680], "wpc_showfigur": [364, 680], "w": [364, 680], "h": [364, 680], "get_size_inch": [364, 680], "set_size_inch": [364, 680], "ion": [364, 680], "turn": [364, 680, 735, 740, 741, 742], "interact": [364, 680], "wpc_getrotmat": [364, 680], "use_deg": [364, 680], "rot_mat_x": [364, 680], "co": [364, 680], "sin": [364, 680], "rot_mat_i": [364, 680], "rot_mat_z": [364, 680], "rot_mat": [364, 680], "dot": [364, 680], "back": [364, 680], "rxryrz": [364, 680], "wpc_showempti": [364, 680], "tag": [364, 680], "im_yaw": [364, 680], "im_pitch": [364, 680], "im_rol": [364, 680], "im_dict": [364, 680], "from_fil": [364, 680], "data_orig": [364, 680], "vector": [364, 680, 721, 722, 732], "poli": [364, 680], "art3d": [364, 680], "poly3dcollect": [364, 680], "edgecolor": [364, 680], "lw": [364, 680], "lightsteelblu": [364, 680], "add_collection3d": [364, 680], "scale": [364, 680], "view_init": [364, 680], "elev": [364, 680], "azim": [364, 680], "auto_scale_xyz": [364, 680], "fusion": [364, 680], "weight": [364, 680], "bold": [364, 680], "subplots_adjust": [364, 680], "left": [364, 680, 705], "95": [364, 680], "bottom": [364, 680], "top": [364, 680], "canva": [364, 680, 705], "manag": [364, 680], "set_window_titl": [364, 680], "wpc_draw3dmodel": [364, 680], "rotat": [364, 680], "set_vert": [364, 680], "wpc_plot_plan": [364, 680], "remov": [364, 680, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "calcul": [364, 680, 707, 722, 732], "angl": [364, 680], "radian": [364, 680], "deg2rad": [364, 680], "convert": [364, 680, 707, 708, 709], "en": [364, 680], "rotation_matrix": [364, 680], "rotate_deg_around": [364, 680], "rad2deg": [364, 680], "set_transform": [364, 680], "transdata": [364, 680], "wpc_text_button": [364, 680], "clear": [364, 680, 705, 710, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "add_patch": [364, 680], "rectangl": [364, 680], "facecolor": [364, 680, 705], "ebebeb": [364, 680], "transax": [364, 680], "2f": [364, 680, 705], "text": [364, 680, 705, 706, 707, 708, 709, 711, 712, 713, 714], "deg": [364, 680], "fontsiz": [364, 680, 705], "32": [364, 680, 733, 735, 736, 738, 739, 747], "va": [364, 680], "fignum_exist": [364, 680], "tight_layout": [364, 680], "paus": [364, 680], "bcst_enumeratenetworkdevic": [397, 710, 719, 720], "sys_getdriverinfo": [398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 703, 704, 711, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "motion_rstencoderposi": [398, 399, 400, 401, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 428, 431, 432, 719, 721, 722, 732], "motion_getlimitstatu": [398, 399, 423, 425, 719, 721, 722, 732], "motion_start": [400, 401], "net_getipaddrandsubmask": [406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "net_getmacaddr": [406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getserialnumb": [407, 434, 444, 455, 465, 470, 475, 481, 488, 494, 498, 523, 544, 571, 590, 607, 621, 636, 656, 672, 689, 701, 711, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_reboot": [408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setrtc": [409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_getrtc": [409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704, 711, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "motion_opencfgfil": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 719, 721, 722, 732], "opencfgfil": [410, 412, 416, 419, 422, 423, 424, 425, 428, 431, 432], "motion_loadcfgfil": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 431, 432, 719, 721, 722, 732], "loadcfgfil": [410, 412, 416, 419, 422, 423, 424, 425, 428, 431, 432], "motion_cfgaxi": [410, 412, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432, 719, 722, 732], "motion_cfghom": [410, 423, 425, 428, 719, 722, 732], "motion_cfgaxismov": [410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 428, 429, 431, 432, 719, 722, 732], "motion_startsingleaxismov": [410, 411, 412, 413, 414, 415, 416, 417, 419, 428, 431, 432, 719, 722, 732], "motion_getmovestatu": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 719, 722, 732], "motion_getlogicalposi": [410, 426, 428, 719, 722, 732], "motion_getencoderposi": [410, 428, 719, 722, 732], "motion_stop": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 431, 432, 719, 722, 732], "motion_cfgjerkandaccelmod": [411, 417, 719, 722, 732], "motion_cfgalarm": [412, 719, 722, 732], "motion_cfgbreakpoint": [413, 719, 722, 732], "motion_enablebreakpoint": [413, 719, 722, 732], "motion_cfgcaptur": [414, 719, 722, 732], "motion_enablecaptur": [414, 719, 722, 732], "motion_readcapturepoint": [414, 719, 722, 732], "motion_cfginposi": [416, 719, 722, 732], "motion_cfgcircularinterpo": [417, 719, 722, 732], "motion_startcircularinterpo": [417, 719, 722, 732], "motion_cfg2axislinearinterpo": [418, 719, 722, 732], "motion_startlinearinterpo": [418, 421, 719, 722, 732], "motion_3axishronous_mov": 419, "motion_cfghelicalinterpo": [420, 719, 722, 732], "motion_starthelicalinterpo": [420, 719, 722, 732], "motion_cfg3axislinearinterpo": [421, 719, 722, 732], "cfglimit": 422, "motion_startmultiaxismov": [422, 719, 722, 732], "motion_cfgfindref": [423, 424, 425, 719, 722, 732], "motion_findref": [423, 424, 425, 719, 722, 732], "motion_gethomestatu": [423, 425, 719, 722, 732], "motion_checkref": [423, 424, 425, 719, 722, 732], "motion_cfgencod": [424, 431, 432, 719, 721, 722, 732], "motion_setlogicalposi": [426, 719, 722, 732], "motion_overrideaxisposi": [428, 719, 722, 732], "motion_savecfgfil": [429, 719, 721, 722, 732], "motion_overrideaxisveloc": [431, 432, 719, 722, 732], "motion_overrideaxisaccel": [432, 719, 722, 732], "ai_open": [437, 438, 440, 441, 442, 468, 473, 504, 505, 506, 507, 508, 509, 510, 511, 512, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 555, 556, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "ai_setmod": [437, 438, 440, 441, 442, 504, 505, 506, 507, 508, 509, 512, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 719, 723, 732, 733, 734, 740, 741, 742], "ai_setsamplingr": [437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 719, 723, 732, 733, 734, 740, 741, 742], "ai_setnumsampl": [437, 504, 526, 549, 664, 681, 693, 705, 719, 723, 732, 733, 734, 740, 741, 742], "ai_start": [437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 719, 723, 732, 733, 734, 740, 741, 742], "ai_readstream": [437, 438, 440, 504, 505, 506, 507, 508, 509, 510, 511, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 719, 723, 732, 733, 734, 740, 741, 742], "ai_stop": [437, 438, 440, 504, 505, 506, 507, 512, 526, 527, 529, 549, 550, 552, 664, 665, 667, 681, 682, 684, 693, 694, 696, 705, 719, 723, 732, 733, 734, 740, 741, 742], "ai_clos": [437, 438, 440, 441, 442, 468, 473, 504, 505, 506, 507, 508, 509, 510, 511, 512, 526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 555, 556, 664, 665, 667, 668, 669, 681, 682, 684, 685, 686, 693, 694, 696, 697, 698, 705, 719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "ai_readondemand": [441, 442, 468, 473, 504, 505, 507, 508, 509, 510, 511, 530, 531, 553, 554, 555, 556, 668, 669, 685, 686, 697, 698, 705, 719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "do_openpin": [447, 449, 451, 458, 460, 462, 533, 535, 537, 541, 542, 562, 564, 566, 579, 581, 583, 587, 588, 596, 598, 600, 604, 605, 613, 615, 617, 625, 627, 629, 633, 634, 645, 647, 649, 653, 654, 709, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_writepin": [447, 451, 458, 462, 516, 520, 533, 537, 541, 542, 562, 566, 579, 583, 587, 588, 596, 600, 604, 605, 613, 617, 625, 629, 633, 634, 645, 649, 653, 654, 709, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_openpin": [447, 458, 533, 562, 579, 596, 613, 625, 645, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_readpin": [447, 458, 516, 533, 562, 579, 596, 613, 625, 645, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_closepin": [447, 449, 451, 458, 460, 462, 533, 535, 537, 541, 542, 562, 564, 566, 579, 581, 583, 587, 588, 596, 598, 600, 604, 605, 613, 615, 617, 625, 627, 629, 633, 634, 645, 647, 649, 653, 654, 709, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_closepin": [447, 458, 533, 562, 579, 596, 613, 625, 645, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_openport": [448, 450, 452, 459, 461, 463, 534, 536, 538, 563, 565, 567, 580, 582, 584, 597, 599, 601, 614, 616, 618, 626, 628, 630, 646, 648, 650, 707, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_openport": [448, 459, 534, 563, 580, 597, 614, 626, 646, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_writeport": [448, 452, 459, 463, 479, 517, 521, 534, 538, 563, 567, 580, 584, 597, 601, 614, 618, 626, 630, 646, 650, 707, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_readport": [448, 459, 517, 534, 563, 580, 597, 614, 626, 646, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_closeport": [448, 450, 452, 459, 461, 463, 534, 536, 538, 563, 565, 567, 580, 582, 584, 597, 599, 601, 614, 616, 618, 626, 628, 630, 646, 648, 650, 707, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "di_closeport": [448, 459, 534, 563, 580, 597, 614, 626, 646, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_togglepin": [449, 460, 518, 535, 564, 581, 598, 615, 627, 647, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_toggleport": [450, 461, 519, 536, 565, 582, 599, 616, 628, 648, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "pwm_open": [453, 540, 569, 586, 603, 619, 632, 652, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_setfrequ": [453, 540, 569, 586, 603, 619, 632, 652, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_setdutycycl": [453, 540, 569, 586, 603, 619, 632, 652, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_start": [453, 540, 569, 586, 603, 619, 632, 652, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_stop": [453, 540, 569, 586, 603, 619, 632, 652, 719, 724, 733, 734, 735, 736, 737, 738, 739], "pwm_close": [453, 540, 569, 586, 603, 619, 632, 652, 719, 724, 733, 734, 735, 736, 737, 738, 739], "relay_open": [478, 479, 719, 728], "relay_read": [478, 719, 728], "relay_clos": [478, 479, 719, 728], "ao_open": [484, 485, 486, 510, 511, 512, 514, 515, 555, 556, 558, 559, 560, 706, 719, 729, 732, 734], "ao_setmod": [484, 558, 719, 729, 732, 734], "ao_setsamplingr": [484, 558, 719, 729, 732, 734], "ao_setenablechannel": [484, 558, 719, 729, 732, 734], "ao_setform": [484, 558, 719, 729, 732, 734], "ao_setformparam": [484, 558, 719, 729, 732, 734], "ao_openstream": [484, 558, 719, 729, 732, 734], "ao_startstream": [484, 558, 719, 729, 732, 734], "ao_closestream": [484, 558, 719, 729, 732, 734], "ao_clos": [484, 485, 486, 510, 511, 512, 514, 515, 555, 556, 558, 559, 560, 706, 719, 729, 732, 734], "ao_writeallchannel": [485, 510, 514, 555, 559, 706, 719, 729, 732, 734], "ao_writeonechannel": [486, 511, 512, 515, 556, 560, 719, 729, 732, 734], "dpot_open": [491, 492, 719, 730], "dpot_clos": [491, 492, 719, 730], "thermal_open": [501, 502, 503, 639, 640, 641, 659, 660, 661, 712, 713, 719, 731, 738, 739], "thermal_setoversampl": [501, 502, 659, 660, 713, 719, 731, 739], "thermal_settyp": [501, 502, 659, 660, 712, 713, 719, 731, 738, 739], "thermal_readsensor": [501, 502, 639, 640, 659, 660, 712, 713, 719, 731, 738, 739], "thermal_clos": [501, 502, 503, 639, 640, 641, 659, 660, 661, 712, 713, 719, 731, 738, 739], "thermal_getstatu": [503, 641, 661, 719, 731, 738, 739], "sys_setaiomod": [504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ai_enablec": [504, 505, 506, 507, 508, 509, 510, 511, 512, 719, 723, 732, 733, 734, 740, 741, 742], "sys_getmod": [504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setdiomod": [516, 517, 518, 519, 520, 521, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "dio_loadstartup": [516, 517, 518, 519, 520, 521, 719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "ai_enablechannel": [526, 527, 529, 530, 531, 549, 550, 552, 553, 554, 555, 556, 719, 723, 732, 733, 734, 740, 741, 742], "counter_open": [532, 561, 578, 595, 612, 624, 644, 719, 733, 734, 735, 736, 737, 738, 739], "counter_start": [532, 561, 578, 595, 612, 624, 644, 719, 733, 734, 735, 736, 737, 738, 739], "counter_stop": [532, 561, 578, 595, 612, 624, 644, 719, 733, 734, 735, 736, 737, 738, 739], "counter_clos": [532, 561, 578, 595, 612, 624, 644, 719, 733, 734, 735, 736, 737, 738, 739], "i2c_open": [539, 568, 585, 602, 631, 651, 708, 719, 733, 734, 735, 736, 738, 739], "i2c_setclockr": [539, 568, 585, 602, 631, 651, 708, 719, 733, 734, 735, 736, 738, 739], "i2c_writ": [539, 568, 585, 602, 631, 651, 708, 719, 733, 734, 735, 736, 738, 739], "pointer": [539, 568, 585, 602, 631, 651], "i2c_read": [539, 568, 585, 602, 631, 651, 708, 719, 733, 734, 735, 736, 738, 739], "i2c_clos": [539, 568, 585, 602, 631, 651, 708, 719, 733, 734, 735, 736, 738, 739], "spi_open": [541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 719, 733, 735, 736, 738, 739], "spi_setdatas": [541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 719, 733, 735, 736, 738, 739], "spi_setfirstbit": [541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 719, 733, 735, 736, 738, 739], "spi_setprescal": [541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 719, 733, 735, 736, 738, 739], "spi_setmod": [541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 719, 733, 735, 736, 738, 739], "spi_readandwrit": [541, 587, 604, 633, 653, 709, 719, 733, 735, 736, 738, 739], "spi_clos": [541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 719, 733, 735, 736, 738, 739], "sys_getpinmodeinport": [543, 570, 589, 606, 620, 635, 655, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "uart_open": [547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 719, 733, 734, 735, 736, 738, 739], "uart_setbaudr": [547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 719, 733, 734, 735, 736, 738, 739], "uart_setdatabit": [547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 719, 733, 734, 735, 736, 738, 739], "uart_setpar": [547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 719, 733, 734, 735, 736, 738, 739], "uart_setnumstopbit": [547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 719, 733, 734, 735, 736, 738, 739], "uart_clos": [547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 719, 733, 734, 735, 736, 738, 739], "can_open": [576, 577, 719, 735], "can_setspe": [576, 577, 719, 735], "can_start": [576, 577, 719, 735], "can_stop": [576, 577, 719, 735], "can_clos": [576, 577, 719, 735], "wifi_readrssi": [670, 687, 699, 719, 740, 741, 742], "wifi_readbatteri": [670, 687, 699, 719, 740, 741, 742], "wifi_getpowergoodstatu": [670, 687, 699, 719, 740, 741, 742], "wifi_getchargestatu": [670, 687, 699, 719, 740, 741, 742], "wifi_resetl": [674, 691, 703, 719, 740, 741, 742], "wifi_setgreenl": [674, 691, 703, 719, 740, 741, 742], "wifi_setbluel": [674, 691, 703, 719, 740, 741, 742], "wifi_setblule": [674, 691, 703], "wifi_setredl": [674, 691, 703, 719, 740, 741, 742], "ahrs_open": [676, 677, 678, 679, 680, 719, 741], "ahrs_start": [676, 677, 678, 679, 680, 719, 741], "ahrs_stop": [676, 677, 678, 679, 680, 719, 741], "ahrs_clos": [676, 677, 678, 679, 680, 719, 741], "example_analog_input": 705, "daq": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 723, 732, 744, 745, 746, 748], "o": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719], "sy": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "third": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "parti": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "anim": 705, "pyqt5": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "qtwidget": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "qtgui": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "qwidget": 705, "qmessagebox": [705, 707, 711], "ui_design": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "ui_example_gui_ai": 705, "ui_mainwindow": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "class": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "matplotlibwidget": 705, "__init__": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "self": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "parent": 705, "super": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "mainwindow": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "qmainwindow": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "ui": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "setupui": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "path": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 746], "file_path": [705, 706, 707, 708, 709, 711, 712, 713, 714], "dirnam": [705, 706, 707, 708, 709, 711, 712, 713, 714], "__file__": [705, 706, 707, 708, 709, 711, 712, 713, 714], "trademark_path": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "blue_led_path": [705, 706, 707, 708, 709, 711, 712, 713, 714], "led_blu": [705, 706, 707, 708, 709, 711, 712, 713, 714], "red_led_path": [705, 706, 707, 708, 709, 711, 712, 713, 714], "led_r": [705, 706, 707, 708, 709, 711, 712, 713, 714], "green_led_path": [705, 706, 707, 708, 709, 711, 712, 713, 714], "led_green": [705, 706, 707, 708, 709, 711, 712, 713, 714], "gray_led_path": [705, 706, 707, 708, 709, 711, 712, 713, 714], "led_grai": [705, 706, 707, 708, 709, 711, 712, 713, 714], "lb_trademark": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "setpixmap": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "qpixmap": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "lb_led": [705, 706, 707, 708, 709, 711, 712, 713, 714], "flag": [705, 706, 707, 708, 709, 711, 712, 713, 714], "connect_flag": [705, 706, 707, 708, 709, 711, 712, 713, 714], "declar": [705, 706, 707, 708, 709, 711, 712, 713, 714], "plot_y_min": 705, "plot_y_max": 705, "channel_list": [705, 729, 732, 734], "append": [705, 706, 708, 709, 710], "plot_total_tim": 705, "callback": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "event": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "btn_connect": [705, 706, 707, 708, 709, 711, 712, 713, 714], "click": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "connectev": [705, 706, 707, 708, 709, 711, 712, 713, 714], "btn_disconnect": [705, 706, 707, 708, 709, 711, 712, 713, 714], "disconnectev": [705, 706, 707, 708, 709, 711, 712, 713, 714], "btn_aistart": 705, "startaiev": 705, "btn_aistop": 705, "stopaiev": 705, "lineedit_samplingr": 705, "returnpress": 705, "setsamplingrateev": 705, "lineedit_numsampl": 705, "setnumofsampleev": 705, "combobox_aimod": 705, "currentindexchang": 705, "chooseaimodeev": 705, "lineedit_yscalemax": 705, "setyscalemaxev": 705, "lineedit_yscalemin": 705, "setyscaleminev": 705, "kill": 705, "ai_lock": 705, "lock": 705, "acquir": [705, 723, 732, 733, 734, 740, 741, 742], "ai_stream_thread": 705, "aistreamthread": 705, "plotiniti": 705, "plotanim": 705, "closeev": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "selecthandl": [705, 706, 707, 708, 709, 711, 712, 713, 714], "handle_idx": [705, 706, 707, 708, 709, 711, 712, 713, 714], "combobox_handl": [705, 706, 707, 708, 709, 711, 712, 713, 714], "currentindex": [705, 706, 707, 708, 709, 711, 712, 713, 714], "updateparam": [705, 706, 707, 708, 709, 711, 712, 713, 714], "gui": [705, 706, 707, 708, 709, 711, 712, 713, 714], "lineedit_ip": [705, 706, 707, 708, 709, 711, 712, 713, 714], "combobox_port": [705, 706, 707, 708, 709, 712, 713, 714], "ai_sampling_r": 705, "float": [705, 706, 722, 723, 724, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ai_n_sampl": 705, "param": [705, 706, 707, 708, 709, 711, 712, 713, 714], "error": [705, 706, 707, 708, 709, 711, 712, 713, 714, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "setdisplayplotnum": 705, "checkconnectionstatu": [705, 707, 711], "checkboxstatu": 705, "x": [705, 722, 732], "mplwidget": 705, "rearrag": 705, "accord": 705, "amount": [705, 723, 724, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "funcanim": 705, "plotchart": 705, "plotgetaxisdata": 705, "interv": 705, "repeat": 705, "draw": 705, "checkbox": 705, "mainui": 705, "window": 705, "list_ch": 705, "cb_ch0": 705, "cb_ch1": 705, "cb_ch2": 705, "cb_ch3": 705, "cb_ch4": 705, "cb_ch5": 705, "cb_ch6": 705, "cb_ch7": 705, "ischeck": [705, 707], "xmax": 705, "x_max": 705, "x_min": 705, "max": [705, 733, 743], "x_list": 705, "xtick": 705, "dx": 705, "tick": 705, "arang": 705, "yield": [705, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "marker": 705, "markers": 705, "err_xlist": 705, "err_ylist": 705, "y": [705, 722, 732], "xtickslabel": 705, "set_xtick": 705, "new_tick": 705, "plotconvertxtick": 705, "set_xticklabel": 705, "set_xlabel": 705, "12": [705, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "set_ylabel": 705, "v": [705, 726, 727], "legend": 705, "loc": 705, "shadow": 705, "bbox_to_anchor": 705, "75": 705, "f0f0f0": 705, "bac3d1": 705, "num": 705, "yscalemax": 705, "yscalemin": 705, "messag": [705, 707, 711, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "server": [705, 707, 711], "app": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "qapplic": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "wpc_main_ui": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "exit": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "exec_": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "example_analog_output": 706, "analog": [706, 729, 740, 741, 742, 743], "ui_example_gui_ao": 706, "devid": [706, 712, 713, 714], "fct_list": 706, "hrztslider_cb0": 706, "hrztslider_cb1": 706, "hrztslider_cb2": 706, "hrztslider_cb3": 706, "hrztslider_cb4": 706, "hrztslider_cb5": 706, "hrztslider_cb6": 706, "hrztslider_cb7": 706, "obj_hrztslid": 706, "getattr": [706, 707], "horizontalslid": 706, "setrang": 706, "setsinglestep": 706, "valuechang": 706, "btn_updat": 706, "writeaovalu": 706, "btn_setal": 706, "setlineeditvalueev": 706, "scaledvalu": 706, "lineedit0": 706, "settext": [706, 708, 709, 711, 712, 713, 714], "lineedit1": 706, "lineedit2": 706, "lineedit3": 706, "lineedit4": 706, "lineedit5": 706, "lineedit6": 706, "lineedit7": 706, "voltage_list": 706, "obj_lineedit": 706, "lineedit": 706, "lineedit_setal": 706, "example_digital_output": 707, "ui_example_gui_do": 707, "state_c": 707, "255": [707, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "switch_blue_path": 707, "switch_blu": 707, "switch_gray_path": 707, "switch_grai": 707, "backward": 707, "slash": 707, "replac": [707, 708, 709], "obj_chbox_st": 707, "checkbox_st": 707, "statechang": 707, "statedoev": 707, "setstylesheet": [707, 710], "qcheckbox": 707, "indic": [707, 722, 723, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 746], "60px": 707, "uncheck": 707, "url": 707, "mcu": 707, "example_i2c": 708, "ui_example_gui_i2c": 708, "btn_write": [708, 709, 714], "writeev": [708, 709, 714], "btn_read": [708, 709, 714], "readev": [708, 709, 714], "btn_set": [708, 709, 712, 713], "setclockev": 708, "clock_mod": 708, "combobox_clockr": 708, "hex": [708, 709], "write_addr": 708, "lineedit_writeaddr": 708, "lineedit_writ": [708, 709, 714], "write_data": [708, 709, 714, 733, 734, 735, 736, 738, 739], "converstrtointlist": [708, 709], "byte_read": 708, "lineedit_byteread": [708, 714], "read_addr": 708, "lineedit_readaddr": 708, "lineedit_read": [708, 709, 714], "str_": [708, 709, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "split": [708, 709, 710], "comma": [708, 709], "write_data_strlist": [708, 709], "write_data_int": [708, 709], "item": [708, 709], "example_spi": 709, "ui_example_gui_spi": 709, "setev": [709, 712, 713], "combobox_mod": 709, "combobox_prescal": 709, "example_find_all_devic": 710, "find": [710, 716, 717, 721, 722, 732], "qtablewidget": 710, "qtcore": 710, "qt": 710, "ui_example_gui_find_all_devic": 710, "column_width": 710, "160": 710, "getcwd": 710, "tabl": 710, "initibroadcastt": 710, "button": 710, "btn_broadcast": 710, "broadcastnetworkev": 710, "broadcast_list": 710, "tablewidget_brst": 710, "setcolumnwidth": 710, "background": 710, "217536": 710, "loaddata": 710, "setrowcount": 710, "setitem": 710, "qtablewidgetitem": 710, "firmware_v": 710, "restoreoverridecursor": 710, "waitcursor": 710, "setoverridecursor": 710, "broadcast": [710, 720], "broadcast_info": 710, "length": [710, 746], "device_amount": 710, "model_vers": 710, "str_list": 710, "_": 710, "example_get_device_info": 711, "ui_example_gui_get_device_info": 711, "btn_deviceinfo": 711, "getdeviceinfoev": 711, "sys_getipaddrandsubmask": [711, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getmacaddr": [711, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "lineedit_sbk": 711, "lineedit_serialnum": 711, "lineedit_mac": 711, "lineedit_model": 711, "lineedit_vers": 711, "lineedit_rtc": 711, "tcp": [711, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742, 746], "example_rtd": 712, "ui_example_gui_rtd": 712, "btn_rtd": 712, "rtdevent": 712, "combobox_typ": [712, 713], "noisereject": [712, 713], "combobox_noisereject": [712, 713], "lineedit_sensor0": [712, 713], "lineedit_sensor1": [712, 713], "example_thermo": 713, "ui_example_gui_thermocoupl": 713, "btn_temp": 713, "tempev": 713, "combobox_oversampl": 713, "example_uart": 714, "ui_example_gui_uart": 714, "lb_ledport": 714, "btn_open": 714, "openportev": 714, "btn_close": 714, "closeportev": 714, "combobox_baudr": 714, "currenttext": 714, "databit": 714, "combobox_databit": 714, "combobox_par": 714, "stopbit": 714, "combobox_stopbit": 714, "test": [715, 721, 722, 732], "panel": 715, "finder": [715, 719], "logger": [716, 717], "multi": [716, 717, 722, 732, 743], "waveform": [716, 717], "loopback": [716, 717], "blinki": [716, 717], "hello": [716, 717], "tutori": 716, "multipl": [716, 722, 732], "drive": [716, 717, 721, 746, 748], "posit": [716, 717, 721, 722, 732, 740, 741, 742, 747], "blend": [716, 717], "scan": [716, 717, 721], "logic": [716, 717, 721, 722, 732, 747], "1axi": [716, 717], "alarm": [716, 717, 721, 722, 732], "breakpoint": [716, 717, 722, 732, 746], "captur": [716, 717, 722, 732, 743, 746], "inposit": [716, 717, 722, 732], "2axi": [716, 717], "circular": [716, 717, 722, 732, 743], "interpo": [716, 717], "linear": [716, 717, 722, 732, 743], "3axi": [716, 717], "helic": [716, 717, 722, 732, 743], "pwm": [716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 746], "relai": [716, 717, 728, 743, 746, 748], "dpot": [716, 717, 730, 746, 748], "tc": [716, 717, 731, 738, 739, 748], "i2c": [716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "spi": [716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748], "uart": [716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 748], "rtd": [716, 717, 731, 738, 739, 748], "ahr": [716, 717, 741, 746, 748], "getacceler": [716, 717], "getestim": [716, 717], "getangularveloc": [716, 717], "getorient": [716, 717], "visual": [716, 717], "control": [718, 722, 743], "motion card": 718, "wifi": [718, 743, 744, 745, 748], "descript": 719, "bcst_checkmacandreboot": [719, 720], "bcst_checkmacandreboot_async": [719, 720], "bcst_checkmacandsetip": [719, 720], "bcst_checkmacandsetip_async": [719, 720], "e3": [719, 744, 748], "A": [719, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 743, 744, 748], "pinout": 719, "ai_getport": [719, 723, 726, 727, 732, 733, 734, 740, 741, 742], "net_getgatewai": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "net_getgateway_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "net_setipaddrandsubmask": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "net_setipaddrandsubmask_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getgatewai": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getgateway_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getipaddrandsubmask_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getmacaddr_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_getpythonvers": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_getpythonversion_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setdimod": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setdimode_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setdomod": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setdomode_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setipaddrandsubmask": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_setipaddrandsubmask_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "sys_setidlemod": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setidlemode_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setmotionmod": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setmotionmode_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setswitchmod": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "sys_setswitchmode_async": [719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "wifi_getconfigur": [719, 740, 741, 742], "wifi_getconfiguration_async": [719, 740, 741, 742], "wifi_getwifibandwidth": [719, 740, 741, 742], "wifi_getwifibandwidth_async": [719, 740, 741, 742], "ah": [719, 744, 748], "ahrs_getorientation_async": [719, 741], "ahrs_reset": [719, 741], "ahrs_reset_async": [719, 741], "f4": [719, 744, 748], "ao_getport": [719, 729, 732, 734], "ao_getvalu": [719, 729, 732, 734], "ao_getvalues_async": [719, 729, 732, 734], "di_getpinmap": [719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "do_getpinmap": [719, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "motion_cfg4axislinearinterpo": [719, 722, 732], "motion_cfg4axislinearinterpo_async": [719, 722, 732], "edriv": [719, 743, 748], "st": [719, 743, 748], "motion_cfgaxisdirect": [719, 721], "motion_cfgaxisdirection_async": [719, 721], "motion_getalarmstatu": [719, 721], "motion_getalarmstatus_async": [719, 721], "motion_getparamet": [719, 721], "motion_readcurrentveloc": [719, 721], "motion_readcurrentvelocity_async": [719, 721], "motion_readencoderposit": [719, 721], "motion_readencoderposition_async": [719, 721], "motion_resetfactori": [719, 721], "motion_resetfactory_async": [719, 721], "motion_startfindzpolar": [719, 721], "motion_startfindzpolarity_async": [719, 721], "ethan": [719, 744, 745, 748], "ia": [719, 748], "l": [719, 748], "p": [719, 748], "thermal_getpinmap": [719, 731, 738, 739], "f1": [719, 744, 745, 748], "i2c_getpinmap": [719, 733, 734, 735, 736, 738, 739], "i2c_reset": [719, 733, 734, 735, 736, 738, 739], "i2c_reset_async": [719, 733, 734, 735, 736, 738, 739], "i2c_setaddresss": [719, 733, 734, 735, 736, 738, 739], "i2c_setaddresssize_async": [719, 733, 734, 735, 736, 738, 739], "spi_getpinmap": [719, 733, 735, 736, 738, 739], "spi_read": [719, 733, 735, 736, 738, 739], "spi_read_async": [719, 733, 735, 736, 738, 739], "spi_reset": [719, 733, 735, 736, 738, 739], "spi_reset_async": [719, 733, 735, 736, 738, 739], "uart_getpinmap": [719, 733, 734, 735, 736, 738, 739], "uart_reset": [719, 733, 734, 735, 736, 738, 739], "uart_reset_async": [719, 733, 734, 735, 736, 738, 739], "snk": 719, "aod": [719, 744, 745, 748], "td": [719, 745, 748], "rd": [719, 745, 748], "cd": [719, 745, 748], "can_getport": [719, 735], "can_setrxfilterormask": [719, 735], "can_setrxfilterormask_async": [719, 735], "can_setrxfilteringon": [719, 735], "can_setrxfilteringon_async": [719, 735], "verbos": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "mac_addr": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "reboot": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "separ": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "colon": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "successfulli": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "otherwis": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "here": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "subnet_mask": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "period": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "dev_info_list": 720, "element": [720, 723, 732, 733, 734, 735, 740, 741, 742], "contain": 720, "subnet": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "mask": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 740, 741, 742], "bool": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "whether": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "out": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "disonnect": 720, "motor": [721, 743, 748], "phase": [721, 729, 732, 733, 734, 735, 736, 738, 739, 743], "stepper": [721, 743, 746], "axis_dir": [721, 722, 732], "dirction": 721, "origin": 721, "invers": 721, "specifi": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746], "report": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "encoder_dir": [721, 722, 732], "limit_polar": [721, 722, 732], "prevent": 721, "mechan": [721, 728, 743], "compon": 721, "exceed": 721, "boundari": 721, "activ": [721, 722, 724, 732, 733, 734, 735, 736, 737, 738, 739, 747], "given": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "singal": [721, 722, 732], "instantan": [721, 722, 732], "finish": [721, 722, 732], "still": 721, "runnung": 721, "filenam": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "current": [721, 722, 726, 727, 729, 732, 734, 743], "veloicti": 721, "factori": 721, "count": [721, 722, 732, 733, 734, 735, 736, 737, 738, 739], "s2": [721, 722, 732], "distanc": [721, 722, 732], "locat": [721, 722, 732], "request": [721, 722, 732, 733, 734, 735, 736, 738, 739], "z": [721, 722, 732], "getewai": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "web": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742, 743], "gatewai": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "network_info": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "deprec": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "v1": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "Will": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "ref": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742], "mani": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pin1": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pin7": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "disabl": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "adc": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "softwar": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "repres": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 748], "year": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "month": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "dai": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "hour": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "minut": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "charact": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "ce": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "31": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "24": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "23": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "59": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "success": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "switch": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "base": [722, 726, 727, 743], "modular": [722, 743], "inter": [722, 743], "clear_old": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "old": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "alread": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "exist": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "value_mat": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "value_list": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "object": [722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "destin": [722, 732], "axis4": [722, 732], "dest_posi4": [722, 732], "four": [722, 732], "en_alarm": [722, 732], "alarm_polar": [722, 732], "selector": [722, 732], "stepper_output": [722, 732], "servo_on_polar": [722, 732], "puls": [722, 732, 743, 746, 747], "clockwis": [722, 732], "counterclockwis": [722, 732], "One": [722, 732, 747], "cw": [722, 732, 743, 747], "ccw": [722, 732, 743, 747], "breakpoint_polar": [722, 732], "start_posi": [722, 732], "capture_typ": [722, 732], "rise": [722, 732, 747], "edg": [722, 732, 747], "fall": [722, 732, 747], "respect": [722, 732], "encoder_z_polar": [722, 732], "search_typ": [722, 732], "search_dir": [722, 732], "search": [722, 732, 746], "adjust": [722, 732], "en_axis3": [722, 732], "en_axis4": [722, 732], "rotation_numb": [722, 732], "calculation_timeout": [722, 732], "en_hom": [722, 732], "home_polar": [722, 732], "en_inposi": [722, 732], "inposi_polar": [722, 732], "accel_mod": [722, 732], "accerler": [722, 732], "increas": [722, 732], "decreas": [722, 732], "per": [722, 732, 733, 734, 735, 736, 738, 739], "unit": [722, 732], "acceleration_mod": [722, 732], "trapezoid": [722, 732], "curv": [722, 732, 743], "sequenc": [722, 732], "en_break": [722, 732], "en_captur": [722, 732], "emcod": [722, 732], "new": [722, 732], "axis_list": [722, 732], "halt": [722, 732, 747], "8ch": [723, 724, 726, 727, 729, 734, 740, 741, 742, 743], "chip": [723, 732, 733, 734, 740, 741, 742, 744, 746], "volt": [723, 729, 732, 733, 734, 740, 741, 742], "measur": [723, 732, 733, 734, 740, 741, 742], "num_sampl": [723, 729, 732, 733, 734, 740, 741, 742], "pc": [723, 732, 733, 734, 735, 740, 741, 742], "stock": [723, 732, 733, 734, 735, 740, 741, 742], "queue": [723, 732, 733, 734, 735, 740, 741, 742, 746], "call": [723, 732, 733, 734, 735, 740, 741, 742, 744], "fewer": [723, 732, 733, 734, 740, 741, 742], "expect": [723, 732, 733, 734, 740, 741, 742], "ones": [723, 732, 733, 734, 740, 741, 742], "expir": [723, 732, 733, 734, 740, 741, 742], "arriv": [723, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742], "becom": [723, 732, 733, 734, 735, 740, 741, 742], "ineffect": [723, 732, 733, 734, 735, 740, 741, 742], "alreadi": [723, 732, 733, 734, 735, 740, 741, 742, 746], "sample_list": [723, 732, 733, 734, 740, 741, 742], "been": [723, 729, 732, 733, 734, 740, 741, 742], "made": [723, 729, 732, 733, 734, 740, 741, 742], "24v": [724, 732, 737, 743], "6ch": [724, 728, 743], "enable_list": [724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "about": [724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "direction_list": [724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "intput": [724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "associ": [724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "pinmap": [724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "kei": [724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "integ": [724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "thei": [724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "p0": [724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 739], "p1": [724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739], "specef": [724, 725, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739], "ex_d": 725, "ma": [726, 727], "20ma": [727, 743], "10v": [727, 729, 732, 740, 741, 742, 743], "qualiti": [728, 743], "relay_count": 728, "where": [729, 732, 734], "which": [729, 732, 734, 738], "accordingli": [729, 732, 734], "averag": [729, 732, 734], "4ch": [730, 743], "resistor": [730, 743], "ratio": 730, "7ch": [731, 743], "tupl": [731, 733, 734, 735, 736, 738, 739], "constitut": [731, 733, 734, 735, 736, 738, 739], "physic": [731, 733, 734, 735, 736, 738, 739], "thermal1": [731, 738, 739], "five": [731, 738, 739], "p2": [731, 733, 734, 735, 736, 738, 739], "thermal_port": [731, 738, 739], "circuit": [731, 738, 739], "fault": [731, 738, 739], "manual": [731, 738, 739], "temperatur": [731, 738, 739], "celsiu": [731, 738, 739], "type_": [731, 738, 739], "24ch": [732, 743], "12ch": [732, 737, 743], "5v": [732, 734, 743], "ttl": [732, 743], "26ch": [733, 736, 743], "3v": [733, 734, 735, 736, 738, 739, 743], "16khz": 733, "i2c1": [733, 734, 735, 736, 738, 739], "i2c2": [733, 734, 735, 736, 738, 739], "p3": [733, 734, 735, 736, 738, 739], "i2c_port": [733, 734, 735, 736, 738, 739], "read_address": [733, 734, 735, 736, 738, 739], "bytes_to_read": [733, 734, 735, 736, 738, 739], "i2c_data": [733, 734, 735, 736, 738, 739], "400000": [733, 734, 735, 736, 738, 739, 747], "plu": [733, 734, 735, 736, 738, 739, 747], "1000000": [733, 734, 735, 736, 738, 739, 747], "3400000": [733, 734, 735, 736, 738, 739, 747], "write_address": [733, 734, 735, 736, 738, 739], "transfer": [733, 734, 735, 736, 738, 739, 746], "spi1": [733, 735, 736, 738, 739, 747], "spi2": [733, 735, 736, 738, 739, 747], "spi_port": [733, 735, 736, 738, 739], "spi_data": [733, 735, 736, 738, 739], "128": [733, 735, 736, 738, 739, 747], "uart1": [733, 734, 735, 736, 738, 739], "uart2": [733, 734, 735, 736, 738, 739], "uart_port": [733, 734, 735, 736, 738, 739], "baud_rat": [733, 734, 735, 736, 738, 739], "baud": [733, 734, 735, 736, 738, 739, 746], "serial_num": [733, 734, 735, 736, 737, 738, 739], "16ch": [734, 743], "20ch": [735, 743], "num_fram": 735, "millisecond": 735, "canfram": 735, "give": 735, "identifi": 735, "extended_id": 735, "tell": 735, "id_": 735, "filter": [735, 746], "recept": 735, "buffer": 735, "29": 735, "ignor": 735, "on_off": 735, "speed_mod": 735, "dsnk": [737, 745, 748], "14ch": [737, 743], "2ch": [738, 739, 743], "pt": [738, 743], "21ch": [738, 739, 743], "being": [740, 741, 742], "wifidaq": [740, 741, 742], "reconnect": [740, 741, 742], "ap": [740, 741, 742], "stai": [740, 741, 742], "wifi_configur": [740, 741, 742], "retri": [740, 741, 742], "fulli": [740, 741, 742], "bandwidth": [740, 741, 742], "ht20": [740, 741, 742], "ht40": [740, 741, 742], "volatg": [740, 741, 742], "level": [740, 741, 742], "strength": [740, 741, 742], "port1": [740, 741, 742], "port2": [740, 741, 742], "1336": [740, 741, 742], "built": [741, 743], "9dof": [741, 743], "imu": [741, 743], "postur": [741, 743], "est": [741, 743], "estim": 741, "photo": 743, "quick": 743, "amplifi": 743, "differenti": 743, "8mpp": 743, "abz": 743, "12mhz": 743, "break": 743, "51": 743, "revolutio": 743, "36v": 743, "maximum": [743, 746], "suppli": 743, "1a": 743, "5a": 743, "peak": 743, "fwd": 743, "rev": 743, "nomin": 743, "8mhz": 743, "stall": 743, "detect": 743, "intellig": 743, "energi": 743, "diagnost": 743, "ramp": 743, "smooth": 743, "idc": 743, "50p": 743, "multiplex": 743, "4x6": 743, "matrix": 743, "20khz": 743, "24vdc": 743, "opto": 743, "isol": 743, "ethanex_d": 743, "1khz": 743, "NO": 743, "nc": 743, "220vdc": 743, "vac": 743, "2m": 743, "exclud": 743, "bounc": 743, "1m": [743, 747], "variabl": 743, "300": 743, "50k": 743, "ohm": 743, "settl": 743, "160m": 743, "1ch": 743, "400khz": 743, "full": 743, "bu": 743, "industri": 743, "sink": 743, "extern": [743, 746], "1mbp": 743, "v2": 743, "0b": 743, "10khz": 743, "802": 743, "ghz": 743, "16k": 744, "8k": 744, "3k": 744, "4k": 744, "2k": 744, "6k": 744, "0k": 744, "12k": 744, "fix": 744, "20k": 744, "below": 744, "1k": 744, "5k": 744, "ctr": 745, "seri": [745, 748], "520003": 746, "warn": 746, "occurr": 746, "overflow": 746, "520002": 746, "520001": 746, "520000": 746, "519000": 746, "librari": 746, "libusb": 746, "dll": 746, "look": 746, "7000": 746, "7001": 746, "7002": 746, "hal": 746, "7003": 746, "7004": 746, "7005": 746, "7006": 746, "7007": 746, "7008": 746, "7009": 746, "7010": 746, "7011": 746, "7012": 746, "7013": 746, "ol": 746, "7014": 746, "core": 746, "7015": 746, "7016": 746, "7017": 746, "7018": 746, "7019": 746, "7020": 746, "7021": 746, "7022": 746, "7023": 746, "7024": 746, "7025": 746, "udp": 746, "7026": 746, "bootload": 746, "7027": 746, "parser": 746, "7028": 746, "8000": 746, "8001": 746, "fail": 746, "plugin": 746, "8002": 746, "8003": 746, "lost": 746, "8004": 746, "packet": 746, "8005": 746, "valid": 746, "recogn": 746, "8006": 746, "inconsist": 746, "between": 746, "8007": 746, "8008": 746, "8009": 746, "accept": 746, "8010": 746, "extens": 746, "8011": 746, "No": 746, "directori": 746, "8100": 746, "occupi": 746, "8101": 746, "8102": 746, "8103": 746, "8104": 746, "8105": 746, "8200": 746, "8201": 746, "8202": 746, "8203": 746, "8204": 746, "8300": 746, "8301": 746, "8302": 746, "span": 746, "8303": 746, "8304": 746, "8305": 746, "8400": 746, "8401": 746, "8500": 746, "8501": 746, "8502": 746, "8503": 746, "8600": 746, "8601": 746, "8602": 746, "8700": 746, "8701": 746, "exce": 746, "8702": 746, "8703": 746, "8704": 746, "8705": 746, "8800": 746, "8801": 746, "8802": 746, "8803": 746, "8804": 746, "8805": 746, "8900": 746, "8901": 746, "8902": 746, "invalid": 746, "8903": 746, "tx": 746, "8904": 746, "prioriti": 746, "9100": 746, "9101": 746, "9102": 746, "9103": 746, "9104": 746, "9105": 746, "9106": 746, "9107": 746, "9108": 746, "9109": 746, "9110": 746, "9111": 746, "9112": 746, "9113": 746, "9200": 746, "9300": 746, "9301": 746, "rectangular": 747, "125k": 747, "250k": 747, "500k": 747, "bp": 747, "peripher": 747, "f_pclk2": 747, "72": 747, "f_pclk1": 747, "36": 747, "18": 747, "25": 747, "562": 747, "281": 747, "140": 747, "625": 747, "big": 747, "littl": 747, "remark": 748, "stand": 748}, "objects": {"": [[718, 0, 0, "-", "pywpc"]], "pywpc": [[720, 1, 1, "", "DeviceFinder"], [721, 1, 1, "", "EDriveST"], [722, 1, 1, "", "EMotion"], [723, 1, 1, "", "EthanA"], [724, 1, 1, "", "EthanD"], [725, 1, 1, "", "EthanEXD"], [726, 1, 1, "", "EthanI"], [727, 1, 1, "", "EthanIA"], [728, 1, 1, "", "EthanL"], [729, 1, 1, "", "EthanO"], [730, 1, 1, "", "EthanP"], [731, 1, 1, "", "EthanT"], [732, 1, 1, "", "STEM"], [733, 1, 1, "", "USBDAQF1AD"], [734, 1, 1, "", "USBDAQF1AOD"], [735, 1, 1, "", "USBDAQF1CD"], [736, 1, 1, "", "USBDAQF1D"], [737, 1, 1, "", "USBDAQF1DSNK"], [738, 1, 1, "", "USBDAQF1RD"], [739, 1, 1, "", "USBDAQF1TD"], [740, 1, 1, "", "WifiDAQE3A"], [741, 1, 1, "", "WifiDAQE3AH"], [742, 1, 1, "", "WifiDAQF4A"]], "pywpc.DeviceFinder": [[720, 2, 1, "", "Bcst_checkMACAndReboot"], [720, 2, 1, "", "Bcst_checkMACAndReboot_async"], [720, 2, 1, "", "Bcst_checkMACAndSetIP"], [720, 2, 1, "", "Bcst_checkMACAndSetIP_async"], [720, 2, 1, "", "Bcst_enumerateNetworkDevices"], [720, 2, 1, "", "Bcst_enumerateNetworkDevices_async"], [720, 2, 1, "", "Bcst_enumerateUSBDevices"], [720, 2, 1, "", "close"], [720, 2, 1, "", "connect"], [720, 2, 1, "", "disconnect"]], "pywpc.EDriveST": [[721, 2, 1, "", "Motion_cfgAxisDirection"], [721, 2, 1, "", "Motion_cfgAxisDirection_async"], [721, 2, 1, "", "Motion_cfgEncoder"], [721, 2, 1, "", "Motion_cfgEncoder_async"], [721, 2, 1, "", "Motion_cfgLimit"], [721, 2, 1, "", "Motion_cfgLimit_async"], [721, 2, 1, "", "Motion_close"], [721, 2, 1, "", "Motion_close_async"], [721, 2, 1, "", "Motion_enableServoOff"], [721, 2, 1, "", "Motion_enableServoOff_async"], [721, 2, 1, "", "Motion_enableServoOn"], [721, 2, 1, "", "Motion_enableServoOn_async"], [721, 2, 1, "", "Motion_getAlarmStatus"], [721, 2, 1, "", "Motion_getAlarmStatus_async"], [721, 2, 1, "", "Motion_getLimitStatus"], [721, 2, 1, "", "Motion_getLimitStatus_async"], [721, 2, 1, "", "Motion_getParameters"], [721, 2, 1, "", "Motion_getProcessState"], [721, 2, 1, "", "Motion_getProcessState_async"], [721, 2, 1, "", "Motion_loadCfgFile"], [721, 2, 1, "", "Motion_loadCfgFile_async"], [721, 2, 1, "", "Motion_open"], [721, 2, 1, "", "Motion_openCfgFile"], [721, 2, 1, "", "Motion_openCfgFile_async"], [721, 2, 1, "", "Motion_open_async"], [721, 2, 1, "", "Motion_readCurrentVelocity"], [721, 2, 1, "", "Motion_readCurrentVelocity_async"], [721, 2, 1, "", "Motion_readEncoderPosition"], [721, 2, 1, "", "Motion_readEncoderPosition_async"], [721, 2, 1, "", "Motion_resetFactory"], [721, 2, 1, "", "Motion_resetFactory_async"], [721, 2, 1, "", "Motion_rstEncoderPosi"], [721, 2, 1, "", "Motion_rstEncoderPosi_async"], [721, 2, 1, "", "Motion_saveCfgFile"], [721, 2, 1, "", "Motion_saveCfgFile_async"], [721, 2, 1, "", "Motion_startFindHome"], [721, 2, 1, "", "Motion_startFindHome_async"], [721, 2, 1, "", "Motion_startFindLimit"], [721, 2, 1, "", "Motion_startFindLimit_async"], [721, 2, 1, "", "Motion_startFindZPolarity"], [721, 2, 1, "", "Motion_startFindZPolarity_async"], [721, 2, 1, "", "Motion_startPositionMove"], [721, 2, 1, "", "Motion_startPositionMove_async"], [721, 2, 1, "", "Motion_startScanMove"], [721, 2, 1, "", "Motion_startScanMove_async"], [721, 2, 1, "", "Motion_startVelocticyMove"], [721, 2, 1, "", "Motion_startVelocticyMove_async"], [721, 2, 1, "", "Motion_stopProcess"], [721, 2, 1, "", "Motion_stopProcess_async"], [721, 2, 1, "", "Net_getGateway"], [721, 2, 1, "", "Net_getGateway_async"], [721, 2, 1, "", "Net_getIPAddrAndSubmask"], [721, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [721, 2, 1, "", "Net_getMACAddr"], [721, 2, 1, "", "Net_getMACAddr_async"], [721, 2, 1, "", "Net_setIPAddrAndSubmask"], [721, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [721, 2, 1, "", "Sys_getDriverInfo"], [721, 2, 1, "", "Sys_getDriverInfo_async"], [721, 2, 1, "", "Sys_getGateway"], [721, 2, 1, "", "Sys_getGateway_async"], [721, 2, 1, "", "Sys_getIPAddrAndSubmask"], [721, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [721, 2, 1, "", "Sys_getMACAddr"], [721, 2, 1, "", "Sys_getMACAddr_async"], [721, 2, 1, "", "Sys_getMode"], [721, 2, 1, "", "Sys_getMode_async"], [721, 2, 1, "", "Sys_getPinModeInPort"], [721, 2, 1, "", "Sys_getPinModeInPort_async"], [721, 2, 1, "", "Sys_getPythonVersion"], [721, 2, 1, "", "Sys_getPythonVersion_async"], [721, 2, 1, "", "Sys_getRTC"], [721, 2, 1, "", "Sys_getRTC_async"], [721, 2, 1, "", "Sys_getSerialNumber"], [721, 2, 1, "", "Sys_getSerialNumber_async"], [721, 2, 1, "", "Sys_reboot"], [721, 2, 1, "", "Sys_reboot_async"], [721, 2, 1, "", "Sys_setAIOMode"], [721, 2, 1, "", "Sys_setAIOMode_async"], [721, 2, 1, "", "Sys_setDIMode"], [721, 2, 1, "", "Sys_setDIMode_async"], [721, 2, 1, "", "Sys_setDIOMode"], [721, 2, 1, "", "Sys_setDIOMode_async"], [721, 2, 1, "", "Sys_setDOMode"], [721, 2, 1, "", "Sys_setDOMode_async"], [721, 2, 1, "", "Sys_setIPAddrAndSubmask"], [721, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [721, 2, 1, "", "Sys_setIdleMode"], [721, 2, 1, "", "Sys_setIdleMode_async"], [721, 2, 1, "", "Sys_setMotionMode"], [721, 2, 1, "", "Sys_setMotionMode_async"], [721, 2, 1, "", "Sys_setRTC"], [721, 2, 1, "", "Sys_setRTC_async"], [721, 2, 1, "", "Sys_setSwitchMode"], [721, 2, 1, "", "Sys_setSwitchMode_async"], [721, 2, 1, "", "close"], [721, 2, 1, "", "connect"], [721, 2, 1, "", "disconnect"]], "pywpc.EMotion": [[722, 2, 1, "", "Logger_openFile"], [722, 2, 1, "", "Logger_write2DList"], [722, 2, 1, "", "Logger_writeHeader"], [722, 2, 1, "", "Logger_writeList"], [722, 2, 1, "", "Logger_writeValue"], [722, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [722, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [722, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [722, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [722, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [722, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [722, 2, 1, "", "Motion_cfgAlarm"], [722, 2, 1, "", "Motion_cfgAlarm_async"], [722, 2, 1, "", "Motion_cfgAxis"], [722, 2, 1, "", "Motion_cfgAxisMove"], [722, 2, 1, "", "Motion_cfgAxisMove_async"], [722, 2, 1, "", "Motion_cfgAxis_async"], [722, 2, 1, "", "Motion_cfgBreakPoint"], [722, 2, 1, "", "Motion_cfgBreakPoint_async"], [722, 2, 1, "", "Motion_cfgCapture"], [722, 2, 1, "", "Motion_cfgCapture_async"], [722, 2, 1, "", "Motion_cfgCircularInterpo"], [722, 2, 1, "", "Motion_cfgCircularInterpo_async"], [722, 2, 1, "", "Motion_cfgEncoder"], [722, 2, 1, "", "Motion_cfgEncoder_async"], [722, 2, 1, "", "Motion_cfgFindRef"], [722, 2, 1, "", "Motion_cfgFindRef_async"], [722, 2, 1, "", "Motion_cfgHelicalInterpo"], [722, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [722, 2, 1, "", "Motion_cfgHome"], [722, 2, 1, "", "Motion_cfgHome_async"], [722, 2, 1, "", "Motion_cfgInposi"], [722, 2, 1, "", "Motion_cfgInposi_async"], [722, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [722, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [722, 2, 1, "", "Motion_cfgLimit"], [722, 2, 1, "", "Motion_cfgLimit_async"], [722, 2, 1, "", "Motion_checkRef"], [722, 2, 1, "", "Motion_checkRef_async"], [722, 2, 1, "", "Motion_close"], [722, 2, 1, "", "Motion_close_async"], [722, 2, 1, "", "Motion_enableBreakPoint"], [722, 2, 1, "", "Motion_enableBreakPoint_async"], [722, 2, 1, "", "Motion_enableCapture"], [722, 2, 1, "", "Motion_enableCapture_async"], [722, 2, 1, "", "Motion_enableServoOff"], [722, 2, 1, "", "Motion_enableServoOff_async"], [722, 2, 1, "", "Motion_enableServoOn"], [722, 2, 1, "", "Motion_enableServoOn_async"], [722, 2, 1, "", "Motion_findRef"], [722, 2, 1, "", "Motion_findRef_async"], [722, 2, 1, "", "Motion_getEncoderPosi"], [722, 2, 1, "", "Motion_getEncoderPosi_async"], [722, 2, 1, "", "Motion_getHomeStatus"], [722, 2, 1, "", "Motion_getHomeStatus_async"], [722, 2, 1, "", "Motion_getLimitStatus"], [722, 2, 1, "", "Motion_getLimitStatus_async"], [722, 2, 1, "", "Motion_getLogicalPosi"], [722, 2, 1, "", "Motion_getLogicalPosi_async"], [722, 2, 1, "", "Motion_getMoveStatus"], [722, 2, 1, "", "Motion_getMoveStatus_async"], [722, 2, 1, "", "Motion_loadCfgFile"], [722, 2, 1, "", "Motion_loadCfgFile_async"], [722, 2, 1, "", "Motion_open"], [722, 2, 1, "", "Motion_openCfgFile"], [722, 2, 1, "", "Motion_openCfgFile_async"], [722, 2, 1, "", "Motion_open_async"], [722, 2, 1, "", "Motion_overrideAxisAccel"], [722, 2, 1, "", "Motion_overrideAxisAccel_async"], [722, 2, 1, "", "Motion_overrideAxisPosi"], [722, 2, 1, "", "Motion_overrideAxisPosi_async"], [722, 2, 1, "", "Motion_overrideAxisVelocity"], [722, 2, 1, "", "Motion_overrideAxisVelocity_async"], [722, 2, 1, "", "Motion_readCapturePoint"], [722, 2, 1, "", "Motion_readCapturePoint_async"], [722, 2, 1, "", "Motion_rstEncoderPosi"], [722, 2, 1, "", "Motion_rstEncoderPosi_async"], [722, 2, 1, "", "Motion_saveCfgFile"], [722, 2, 1, "", "Motion_saveCfgFile_async"], [722, 2, 1, "", "Motion_setLogicalPosi"], [722, 2, 1, "", "Motion_setLogicalPosi_async"], [722, 2, 1, "", "Motion_startCircularInterpo"], [722, 2, 1, "", "Motion_startCircularInterpo_async"], [722, 2, 1, "", "Motion_startHelicalInterpo"], [722, 2, 1, "", "Motion_startHelicalInterpo_async"], [722, 2, 1, "", "Motion_startLinearInterpo"], [722, 2, 1, "", "Motion_startLinearInterpo_async"], [722, 2, 1, "", "Motion_startMultiAxisMove"], [722, 2, 1, "", "Motion_startMultiAxisMove_async"], [722, 2, 1, "", "Motion_startSingleAxisMove"], [722, 2, 1, "", "Motion_startSingleAxisMove_async"], [722, 2, 1, "", "Motion_stop"], [722, 2, 1, "", "Motion_stop_async"], [722, 2, 1, "", "Net_getGateway"], [722, 2, 1, "", "Net_getGateway_async"], [722, 2, 1, "", "Net_getIPAddrAndSubmask"], [722, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [722, 2, 1, "", "Net_getMACAddr"], [722, 2, 1, "", "Net_getMACAddr_async"], [722, 2, 1, "", "Net_setIPAddrAndSubmask"], [722, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [722, 2, 1, "", "Sys_getDriverInfo"], [722, 2, 1, "", "Sys_getDriverInfo_async"], [722, 2, 1, "", "Sys_getGateway"], [722, 2, 1, "", "Sys_getGateway_async"], [722, 2, 1, "", "Sys_getIPAddrAndSubmask"], [722, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [722, 2, 1, "", "Sys_getMACAddr"], [722, 2, 1, "", "Sys_getMACAddr_async"], [722, 2, 1, "", "Sys_getMode"], [722, 2, 1, "", "Sys_getMode_async"], [722, 2, 1, "", "Sys_getPinModeInPort"], [722, 2, 1, "", "Sys_getPinModeInPort_async"], [722, 2, 1, "", "Sys_getPythonVersion"], [722, 2, 1, "", "Sys_getPythonVersion_async"], [722, 2, 1, "", "Sys_getRTC"], [722, 2, 1, "", "Sys_getRTC_async"], [722, 2, 1, "", "Sys_getSerialNumber"], [722, 2, 1, "", "Sys_getSerialNumber_async"], [722, 2, 1, "", "Sys_reboot"], [722, 2, 1, "", "Sys_reboot_async"], [722, 2, 1, "", "Sys_setAIOMode"], [722, 2, 1, "", "Sys_setAIOMode_async"], [722, 2, 1, "", "Sys_setDIMode"], [722, 2, 1, "", "Sys_setDIMode_async"], [722, 2, 1, "", "Sys_setDIOMode"], [722, 2, 1, "", "Sys_setDIOMode_async"], [722, 2, 1, "", "Sys_setDOMode"], [722, 2, 1, "", "Sys_setDOMode_async"], [722, 2, 1, "", "Sys_setIPAddrAndSubmask"], [722, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [722, 2, 1, "", "Sys_setIdleMode"], [722, 2, 1, "", "Sys_setIdleMode_async"], [722, 2, 1, "", "Sys_setMotionMode"], [722, 2, 1, "", "Sys_setMotionMode_async"], [722, 2, 1, "", "Sys_setRTC"], [722, 2, 1, "", "Sys_setRTC_async"], [722, 2, 1, "", "Sys_setSwitchMode"], [722, 2, 1, "", "Sys_setSwitchMode_async"], [722, 2, 1, "", "close"], [722, 2, 1, "", "connect"], [722, 2, 1, "", "disconnect"]], "pywpc.EthanA": [[723, 2, 1, "", "AI_close"], [723, 2, 1, "", "AI_close_async"], [723, 2, 1, "", "AI_enableCS"], [723, 2, 1, "", "AI_enableCS_async"], [723, 2, 1, "", "AI_enableChannel"], [723, 2, 1, "", "AI_enableChannel_async"], [723, 2, 1, "", "AI_getPort"], [723, 2, 1, "", "AI_open"], [723, 2, 1, "", "AI_open_async"], [723, 2, 1, "", "AI_readOnDemand"], [723, 2, 1, "", "AI_readOnDemand_async"], [723, 2, 1, "", "AI_readStreaming"], [723, 2, 1, "", "AI_readStreaming_async"], [723, 2, 1, "", "AI_setMode"], [723, 2, 1, "", "AI_setMode_async"], [723, 2, 1, "", "AI_setNumSamples"], [723, 2, 1, "", "AI_setNumSamples_async"], [723, 2, 1, "", "AI_setSamplingRate"], [723, 2, 1, "", "AI_setSamplingRate_async"], [723, 2, 1, "", "AI_start"], [723, 2, 1, "", "AI_start_async"], [723, 2, 1, "", "AI_stop"], [723, 2, 1, "", "AI_stop_async"], [723, 2, 1, "", "Logger_openFile"], [723, 2, 1, "", "Logger_write2DList"], [723, 2, 1, "", "Logger_writeHeader"], [723, 2, 1, "", "Logger_writeList"], [723, 2, 1, "", "Logger_writeValue"], [723, 2, 1, "", "Net_getGateway"], [723, 2, 1, "", "Net_getGateway_async"], [723, 2, 1, "", "Net_getIPAddrAndSubmask"], [723, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [723, 2, 1, "", "Net_getMACAddr"], [723, 2, 1, "", "Net_getMACAddr_async"], [723, 2, 1, "", "Net_setIPAddrAndSubmask"], [723, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [723, 2, 1, "", "Sys_getDriverInfo"], [723, 2, 1, "", "Sys_getDriverInfo_async"], [723, 2, 1, "", "Sys_getGateway"], [723, 2, 1, "", "Sys_getGateway_async"], [723, 2, 1, "", "Sys_getIPAddrAndSubmask"], [723, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [723, 2, 1, "", "Sys_getMACAddr"], [723, 2, 1, "", "Sys_getMACAddr_async"], [723, 2, 1, "", "Sys_getMode"], [723, 2, 1, "", "Sys_getMode_async"], [723, 2, 1, "", "Sys_getPinModeInPort"], [723, 2, 1, "", "Sys_getPinModeInPort_async"], [723, 2, 1, "", "Sys_getPythonVersion"], [723, 2, 1, "", "Sys_getPythonVersion_async"], [723, 2, 1, "", "Sys_getRTC"], [723, 2, 1, "", "Sys_getRTC_async"], [723, 2, 1, "", "Sys_getSerialNumber"], [723, 2, 1, "", "Sys_getSerialNumber_async"], [723, 2, 1, "", "Sys_reboot"], [723, 2, 1, "", "Sys_reboot_async"], [723, 2, 1, "", "Sys_setAIOMode"], [723, 2, 1, "", "Sys_setAIOMode_async"], [723, 2, 1, "", "Sys_setDIMode"], [723, 2, 1, "", "Sys_setDIMode_async"], [723, 2, 1, "", "Sys_setDIOMode"], [723, 2, 1, "", "Sys_setDIOMode_async"], [723, 2, 1, "", "Sys_setDOMode"], [723, 2, 1, "", "Sys_setDOMode_async"], [723, 2, 1, "", "Sys_setIPAddrAndSubmask"], [723, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [723, 2, 1, "", "Sys_setIdleMode"], [723, 2, 1, "", "Sys_setIdleMode_async"], [723, 2, 1, "", "Sys_setMotionMode"], [723, 2, 1, "", "Sys_setMotionMode_async"], [723, 2, 1, "", "Sys_setRTC"], [723, 2, 1, "", "Sys_setRTC_async"], [723, 2, 1, "", "Sys_setSwitchMode"], [723, 2, 1, "", "Sys_setSwitchMode_async"], [723, 2, 1, "", "close"], [723, 2, 1, "", "connect"], [723, 2, 1, "", "disconnect"]], "pywpc.EthanD": [[724, 2, 1, "", "DIO_loadStartup"], [724, 2, 1, "", "DIO_loadStartup_async"], [724, 2, 1, "", "DI_closePins"], [724, 2, 1, "", "DI_closePins_async"], [724, 2, 1, "", "DI_closePort"], [724, 2, 1, "", "DI_closePort_async"], [724, 2, 1, "", "DI_getPinMap"], [724, 2, 1, "", "DI_openPins"], [724, 2, 1, "", "DI_openPins_async"], [724, 2, 1, "", "DI_openPort"], [724, 2, 1, "", "DI_openPort_async"], [724, 2, 1, "", "DI_readPins"], [724, 2, 1, "", "DI_readPins_async"], [724, 2, 1, "", "DI_readPort"], [724, 2, 1, "", "DI_readPort_async"], [724, 2, 1, "", "DO_closePins"], [724, 2, 1, "", "DO_closePins_async"], [724, 2, 1, "", "DO_closePort"], [724, 2, 1, "", "DO_closePort_async"], [724, 2, 1, "", "DO_getPinMap"], [724, 2, 1, "", "DO_openPins"], [724, 2, 1, "", "DO_openPins_async"], [724, 2, 1, "", "DO_openPort"], [724, 2, 1, "", "DO_openPort_async"], [724, 2, 1, "", "DO_togglePins"], [724, 2, 1, "", "DO_togglePins_async"], [724, 2, 1, "", "DO_togglePort"], [724, 2, 1, "", "DO_togglePort_async"], [724, 2, 1, "", "DO_writePins"], [724, 2, 1, "", "DO_writePins_async"], [724, 2, 1, "", "DO_writePort"], [724, 2, 1, "", "DO_writePort_async"], [724, 2, 1, "", "Logger_openFile"], [724, 2, 1, "", "Logger_write2DList"], [724, 2, 1, "", "Logger_writeHeader"], [724, 2, 1, "", "Logger_writeList"], [724, 2, 1, "", "Logger_writeValue"], [724, 2, 1, "", "Net_getGateway"], [724, 2, 1, "", "Net_getGateway_async"], [724, 2, 1, "", "Net_getIPAddrAndSubmask"], [724, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [724, 2, 1, "", "Net_getMACAddr"], [724, 2, 1, "", "Net_getMACAddr_async"], [724, 2, 1, "", "Net_setIPAddrAndSubmask"], [724, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [724, 2, 1, "", "PWM_close"], [724, 2, 1, "", "PWM_close_async"], [724, 2, 1, "", "PWM_open"], [724, 2, 1, "", "PWM_open_async"], [724, 2, 1, "", "PWM_setDutyCycle"], [724, 2, 1, "", "PWM_setDutyCycle_async"], [724, 2, 1, "", "PWM_setFrequency"], [724, 2, 1, "", "PWM_setFrequency_async"], [724, 2, 1, "", "PWM_start"], [724, 2, 1, "", "PWM_start_async"], [724, 2, 1, "", "PWM_stop"], [724, 2, 1, "", "PWM_stop_async"], [724, 2, 1, "", "Sys_getDriverInfo"], [724, 2, 1, "", "Sys_getDriverInfo_async"], [724, 2, 1, "", "Sys_getGateway"], [724, 2, 1, "", "Sys_getGateway_async"], [724, 2, 1, "", "Sys_getIPAddrAndSubmask"], [724, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [724, 2, 1, "", "Sys_getMACAddr"], [724, 2, 1, "", "Sys_getMACAddr_async"], [724, 2, 1, "", "Sys_getMode"], [724, 2, 1, "", "Sys_getMode_async"], [724, 2, 1, "", "Sys_getPinModeInPort"], [724, 2, 1, "", "Sys_getPinModeInPort_async"], [724, 2, 1, "", "Sys_getPythonVersion"], [724, 2, 1, "", "Sys_getPythonVersion_async"], [724, 2, 1, "", "Sys_getRTC"], [724, 2, 1, "", "Sys_getRTC_async"], [724, 2, 1, "", "Sys_getSerialNumber"], [724, 2, 1, "", "Sys_getSerialNumber_async"], [724, 2, 1, "", "Sys_reboot"], [724, 2, 1, "", "Sys_reboot_async"], [724, 2, 1, "", "Sys_setAIOMode"], [724, 2, 1, "", "Sys_setAIOMode_async"], [724, 2, 1, "", "Sys_setDIMode"], [724, 2, 1, "", "Sys_setDIMode_async"], [724, 2, 1, "", "Sys_setDIOMode"], [724, 2, 1, "", "Sys_setDIOMode_async"], [724, 2, 1, "", "Sys_setDOMode"], [724, 2, 1, "", "Sys_setDOMode_async"], [724, 2, 1, "", "Sys_setIPAddrAndSubmask"], [724, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [724, 2, 1, "", "Sys_setIdleMode"], [724, 2, 1, "", "Sys_setIdleMode_async"], [724, 2, 1, "", "Sys_setMotionMode"], [724, 2, 1, "", "Sys_setMotionMode_async"], [724, 2, 1, "", "Sys_setRTC"], [724, 2, 1, "", "Sys_setRTC_async"], [724, 2, 1, "", "Sys_setSwitchMode"], [724, 2, 1, "", "Sys_setSwitchMode_async"], [724, 2, 1, "", "close"], [724, 2, 1, "", "connect"], [724, 2, 1, "", "disconnect"]], "pywpc.EthanEXD": [[725, 2, 1, "", "DIO_loadStartup"], [725, 2, 1, "", "DIO_loadStartup_async"], [725, 2, 1, "", "DI_closePins"], [725, 2, 1, "", "DI_closePins_async"], [725, 2, 1, "", "DI_closePort"], [725, 2, 1, "", "DI_closePort_async"], [725, 2, 1, "", "DI_getPinMap"], [725, 2, 1, "", "DI_openPins"], [725, 2, 1, "", "DI_openPins_async"], [725, 2, 1, "", "DI_openPort"], [725, 2, 1, "", "DI_openPort_async"], [725, 2, 1, "", "DI_readPins"], [725, 2, 1, "", "DI_readPins_async"], [725, 2, 1, "", "DI_readPort"], [725, 2, 1, "", "DI_readPort_async"], [725, 2, 1, "", "DO_closePins"], [725, 2, 1, "", "DO_closePins_async"], [725, 2, 1, "", "DO_closePort"], [725, 2, 1, "", "DO_closePort_async"], [725, 2, 1, "", "DO_getPinMap"], [725, 2, 1, "", "DO_openPins"], [725, 2, 1, "", "DO_openPins_async"], [725, 2, 1, "", "DO_openPort"], [725, 2, 1, "", "DO_openPort_async"], [725, 2, 1, "", "DO_togglePins"], [725, 2, 1, "", "DO_togglePins_async"], [725, 2, 1, "", "DO_togglePort"], [725, 2, 1, "", "DO_togglePort_async"], [725, 2, 1, "", "DO_writePins"], [725, 2, 1, "", "DO_writePins_async"], [725, 2, 1, "", "DO_writePort"], [725, 2, 1, "", "DO_writePort_async"], [725, 2, 1, "", "Logger_openFile"], [725, 2, 1, "", "Logger_write2DList"], [725, 2, 1, "", "Logger_writeHeader"], [725, 2, 1, "", "Logger_writeList"], [725, 2, 1, "", "Logger_writeValue"], [725, 2, 1, "", "Net_getGateway"], [725, 2, 1, "", "Net_getGateway_async"], [725, 2, 1, "", "Net_getIPAddrAndSubmask"], [725, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [725, 2, 1, "", "Net_getMACAddr"], [725, 2, 1, "", "Net_getMACAddr_async"], [725, 2, 1, "", "Net_setIPAddrAndSubmask"], [725, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [725, 2, 1, "", "Sys_getDriverInfo"], [725, 2, 1, "", "Sys_getDriverInfo_async"], [725, 2, 1, "", "Sys_getGateway"], [725, 2, 1, "", "Sys_getGateway_async"], [725, 2, 1, "", "Sys_getIPAddrAndSubmask"], [725, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [725, 2, 1, "", "Sys_getMACAddr"], [725, 2, 1, "", "Sys_getMACAddr_async"], [725, 2, 1, "", "Sys_getMode"], [725, 2, 1, "", "Sys_getMode_async"], [725, 2, 1, "", "Sys_getPinModeInPort"], [725, 2, 1, "", "Sys_getPinModeInPort_async"], [725, 2, 1, "", "Sys_getPythonVersion"], [725, 2, 1, "", "Sys_getPythonVersion_async"], [725, 2, 1, "", "Sys_getRTC"], [725, 2, 1, "", "Sys_getRTC_async"], [725, 2, 1, "", "Sys_getSerialNumber"], [725, 2, 1, "", "Sys_getSerialNumber_async"], [725, 2, 1, "", "Sys_reboot"], [725, 2, 1, "", "Sys_reboot_async"], [725, 2, 1, "", "Sys_setAIOMode"], [725, 2, 1, "", "Sys_setAIOMode_async"], [725, 2, 1, "", "Sys_setDIMode"], [725, 2, 1, "", "Sys_setDIMode_async"], [725, 2, 1, "", "Sys_setDIOMode"], [725, 2, 1, "", "Sys_setDIOMode_async"], [725, 2, 1, "", "Sys_setDOMode"], [725, 2, 1, "", "Sys_setDOMode_async"], [725, 2, 1, "", "Sys_setIPAddrAndSubmask"], [725, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [725, 2, 1, "", "Sys_setIdleMode"], [725, 2, 1, "", "Sys_setIdleMode_async"], [725, 2, 1, "", "Sys_setMotionMode"], [725, 2, 1, "", "Sys_setMotionMode_async"], [725, 2, 1, "", "Sys_setRTC"], [725, 2, 1, "", "Sys_setRTC_async"], [725, 2, 1, "", "Sys_setSwitchMode"], [725, 2, 1, "", "Sys_setSwitchMode_async"], [725, 2, 1, "", "close"], [725, 2, 1, "", "connect"], [725, 2, 1, "", "disconnect"]], "pywpc.EthanI": [[726, 2, 1, "", "AI_close"], [726, 2, 1, "", "AI_close_async"], [726, 2, 1, "", "AI_getPort"], [726, 2, 1, "", "AI_open"], [726, 2, 1, "", "AI_open_async"], [726, 2, 1, "", "AI_readOnDemand"], [726, 2, 1, "", "AI_readOnDemand_async"], [726, 2, 1, "", "Logger_openFile"], [726, 2, 1, "", "Logger_write2DList"], [726, 2, 1, "", "Logger_writeHeader"], [726, 2, 1, "", "Logger_writeList"], [726, 2, 1, "", "Logger_writeValue"], [726, 2, 1, "", "Net_getGateway"], [726, 2, 1, "", "Net_getGateway_async"], [726, 2, 1, "", "Net_getIPAddrAndSubmask"], [726, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [726, 2, 1, "", "Net_getMACAddr"], [726, 2, 1, "", "Net_getMACAddr_async"], [726, 2, 1, "", "Net_setIPAddrAndSubmask"], [726, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [726, 2, 1, "", "Sys_getDriverInfo"], [726, 2, 1, "", "Sys_getDriverInfo_async"], [726, 2, 1, "", "Sys_getGateway"], [726, 2, 1, "", "Sys_getGateway_async"], [726, 2, 1, "", "Sys_getIPAddrAndSubmask"], [726, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [726, 2, 1, "", "Sys_getMACAddr"], [726, 2, 1, "", "Sys_getMACAddr_async"], [726, 2, 1, "", "Sys_getMode"], [726, 2, 1, "", "Sys_getMode_async"], [726, 2, 1, "", "Sys_getPinModeInPort"], [726, 2, 1, "", "Sys_getPinModeInPort_async"], [726, 2, 1, "", "Sys_getPythonVersion"], [726, 2, 1, "", "Sys_getPythonVersion_async"], [726, 2, 1, "", "Sys_getRTC"], [726, 2, 1, "", "Sys_getRTC_async"], [726, 2, 1, "", "Sys_getSerialNumber"], [726, 2, 1, "", "Sys_getSerialNumber_async"], [726, 2, 1, "", "Sys_reboot"], [726, 2, 1, "", "Sys_reboot_async"], [726, 2, 1, "", "Sys_setAIOMode"], [726, 2, 1, "", "Sys_setAIOMode_async"], [726, 2, 1, "", "Sys_setDIMode"], [726, 2, 1, "", "Sys_setDIMode_async"], [726, 2, 1, "", "Sys_setDIOMode"], [726, 2, 1, "", "Sys_setDIOMode_async"], [726, 2, 1, "", "Sys_setDOMode"], [726, 2, 1, "", "Sys_setDOMode_async"], [726, 2, 1, "", "Sys_setIPAddrAndSubmask"], [726, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [726, 2, 1, "", "Sys_setIdleMode"], [726, 2, 1, "", "Sys_setIdleMode_async"], [726, 2, 1, "", "Sys_setMotionMode"], [726, 2, 1, "", "Sys_setMotionMode_async"], [726, 2, 1, "", "Sys_setRTC"], [726, 2, 1, "", "Sys_setRTC_async"], [726, 2, 1, "", "Sys_setSwitchMode"], [726, 2, 1, "", "Sys_setSwitchMode_async"], [726, 2, 1, "", "close"], [726, 2, 1, "", "connect"], [726, 2, 1, "", "disconnect"]], "pywpc.EthanIA": [[727, 2, 1, "", "AI_close"], [727, 2, 1, "", "AI_close_async"], [727, 2, 1, "", "AI_getPort"], [727, 2, 1, "", "AI_open"], [727, 2, 1, "", "AI_open_async"], [727, 2, 1, "", "AI_readOnDemand"], [727, 2, 1, "", "AI_readOnDemand_async"], [727, 2, 1, "", "Logger_openFile"], [727, 2, 1, "", "Logger_write2DList"], [727, 2, 1, "", "Logger_writeHeader"], [727, 2, 1, "", "Logger_writeList"], [727, 2, 1, "", "Logger_writeValue"], [727, 2, 1, "", "Net_getGateway"], [727, 2, 1, "", "Net_getGateway_async"], [727, 2, 1, "", "Net_getIPAddrAndSubmask"], [727, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [727, 2, 1, "", "Net_getMACAddr"], [727, 2, 1, "", "Net_getMACAddr_async"], [727, 2, 1, "", "Net_setIPAddrAndSubmask"], [727, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [727, 2, 1, "", "Sys_getDriverInfo"], [727, 2, 1, "", "Sys_getDriverInfo_async"], [727, 2, 1, "", "Sys_getGateway"], [727, 2, 1, "", "Sys_getGateway_async"], [727, 2, 1, "", "Sys_getIPAddrAndSubmask"], [727, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [727, 2, 1, "", "Sys_getMACAddr"], [727, 2, 1, "", "Sys_getMACAddr_async"], [727, 2, 1, "", "Sys_getMode"], [727, 2, 1, "", "Sys_getMode_async"], [727, 2, 1, "", "Sys_getPinModeInPort"], [727, 2, 1, "", "Sys_getPinModeInPort_async"], [727, 2, 1, "", "Sys_getPythonVersion"], [727, 2, 1, "", "Sys_getPythonVersion_async"], [727, 2, 1, "", "Sys_getRTC"], [727, 2, 1, "", "Sys_getRTC_async"], [727, 2, 1, "", "Sys_getSerialNumber"], [727, 2, 1, "", "Sys_getSerialNumber_async"], [727, 2, 1, "", "Sys_reboot"], [727, 2, 1, "", "Sys_reboot_async"], [727, 2, 1, "", "Sys_setAIOMode"], [727, 2, 1, "", "Sys_setAIOMode_async"], [727, 2, 1, "", "Sys_setDIMode"], [727, 2, 1, "", "Sys_setDIMode_async"], [727, 2, 1, "", "Sys_setDIOMode"], [727, 2, 1, "", "Sys_setDIOMode_async"], [727, 2, 1, "", "Sys_setDOMode"], [727, 2, 1, "", "Sys_setDOMode_async"], [727, 2, 1, "", "Sys_setIPAddrAndSubmask"], [727, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [727, 2, 1, "", "Sys_setIdleMode"], [727, 2, 1, "", "Sys_setIdleMode_async"], [727, 2, 1, "", "Sys_setMotionMode"], [727, 2, 1, "", "Sys_setMotionMode_async"], [727, 2, 1, "", "Sys_setRTC"], [727, 2, 1, "", "Sys_setRTC_async"], [727, 2, 1, "", "Sys_setSwitchMode"], [727, 2, 1, "", "Sys_setSwitchMode_async"], [727, 2, 1, "", "close"], [727, 2, 1, "", "connect"], [727, 2, 1, "", "disconnect"]], "pywpc.EthanL": [[728, 2, 1, "", "DIO_loadStartup"], [728, 2, 1, "", "DIO_loadStartup_async"], [728, 2, 1, "", "DI_closePins"], [728, 2, 1, "", "DI_closePins_async"], [728, 2, 1, "", "DI_closePort"], [728, 2, 1, "", "DI_closePort_async"], [728, 2, 1, "", "DI_getPinMap"], [728, 2, 1, "", "DI_openPins"], [728, 2, 1, "", "DI_openPins_async"], [728, 2, 1, "", "DI_openPort"], [728, 2, 1, "", "DI_openPort_async"], [728, 2, 1, "", "DI_readPins"], [728, 2, 1, "", "DI_readPins_async"], [728, 2, 1, "", "DI_readPort"], [728, 2, 1, "", "DI_readPort_async"], [728, 2, 1, "", "DO_closePins"], [728, 2, 1, "", "DO_closePins_async"], [728, 2, 1, "", "DO_closePort"], [728, 2, 1, "", "DO_closePort_async"], [728, 2, 1, "", "DO_getPinMap"], [728, 2, 1, "", "DO_openPins"], [728, 2, 1, "", "DO_openPins_async"], [728, 2, 1, "", "DO_openPort"], [728, 2, 1, "", "DO_openPort_async"], [728, 2, 1, "", "DO_togglePins"], [728, 2, 1, "", "DO_togglePins_async"], [728, 2, 1, "", "DO_togglePort"], [728, 2, 1, "", "DO_togglePort_async"], [728, 2, 1, "", "DO_writePins"], [728, 2, 1, "", "DO_writePins_async"], [728, 2, 1, "", "DO_writePort"], [728, 2, 1, "", "DO_writePort_async"], [728, 2, 1, "", "Logger_openFile"], [728, 2, 1, "", "Logger_write2DList"], [728, 2, 1, "", "Logger_writeHeader"], [728, 2, 1, "", "Logger_writeList"], [728, 2, 1, "", "Logger_writeValue"], [728, 2, 1, "", "Net_getGateway"], [728, 2, 1, "", "Net_getGateway_async"], [728, 2, 1, "", "Net_getIPAddrAndSubmask"], [728, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [728, 2, 1, "", "Net_getMACAddr"], [728, 2, 1, "", "Net_getMACAddr_async"], [728, 2, 1, "", "Net_setIPAddrAndSubmask"], [728, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [728, 2, 1, "", "Relay_close"], [728, 2, 1, "", "Relay_close_async"], [728, 2, 1, "", "Relay_open"], [728, 2, 1, "", "Relay_open_async"], [728, 2, 1, "", "Relay_read"], [728, 2, 1, "", "Relay_read_async"], [728, 2, 1, "", "Sys_getDriverInfo"], [728, 2, 1, "", "Sys_getDriverInfo_async"], [728, 2, 1, "", "Sys_getGateway"], [728, 2, 1, "", "Sys_getGateway_async"], [728, 2, 1, "", "Sys_getIPAddrAndSubmask"], [728, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [728, 2, 1, "", "Sys_getMACAddr"], [728, 2, 1, "", "Sys_getMACAddr_async"], [728, 2, 1, "", "Sys_getMode"], [728, 2, 1, "", "Sys_getMode_async"], [728, 2, 1, "", "Sys_getPinModeInPort"], [728, 2, 1, "", "Sys_getPinModeInPort_async"], [728, 2, 1, "", "Sys_getPythonVersion"], [728, 2, 1, "", "Sys_getPythonVersion_async"], [728, 2, 1, "", "Sys_getRTC"], [728, 2, 1, "", "Sys_getRTC_async"], [728, 2, 1, "", "Sys_getSerialNumber"], [728, 2, 1, "", "Sys_getSerialNumber_async"], [728, 2, 1, "", "Sys_reboot"], [728, 2, 1, "", "Sys_reboot_async"], [728, 2, 1, "", "Sys_setAIOMode"], [728, 2, 1, "", "Sys_setAIOMode_async"], [728, 2, 1, "", "Sys_setDIMode"], [728, 2, 1, "", "Sys_setDIMode_async"], [728, 2, 1, "", "Sys_setDIOMode"], [728, 2, 1, "", "Sys_setDIOMode_async"], [728, 2, 1, "", "Sys_setDOMode"], [728, 2, 1, "", "Sys_setDOMode_async"], [728, 2, 1, "", "Sys_setIPAddrAndSubmask"], [728, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [728, 2, 1, "", "Sys_setIdleMode"], [728, 2, 1, "", "Sys_setIdleMode_async"], [728, 2, 1, "", "Sys_setMotionMode"], [728, 2, 1, "", "Sys_setMotionMode_async"], [728, 2, 1, "", "Sys_setRTC"], [728, 2, 1, "", "Sys_setRTC_async"], [728, 2, 1, "", "Sys_setSwitchMode"], [728, 2, 1, "", "Sys_setSwitchMode_async"], [728, 2, 1, "", "close"], [728, 2, 1, "", "connect"], [728, 2, 1, "", "disconnect"]], "pywpc.EthanO": [[729, 2, 1, "", "AO_close"], [729, 2, 1, "", "AO_closeStreaming"], [729, 2, 1, "", "AO_closeStreaming_async"], [729, 2, 1, "", "AO_close_async"], [729, 2, 1, "", "AO_getPort"], [729, 2, 1, "", "AO_getValues"], [729, 2, 1, "", "AO_getValues_async"], [729, 2, 1, "", "AO_open"], [729, 2, 1, "", "AO_openStreaming"], [729, 2, 1, "", "AO_openStreaming_async"], [729, 2, 1, "", "AO_open_async"], [729, 2, 1, "", "AO_setEnableChannels"], [729, 2, 1, "", "AO_setEnableChannels_async"], [729, 2, 1, "", "AO_setForm"], [729, 2, 1, "", "AO_setFormParam"], [729, 2, 1, "", "AO_setFormParam_async"], [729, 2, 1, "", "AO_setForm_async"], [729, 2, 1, "", "AO_setMode"], [729, 2, 1, "", "AO_setMode_async"], [729, 2, 1, "", "AO_setNumSamples"], [729, 2, 1, "", "AO_setNumSamples_async"], [729, 2, 1, "", "AO_setSamplingRate"], [729, 2, 1, "", "AO_setSamplingRate_async"], [729, 2, 1, "", "AO_startStreaming"], [729, 2, 1, "", "AO_startStreaming_async"], [729, 2, 1, "", "AO_writeAllChannels"], [729, 2, 1, "", "AO_writeAllChannels_async"], [729, 2, 1, "", "AO_writeOneChannel"], [729, 2, 1, "", "AO_writeOneChannel_async"], [729, 2, 1, "", "Logger_openFile"], [729, 2, 1, "", "Logger_write2DList"], [729, 2, 1, "", "Logger_writeHeader"], [729, 2, 1, "", "Logger_writeList"], [729, 2, 1, "", "Logger_writeValue"], [729, 2, 1, "", "Net_getGateway"], [729, 2, 1, "", "Net_getGateway_async"], [729, 2, 1, "", "Net_getIPAddrAndSubmask"], [729, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [729, 2, 1, "", "Net_getMACAddr"], [729, 2, 1, "", "Net_getMACAddr_async"], [729, 2, 1, "", "Net_setIPAddrAndSubmask"], [729, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [729, 2, 1, "", "Sys_getDriverInfo"], [729, 2, 1, "", "Sys_getDriverInfo_async"], [729, 2, 1, "", "Sys_getGateway"], [729, 2, 1, "", "Sys_getGateway_async"], [729, 2, 1, "", "Sys_getIPAddrAndSubmask"], [729, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [729, 2, 1, "", "Sys_getMACAddr"], [729, 2, 1, "", "Sys_getMACAddr_async"], [729, 2, 1, "", "Sys_getMode"], [729, 2, 1, "", "Sys_getMode_async"], [729, 2, 1, "", "Sys_getPinModeInPort"], [729, 2, 1, "", "Sys_getPinModeInPort_async"], [729, 2, 1, "", "Sys_getPythonVersion"], [729, 2, 1, "", "Sys_getPythonVersion_async"], [729, 2, 1, "", "Sys_getRTC"], [729, 2, 1, "", "Sys_getRTC_async"], [729, 2, 1, "", "Sys_getSerialNumber"], [729, 2, 1, "", "Sys_getSerialNumber_async"], [729, 2, 1, "", "Sys_reboot"], [729, 2, 1, "", "Sys_reboot_async"], [729, 2, 1, "", "Sys_setAIOMode"], [729, 2, 1, "", "Sys_setAIOMode_async"], [729, 2, 1, "", "Sys_setDIMode"], [729, 2, 1, "", "Sys_setDIMode_async"], [729, 2, 1, "", "Sys_setDIOMode"], [729, 2, 1, "", "Sys_setDIOMode_async"], [729, 2, 1, "", "Sys_setDOMode"], [729, 2, 1, "", "Sys_setDOMode_async"], [729, 2, 1, "", "Sys_setIPAddrAndSubmask"], [729, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [729, 2, 1, "", "Sys_setIdleMode"], [729, 2, 1, "", "Sys_setIdleMode_async"], [729, 2, 1, "", "Sys_setMotionMode"], [729, 2, 1, "", "Sys_setMotionMode_async"], [729, 2, 1, "", "Sys_setRTC"], [729, 2, 1, "", "Sys_setRTC_async"], [729, 2, 1, "", "Sys_setSwitchMode"], [729, 2, 1, "", "Sys_setSwitchMode_async"], [729, 2, 1, "", "close"], [729, 2, 1, "", "connect"], [729, 2, 1, "", "disconnect"]], "pywpc.EthanP": [[730, 2, 1, "", "DPOT_close"], [730, 2, 1, "", "DPOT_close_async"], [730, 2, 1, "", "DPOT_open"], [730, 2, 1, "", "DPOT_open_async"], [730, 2, 1, "", "DPOT_readByChannel"], [730, 2, 1, "", "DPOT_readByChannel_async"], [730, 2, 1, "", "DPOT_writeAllChannel"], [730, 2, 1, "", "DPOT_writeAllChannel_async"], [730, 2, 1, "", "Logger_openFile"], [730, 2, 1, "", "Logger_write2DList"], [730, 2, 1, "", "Logger_writeHeader"], [730, 2, 1, "", "Logger_writeList"], [730, 2, 1, "", "Logger_writeValue"], [730, 2, 1, "", "Net_getGateway"], [730, 2, 1, "", "Net_getGateway_async"], [730, 2, 1, "", "Net_getIPAddrAndSubmask"], [730, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [730, 2, 1, "", "Net_getMACAddr"], [730, 2, 1, "", "Net_getMACAddr_async"], [730, 2, 1, "", "Net_setIPAddrAndSubmask"], [730, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [730, 2, 1, "", "Sys_getDriverInfo"], [730, 2, 1, "", "Sys_getDriverInfo_async"], [730, 2, 1, "", "Sys_getGateway"], [730, 2, 1, "", "Sys_getGateway_async"], [730, 2, 1, "", "Sys_getIPAddrAndSubmask"], [730, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [730, 2, 1, "", "Sys_getMACAddr"], [730, 2, 1, "", "Sys_getMACAddr_async"], [730, 2, 1, "", "Sys_getMode"], [730, 2, 1, "", "Sys_getMode_async"], [730, 2, 1, "", "Sys_getPinModeInPort"], [730, 2, 1, "", "Sys_getPinModeInPort_async"], [730, 2, 1, "", "Sys_getPythonVersion"], [730, 2, 1, "", "Sys_getPythonVersion_async"], [730, 2, 1, "", "Sys_getRTC"], [730, 2, 1, "", "Sys_getRTC_async"], [730, 2, 1, "", "Sys_getSerialNumber"], [730, 2, 1, "", "Sys_getSerialNumber_async"], [730, 2, 1, "", "Sys_reboot"], [730, 2, 1, "", "Sys_reboot_async"], [730, 2, 1, "", "Sys_setAIOMode"], [730, 2, 1, "", "Sys_setAIOMode_async"], [730, 2, 1, "", "Sys_setDIMode"], [730, 2, 1, "", "Sys_setDIMode_async"], [730, 2, 1, "", "Sys_setDIOMode"], [730, 2, 1, "", "Sys_setDIOMode_async"], [730, 2, 1, "", "Sys_setDOMode"], [730, 2, 1, "", "Sys_setDOMode_async"], [730, 2, 1, "", "Sys_setIPAddrAndSubmask"], [730, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [730, 2, 1, "", "Sys_setIdleMode"], [730, 2, 1, "", "Sys_setIdleMode_async"], [730, 2, 1, "", "Sys_setMotionMode"], [730, 2, 1, "", "Sys_setMotionMode_async"], [730, 2, 1, "", "Sys_setRTC"], [730, 2, 1, "", "Sys_setRTC_async"], [730, 2, 1, "", "Sys_setSwitchMode"], [730, 2, 1, "", "Sys_setSwitchMode_async"], [730, 2, 1, "", "close"], [730, 2, 1, "", "connect"], [730, 2, 1, "", "disconnect"]], "pywpc.EthanT": [[731, 2, 1, "", "Logger_openFile"], [731, 2, 1, "", "Logger_write2DList"], [731, 2, 1, "", "Logger_writeHeader"], [731, 2, 1, "", "Logger_writeList"], [731, 2, 1, "", "Logger_writeValue"], [731, 2, 1, "", "Net_getGateway"], [731, 2, 1, "", "Net_getGateway_async"], [731, 2, 1, "", "Net_getIPAddrAndSubmask"], [731, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [731, 2, 1, "", "Net_getMACAddr"], [731, 2, 1, "", "Net_getMACAddr_async"], [731, 2, 1, "", "Net_setIPAddrAndSubmask"], [731, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [731, 2, 1, "", "Sys_getDriverInfo"], [731, 2, 1, "", "Sys_getDriverInfo_async"], [731, 2, 1, "", "Sys_getGateway"], [731, 2, 1, "", "Sys_getGateway_async"], [731, 2, 1, "", "Sys_getIPAddrAndSubmask"], [731, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [731, 2, 1, "", "Sys_getMACAddr"], [731, 2, 1, "", "Sys_getMACAddr_async"], [731, 2, 1, "", "Sys_getMode"], [731, 2, 1, "", "Sys_getMode_async"], [731, 2, 1, "", "Sys_getPinModeInPort"], [731, 2, 1, "", "Sys_getPinModeInPort_async"], [731, 2, 1, "", "Sys_getPythonVersion"], [731, 2, 1, "", "Sys_getPythonVersion_async"], [731, 2, 1, "", "Sys_getRTC"], [731, 2, 1, "", "Sys_getRTC_async"], [731, 2, 1, "", "Sys_getSerialNumber"], [731, 2, 1, "", "Sys_getSerialNumber_async"], [731, 2, 1, "", "Sys_reboot"], [731, 2, 1, "", "Sys_reboot_async"], [731, 2, 1, "", "Sys_setAIOMode"], [731, 2, 1, "", "Sys_setAIOMode_async"], [731, 2, 1, "", "Sys_setDIMode"], [731, 2, 1, "", "Sys_setDIMode_async"], [731, 2, 1, "", "Sys_setDIOMode"], [731, 2, 1, "", "Sys_setDIOMode_async"], [731, 2, 1, "", "Sys_setDOMode"], [731, 2, 1, "", "Sys_setDOMode_async"], [731, 2, 1, "", "Sys_setIPAddrAndSubmask"], [731, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [731, 2, 1, "", "Sys_setIdleMode"], [731, 2, 1, "", "Sys_setIdleMode_async"], [731, 2, 1, "", "Sys_setMotionMode"], [731, 2, 1, "", "Sys_setMotionMode_async"], [731, 2, 1, "", "Sys_setRTC"], [731, 2, 1, "", "Sys_setRTC_async"], [731, 2, 1, "", "Sys_setSwitchMode"], [731, 2, 1, "", "Sys_setSwitchMode_async"], [731, 2, 1, "", "Thermal_close"], [731, 2, 1, "", "Thermal_close_async"], [731, 2, 1, "", "Thermal_getPinMap"], [731, 2, 1, "", "Thermal_getStatus"], [731, 2, 1, "", "Thermal_getStatus_async"], [731, 2, 1, "", "Thermal_open"], [731, 2, 1, "", "Thermal_open_async"], [731, 2, 1, "", "Thermal_readSensor"], [731, 2, 1, "", "Thermal_readSensor_async"], [731, 2, 1, "", "Thermal_setOverSampling"], [731, 2, 1, "", "Thermal_setOverSampling_async"], [731, 2, 1, "", "Thermal_setType"], [731, 2, 1, "", "Thermal_setType_async"], [731, 2, 1, "", "close"], [731, 2, 1, "", "connect"], [731, 2, 1, "", "disconnect"]], "pywpc.STEM": [[732, 2, 1, "", "AI_close"], [732, 2, 1, "", "AI_close_async"], [732, 2, 1, "", "AI_enableCS"], [732, 2, 1, "", "AI_enableCS_async"], [732, 2, 1, "", "AI_enableChannel"], [732, 2, 1, "", "AI_enableChannel_async"], [732, 2, 1, "", "AI_getPort"], [732, 2, 1, "", "AI_open"], [732, 2, 1, "", "AI_open_async"], [732, 2, 1, "", "AI_readOnDemand"], [732, 2, 1, "", "AI_readOnDemand_async"], [732, 2, 1, "", "AI_readStreaming"], [732, 2, 1, "", "AI_readStreaming_async"], [732, 2, 1, "", "AI_setMode"], [732, 2, 1, "", "AI_setMode_async"], [732, 2, 1, "", "AI_setNumSamples"], [732, 2, 1, "", "AI_setNumSamples_async"], [732, 2, 1, "", "AI_setSamplingRate"], [732, 2, 1, "", "AI_setSamplingRate_async"], [732, 2, 1, "", "AI_start"], [732, 2, 1, "", "AI_start_async"], [732, 2, 1, "", "AI_stop"], [732, 2, 1, "", "AI_stop_async"], [732, 2, 1, "", "AO_close"], [732, 2, 1, "", "AO_closeStreaming"], [732, 2, 1, "", "AO_closeStreaming_async"], [732, 2, 1, "", "AO_close_async"], [732, 2, 1, "", "AO_getPort"], [732, 2, 1, "", "AO_getValues"], [732, 2, 1, "", "AO_getValues_async"], [732, 2, 1, "", "AO_open"], [732, 2, 1, "", "AO_openStreaming"], [732, 2, 1, "", "AO_openStreaming_async"], [732, 2, 1, "", "AO_open_async"], [732, 2, 1, "", "AO_setEnableChannels"], [732, 2, 1, "", "AO_setEnableChannels_async"], [732, 2, 1, "", "AO_setForm"], [732, 2, 1, "", "AO_setFormParam"], [732, 2, 1, "", "AO_setFormParam_async"], [732, 2, 1, "", "AO_setForm_async"], [732, 2, 1, "", "AO_setMode"], [732, 2, 1, "", "AO_setMode_async"], [732, 2, 1, "", "AO_setNumSamples"], [732, 2, 1, "", "AO_setNumSamples_async"], [732, 2, 1, "", "AO_setSamplingRate"], [732, 2, 1, "", "AO_setSamplingRate_async"], [732, 2, 1, "", "AO_startStreaming"], [732, 2, 1, "", "AO_startStreaming_async"], [732, 2, 1, "", "AO_writeAllChannels"], [732, 2, 1, "", "AO_writeAllChannels_async"], [732, 2, 1, "", "AO_writeOneChannel"], [732, 2, 1, "", "AO_writeOneChannel_async"], [732, 2, 1, "", "DIO_loadStartup"], [732, 2, 1, "", "DIO_loadStartup_async"], [732, 2, 1, "", "DI_closePins"], [732, 2, 1, "", "DI_closePins_async"], [732, 2, 1, "", "DI_closePort"], [732, 2, 1, "", "DI_closePort_async"], [732, 2, 1, "", "DI_getPinMap"], [732, 2, 1, "", "DI_openPins"], [732, 2, 1, "", "DI_openPins_async"], [732, 2, 1, "", "DI_openPort"], [732, 2, 1, "", "DI_openPort_async"], [732, 2, 1, "", "DI_readPins"], [732, 2, 1, "", "DI_readPins_async"], [732, 2, 1, "", "DI_readPort"], [732, 2, 1, "", "DI_readPort_async"], [732, 2, 1, "", "DO_closePins"], [732, 2, 1, "", "DO_closePins_async"], [732, 2, 1, "", "DO_closePort"], [732, 2, 1, "", "DO_closePort_async"], [732, 2, 1, "", "DO_getPinMap"], [732, 2, 1, "", "DO_openPins"], [732, 2, 1, "", "DO_openPins_async"], [732, 2, 1, "", "DO_openPort"], [732, 2, 1, "", "DO_openPort_async"], [732, 2, 1, "", "DO_togglePins"], [732, 2, 1, "", "DO_togglePins_async"], [732, 2, 1, "", "DO_togglePort"], [732, 2, 1, "", "DO_togglePort_async"], [732, 2, 1, "", "DO_writePins"], [732, 2, 1, "", "DO_writePins_async"], [732, 2, 1, "", "DO_writePort"], [732, 2, 1, "", "DO_writePort_async"], [732, 2, 1, "", "Logger_openFile"], [732, 2, 1, "", "Logger_write2DList"], [732, 2, 1, "", "Logger_writeHeader"], [732, 2, 1, "", "Logger_writeList"], [732, 2, 1, "", "Logger_writeValue"], [732, 2, 1, "", "Motion_cfg2AxisLinearInterpo"], [732, 2, 1, "", "Motion_cfg2AxisLinearInterpo_async"], [732, 2, 1, "", "Motion_cfg3AxisLinearInterpo"], [732, 2, 1, "", "Motion_cfg3AxisLinearInterpo_async"], [732, 2, 1, "", "Motion_cfg4AxisLinearInterpo"], [732, 2, 1, "", "Motion_cfg4AxisLinearInterpo_async"], [732, 2, 1, "", "Motion_cfgAlarm"], [732, 2, 1, "", "Motion_cfgAlarm_async"], [732, 2, 1, "", "Motion_cfgAxis"], [732, 2, 1, "", "Motion_cfgAxisMove"], [732, 2, 1, "", "Motion_cfgAxisMove_async"], [732, 2, 1, "", "Motion_cfgAxis_async"], [732, 2, 1, "", "Motion_cfgBreakPoint"], [732, 2, 1, "", "Motion_cfgBreakPoint_async"], [732, 2, 1, "", "Motion_cfgCapture"], [732, 2, 1, "", "Motion_cfgCapture_async"], [732, 2, 1, "", "Motion_cfgCircularInterpo"], [732, 2, 1, "", "Motion_cfgCircularInterpo_async"], [732, 2, 1, "", "Motion_cfgEncoder"], [732, 2, 1, "", "Motion_cfgEncoder_async"], [732, 2, 1, "", "Motion_cfgFindRef"], [732, 2, 1, "", "Motion_cfgFindRef_async"], [732, 2, 1, "", "Motion_cfgHelicalInterpo"], [732, 2, 1, "", "Motion_cfgHelicalInterpo_async"], [732, 2, 1, "", "Motion_cfgHome"], [732, 2, 1, "", "Motion_cfgHome_async"], [732, 2, 1, "", "Motion_cfgInposi"], [732, 2, 1, "", "Motion_cfgInposi_async"], [732, 2, 1, "", "Motion_cfgJerkAndAccelMode"], [732, 2, 1, "", "Motion_cfgJerkAndAccelMode_async"], [732, 2, 1, "", "Motion_cfgLimit"], [732, 2, 1, "", "Motion_cfgLimit_async"], [732, 2, 1, "", "Motion_checkRef"], [732, 2, 1, "", "Motion_checkRef_async"], [732, 2, 1, "", "Motion_close"], [732, 2, 1, "", "Motion_close_async"], [732, 2, 1, "", "Motion_enableBreakPoint"], [732, 2, 1, "", "Motion_enableBreakPoint_async"], [732, 2, 1, "", "Motion_enableCapture"], [732, 2, 1, "", "Motion_enableCapture_async"], [732, 2, 1, "", "Motion_enableServoOff"], [732, 2, 1, "", "Motion_enableServoOff_async"], [732, 2, 1, "", "Motion_enableServoOn"], [732, 2, 1, "", "Motion_enableServoOn_async"], [732, 2, 1, "", "Motion_findRef"], [732, 2, 1, "", "Motion_findRef_async"], [732, 2, 1, "", "Motion_getEncoderPosi"], [732, 2, 1, "", "Motion_getEncoderPosi_async"], [732, 2, 1, "", "Motion_getHomeStatus"], [732, 2, 1, "", "Motion_getHomeStatus_async"], [732, 2, 1, "", "Motion_getLimitStatus"], [732, 2, 1, "", "Motion_getLimitStatus_async"], [732, 2, 1, "", "Motion_getLogicalPosi"], [732, 2, 1, "", "Motion_getLogicalPosi_async"], [732, 2, 1, "", "Motion_getMoveStatus"], [732, 2, 1, "", "Motion_getMoveStatus_async"], [732, 2, 1, "", "Motion_loadCfgFile"], [732, 2, 1, "", "Motion_loadCfgFile_async"], [732, 2, 1, "", "Motion_open"], [732, 2, 1, "", "Motion_openCfgFile"], [732, 2, 1, "", "Motion_openCfgFile_async"], [732, 2, 1, "", "Motion_open_async"], [732, 2, 1, "", "Motion_overrideAxisAccel"], [732, 2, 1, "", "Motion_overrideAxisAccel_async"], [732, 2, 1, "", "Motion_overrideAxisPosi"], [732, 2, 1, "", "Motion_overrideAxisPosi_async"], [732, 2, 1, "", "Motion_overrideAxisVelocity"], [732, 2, 1, "", "Motion_overrideAxisVelocity_async"], [732, 2, 1, "", "Motion_readCapturePoint"], [732, 2, 1, "", "Motion_readCapturePoint_async"], [732, 2, 1, "", "Motion_rstEncoderPosi"], [732, 2, 1, "", "Motion_rstEncoderPosi_async"], [732, 2, 1, "", "Motion_saveCfgFile"], [732, 2, 1, "", "Motion_saveCfgFile_async"], [732, 2, 1, "", "Motion_setLogicalPosi"], [732, 2, 1, "", "Motion_setLogicalPosi_async"], [732, 2, 1, "", "Motion_startCircularInterpo"], [732, 2, 1, "", "Motion_startCircularInterpo_async"], [732, 2, 1, "", "Motion_startHelicalInterpo"], [732, 2, 1, "", "Motion_startHelicalInterpo_async"], [732, 2, 1, "", "Motion_startLinearInterpo"], [732, 2, 1, "", "Motion_startLinearInterpo_async"], [732, 2, 1, "", "Motion_startMultiAxisMove"], [732, 2, 1, "", "Motion_startMultiAxisMove_async"], [732, 2, 1, "", "Motion_startSingleAxisMove"], [732, 2, 1, "", "Motion_startSingleAxisMove_async"], [732, 2, 1, "", "Motion_stop"], [732, 2, 1, "", "Motion_stop_async"], [732, 2, 1, "", "Net_getGateway"], [732, 2, 1, "", "Net_getGateway_async"], [732, 2, 1, "", "Net_getIPAddrAndSubmask"], [732, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [732, 2, 1, "", "Net_getMACAddr"], [732, 2, 1, "", "Net_getMACAddr_async"], [732, 2, 1, "", "Net_setIPAddrAndSubmask"], [732, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [732, 2, 1, "", "Sys_getDriverInfo"], [732, 2, 1, "", "Sys_getDriverInfo_async"], [732, 2, 1, "", "Sys_getGateway"], [732, 2, 1, "", "Sys_getGateway_async"], [732, 2, 1, "", "Sys_getIPAddrAndSubmask"], [732, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [732, 2, 1, "", "Sys_getMACAddr"], [732, 2, 1, "", "Sys_getMACAddr_async"], [732, 2, 1, "", "Sys_getMode"], [732, 2, 1, "", "Sys_getMode_async"], [732, 2, 1, "", "Sys_getPinModeInPort"], [732, 2, 1, "", "Sys_getPinModeInPort_async"], [732, 2, 1, "", "Sys_getPythonVersion"], [732, 2, 1, "", "Sys_getPythonVersion_async"], [732, 2, 1, "", "Sys_getRTC"], [732, 2, 1, "", "Sys_getRTC_async"], [732, 2, 1, "", "Sys_getSerialNumber"], [732, 2, 1, "", "Sys_getSerialNumber_async"], [732, 2, 1, "", "Sys_reboot"], [732, 2, 1, "", "Sys_reboot_async"], [732, 2, 1, "", "Sys_setAIOMode"], [732, 2, 1, "", "Sys_setAIOMode_async"], [732, 2, 1, "", "Sys_setDIMode"], [732, 2, 1, "", "Sys_setDIMode_async"], [732, 2, 1, "", "Sys_setDIOMode"], [732, 2, 1, "", "Sys_setDIOMode_async"], [732, 2, 1, "", "Sys_setDOMode"], [732, 2, 1, "", "Sys_setDOMode_async"], [732, 2, 1, "", "Sys_setIPAddrAndSubmask"], [732, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [732, 2, 1, "", "Sys_setIdleMode"], [732, 2, 1, "", "Sys_setIdleMode_async"], [732, 2, 1, "", "Sys_setMotionMode"], [732, 2, 1, "", "Sys_setMotionMode_async"], [732, 2, 1, "", "Sys_setRTC"], [732, 2, 1, "", "Sys_setRTC_async"], [732, 2, 1, "", "Sys_setSwitchMode"], [732, 2, 1, "", "Sys_setSwitchMode_async"], [732, 2, 1, "", "close"], [732, 2, 1, "", "connect"], [732, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AD": [[733, 2, 1, "", "AI_close"], [733, 2, 1, "", "AI_close_async"], [733, 2, 1, "", "AI_enableCS"], [733, 2, 1, "", "AI_enableCS_async"], [733, 2, 1, "", "AI_enableChannel"], [733, 2, 1, "", "AI_enableChannel_async"], [733, 2, 1, "", "AI_getPort"], [733, 2, 1, "", "AI_open"], [733, 2, 1, "", "AI_open_async"], [733, 2, 1, "", "AI_readOnDemand"], [733, 2, 1, "", "AI_readOnDemand_async"], [733, 2, 1, "", "AI_readStreaming"], [733, 2, 1, "", "AI_readStreaming_async"], [733, 2, 1, "", "AI_setMode"], [733, 2, 1, "", "AI_setMode_async"], [733, 2, 1, "", "AI_setNumSamples"], [733, 2, 1, "", "AI_setNumSamples_async"], [733, 2, 1, "", "AI_setSamplingRate"], [733, 2, 1, "", "AI_setSamplingRate_async"], [733, 2, 1, "", "AI_start"], [733, 2, 1, "", "AI_start_async"], [733, 2, 1, "", "AI_stop"], [733, 2, 1, "", "AI_stop_async"], [733, 2, 1, "", "Counter_close"], [733, 2, 1, "", "Counter_close_async"], [733, 2, 1, "", "Counter_open"], [733, 2, 1, "", "Counter_open_async"], [733, 2, 1, "", "Counter_read"], [733, 2, 1, "", "Counter_read_async"], [733, 2, 1, "", "Counter_start"], [733, 2, 1, "", "Counter_start_async"], [733, 2, 1, "", "Counter_stop"], [733, 2, 1, "", "Counter_stop_async"], [733, 2, 1, "", "DIO_loadStartup"], [733, 2, 1, "", "DIO_loadStartup_async"], [733, 2, 1, "", "DI_closePins"], [733, 2, 1, "", "DI_closePins_async"], [733, 2, 1, "", "DI_closePort"], [733, 2, 1, "", "DI_closePort_async"], [733, 2, 1, "", "DI_getPinMap"], [733, 2, 1, "", "DI_openPins"], [733, 2, 1, "", "DI_openPins_async"], [733, 2, 1, "", "DI_openPort"], [733, 2, 1, "", "DI_openPort_async"], [733, 2, 1, "", "DI_readPins"], [733, 2, 1, "", "DI_readPins_async"], [733, 2, 1, "", "DI_readPort"], [733, 2, 1, "", "DI_readPort_async"], [733, 2, 1, "", "DO_closePins"], [733, 2, 1, "", "DO_closePins_async"], [733, 2, 1, "", "DO_closePort"], [733, 2, 1, "", "DO_closePort_async"], [733, 2, 1, "", "DO_getPinMap"], [733, 2, 1, "", "DO_openPins"], [733, 2, 1, "", "DO_openPins_async"], [733, 2, 1, "", "DO_openPort"], [733, 2, 1, "", "DO_openPort_async"], [733, 2, 1, "", "DO_togglePins"], [733, 2, 1, "", "DO_togglePins_async"], [733, 2, 1, "", "DO_togglePort"], [733, 2, 1, "", "DO_togglePort_async"], [733, 2, 1, "", "DO_writePins"], [733, 2, 1, "", "DO_writePins_async"], [733, 2, 1, "", "DO_writePort"], [733, 2, 1, "", "DO_writePort_async"], [733, 2, 1, "", "I2C_close"], [733, 2, 1, "", "I2C_close_async"], [733, 2, 1, "", "I2C_getPinMap"], [733, 2, 1, "", "I2C_open"], [733, 2, 1, "", "I2C_open_async"], [733, 2, 1, "", "I2C_read"], [733, 2, 1, "", "I2C_read_async"], [733, 2, 1, "", "I2C_reset"], [733, 2, 1, "", "I2C_reset_async"], [733, 2, 1, "", "I2C_setAddressSize"], [733, 2, 1, "", "I2C_setAddressSize_async"], [733, 2, 1, "", "I2C_setClockRate"], [733, 2, 1, "", "I2C_setClockRate_async"], [733, 2, 1, "", "I2C_write"], [733, 2, 1, "", "I2C_write_async"], [733, 2, 1, "", "Logger_openFile"], [733, 2, 1, "", "Logger_write2DList"], [733, 2, 1, "", "Logger_writeHeader"], [733, 2, 1, "", "Logger_writeList"], [733, 2, 1, "", "Logger_writeValue"], [733, 2, 1, "", "PWM_close"], [733, 2, 1, "", "PWM_close_async"], [733, 2, 1, "", "PWM_open"], [733, 2, 1, "", "PWM_open_async"], [733, 2, 1, "", "PWM_setDutyCycle"], [733, 2, 1, "", "PWM_setDutyCycle_async"], [733, 2, 1, "", "PWM_setFrequency"], [733, 2, 1, "", "PWM_setFrequency_async"], [733, 2, 1, "", "PWM_start"], [733, 2, 1, "", "PWM_start_async"], [733, 2, 1, "", "PWM_stop"], [733, 2, 1, "", "PWM_stop_async"], [733, 2, 1, "", "SPI_close"], [733, 2, 1, "", "SPI_close_async"], [733, 2, 1, "", "SPI_getPinMap"], [733, 2, 1, "", "SPI_open"], [733, 2, 1, "", "SPI_open_async"], [733, 2, 1, "", "SPI_read"], [733, 2, 1, "", "SPI_readAndWrite"], [733, 2, 1, "", "SPI_readAndWrite_async"], [733, 2, 1, "", "SPI_read_async"], [733, 2, 1, "", "SPI_reset"], [733, 2, 1, "", "SPI_reset_async"], [733, 2, 1, "", "SPI_setDataSize"], [733, 2, 1, "", "SPI_setDataSize_async"], [733, 2, 1, "", "SPI_setFirstBit"], [733, 2, 1, "", "SPI_setFirstBit_async"], [733, 2, 1, "", "SPI_setMode"], [733, 2, 1, "", "SPI_setMode_async"], [733, 2, 1, "", "SPI_setPrescaler"], [733, 2, 1, "", "SPI_setPrescaler_async"], [733, 2, 1, "", "SPI_write"], [733, 2, 1, "", "SPI_write_async"], [733, 2, 1, "", "Sys_getDriverInfo"], [733, 2, 1, "", "Sys_getDriverInfo_async"], [733, 2, 1, "", "Sys_getMode"], [733, 2, 1, "", "Sys_getMode_async"], [733, 2, 1, "", "Sys_getPinModeInPort"], [733, 2, 1, "", "Sys_getPinModeInPort_async"], [733, 2, 1, "", "Sys_getPythonVersion"], [733, 2, 1, "", "Sys_getPythonVersion_async"], [733, 2, 1, "", "Sys_getRTC"], [733, 2, 1, "", "Sys_getRTC_async"], [733, 2, 1, "", "Sys_getSerialNumber"], [733, 2, 1, "", "Sys_getSerialNumber_async"], [733, 2, 1, "", "Sys_reboot"], [733, 2, 1, "", "Sys_reboot_async"], [733, 2, 1, "", "Sys_setAIOMode"], [733, 2, 1, "", "Sys_setAIOMode_async"], [733, 2, 1, "", "Sys_setDIMode"], [733, 2, 1, "", "Sys_setDIMode_async"], [733, 2, 1, "", "Sys_setDIOMode"], [733, 2, 1, "", "Sys_setDIOMode_async"], [733, 2, 1, "", "Sys_setDOMode"], [733, 2, 1, "", "Sys_setDOMode_async"], [733, 2, 1, "", "Sys_setIdleMode"], [733, 2, 1, "", "Sys_setIdleMode_async"], [733, 2, 1, "", "Sys_setMotionMode"], [733, 2, 1, "", "Sys_setMotionMode_async"], [733, 2, 1, "", "Sys_setRTC"], [733, 2, 1, "", "Sys_setRTC_async"], [733, 2, 1, "", "Sys_setSwitchMode"], [733, 2, 1, "", "Sys_setSwitchMode_async"], [733, 2, 1, "", "UART_close"], [733, 2, 1, "", "UART_close_async"], [733, 2, 1, "", "UART_getPinMap"], [733, 2, 1, "", "UART_open"], [733, 2, 1, "", "UART_open_async"], [733, 2, 1, "", "UART_read"], [733, 2, 1, "", "UART_read_async"], [733, 2, 1, "", "UART_reset"], [733, 2, 1, "", "UART_reset_async"], [733, 2, 1, "", "UART_setBaudRate"], [733, 2, 1, "", "UART_setBaudRate_async"], [733, 2, 1, "", "UART_setDataBit"], [733, 2, 1, "", "UART_setDataBit_async"], [733, 2, 1, "", "UART_setNumStopBit"], [733, 2, 1, "", "UART_setNumStopBit_async"], [733, 2, 1, "", "UART_setParity"], [733, 2, 1, "", "UART_setParity_async"], [733, 2, 1, "", "UART_write"], [733, 2, 1, "", "UART_write_async"], [733, 2, 1, "", "close"], [733, 2, 1, "", "connect"], [733, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1AOD": [[734, 2, 1, "", "AI_close"], [734, 2, 1, "", "AI_close_async"], [734, 2, 1, "", "AI_enableCS"], [734, 2, 1, "", "AI_enableCS_async"], [734, 2, 1, "", "AI_enableChannel"], [734, 2, 1, "", "AI_enableChannel_async"], [734, 2, 1, "", "AI_getPort"], [734, 2, 1, "", "AI_open"], [734, 2, 1, "", "AI_open_async"], [734, 2, 1, "", "AI_readOnDemand"], [734, 2, 1, "", "AI_readOnDemand_async"], [734, 2, 1, "", "AI_readStreaming"], [734, 2, 1, "", "AI_readStreaming_async"], [734, 2, 1, "", "AI_setMode"], [734, 2, 1, "", "AI_setMode_async"], [734, 2, 1, "", "AI_setNumSamples"], [734, 2, 1, "", "AI_setNumSamples_async"], [734, 2, 1, "", "AI_setSamplingRate"], [734, 2, 1, "", "AI_setSamplingRate_async"], [734, 2, 1, "", "AI_start"], [734, 2, 1, "", "AI_start_async"], [734, 2, 1, "", "AI_stop"], [734, 2, 1, "", "AI_stop_async"], [734, 2, 1, "", "AO_close"], [734, 2, 1, "", "AO_closeStreaming"], [734, 2, 1, "", "AO_closeStreaming_async"], [734, 2, 1, "", "AO_close_async"], [734, 2, 1, "", "AO_getPort"], [734, 2, 1, "", "AO_getValues"], [734, 2, 1, "", "AO_getValues_async"], [734, 2, 1, "", "AO_open"], [734, 2, 1, "", "AO_openStreaming"], [734, 2, 1, "", "AO_openStreaming_async"], [734, 2, 1, "", "AO_open_async"], [734, 2, 1, "", "AO_setEnableChannels"], [734, 2, 1, "", "AO_setEnableChannels_async"], [734, 2, 1, "", "AO_setForm"], [734, 2, 1, "", "AO_setFormParam"], [734, 2, 1, "", "AO_setFormParam_async"], [734, 2, 1, "", "AO_setForm_async"], [734, 2, 1, "", "AO_setMode"], [734, 2, 1, "", "AO_setMode_async"], [734, 2, 1, "", "AO_setNumSamples"], [734, 2, 1, "", "AO_setNumSamples_async"], [734, 2, 1, "", "AO_setSamplingRate"], [734, 2, 1, "", "AO_setSamplingRate_async"], [734, 2, 1, "", "AO_startStreaming"], [734, 2, 1, "", "AO_startStreaming_async"], [734, 2, 1, "", "AO_writeAllChannels"], [734, 2, 1, "", "AO_writeAllChannels_async"], [734, 2, 1, "", "AO_writeOneChannel"], [734, 2, 1, "", "AO_writeOneChannel_async"], [734, 2, 1, "", "Counter_close"], [734, 2, 1, "", "Counter_close_async"], [734, 2, 1, "", "Counter_open"], [734, 2, 1, "", "Counter_open_async"], [734, 2, 1, "", "Counter_read"], [734, 2, 1, "", "Counter_read_async"], [734, 2, 1, "", "Counter_start"], [734, 2, 1, "", "Counter_start_async"], [734, 2, 1, "", "Counter_stop"], [734, 2, 1, "", "Counter_stop_async"], [734, 2, 1, "", "DIO_loadStartup"], [734, 2, 1, "", "DIO_loadStartup_async"], [734, 2, 1, "", "DI_closePins"], [734, 2, 1, "", "DI_closePins_async"], [734, 2, 1, "", "DI_closePort"], [734, 2, 1, "", "DI_closePort_async"], [734, 2, 1, "", "DI_getPinMap"], [734, 2, 1, "", "DI_openPins"], [734, 2, 1, "", "DI_openPins_async"], [734, 2, 1, "", "DI_openPort"], [734, 2, 1, "", "DI_openPort_async"], [734, 2, 1, "", "DI_readPins"], [734, 2, 1, "", "DI_readPins_async"], [734, 2, 1, "", "DI_readPort"], [734, 2, 1, "", "DI_readPort_async"], [734, 2, 1, "", "DO_closePins"], [734, 2, 1, "", "DO_closePins_async"], [734, 2, 1, "", "DO_closePort"], [734, 2, 1, "", "DO_closePort_async"], [734, 2, 1, "", "DO_getPinMap"], [734, 2, 1, "", "DO_openPins"], [734, 2, 1, "", "DO_openPins_async"], [734, 2, 1, "", "DO_openPort"], [734, 2, 1, "", "DO_openPort_async"], [734, 2, 1, "", "DO_togglePins"], [734, 2, 1, "", "DO_togglePins_async"], [734, 2, 1, "", "DO_togglePort"], [734, 2, 1, "", "DO_togglePort_async"], [734, 2, 1, "", "DO_writePins"], [734, 2, 1, "", "DO_writePins_async"], [734, 2, 1, "", "DO_writePort"], [734, 2, 1, "", "DO_writePort_async"], [734, 2, 1, "", "I2C_close"], [734, 2, 1, "", "I2C_close_async"], [734, 2, 1, "", "I2C_getPinMap"], [734, 2, 1, "", "I2C_open"], [734, 2, 1, "", "I2C_open_async"], [734, 2, 1, "", "I2C_read"], [734, 2, 1, "", "I2C_read_async"], [734, 2, 1, "", "I2C_reset"], [734, 2, 1, "", "I2C_reset_async"], [734, 2, 1, "", "I2C_setAddressSize"], [734, 2, 1, "", "I2C_setAddressSize_async"], [734, 2, 1, "", "I2C_setClockRate"], [734, 2, 1, "", "I2C_setClockRate_async"], [734, 2, 1, "", "I2C_write"], [734, 2, 1, "", "I2C_write_async"], [734, 2, 1, "", "Logger_openFile"], [734, 2, 1, "", "Logger_write2DList"], [734, 2, 1, "", "Logger_writeHeader"], [734, 2, 1, "", "Logger_writeList"], [734, 2, 1, "", "Logger_writeValue"], [734, 2, 1, "", "PWM_close"], [734, 2, 1, "", "PWM_close_async"], [734, 2, 1, "", "PWM_open"], [734, 2, 1, "", "PWM_open_async"], [734, 2, 1, "", "PWM_setDutyCycle"], [734, 2, 1, "", "PWM_setDutyCycle_async"], [734, 2, 1, "", "PWM_setFrequency"], [734, 2, 1, "", "PWM_setFrequency_async"], [734, 2, 1, "", "PWM_start"], [734, 2, 1, "", "PWM_start_async"], [734, 2, 1, "", "PWM_stop"], [734, 2, 1, "", "PWM_stop_async"], [734, 2, 1, "", "Sys_getDriverInfo"], [734, 2, 1, "", "Sys_getDriverInfo_async"], [734, 2, 1, "", "Sys_getMode"], [734, 2, 1, "", "Sys_getMode_async"], [734, 2, 1, "", "Sys_getPinModeInPort"], [734, 2, 1, "", "Sys_getPinModeInPort_async"], [734, 2, 1, "", "Sys_getPythonVersion"], [734, 2, 1, "", "Sys_getPythonVersion_async"], [734, 2, 1, "", "Sys_getRTC"], [734, 2, 1, "", "Sys_getRTC_async"], [734, 2, 1, "", "Sys_getSerialNumber"], [734, 2, 1, "", "Sys_getSerialNumber_async"], [734, 2, 1, "", "Sys_reboot"], [734, 2, 1, "", "Sys_reboot_async"], [734, 2, 1, "", "Sys_setAIOMode"], [734, 2, 1, "", "Sys_setAIOMode_async"], [734, 2, 1, "", "Sys_setDIMode"], [734, 2, 1, "", "Sys_setDIMode_async"], [734, 2, 1, "", "Sys_setDIOMode"], [734, 2, 1, "", "Sys_setDIOMode_async"], [734, 2, 1, "", "Sys_setDOMode"], [734, 2, 1, "", "Sys_setDOMode_async"], [734, 2, 1, "", "Sys_setIdleMode"], [734, 2, 1, "", "Sys_setIdleMode_async"], [734, 2, 1, "", "Sys_setMotionMode"], [734, 2, 1, "", "Sys_setMotionMode_async"], [734, 2, 1, "", "Sys_setRTC"], [734, 2, 1, "", "Sys_setRTC_async"], [734, 2, 1, "", "Sys_setSwitchMode"], [734, 2, 1, "", "Sys_setSwitchMode_async"], [734, 2, 1, "", "UART_close"], [734, 2, 1, "", "UART_close_async"], [734, 2, 1, "", "UART_getPinMap"], [734, 2, 1, "", "UART_open"], [734, 2, 1, "", "UART_open_async"], [734, 2, 1, "", "UART_read"], [734, 2, 1, "", "UART_read_async"], [734, 2, 1, "", "UART_reset"], [734, 2, 1, "", "UART_reset_async"], [734, 2, 1, "", "UART_setBaudRate"], [734, 2, 1, "", "UART_setBaudRate_async"], [734, 2, 1, "", "UART_setDataBit"], [734, 2, 1, "", "UART_setDataBit_async"], [734, 2, 1, "", "UART_setNumStopBit"], [734, 2, 1, "", "UART_setNumStopBit_async"], [734, 2, 1, "", "UART_setParity"], [734, 2, 1, "", "UART_setParity_async"], [734, 2, 1, "", "UART_write"], [734, 2, 1, "", "UART_write_async"], [734, 2, 1, "", "close"], [734, 2, 1, "", "connect"], [734, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1CD": [[735, 2, 1, "", "CAN_close"], [735, 2, 1, "", "CAN_close_async"], [735, 2, 1, "", "CAN_getPort"], [735, 2, 1, "", "CAN_open"], [735, 2, 1, "", "CAN_open_async"], [735, 2, 1, "", "CAN_read"], [735, 2, 1, "", "CAN_read_async"], [735, 2, 1, "", "CAN_setRXFilterOrMask"], [735, 2, 1, "", "CAN_setRXFilterOrMask_async"], [735, 2, 1, "", "CAN_setRXFilteringOn"], [735, 2, 1, "", "CAN_setRXFilteringOn_async"], [735, 2, 1, "", "CAN_setSpeed"], [735, 2, 1, "", "CAN_setSpeed_async"], [735, 2, 1, "", "CAN_start"], [735, 2, 1, "", "CAN_start_async"], [735, 2, 1, "", "CAN_stop"], [735, 2, 1, "", "CAN_stop_async"], [735, 2, 1, "", "CAN_write"], [735, 2, 1, "", "CAN_write_async"], [735, 2, 1, "", "Counter_close"], [735, 2, 1, "", "Counter_close_async"], [735, 2, 1, "", "Counter_open"], [735, 2, 1, "", "Counter_open_async"], [735, 2, 1, "", "Counter_read"], [735, 2, 1, "", "Counter_read_async"], [735, 2, 1, "", "Counter_start"], [735, 2, 1, "", "Counter_start_async"], [735, 2, 1, "", "Counter_stop"], [735, 2, 1, "", "Counter_stop_async"], [735, 2, 1, "", "DIO_loadStartup"], [735, 2, 1, "", "DIO_loadStartup_async"], [735, 2, 1, "", "DI_closePins"], [735, 2, 1, "", "DI_closePins_async"], [735, 2, 1, "", "DI_closePort"], [735, 2, 1, "", "DI_closePort_async"], [735, 2, 1, "", "DI_getPinMap"], [735, 2, 1, "", "DI_openPins"], [735, 2, 1, "", "DI_openPins_async"], [735, 2, 1, "", "DI_openPort"], [735, 2, 1, "", "DI_openPort_async"], [735, 2, 1, "", "DI_readPins"], [735, 2, 1, "", "DI_readPins_async"], [735, 2, 1, "", "DI_readPort"], [735, 2, 1, "", "DI_readPort_async"], [735, 2, 1, "", "DO_closePins"], [735, 2, 1, "", "DO_closePins_async"], [735, 2, 1, "", "DO_closePort"], [735, 2, 1, "", "DO_closePort_async"], [735, 2, 1, "", "DO_getPinMap"], [735, 2, 1, "", "DO_openPins"], [735, 2, 1, "", "DO_openPins_async"], [735, 2, 1, "", "DO_openPort"], [735, 2, 1, "", "DO_openPort_async"], [735, 2, 1, "", "DO_togglePins"], [735, 2, 1, "", "DO_togglePins_async"], [735, 2, 1, "", "DO_togglePort"], [735, 2, 1, "", "DO_togglePort_async"], [735, 2, 1, "", "DO_writePins"], [735, 2, 1, "", "DO_writePins_async"], [735, 2, 1, "", "DO_writePort"], [735, 2, 1, "", "DO_writePort_async"], [735, 2, 1, "", "I2C_close"], [735, 2, 1, "", "I2C_close_async"], [735, 2, 1, "", "I2C_getPinMap"], [735, 2, 1, "", "I2C_open"], [735, 2, 1, "", "I2C_open_async"], [735, 2, 1, "", "I2C_read"], [735, 2, 1, "", "I2C_read_async"], [735, 2, 1, "", "I2C_reset"], [735, 2, 1, "", "I2C_reset_async"], [735, 2, 1, "", "I2C_setAddressSize"], [735, 2, 1, "", "I2C_setAddressSize_async"], [735, 2, 1, "", "I2C_setClockRate"], [735, 2, 1, "", "I2C_setClockRate_async"], [735, 2, 1, "", "I2C_write"], [735, 2, 1, "", "I2C_write_async"], [735, 2, 1, "", "Logger_openFile"], [735, 2, 1, "", "Logger_write2DList"], [735, 2, 1, "", "Logger_writeHeader"], [735, 2, 1, "", "Logger_writeList"], [735, 2, 1, "", "Logger_writeValue"], [735, 2, 1, "", "PWM_close"], [735, 2, 1, "", "PWM_close_async"], [735, 2, 1, "", "PWM_open"], [735, 2, 1, "", "PWM_open_async"], [735, 2, 1, "", "PWM_setDutyCycle"], [735, 2, 1, "", "PWM_setDutyCycle_async"], [735, 2, 1, "", "PWM_setFrequency"], [735, 2, 1, "", "PWM_setFrequency_async"], [735, 2, 1, "", "PWM_start"], [735, 2, 1, "", "PWM_start_async"], [735, 2, 1, "", "PWM_stop"], [735, 2, 1, "", "PWM_stop_async"], [735, 2, 1, "", "SPI_close"], [735, 2, 1, "", "SPI_close_async"], [735, 2, 1, "", "SPI_getPinMap"], [735, 2, 1, "", "SPI_open"], [735, 2, 1, "", "SPI_open_async"], [735, 2, 1, "", "SPI_read"], [735, 2, 1, "", "SPI_readAndWrite"], [735, 2, 1, "", "SPI_readAndWrite_async"], [735, 2, 1, "", "SPI_read_async"], [735, 2, 1, "", "SPI_reset"], [735, 2, 1, "", "SPI_reset_async"], [735, 2, 1, "", "SPI_setDataSize"], [735, 2, 1, "", "SPI_setDataSize_async"], [735, 2, 1, "", "SPI_setFirstBit"], [735, 2, 1, "", "SPI_setFirstBit_async"], [735, 2, 1, "", "SPI_setMode"], [735, 2, 1, "", "SPI_setMode_async"], [735, 2, 1, "", "SPI_setPrescaler"], [735, 2, 1, "", "SPI_setPrescaler_async"], [735, 2, 1, "", "SPI_write"], [735, 2, 1, "", "SPI_write_async"], [735, 2, 1, "", "Sys_getDriverInfo"], [735, 2, 1, "", "Sys_getDriverInfo_async"], [735, 2, 1, "", "Sys_getMode"], [735, 2, 1, "", "Sys_getMode_async"], [735, 2, 1, "", "Sys_getPinModeInPort"], [735, 2, 1, "", "Sys_getPinModeInPort_async"], [735, 2, 1, "", "Sys_getPythonVersion"], [735, 2, 1, "", "Sys_getPythonVersion_async"], [735, 2, 1, "", "Sys_getRTC"], [735, 2, 1, "", "Sys_getRTC_async"], [735, 2, 1, "", "Sys_getSerialNumber"], [735, 2, 1, "", "Sys_getSerialNumber_async"], [735, 2, 1, "", "Sys_reboot"], [735, 2, 1, "", "Sys_reboot_async"], [735, 2, 1, "", "Sys_setAIOMode"], [735, 2, 1, "", "Sys_setAIOMode_async"], [735, 2, 1, "", "Sys_setDIMode"], [735, 2, 1, "", "Sys_setDIMode_async"], [735, 2, 1, "", "Sys_setDIOMode"], [735, 2, 1, "", "Sys_setDIOMode_async"], [735, 2, 1, "", "Sys_setDOMode"], [735, 2, 1, "", "Sys_setDOMode_async"], [735, 2, 1, "", "Sys_setIdleMode"], [735, 2, 1, "", "Sys_setIdleMode_async"], [735, 2, 1, "", "Sys_setMotionMode"], [735, 2, 1, "", "Sys_setMotionMode_async"], [735, 2, 1, "", "Sys_setRTC"], [735, 2, 1, "", "Sys_setRTC_async"], [735, 2, 1, "", "Sys_setSwitchMode"], [735, 2, 1, "", "Sys_setSwitchMode_async"], [735, 2, 1, "", "UART_close"], [735, 2, 1, "", "UART_close_async"], [735, 2, 1, "", "UART_getPinMap"], [735, 2, 1, "", "UART_open"], [735, 2, 1, "", "UART_open_async"], [735, 2, 1, "", "UART_read"], [735, 2, 1, "", "UART_read_async"], [735, 2, 1, "", "UART_reset"], [735, 2, 1, "", "UART_reset_async"], [735, 2, 1, "", "UART_setBaudRate"], [735, 2, 1, "", "UART_setBaudRate_async"], [735, 2, 1, "", "UART_setDataBit"], [735, 2, 1, "", "UART_setDataBit_async"], [735, 2, 1, "", "UART_setNumStopBit"], [735, 2, 1, "", "UART_setNumStopBit_async"], [735, 2, 1, "", "UART_setParity"], [735, 2, 1, "", "UART_setParity_async"], [735, 2, 1, "", "UART_write"], [735, 2, 1, "", "UART_write_async"], [735, 2, 1, "", "close"], [735, 2, 1, "", "connect"], [735, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1D": [[736, 2, 1, "", "Counter_close"], [736, 2, 1, "", "Counter_close_async"], [736, 2, 1, "", "Counter_open"], [736, 2, 1, "", "Counter_open_async"], [736, 2, 1, "", "Counter_read"], [736, 2, 1, "", "Counter_read_async"], [736, 2, 1, "", "Counter_start"], [736, 2, 1, "", "Counter_start_async"], [736, 2, 1, "", "Counter_stop"], [736, 2, 1, "", "Counter_stop_async"], [736, 2, 1, "", "DIO_loadStartup"], [736, 2, 1, "", "DIO_loadStartup_async"], [736, 2, 1, "", "DI_closePins"], [736, 2, 1, "", "DI_closePins_async"], [736, 2, 1, "", "DI_closePort"], [736, 2, 1, "", "DI_closePort_async"], [736, 2, 1, "", "DI_getPinMap"], [736, 2, 1, "", "DI_openPins"], [736, 2, 1, "", "DI_openPins_async"], [736, 2, 1, "", "DI_openPort"], [736, 2, 1, "", "DI_openPort_async"], [736, 2, 1, "", "DI_readPins"], [736, 2, 1, "", "DI_readPins_async"], [736, 2, 1, "", "DI_readPort"], [736, 2, 1, "", "DI_readPort_async"], [736, 2, 1, "", "DO_closePins"], [736, 2, 1, "", "DO_closePins_async"], [736, 2, 1, "", "DO_closePort"], [736, 2, 1, "", "DO_closePort_async"], [736, 2, 1, "", "DO_getPinMap"], [736, 2, 1, "", "DO_openPins"], [736, 2, 1, "", "DO_openPins_async"], [736, 2, 1, "", "DO_openPort"], [736, 2, 1, "", "DO_openPort_async"], [736, 2, 1, "", "DO_togglePins"], [736, 2, 1, "", "DO_togglePins_async"], [736, 2, 1, "", "DO_togglePort"], [736, 2, 1, "", "DO_togglePort_async"], [736, 2, 1, "", "DO_writePins"], [736, 2, 1, "", "DO_writePins_async"], [736, 2, 1, "", "DO_writePort"], [736, 2, 1, "", "DO_writePort_async"], [736, 2, 1, "", "I2C_close"], [736, 2, 1, "", "I2C_close_async"], [736, 2, 1, "", "I2C_getPinMap"], [736, 2, 1, "", "I2C_open"], [736, 2, 1, "", "I2C_open_async"], [736, 2, 1, "", "I2C_read"], [736, 2, 1, "", "I2C_read_async"], [736, 2, 1, "", "I2C_reset"], [736, 2, 1, "", "I2C_reset_async"], [736, 2, 1, "", "I2C_setAddressSize"], [736, 2, 1, "", "I2C_setAddressSize_async"], [736, 2, 1, "", "I2C_setClockRate"], [736, 2, 1, "", "I2C_setClockRate_async"], [736, 2, 1, "", "I2C_write"], [736, 2, 1, "", "I2C_write_async"], [736, 2, 1, "", "Logger_openFile"], [736, 2, 1, "", "Logger_write2DList"], [736, 2, 1, "", "Logger_writeHeader"], [736, 2, 1, "", "Logger_writeList"], [736, 2, 1, "", "Logger_writeValue"], [736, 2, 1, "", "PWM_close"], [736, 2, 1, "", "PWM_close_async"], [736, 2, 1, "", "PWM_open"], [736, 2, 1, "", "PWM_open_async"], [736, 2, 1, "", "PWM_setDutyCycle"], [736, 2, 1, "", "PWM_setDutyCycle_async"], [736, 2, 1, "", "PWM_setFrequency"], [736, 2, 1, "", "PWM_setFrequency_async"], [736, 2, 1, "", "PWM_start"], [736, 2, 1, "", "PWM_start_async"], [736, 2, 1, "", "PWM_stop"], [736, 2, 1, "", "PWM_stop_async"], [736, 2, 1, "", "SPI_close"], [736, 2, 1, "", "SPI_close_async"], [736, 2, 1, "", "SPI_getPinMap"], [736, 2, 1, "", "SPI_open"], [736, 2, 1, "", "SPI_open_async"], [736, 2, 1, "", "SPI_read"], [736, 2, 1, "", "SPI_readAndWrite"], [736, 2, 1, "", "SPI_readAndWrite_async"], [736, 2, 1, "", "SPI_read_async"], [736, 2, 1, "", "SPI_reset"], [736, 2, 1, "", "SPI_reset_async"], [736, 2, 1, "", "SPI_setDataSize"], [736, 2, 1, "", "SPI_setDataSize_async"], [736, 2, 1, "", "SPI_setFirstBit"], [736, 2, 1, "", "SPI_setFirstBit_async"], [736, 2, 1, "", "SPI_setMode"], [736, 2, 1, "", "SPI_setMode_async"], [736, 2, 1, "", "SPI_setPrescaler"], [736, 2, 1, "", "SPI_setPrescaler_async"], [736, 2, 1, "", "SPI_write"], [736, 2, 1, "", "SPI_write_async"], [736, 2, 1, "", "Sys_getDriverInfo"], [736, 2, 1, "", "Sys_getDriverInfo_async"], [736, 2, 1, "", "Sys_getMode"], [736, 2, 1, "", "Sys_getMode_async"], [736, 2, 1, "", "Sys_getPinModeInPort"], [736, 2, 1, "", "Sys_getPinModeInPort_async"], [736, 2, 1, "", "Sys_getPythonVersion"], [736, 2, 1, "", "Sys_getPythonVersion_async"], [736, 2, 1, "", "Sys_getRTC"], [736, 2, 1, "", "Sys_getRTC_async"], [736, 2, 1, "", "Sys_getSerialNumber"], [736, 2, 1, "", "Sys_getSerialNumber_async"], [736, 2, 1, "", "Sys_reboot"], [736, 2, 1, "", "Sys_reboot_async"], [736, 2, 1, "", "Sys_setAIOMode"], [736, 2, 1, "", "Sys_setAIOMode_async"], [736, 2, 1, "", "Sys_setDIMode"], [736, 2, 1, "", "Sys_setDIMode_async"], [736, 2, 1, "", "Sys_setDIOMode"], [736, 2, 1, "", "Sys_setDIOMode_async"], [736, 2, 1, "", "Sys_setDOMode"], [736, 2, 1, "", "Sys_setDOMode_async"], [736, 2, 1, "", "Sys_setIdleMode"], [736, 2, 1, "", "Sys_setIdleMode_async"], [736, 2, 1, "", "Sys_setMotionMode"], [736, 2, 1, "", "Sys_setMotionMode_async"], [736, 2, 1, "", "Sys_setRTC"], [736, 2, 1, "", "Sys_setRTC_async"], [736, 2, 1, "", "Sys_setSwitchMode"], [736, 2, 1, "", "Sys_setSwitchMode_async"], [736, 2, 1, "", "UART_close"], [736, 2, 1, "", "UART_close_async"], [736, 2, 1, "", "UART_getPinMap"], [736, 2, 1, "", "UART_open"], [736, 2, 1, "", "UART_open_async"], [736, 2, 1, "", "UART_read"], [736, 2, 1, "", "UART_read_async"], [736, 2, 1, "", "UART_reset"], [736, 2, 1, "", "UART_reset_async"], [736, 2, 1, "", "UART_setBaudRate"], [736, 2, 1, "", "UART_setBaudRate_async"], [736, 2, 1, "", "UART_setDataBit"], [736, 2, 1, "", "UART_setDataBit_async"], [736, 2, 1, "", "UART_setNumStopBit"], [736, 2, 1, "", "UART_setNumStopBit_async"], [736, 2, 1, "", "UART_setParity"], [736, 2, 1, "", "UART_setParity_async"], [736, 2, 1, "", "UART_write"], [736, 2, 1, "", "UART_write_async"], [736, 2, 1, "", "close"], [736, 2, 1, "", "connect"], [736, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1DSNK": [[737, 2, 1, "", "Counter_close"], [737, 2, 1, "", "Counter_close_async"], [737, 2, 1, "", "Counter_open"], [737, 2, 1, "", "Counter_open_async"], [737, 2, 1, "", "Counter_read"], [737, 2, 1, "", "Counter_read_async"], [737, 2, 1, "", "Counter_start"], [737, 2, 1, "", "Counter_start_async"], [737, 2, 1, "", "Counter_stop"], [737, 2, 1, "", "Counter_stop_async"], [737, 2, 1, "", "DIO_loadStartup"], [737, 2, 1, "", "DIO_loadStartup_async"], [737, 2, 1, "", "DI_closePins"], [737, 2, 1, "", "DI_closePins_async"], [737, 2, 1, "", "DI_closePort"], [737, 2, 1, "", "DI_closePort_async"], [737, 2, 1, "", "DI_getPinMap"], [737, 2, 1, "", "DI_openPins"], [737, 2, 1, "", "DI_openPins_async"], [737, 2, 1, "", "DI_openPort"], [737, 2, 1, "", "DI_openPort_async"], [737, 2, 1, "", "DI_readPins"], [737, 2, 1, "", "DI_readPins_async"], [737, 2, 1, "", "DI_readPort"], [737, 2, 1, "", "DI_readPort_async"], [737, 2, 1, "", "DO_closePins"], [737, 2, 1, "", "DO_closePins_async"], [737, 2, 1, "", "DO_closePort"], [737, 2, 1, "", "DO_closePort_async"], [737, 2, 1, "", "DO_getPinMap"], [737, 2, 1, "", "DO_openPins"], [737, 2, 1, "", "DO_openPins_async"], [737, 2, 1, "", "DO_openPort"], [737, 2, 1, "", "DO_openPort_async"], [737, 2, 1, "", "DO_togglePins"], [737, 2, 1, "", "DO_togglePins_async"], [737, 2, 1, "", "DO_togglePort"], [737, 2, 1, "", "DO_togglePort_async"], [737, 2, 1, "", "DO_writePins"], [737, 2, 1, "", "DO_writePins_async"], [737, 2, 1, "", "DO_writePort"], [737, 2, 1, "", "DO_writePort_async"], [737, 2, 1, "", "Logger_openFile"], [737, 2, 1, "", "Logger_write2DList"], [737, 2, 1, "", "Logger_writeHeader"], [737, 2, 1, "", "Logger_writeList"], [737, 2, 1, "", "Logger_writeValue"], [737, 2, 1, "", "PWM_close"], [737, 2, 1, "", "PWM_close_async"], [737, 2, 1, "", "PWM_open"], [737, 2, 1, "", "PWM_open_async"], [737, 2, 1, "", "PWM_setDutyCycle"], [737, 2, 1, "", "PWM_setDutyCycle_async"], [737, 2, 1, "", "PWM_setFrequency"], [737, 2, 1, "", "PWM_setFrequency_async"], [737, 2, 1, "", "PWM_start"], [737, 2, 1, "", "PWM_start_async"], [737, 2, 1, "", "PWM_stop"], [737, 2, 1, "", "PWM_stop_async"], [737, 2, 1, "", "Sys_getDriverInfo"], [737, 2, 1, "", "Sys_getDriverInfo_async"], [737, 2, 1, "", "Sys_getMode"], [737, 2, 1, "", "Sys_getMode_async"], [737, 2, 1, "", "Sys_getPinModeInPort"], [737, 2, 1, "", "Sys_getPinModeInPort_async"], [737, 2, 1, "", "Sys_getPythonVersion"], [737, 2, 1, "", "Sys_getPythonVersion_async"], [737, 2, 1, "", "Sys_getRTC"], [737, 2, 1, "", "Sys_getRTC_async"], [737, 2, 1, "", "Sys_getSerialNumber"], [737, 2, 1, "", "Sys_getSerialNumber_async"], [737, 2, 1, "", "Sys_reboot"], [737, 2, 1, "", "Sys_reboot_async"], [737, 2, 1, "", "Sys_setAIOMode"], [737, 2, 1, "", "Sys_setAIOMode_async"], [737, 2, 1, "", "Sys_setDIMode"], [737, 2, 1, "", "Sys_setDIMode_async"], [737, 2, 1, "", "Sys_setDIOMode"], [737, 2, 1, "", "Sys_setDIOMode_async"], [737, 2, 1, "", "Sys_setDOMode"], [737, 2, 1, "", "Sys_setDOMode_async"], [737, 2, 1, "", "Sys_setIdleMode"], [737, 2, 1, "", "Sys_setIdleMode_async"], [737, 2, 1, "", "Sys_setMotionMode"], [737, 2, 1, "", "Sys_setMotionMode_async"], [737, 2, 1, "", "Sys_setRTC"], [737, 2, 1, "", "Sys_setRTC_async"], [737, 2, 1, "", "Sys_setSwitchMode"], [737, 2, 1, "", "Sys_setSwitchMode_async"], [737, 2, 1, "", "close"], [737, 2, 1, "", "connect"], [737, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1RD": [[738, 2, 1, "", "Counter_close"], [738, 2, 1, "", "Counter_close_async"], [738, 2, 1, "", "Counter_open"], [738, 2, 1, "", "Counter_open_async"], [738, 2, 1, "", "Counter_read"], [738, 2, 1, "", "Counter_read_async"], [738, 2, 1, "", "Counter_start"], [738, 2, 1, "", "Counter_start_async"], [738, 2, 1, "", "Counter_stop"], [738, 2, 1, "", "Counter_stop_async"], [738, 2, 1, "", "DIO_loadStartup"], [738, 2, 1, "", "DIO_loadStartup_async"], [738, 2, 1, "", "DI_closePins"], [738, 2, 1, "", "DI_closePins_async"], [738, 2, 1, "", "DI_closePort"], [738, 2, 1, "", "DI_closePort_async"], [738, 2, 1, "", "DI_getPinMap"], [738, 2, 1, "", "DI_openPins"], [738, 2, 1, "", "DI_openPins_async"], [738, 2, 1, "", "DI_openPort"], [738, 2, 1, "", "DI_openPort_async"], [738, 2, 1, "", "DI_readPins"], [738, 2, 1, "", "DI_readPins_async"], [738, 2, 1, "", "DI_readPort"], [738, 2, 1, "", "DI_readPort_async"], [738, 2, 1, "", "DO_closePins"], [738, 2, 1, "", "DO_closePins_async"], [738, 2, 1, "", "DO_closePort"], [738, 2, 1, "", "DO_closePort_async"], [738, 2, 1, "", "DO_getPinMap"], [738, 2, 1, "", "DO_openPins"], [738, 2, 1, "", "DO_openPins_async"], [738, 2, 1, "", "DO_openPort"], [738, 2, 1, "", "DO_openPort_async"], [738, 2, 1, "", "DO_togglePins"], [738, 2, 1, "", "DO_togglePins_async"], [738, 2, 1, "", "DO_togglePort"], [738, 2, 1, "", "DO_togglePort_async"], [738, 2, 1, "", "DO_writePins"], [738, 2, 1, "", "DO_writePins_async"], [738, 2, 1, "", "DO_writePort"], [738, 2, 1, "", "DO_writePort_async"], [738, 2, 1, "", "I2C_close"], [738, 2, 1, "", "I2C_close_async"], [738, 2, 1, "", "I2C_getPinMap"], [738, 2, 1, "", "I2C_open"], [738, 2, 1, "", "I2C_open_async"], [738, 2, 1, "", "I2C_read"], [738, 2, 1, "", "I2C_read_async"], [738, 2, 1, "", "I2C_reset"], [738, 2, 1, "", "I2C_reset_async"], [738, 2, 1, "", "I2C_setAddressSize"], [738, 2, 1, "", "I2C_setAddressSize_async"], [738, 2, 1, "", "I2C_setClockRate"], [738, 2, 1, "", "I2C_setClockRate_async"], [738, 2, 1, "", "I2C_write"], [738, 2, 1, "", "I2C_write_async"], [738, 2, 1, "", "Logger_openFile"], [738, 2, 1, "", "Logger_write2DList"], [738, 2, 1, "", "Logger_writeHeader"], [738, 2, 1, "", "Logger_writeList"], [738, 2, 1, "", "Logger_writeValue"], [738, 2, 1, "", "PWM_close"], [738, 2, 1, "", "PWM_close_async"], [738, 2, 1, "", "PWM_open"], [738, 2, 1, "", "PWM_open_async"], [738, 2, 1, "", "PWM_setDutyCycle"], [738, 2, 1, "", "PWM_setDutyCycle_async"], [738, 2, 1, "", "PWM_setFrequency"], [738, 2, 1, "", "PWM_setFrequency_async"], [738, 2, 1, "", "PWM_start"], [738, 2, 1, "", "PWM_start_async"], [738, 2, 1, "", "PWM_stop"], [738, 2, 1, "", "PWM_stop_async"], [738, 2, 1, "", "SPI_close"], [738, 2, 1, "", "SPI_close_async"], [738, 2, 1, "", "SPI_getPinMap"], [738, 2, 1, "", "SPI_open"], [738, 2, 1, "", "SPI_open_async"], [738, 2, 1, "", "SPI_read"], [738, 2, 1, "", "SPI_readAndWrite"], [738, 2, 1, "", "SPI_readAndWrite_async"], [738, 2, 1, "", "SPI_read_async"], [738, 2, 1, "", "SPI_reset"], [738, 2, 1, "", "SPI_reset_async"], [738, 2, 1, "", "SPI_setDataSize"], [738, 2, 1, "", "SPI_setDataSize_async"], [738, 2, 1, "", "SPI_setFirstBit"], [738, 2, 1, "", "SPI_setFirstBit_async"], [738, 2, 1, "", "SPI_setMode"], [738, 2, 1, "", "SPI_setMode_async"], [738, 2, 1, "", "SPI_setPrescaler"], [738, 2, 1, "", "SPI_setPrescaler_async"], [738, 2, 1, "", "SPI_write"], [738, 2, 1, "", "SPI_write_async"], [738, 2, 1, "", "Sys_getDriverInfo"], [738, 2, 1, "", "Sys_getDriverInfo_async"], [738, 2, 1, "", "Sys_getMode"], [738, 2, 1, "", "Sys_getMode_async"], [738, 2, 1, "", "Sys_getPinModeInPort"], [738, 2, 1, "", "Sys_getPinModeInPort_async"], [738, 2, 1, "", "Sys_getPythonVersion"], [738, 2, 1, "", "Sys_getPythonVersion_async"], [738, 2, 1, "", "Sys_getRTC"], [738, 2, 1, "", "Sys_getRTC_async"], [738, 2, 1, "", "Sys_getSerialNumber"], [738, 2, 1, "", "Sys_getSerialNumber_async"], [738, 2, 1, "", "Sys_reboot"], [738, 2, 1, "", "Sys_reboot_async"], [738, 2, 1, "", "Sys_setAIOMode"], [738, 2, 1, "", "Sys_setAIOMode_async"], [738, 2, 1, "", "Sys_setDIMode"], [738, 2, 1, "", "Sys_setDIMode_async"], [738, 2, 1, "", "Sys_setDIOMode"], [738, 2, 1, "", "Sys_setDIOMode_async"], [738, 2, 1, "", "Sys_setDOMode"], [738, 2, 1, "", "Sys_setDOMode_async"], [738, 2, 1, "", "Sys_setIdleMode"], [738, 2, 1, "", "Sys_setIdleMode_async"], [738, 2, 1, "", "Sys_setMotionMode"], [738, 2, 1, "", "Sys_setMotionMode_async"], [738, 2, 1, "", "Sys_setRTC"], [738, 2, 1, "", "Sys_setRTC_async"], [738, 2, 1, "", "Sys_setSwitchMode"], [738, 2, 1, "", "Sys_setSwitchMode_async"], [738, 2, 1, "", "Thermal_close"], [738, 2, 1, "", "Thermal_close_async"], [738, 2, 1, "", "Thermal_getPinMap"], [738, 2, 1, "", "Thermal_getStatus"], [738, 2, 1, "", "Thermal_getStatus_async"], [738, 2, 1, "", "Thermal_open"], [738, 2, 1, "", "Thermal_open_async"], [738, 2, 1, "", "Thermal_readSensor"], [738, 2, 1, "", "Thermal_readSensor_async"], [738, 2, 1, "", "Thermal_setType"], [738, 2, 1, "", "Thermal_setType_async"], [738, 2, 1, "", "UART_close"], [738, 2, 1, "", "UART_close_async"], [738, 2, 1, "", "UART_getPinMap"], [738, 2, 1, "", "UART_open"], [738, 2, 1, "", "UART_open_async"], [738, 2, 1, "", "UART_read"], [738, 2, 1, "", "UART_read_async"], [738, 2, 1, "", "UART_reset"], [738, 2, 1, "", "UART_reset_async"], [738, 2, 1, "", "UART_setBaudRate"], [738, 2, 1, "", "UART_setBaudRate_async"], [738, 2, 1, "", "UART_setDataBit"], [738, 2, 1, "", "UART_setDataBit_async"], [738, 2, 1, "", "UART_setNumStopBit"], [738, 2, 1, "", "UART_setNumStopBit_async"], [738, 2, 1, "", "UART_setParity"], [738, 2, 1, "", "UART_setParity_async"], [738, 2, 1, "", "UART_write"], [738, 2, 1, "", "UART_write_async"], [738, 2, 1, "", "close"], [738, 2, 1, "", "connect"], [738, 2, 1, "", "disconnect"]], "pywpc.USBDAQF1TD": [[739, 2, 1, "", "Counter_close"], [739, 2, 1, "", "Counter_close_async"], [739, 2, 1, "", "Counter_open"], [739, 2, 1, "", "Counter_open_async"], [739, 2, 1, "", "Counter_read"], [739, 2, 1, "", "Counter_read_async"], [739, 2, 1, "", "Counter_start"], [739, 2, 1, "", "Counter_start_async"], [739, 2, 1, "", "Counter_stop"], [739, 2, 1, "", "Counter_stop_async"], [739, 2, 1, "", "DIO_loadStartup"], [739, 2, 1, "", "DIO_loadStartup_async"], [739, 2, 1, "", "DI_closePins"], [739, 2, 1, "", "DI_closePins_async"], [739, 2, 1, "", "DI_closePort"], [739, 2, 1, "", "DI_closePort_async"], [739, 2, 1, "", "DI_getPinMap"], [739, 2, 1, "", "DI_openPins"], [739, 2, 1, "", "DI_openPins_async"], [739, 2, 1, "", "DI_openPort"], [739, 2, 1, "", "DI_openPort_async"], [739, 2, 1, "", "DI_readPins"], [739, 2, 1, "", "DI_readPins_async"], [739, 2, 1, "", "DI_readPort"], [739, 2, 1, "", "DI_readPort_async"], [739, 2, 1, "", "DO_closePins"], [739, 2, 1, "", "DO_closePins_async"], [739, 2, 1, "", "DO_closePort"], [739, 2, 1, "", "DO_closePort_async"], [739, 2, 1, "", "DO_getPinMap"], [739, 2, 1, "", "DO_openPins"], [739, 2, 1, "", "DO_openPins_async"], [739, 2, 1, "", "DO_openPort"], [739, 2, 1, "", "DO_openPort_async"], [739, 2, 1, "", "DO_togglePins"], [739, 2, 1, "", "DO_togglePins_async"], [739, 2, 1, "", "DO_togglePort"], [739, 2, 1, "", "DO_togglePort_async"], [739, 2, 1, "", "DO_writePins"], [739, 2, 1, "", "DO_writePins_async"], [739, 2, 1, "", "DO_writePort"], [739, 2, 1, "", "DO_writePort_async"], [739, 2, 1, "", "I2C_close"], [739, 2, 1, "", "I2C_close_async"], [739, 2, 1, "", "I2C_getPinMap"], [739, 2, 1, "", "I2C_open"], [739, 2, 1, "", "I2C_open_async"], [739, 2, 1, "", "I2C_read"], [739, 2, 1, "", "I2C_read_async"], [739, 2, 1, "", "I2C_reset"], [739, 2, 1, "", "I2C_reset_async"], [739, 2, 1, "", "I2C_setAddressSize"], [739, 2, 1, "", "I2C_setAddressSize_async"], [739, 2, 1, "", "I2C_setClockRate"], [739, 2, 1, "", "I2C_setClockRate_async"], [739, 2, 1, "", "I2C_write"], [739, 2, 1, "", "I2C_write_async"], [739, 2, 1, "", "Logger_openFile"], [739, 2, 1, "", "Logger_write2DList"], [739, 2, 1, "", "Logger_writeHeader"], [739, 2, 1, "", "Logger_writeList"], [739, 2, 1, "", "Logger_writeValue"], [739, 2, 1, "", "PWM_close"], [739, 2, 1, "", "PWM_close_async"], [739, 2, 1, "", "PWM_open"], [739, 2, 1, "", "PWM_open_async"], [739, 2, 1, "", "PWM_setDutyCycle"], [739, 2, 1, "", "PWM_setDutyCycle_async"], [739, 2, 1, "", "PWM_setFrequency"], [739, 2, 1, "", "PWM_setFrequency_async"], [739, 2, 1, "", "PWM_start"], [739, 2, 1, "", "PWM_start_async"], [739, 2, 1, "", "PWM_stop"], [739, 2, 1, "", "PWM_stop_async"], [739, 2, 1, "", "SPI_close"], [739, 2, 1, "", "SPI_close_async"], [739, 2, 1, "", "SPI_getPinMap"], [739, 2, 1, "", "SPI_open"], [739, 2, 1, "", "SPI_open_async"], [739, 2, 1, "", "SPI_read"], [739, 2, 1, "", "SPI_readAndWrite"], [739, 2, 1, "", "SPI_readAndWrite_async"], [739, 2, 1, "", "SPI_read_async"], [739, 2, 1, "", "SPI_reset"], [739, 2, 1, "", "SPI_reset_async"], [739, 2, 1, "", "SPI_setDataSize"], [739, 2, 1, "", "SPI_setDataSize_async"], [739, 2, 1, "", "SPI_setFirstBit"], [739, 2, 1, "", "SPI_setFirstBit_async"], [739, 2, 1, "", "SPI_setMode"], [739, 2, 1, "", "SPI_setMode_async"], [739, 2, 1, "", "SPI_setPrescaler"], [739, 2, 1, "", "SPI_setPrescaler_async"], [739, 2, 1, "", "SPI_write"], [739, 2, 1, "", "SPI_write_async"], [739, 2, 1, "", "Sys_getDriverInfo"], [739, 2, 1, "", "Sys_getDriverInfo_async"], [739, 2, 1, "", "Sys_getMode"], [739, 2, 1, "", "Sys_getMode_async"], [739, 2, 1, "", "Sys_getPinModeInPort"], [739, 2, 1, "", "Sys_getPinModeInPort_async"], [739, 2, 1, "", "Sys_getPythonVersion"], [739, 2, 1, "", "Sys_getPythonVersion_async"], [739, 2, 1, "", "Sys_getRTC"], [739, 2, 1, "", "Sys_getRTC_async"], [739, 2, 1, "", "Sys_getSerialNumber"], [739, 2, 1, "", "Sys_getSerialNumber_async"], [739, 2, 1, "", "Sys_reboot"], [739, 2, 1, "", "Sys_reboot_async"], [739, 2, 1, "", "Sys_setAIOMode"], [739, 2, 1, "", "Sys_setAIOMode_async"], [739, 2, 1, "", "Sys_setDIMode"], [739, 2, 1, "", "Sys_setDIMode_async"], [739, 2, 1, "", "Sys_setDIOMode"], [739, 2, 1, "", "Sys_setDIOMode_async"], [739, 2, 1, "", "Sys_setDOMode"], [739, 2, 1, "", "Sys_setDOMode_async"], [739, 2, 1, "", "Sys_setIdleMode"], [739, 2, 1, "", "Sys_setIdleMode_async"], [739, 2, 1, "", "Sys_setMotionMode"], [739, 2, 1, "", "Sys_setMotionMode_async"], [739, 2, 1, "", "Sys_setRTC"], [739, 2, 1, "", "Sys_setRTC_async"], [739, 2, 1, "", "Sys_setSwitchMode"], [739, 2, 1, "", "Sys_setSwitchMode_async"], [739, 2, 1, "", "Thermal_close"], [739, 2, 1, "", "Thermal_close_async"], [739, 2, 1, "", "Thermal_getPinMap"], [739, 2, 1, "", "Thermal_getStatus"], [739, 2, 1, "", "Thermal_getStatus_async"], [739, 2, 1, "", "Thermal_open"], [739, 2, 1, "", "Thermal_open_async"], [739, 2, 1, "", "Thermal_readSensor"], [739, 2, 1, "", "Thermal_readSensor_async"], [739, 2, 1, "", "Thermal_setOverSampling"], [739, 2, 1, "", "Thermal_setOverSampling_async"], [739, 2, 1, "", "Thermal_setType"], [739, 2, 1, "", "Thermal_setType_async"], [739, 2, 1, "", "UART_close"], [739, 2, 1, "", "UART_close_async"], [739, 2, 1, "", "UART_getPinMap"], [739, 2, 1, "", "UART_open"], [739, 2, 1, "", "UART_open_async"], [739, 2, 1, "", "UART_read"], [739, 2, 1, "", "UART_read_async"], [739, 2, 1, "", "UART_reset"], [739, 2, 1, "", "UART_reset_async"], [739, 2, 1, "", "UART_setBaudRate"], [739, 2, 1, "", "UART_setBaudRate_async"], [739, 2, 1, "", "UART_setDataBit"], [739, 2, 1, "", "UART_setDataBit_async"], [739, 2, 1, "", "UART_setNumStopBit"], [739, 2, 1, "", "UART_setNumStopBit_async"], [739, 2, 1, "", "UART_setParity"], [739, 2, 1, "", "UART_setParity_async"], [739, 2, 1, "", "UART_write"], [739, 2, 1, "", "UART_write_async"], [739, 2, 1, "", "close"], [739, 2, 1, "", "connect"], [739, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3A": [[740, 2, 1, "", "AI_close"], [740, 2, 1, "", "AI_close_async"], [740, 2, 1, "", "AI_enableCS"], [740, 2, 1, "", "AI_enableCS_async"], [740, 2, 1, "", "AI_enableChannel"], [740, 2, 1, "", "AI_enableChannel_async"], [740, 2, 1, "", "AI_getPort"], [740, 2, 1, "", "AI_open"], [740, 2, 1, "", "AI_open_async"], [740, 2, 1, "", "AI_readOnDemand"], [740, 2, 1, "", "AI_readOnDemand_async"], [740, 2, 1, "", "AI_readStreaming"], [740, 2, 1, "", "AI_readStreaming_async"], [740, 2, 1, "", "AI_setMode"], [740, 2, 1, "", "AI_setMode_async"], [740, 2, 1, "", "AI_setNumSamples"], [740, 2, 1, "", "AI_setNumSamples_async"], [740, 2, 1, "", "AI_setSamplingRate"], [740, 2, 1, "", "AI_setSamplingRate_async"], [740, 2, 1, "", "AI_start"], [740, 2, 1, "", "AI_start_async"], [740, 2, 1, "", "AI_stop"], [740, 2, 1, "", "AI_stop_async"], [740, 2, 1, "", "Logger_openFile"], [740, 2, 1, "", "Logger_write2DList"], [740, 2, 1, "", "Logger_writeHeader"], [740, 2, 1, "", "Logger_writeList"], [740, 2, 1, "", "Logger_writeValue"], [740, 2, 1, "", "Net_getGateway"], [740, 2, 1, "", "Net_getGateway_async"], [740, 2, 1, "", "Net_getIPAddrAndSubmask"], [740, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [740, 2, 1, "", "Net_getMACAddr"], [740, 2, 1, "", "Net_getMACAddr_async"], [740, 2, 1, "", "Net_setIPAddrAndSubmask"], [740, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [740, 2, 1, "", "Sys_getDriverInfo"], [740, 2, 1, "", "Sys_getDriverInfo_async"], [740, 2, 1, "", "Sys_getGateway"], [740, 2, 1, "", "Sys_getGateway_async"], [740, 2, 1, "", "Sys_getIPAddrAndSubmask"], [740, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [740, 2, 1, "", "Sys_getMACAddr"], [740, 2, 1, "", "Sys_getMACAddr_async"], [740, 2, 1, "", "Sys_getMode"], [740, 2, 1, "", "Sys_getMode_async"], [740, 2, 1, "", "Sys_getPinModeInPort"], [740, 2, 1, "", "Sys_getPinModeInPort_async"], [740, 2, 1, "", "Sys_getPythonVersion"], [740, 2, 1, "", "Sys_getPythonVersion_async"], [740, 2, 1, "", "Sys_getRTC"], [740, 2, 1, "", "Sys_getRTC_async"], [740, 2, 1, "", "Sys_getSerialNumber"], [740, 2, 1, "", "Sys_getSerialNumber_async"], [740, 2, 1, "", "Sys_reboot"], [740, 2, 1, "", "Sys_reboot_async"], [740, 2, 1, "", "Sys_setAIOMode"], [740, 2, 1, "", "Sys_setAIOMode_async"], [740, 2, 1, "", "Sys_setDIMode"], [740, 2, 1, "", "Sys_setDIMode_async"], [740, 2, 1, "", "Sys_setDIOMode"], [740, 2, 1, "", "Sys_setDIOMode_async"], [740, 2, 1, "", "Sys_setDOMode"], [740, 2, 1, "", "Sys_setDOMode_async"], [740, 2, 1, "", "Sys_setIPAddrAndSubmask"], [740, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [740, 2, 1, "", "Sys_setIdleMode"], [740, 2, 1, "", "Sys_setIdleMode_async"], [740, 2, 1, "", "Sys_setMotionMode"], [740, 2, 1, "", "Sys_setMotionMode_async"], [740, 2, 1, "", "Sys_setRTC"], [740, 2, 1, "", "Sys_setRTC_async"], [740, 2, 1, "", "Sys_setSwitchMode"], [740, 2, 1, "", "Sys_setSwitchMode_async"], [740, 2, 1, "", "Wifi_getChargeStatus"], [740, 2, 1, "", "Wifi_getChargeStatus_async"], [740, 2, 1, "", "Wifi_getConfiguration"], [740, 2, 1, "", "Wifi_getConfiguration_async"], [740, 2, 1, "", "Wifi_getPowerGoodStatus"], [740, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [740, 2, 1, "", "Wifi_getWifiBandWidth"], [740, 2, 1, "", "Wifi_getWifiBandWidth_async"], [740, 2, 1, "", "Wifi_readBattery"], [740, 2, 1, "", "Wifi_readBattery_async"], [740, 2, 1, "", "Wifi_readRSSI"], [740, 2, 1, "", "Wifi_readRSSI_async"], [740, 2, 1, "", "Wifi_resetLED"], [740, 2, 1, "", "Wifi_resetLED_async"], [740, 2, 1, "", "Wifi_setBlueLED"], [740, 2, 1, "", "Wifi_setBlueLED_async"], [740, 2, 1, "", "Wifi_setGreenLED"], [740, 2, 1, "", "Wifi_setGreenLED_async"], [740, 2, 1, "", "Wifi_setRedLED"], [740, 2, 1, "", "Wifi_setRedLED_async"], [740, 2, 1, "", "close"], [740, 2, 1, "", "connect"], [740, 2, 1, "", "disconnect"]], "pywpc.WifiDAQE3AH": [[741, 2, 1, "", "AHRS_close"], [741, 2, 1, "", "AHRS_close_async"], [741, 2, 1, "", "AHRS_getAcceleration"], [741, 2, 1, "", "AHRS_getAcceleration_async"], [741, 2, 1, "", "AHRS_getAngularVelocity"], [741, 2, 1, "", "AHRS_getAngularVelocity_async"], [741, 2, 1, "", "AHRS_getEstimate"], [741, 2, 1, "", "AHRS_getEstimate_async"], [741, 2, 1, "", "AHRS_getOrientation"], [741, 2, 1, "", "AHRS_getOrientation_async"], [741, 2, 1, "", "AHRS_open"], [741, 2, 1, "", "AHRS_open_async"], [741, 2, 1, "", "AHRS_reset"], [741, 2, 1, "", "AHRS_reset_async"], [741, 2, 1, "", "AHRS_start"], [741, 2, 1, "", "AHRS_start_async"], [741, 2, 1, "", "AHRS_stop"], [741, 2, 1, "", "AHRS_stop_async"], [741, 2, 1, "", "AI_close"], [741, 2, 1, "", "AI_close_async"], [741, 2, 1, "", "AI_enableCS"], [741, 2, 1, "", "AI_enableCS_async"], [741, 2, 1, "", "AI_enableChannel"], [741, 2, 1, "", "AI_enableChannel_async"], [741, 2, 1, "", "AI_getPort"], [741, 2, 1, "", "AI_open"], [741, 2, 1, "", "AI_open_async"], [741, 2, 1, "", "AI_readOnDemand"], [741, 2, 1, "", "AI_readOnDemand_async"], [741, 2, 1, "", "AI_readStreaming"], [741, 2, 1, "", "AI_readStreaming_async"], [741, 2, 1, "", "AI_setMode"], [741, 2, 1, "", "AI_setMode_async"], [741, 2, 1, "", "AI_setNumSamples"], [741, 2, 1, "", "AI_setNumSamples_async"], [741, 2, 1, "", "AI_setSamplingRate"], [741, 2, 1, "", "AI_setSamplingRate_async"], [741, 2, 1, "", "AI_start"], [741, 2, 1, "", "AI_start_async"], [741, 2, 1, "", "AI_stop"], [741, 2, 1, "", "AI_stop_async"], [741, 2, 1, "", "Logger_openFile"], [741, 2, 1, "", "Logger_write2DList"], [741, 2, 1, "", "Logger_writeHeader"], [741, 2, 1, "", "Logger_writeList"], [741, 2, 1, "", "Logger_writeValue"], [741, 2, 1, "", "Net_getGateway"], [741, 2, 1, "", "Net_getGateway_async"], [741, 2, 1, "", "Net_getIPAddrAndSubmask"], [741, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [741, 2, 1, "", "Net_getMACAddr"], [741, 2, 1, "", "Net_getMACAddr_async"], [741, 2, 1, "", "Net_setIPAddrAndSubmask"], [741, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [741, 2, 1, "", "Sys_getDriverInfo"], [741, 2, 1, "", "Sys_getDriverInfo_async"], [741, 2, 1, "", "Sys_getGateway"], [741, 2, 1, "", "Sys_getGateway_async"], [741, 2, 1, "", "Sys_getIPAddrAndSubmask"], [741, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [741, 2, 1, "", "Sys_getMACAddr"], [741, 2, 1, "", "Sys_getMACAddr_async"], [741, 2, 1, "", "Sys_getMode"], [741, 2, 1, "", "Sys_getMode_async"], [741, 2, 1, "", "Sys_getPinModeInPort"], [741, 2, 1, "", "Sys_getPinModeInPort_async"], [741, 2, 1, "", "Sys_getPythonVersion"], [741, 2, 1, "", "Sys_getPythonVersion_async"], [741, 2, 1, "", "Sys_getRTC"], [741, 2, 1, "", "Sys_getRTC_async"], [741, 2, 1, "", "Sys_getSerialNumber"], [741, 2, 1, "", "Sys_getSerialNumber_async"], [741, 2, 1, "", "Sys_reboot"], [741, 2, 1, "", "Sys_reboot_async"], [741, 2, 1, "", "Sys_setAIOMode"], [741, 2, 1, "", "Sys_setAIOMode_async"], [741, 2, 1, "", "Sys_setDIMode"], [741, 2, 1, "", "Sys_setDIMode_async"], [741, 2, 1, "", "Sys_setDIOMode"], [741, 2, 1, "", "Sys_setDIOMode_async"], [741, 2, 1, "", "Sys_setDOMode"], [741, 2, 1, "", "Sys_setDOMode_async"], [741, 2, 1, "", "Sys_setIPAddrAndSubmask"], [741, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [741, 2, 1, "", "Sys_setIdleMode"], [741, 2, 1, "", "Sys_setIdleMode_async"], [741, 2, 1, "", "Sys_setMotionMode"], [741, 2, 1, "", "Sys_setMotionMode_async"], [741, 2, 1, "", "Sys_setRTC"], [741, 2, 1, "", "Sys_setRTC_async"], [741, 2, 1, "", "Sys_setSwitchMode"], [741, 2, 1, "", "Sys_setSwitchMode_async"], [741, 2, 1, "", "Wifi_getChargeStatus"], [741, 2, 1, "", "Wifi_getChargeStatus_async"], [741, 2, 1, "", "Wifi_getConfiguration"], [741, 2, 1, "", "Wifi_getConfiguration_async"], [741, 2, 1, "", "Wifi_getPowerGoodStatus"], [741, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [741, 2, 1, "", "Wifi_getWifiBandWidth"], [741, 2, 1, "", "Wifi_getWifiBandWidth_async"], [741, 2, 1, "", "Wifi_readBattery"], [741, 2, 1, "", "Wifi_readBattery_async"], [741, 2, 1, "", "Wifi_readRSSI"], [741, 2, 1, "", "Wifi_readRSSI_async"], [741, 2, 1, "", "Wifi_resetLED"], [741, 2, 1, "", "Wifi_resetLED_async"], [741, 2, 1, "", "Wifi_setBlueLED"], [741, 2, 1, "", "Wifi_setBlueLED_async"], [741, 2, 1, "", "Wifi_setGreenLED"], [741, 2, 1, "", "Wifi_setGreenLED_async"], [741, 2, 1, "", "Wifi_setRedLED"], [741, 2, 1, "", "Wifi_setRedLED_async"], [741, 2, 1, "", "close"], [741, 2, 1, "", "connect"], [741, 2, 1, "", "disconnect"]], "pywpc.WifiDAQF4A": [[742, 2, 1, "", "AI_close"], [742, 2, 1, "", "AI_close_async"], [742, 2, 1, "", "AI_enableCS"], [742, 2, 1, "", "AI_enableCS_async"], [742, 2, 1, "", "AI_enableChannel"], [742, 2, 1, "", "AI_enableChannel_async"], [742, 2, 1, "", "AI_getPort"], [742, 2, 1, "", "AI_open"], [742, 2, 1, "", "AI_open_async"], [742, 2, 1, "", "AI_readOnDemand"], [742, 2, 1, "", "AI_readOnDemand_async"], [742, 2, 1, "", "AI_readStreaming"], [742, 2, 1, "", "AI_readStreaming_async"], [742, 2, 1, "", "AI_setMode"], [742, 2, 1, "", "AI_setMode_async"], [742, 2, 1, "", "AI_setNumSamples"], [742, 2, 1, "", "AI_setNumSamples_async"], [742, 2, 1, "", "AI_setSamplingRate"], [742, 2, 1, "", "AI_setSamplingRate_async"], [742, 2, 1, "", "AI_start"], [742, 2, 1, "", "AI_start_async"], [742, 2, 1, "", "AI_stop"], [742, 2, 1, "", "AI_stop_async"], [742, 2, 1, "", "Logger_openFile"], [742, 2, 1, "", "Logger_write2DList"], [742, 2, 1, "", "Logger_writeHeader"], [742, 2, 1, "", "Logger_writeList"], [742, 2, 1, "", "Logger_writeValue"], [742, 2, 1, "", "Net_getGateway"], [742, 2, 1, "", "Net_getGateway_async"], [742, 2, 1, "", "Net_getIPAddrAndSubmask"], [742, 2, 1, "", "Net_getIPAddrAndSubmask_async"], [742, 2, 1, "", "Net_getMACAddr"], [742, 2, 1, "", "Net_getMACAddr_async"], [742, 2, 1, "", "Net_setIPAddrAndSubmask"], [742, 2, 1, "", "Net_setIPAddrAndSubmask_async"], [742, 2, 1, "", "Sys_getDriverInfo"], [742, 2, 1, "", "Sys_getDriverInfo_async"], [742, 2, 1, "", "Sys_getGateway"], [742, 2, 1, "", "Sys_getGateway_async"], [742, 2, 1, "", "Sys_getIPAddrAndSubmask"], [742, 2, 1, "", "Sys_getIPAddrAndSubmask_async"], [742, 2, 1, "", "Sys_getMACAddr"], [742, 2, 1, "", "Sys_getMACAddr_async"], [742, 2, 1, "", "Sys_getMode"], [742, 2, 1, "", "Sys_getMode_async"], [742, 2, 1, "", "Sys_getPinModeInPort"], [742, 2, 1, "", "Sys_getPinModeInPort_async"], [742, 2, 1, "", "Sys_getPythonVersion"], [742, 2, 1, "", "Sys_getPythonVersion_async"], [742, 2, 1, "", "Sys_getRTC"], [742, 2, 1, "", "Sys_getRTC_async"], [742, 2, 1, "", "Sys_getSerialNumber"], [742, 2, 1, "", "Sys_getSerialNumber_async"], [742, 2, 1, "", "Sys_reboot"], [742, 2, 1, "", "Sys_reboot_async"], [742, 2, 1, "", "Sys_setAIOMode"], [742, 2, 1, "", "Sys_setAIOMode_async"], [742, 2, 1, "", "Sys_setDIMode"], [742, 2, 1, "", "Sys_setDIMode_async"], [742, 2, 1, "", "Sys_setDIOMode"], [742, 2, 1, "", "Sys_setDIOMode_async"], [742, 2, 1, "", "Sys_setDOMode"], [742, 2, 1, "", "Sys_setDOMode_async"], [742, 2, 1, "", "Sys_setIPAddrAndSubmask"], [742, 2, 1, "", "Sys_setIPAddrAndSubmask_async"], [742, 2, 1, "", "Sys_setIdleMode"], [742, 2, 1, "", "Sys_setIdleMode_async"], [742, 2, 1, "", "Sys_setMotionMode"], [742, 2, 1, "", "Sys_setMotionMode_async"], [742, 2, 1, "", "Sys_setRTC"], [742, 2, 1, "", "Sys_setRTC_async"], [742, 2, 1, "", "Sys_setSwitchMode"], [742, 2, 1, "", "Sys_setSwitchMode_async"], [742, 2, 1, "", "Wifi_getChargeStatus"], [742, 2, 1, "", "Wifi_getChargeStatus_async"], [742, 2, 1, "", "Wifi_getConfiguration"], [742, 2, 1, "", "Wifi_getConfiguration_async"], [742, 2, 1, "", "Wifi_getPowerGoodStatus"], [742, 2, 1, "", "Wifi_getPowerGoodStatus_async"], [742, 2, 1, "", "Wifi_getWifiBandWidth"], [742, 2, 1, "", "Wifi_getWifiBandWidth_async"], [742, 2, 1, "", "Wifi_readBattery"], [742, 2, 1, "", "Wifi_readBattery_async"], [742, 2, 1, "", "Wifi_readRSSI"], [742, 2, 1, "", "Wifi_readRSSI_async"], [742, 2, 1, "", "Wifi_resetLED"], [742, 2, 1, "", "Wifi_resetLED_async"], [742, 2, 1, "", "Wifi_setBlueLED"], [742, 2, 1, "", "Wifi_setBlueLED_async"], [742, 2, 1, "", "Wifi_setGreenLED"], [742, 2, 1, "", "Wifi_setGreenLED_async"], [742, 2, 1, "", "Wifi_setRedLED"], [742, 2, 1, "", "Wifi_setRedLED_async"], [742, 2, 1, "", "close"], [742, 2, 1, "", "connect"], [742, 2, 1, "", "disconnect"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"overview": [0, 718], "architectur": [0, 718], "instal": [0, 718], "upgrad": [0, 718], "quick": [0, 718], "start": [0, 718], "refer": [0, 718, 747], "licens": [0, 718], "find": [1, 2, 3, 31, 32, 33, 397, 398, 399, 423, 424, 425, 747], "all": [1, 121, 132, 158, 162, 211, 215, 397, 485, 492, 510, 514, 555, 559], "devic": [1, 397, 710, 711, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "drive": [2, 3, 4, 5, 6, 7, 8, 9, 398, 399, 400, 401, 402, 403, 404, 405], "home": [2, 31, 398, 423], "limit": [3, 33, 399, 425], "posit": [4, 5, 34, 36, 400, 401, 426, 428], "blend": [4, 8, 36, 39, 40, 400, 404, 428, 431, 432], "move": [5, 6, 9, 18, 19, 20, 21, 22, 23, 24, 27, 30, 401, 402, 405, 410, 411, 412, 413, 414, 415, 416, 419, 422], "scan": [6, 402], "servo": [7, 38, 403, 430], "veloc": [8, 9, 39, 404, 405, 431], "acceler": [8, 40, 404, 432], "system": [10, 12, 41, 43, 55, 57, 70, 72, 84, 86, 93, 95, 102, 104, 112, 114, 123, 125, 133, 135, 141, 143, 170, 172, 195, 197, 226, 228, 249, 251, 270, 272, 288, 290, 307, 309, 331, 333, 350, 351, 353, 371, 372, 374, 387, 388, 390, 406, 408, 433, 435, 443, 445, 454, 456, 464, 466, 469, 471, 474, 476, 480, 482, 487, 489, 493, 495, 497, 499, 522, 524, 543, 545, 570, 572, 589, 591, 606, 608, 620, 622, 635, 637, 655, 657, 670, 671, 673, 687, 688, 690, 699, 700, 702, 715], "get": [10, 11, 13, 34, 41, 42, 44, 55, 56, 58, 70, 71, 73, 84, 85, 87, 93, 94, 96, 102, 103, 105, 112, 113, 115, 123, 124, 126, 133, 134, 136, 141, 142, 144, 170, 171, 173, 195, 196, 198, 226, 227, 229, 249, 250, 252, 270, 271, 273, 288, 289, 291, 307, 308, 310, 331, 332, 334, 350, 351, 352, 355, 371, 372, 373, 376, 387, 388, 389, 392, 406, 407, 409, 426, 433, 434, 436, 443, 444, 446, 454, 455, 457, 464, 465, 467, 469, 470, 472, 474, 475, 477, 480, 481, 483, 487, 488, 490, 493, 494, 496, 497, 498, 500, 522, 523, 525, 543, 544, 546, 570, 571, 573, 589, 590, 592, 606, 607, 609, 620, 621, 623, 635, 636, 638, 655, 656, 658, 670, 671, 672, 675, 687, 688, 689, 692, 699, 700, 701, 704], "network": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 710, 711], "info": [10, 41, 55, 70, 84, 93, 102, 112, 123, 133, 141, 170, 351, 372, 388, 406, 433, 443, 454, 464, 469, 474, 480, 487, 493, 497, 522, 671, 688, 700, 711], "serial": [11, 42, 56, 71, 85, 94, 103, 113, 124, 134, 142, 171, 196, 227, 250, 271, 289, 308, 332, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 494, 498, 523, 544, 571, 590, 607, 621, 636, 656, 672, 689, 701], "number": [11, 42, 56, 71, 85, 94, 103, 113, 124, 134, 142, 171, 196, 227, 250, 271, 289, 308, 332, 352, 373, 389, 407, 434, 444, 455, 465, 470, 475, 481, 488, 494, 498, 523, 544, 571, 590, 607, 621, 636, 656, 672, 689, 701], "hello": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "world": [12, 43, 57, 72, 86, 95, 104, 114, 125, 135, 143, 172, 197, 228, 251, 272, 290, 309, 333, 353, 374, 390, 408, 435, 445, 456, 466, 471, 476, 482, 489, 495, 499, 524, 545, 572, 591, 608, 622, 637, 657, 673, 690, 702], "set": [13, 44, 58, 73, 87, 96, 105, 111, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 354, 355, 375, 376, 391, 392, 409, 436, 446, 457, 467, 472, 477, 479, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 674, 675, 691, 692, 703, 704, 747], "rtc": [13, 44, 58, 73, 87, 96, 105, 115, 126, 136, 144, 173, 198, 229, 252, 273, 291, 310, 334, 355, 376, 392, 409, 436, 446, 457, 467, 472, 477, 483, 490, 496, 500, 525, 546, 573, 592, 609, 623, 638, 658, 675, 692, 704], "tutori": [14, 15, 16, 17, 45, 46, 47, 48, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 174, 175, 176, 177, 199, 200, 201, 202, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 356, 357, 358, 359, 377, 378, 379, 380, 393, 394, 395, 396], "multipl": [14, 15, 45, 46, 59, 60, 74, 75, 88, 89, 97, 98, 106, 107, 116, 117, 127, 128, 137, 138, 148, 149, 174, 175, 199, 200, 230, 231, 253, 254, 274, 275, 292, 293, 314, 315, 338, 339, 356, 357, 377, 378, 393, 394], "loop": [14, 15, 16, 17, 45, 46, 47, 48, 53, 59, 60, 61, 62, 74, 75, 76, 77, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 108, 109, 116, 117, 118, 119, 127, 128, 129, 130, 137, 138, 139, 140, 148, 149, 150, 151, 156, 174, 175, 176, 177, 182, 199, 200, 201, 202, 209, 230, 231, 232, 233, 253, 254, 255, 256, 274, 275, 276, 277, 292, 293, 294, 295, 314, 315, 316, 317, 338, 339, 340, 341, 348, 356, 357, 358, 359, 369, 377, 378, 379, 380, 385, 393, 394, 395, 396, 441, 508, 530, 553, 668, 685, 697], "async": [14, 16, 27, 45, 47, 59, 61, 74, 76, 88, 90, 97, 99, 106, 108, 116, 118, 127, 129, 137, 139, 148, 150, 174, 176, 199, 201, 230, 232, 253, 255, 274, 276, 292, 294, 314, 316, 338, 340, 356, 358, 377, 379, 393, 395, 419, 716], "thread": [15, 17, 46, 48, 60, 62, 75, 77, 89, 91, 98, 100, 107, 109, 117, 119, 128, 130, 138, 140, 149, 151, 175, 177, 200, 202, 231, 233, 254, 256, 275, 277, 293, 295, 315, 317, 339, 341, 357, 359, 378, 380, 394, 396], "singl": [16, 17, 47, 48, 61, 62, 76, 77, 90, 91, 99, 100, 108, 109, 118, 119, 129, 130, 139, 140, 150, 151, 176, 177, 201, 202, 232, 233, 255, 256, 276, 277, 294, 295, 316, 317, 340, 341, 358, 359, 379, 380, 395, 396], "motion": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 747], "1axi": [18, 19, 20, 21, 22, 23, 24, 410, 411, 412, 413, 414, 415, 416], "scurv": [19, 411], "alarm": [20, 412], "breakpoint": [21, 413], "captur": [22, 414, 747], "config": [23, 35, 37, 415, 427, 429], "file": [23, 35, 37, 415, 427, 429], "inposit": [24, 416], "2axi": [25, 26, 417, 418], "circular": [25, 417], "interpo": [25, 26, 28, 29, 417, 418, 420, 421], "linear": [26, 29, 418, 421], "3axi": [27, 28, 29, 30, 419, 420, 421, 422], "helic": [28, 420], "sync": [30, 422, 715, 717], "index": [32, 424], "logic": [34, 426], "load": [35, 427], "save": [37, 429], "ai": [49, 50, 51, 52, 53, 54, 92, 101, 152, 153, 154, 155, 156, 157, 160, 178, 179, 180, 181, 182, 183, 205, 206, 207, 208, 209, 210, 213, 344, 345, 346, 347, 348, 349, 365, 366, 367, 368, 369, 370, 381, 382, 383, 384, 385, 386, 437, 438, 439, 440, 441, 442, 468, 473, 504, 505, 506, 507, 508, 509, 512, 526, 527, 528, 529, 530, 531, 549, 550, 551, 552, 553, 554, 557, 664, 665, 666, 667, 668, 669, 681, 682, 683, 684, 685, 686, 693, 694, 695, 696, 697, 698, 705, 715, 744, 747], "n": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693], "sampl": [49, 152, 178, 205, 344, 365, 381, 437, 504, 526, 549, 664, 681, 693, 744], "onc": [49, 54, 92, 101, 152, 157, 178, 183, 205, 210, 344, 349, 365, 370, 381, 386, 437, 442, 468, 473, 504, 509, 526, 531, 549, 554, 664, 669, 681, 686, 693, 698], "continu": [50, 51, 52, 153, 154, 155, 179, 180, 181, 206, 207, 208, 345, 346, 347, 366, 367, 368, 382, 383, 384, 438, 439, 440, 505, 506, 507, 527, 528, 529, 550, 551, 552, 665, 666, 667, 682, 683, 684, 694, 695, 696], "multi": [51, 154, 180, 207, 346, 367, 383, 439, 506, 528, 551, 666, 683, 695], "slot": [51, 154, 180, 207, 346, 367, 383, 439, 506, 528, 551, 666, 683, 695], "logger": [52, 146, 155, 181, 208, 312, 336, 347, 368, 384, 440, 502, 507, 529, 552, 640, 660, 667, 684, 696], "demand": [53, 54, 92, 101, 156, 157, 182, 183, 209, 210, 348, 349, 369, 370, 385, 386, 441, 442, 468, 473, 508, 509, 530, 531, 553, 554, 668, 669, 685, 686, 697, 698], "dio": [63, 64, 78, 79, 164, 165, 185, 186, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 516, 517, 533, 534, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646], "loopback": [63, 64, 78, 79, 158, 159, 164, 165, 185, 186, 211, 212, 218, 219, 239, 240, 260, 261, 281, 282, 297, 298, 321, 322, 447, 448, 458, 459, 510, 511, 516, 517, 533, 534, 555, 556, 562, 563, 579, 580, 596, 597, 613, 614, 625, 626, 645, 646], "pin": [63, 65, 67, 78, 80, 82, 164, 166, 168, 185, 187, 189, 195, 218, 220, 222, 226, 239, 241, 243, 249, 260, 262, 264, 270, 281, 283, 285, 288, 297, 299, 301, 307, 321, 323, 325, 331, 447, 449, 451, 458, 460, 462, 516, 518, 520, 533, 535, 537, 543, 562, 564, 566, 570, 579, 581, 583, 589, 596, 598, 600, 606, 613, 615, 617, 620, 625, 627, 629, 635, 645, 647, 649, 655], "port": [64, 66, 68, 79, 81, 83, 165, 167, 169, 186, 188, 190, 219, 221, 223, 240, 242, 244, 261, 263, 265, 282, 284, 286, 298, 300, 302, 322, 324, 326, 448, 450, 452, 459, 461, 463, 517, 519, 521, 534, 536, 538, 563, 565, 567, 580, 582, 584, 597, 599, 601, 614, 616, 618, 626, 628, 630, 646, 648, 650, 748], "do": [65, 66, 67, 68, 80, 81, 82, 83, 166, 167, 168, 169, 187, 188, 189, 190, 220, 221, 222, 223, 241, 242, 243, 244, 262, 263, 264, 265, 283, 284, 285, 286, 299, 300, 301, 302, 323, 324, 325, 326, 449, 450, 451, 452, 460, 461, 462, 463, 518, 519, 520, 521, 535, 536, 537, 538, 564, 565, 566, 567, 581, 582, 583, 584, 598, 599, 600, 601, 615, 616, 617, 618, 627, 628, 629, 630, 647, 648, 649, 650, 707, 715], "blinki": [65, 66, 80, 81, 166, 167, 187, 188, 220, 221, 241, 242, 262, 263, 283, 284, 299, 300, 323, 324, 449, 450, 460, 461, 518, 519, 535, 536, 564, 565, 581, 582, 598, 599, 615, 616, 627, 628, 647, 648], "write": [67, 68, 82, 83, 121, 122, 132, 162, 163, 168, 169, 189, 190, 191, 193, 194, 204, 215, 216, 222, 223, 224, 235, 237, 243, 244, 245, 247, 248, 258, 264, 265, 266, 268, 269, 279, 285, 286, 301, 302, 303, 305, 306, 319, 325, 326, 327, 329, 330, 343, 451, 452, 462, 463, 485, 486, 492, 514, 515, 520, 521, 537, 538, 539, 541, 542, 548, 559, 560, 566, 567, 568, 575, 577, 583, 584, 585, 587, 588, 594, 600, 601, 602, 604, 605, 611, 617, 618, 629, 630, 631, 633, 634, 643, 649, 650, 651, 653, 654, 663], "pwm": [69, 192, 225, 246, 267, 287, 304, 328, 453, 540, 569, 586, 603, 619, 632, 652], "gener": [69, 120, 161, 192, 214, 225, 246, 267, 287, 304, 328, 453, 484, 513, 540, 558, 569, 586, 603, 619, 632, 652], "relai": [110, 111, 478, 479], "read": [110, 131, 145, 146, 147, 184, 191, 193, 203, 217, 224, 234, 236, 238, 245, 247, 257, 259, 266, 268, 278, 280, 296, 303, 305, 311, 312, 313, 318, 320, 327, 329, 335, 336, 337, 342, 478, 491, 501, 502, 503, 532, 539, 541, 547, 561, 568, 574, 576, 578, 585, 587, 593, 595, 602, 604, 610, 612, 624, 631, 633, 639, 640, 641, 642, 644, 651, 653, 659, 660, 661, 662], "counter": [110, 184, 217, 238, 259, 280, 296, 320, 478, 532, 561, 578, 595, 612, 624, 644], "channel": [111, 121, 122, 131, 132, 145, 146, 147, 158, 159, 162, 163, 211, 212, 215, 216, 311, 312, 313, 335, 336, 337, 479, 485, 486, 491, 492, 501, 502, 503, 510, 511, 514, 515, 555, 556, 559, 560, 639, 640, 641, 659, 660, 661, 745, 747], "ao": [120, 121, 122, 160, 161, 162, 163, 213, 214, 215, 216, 484, 485, 486, 512, 513, 514, 515, 557, 558, 559, 560, 706, 715, 747], "waveform": [120, 161, 214, 484, 513, 558], "one": [122, 159, 163, 212, 216, 486, 511, 515, 556, 560], "dpot": [131, 132, 491, 492], "tc": [145, 146, 147, 335, 336, 337, 501, 502, 503, 659, 660, 661, 713, 715], "data": [145, 146, 311, 312, 335, 336, 501, 502, 639, 640, 659, 660, 747], "statu": [147, 313, 337, 350, 354, 371, 375, 387, 391, 503, 641, 661, 670, 674, 687, 691, 699, 703], "aio": [158, 159, 211, 212, 510, 511, 555, 556], "output": [160, 213, 512, 557, 747], "while": [160, 213, 512, 557], "stream": [160, 213, 512, 557], "i2c": [191, 224, 245, 266, 303, 327, 539, 568, 585, 602, 631, 651, 708, 715, 747], "spi": [193, 194, 247, 248, 268, 269, 305, 306, 329, 330, 541, 542, 587, 588, 604, 605, 633, 634, 653, 654, 709, 715, 747], "mode": [195, 226, 249, 270, 288, 307, 331, 543, 570, 589, 606, 620, 635, 655, 747], "uart": [203, 204, 234, 235, 257, 258, 278, 279, 318, 319, 342, 343, 547, 548, 574, 575, 593, 594, 610, 611, 642, 643, 662, 663, 714, 715, 747], "can": [236, 237, 576, 577, 747], "rtd": [311, 312, 313, 639, 640, 641, 712, 715], "wifi": [350, 371, 387, 670, 687, 699, 716, 717, 719, 740, 741, 742], "daq": [350, 371, 387, 670, 687, 699, 716, 717, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "led": [354, 375, 391, 674, 691, 703], "ahr": [360, 361, 362, 363, 364, 676, 677, 678, 679, 680], "getacceler": [360, 676], "getangularveloc": [361, 677], "getestim": [362, 678], "getorient": [363, 679], "visual": [364, 680], "test": [705, 706, 707, 708, 709, 712, 713, 714], "panel": [705, 706, 707, 708, 709, 712, 713, 714], "finder": [710, 716, 717, 720], "center": 711, "exampl": [715, 716, 717], "code": [715, 716, 717, 746], "gui": 715, "temperatur": 715, "consol": [716, 717], "stem": [716, 717, 732], "edriv": [716, 717, 721], "st": [716, 717, 721], "emot": [716, 717, 722], "ethan": [716, 717, 723, 724, 725, 726, 727, 728, 729, 730, 731], "A": [716, 717, 723, 740, 742], "d": [716, 717, 724, 725, 736, 737], "ex": [716, 717, 725], "i": [716, 717, 726, 745, 748], "ia": [716, 717, 727], "l": [716, 717, 728], "o": [716, 717, 729, 745, 748], "p": [716, 717, 730], "t": [716, 717, 731], "usb": [716, 717, 719, 733, 734, 735, 736, 737, 738, 739], "f1": [716, 717, 733, 734, 735, 736, 737, 738, 739], "ad": [716, 717, 733], "aod": [716, 717, 734], "cd": [716, 717, 735], "snk": [716, 717, 737], "rd": [716, 717, 738], "td": [716, 717, 739], "e3": [716, 717, 740, 741], "ah": [716, 717, 741], "f4": [716, 717, 742], "product": [719, 743], "usag": 719, "util": 719, "ethernet": 719, "api": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "function": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 748], "descript": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "pinout": [721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "featur": 743, "max": 744, "rate": 744, "tabl": [744, 745, 746, 747, 748], "error": 746, "form": 747, "speed": 747, "type": 747, "address": 747, "direct": 747, "enabl": 747, "oper": 747, "polar": 747, "search": 747, "stepper": 747, "stop": 747, "clock": 747, "size": 747, "endian": 747, "thermal": 747, "oversampl": 747, "pariti": 747, "bit": 747}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Overview": [[0, "overview"], [718, "overview"]], "Architecture": [[0, "architecture"], [718, "architecture"]], "Install and Upgrade": [[0, "install-and-upgrade"], [718, "install-and-upgrade"]], "Quick Start": [[0, "quick-start"], [718, "quick-start"]], "References": [[0, "references"], [718, "references"]], "License": [[0, "license"], [718, "license"]], "Find all devices": [[1, "find-all-devices"], [397, "find-all-devices"]], "Drive find home": [[2, "drive-find-home"], [398, "drive-find-home"]], "Drive find limit": [[3, "drive-find-limit"], [399, "drive-find-limit"]], "Drive position blending": [[4, "drive-position-blending"], [400, "drive-position-blending"]], "Drive position move": [[5, "drive-position-move"], [401, "drive-position-move"]], "Drive scan move": [[6, "drive-scan-move"], [402, "drive-scan-move"]], "Drive servo on": [[7, "drive-servo-on"], [403, "drive-servo-on"]], "Drive velocity blending acceleration": [[8, "drive-velocity-blending-acceleration"], [404, "drive-velocity-blending-acceleration"]], "Drive velocity move": [[9, "drive-velocity-move"], [405, "drive-velocity-move"]], "System get network info": [[10, "system-get-network-info"], [41, "system-get-network-info"], [55, "system-get-network-info"], [70, "system-get-network-info"], [84, "system-get-network-info"], [93, "system-get-network-info"], [102, "system-get-network-info"], [112, "system-get-network-info"], [123, "system-get-network-info"], [133, "system-get-network-info"], [141, "system-get-network-info"], [170, "system-get-network-info"], [351, "system-get-network-info"], [372, "system-get-network-info"], [388, "system-get-network-info"], [406, "system-get-network-info"], [433, "system-get-network-info"], [443, "system-get-network-info"], [454, "system-get-network-info"], [464, "system-get-network-info"], [469, "system-get-network-info"], [474, "system-get-network-info"], [480, "system-get-network-info"], [487, "system-get-network-info"], [493, "system-get-network-info"], [497, "system-get-network-info"], [522, "system-get-network-info"], [671, "system-get-network-info"], [688, "system-get-network-info"], [700, "system-get-network-info"]], "Get serial number": [[11, "get-serial-number"], [42, "get-serial-number"], [56, "get-serial-number"], [71, "get-serial-number"], [85, "get-serial-number"], [94, "get-serial-number"], [103, "get-serial-number"], [113, "get-serial-number"], [124, "get-serial-number"], [134, "get-serial-number"], [142, "get-serial-number"], [171, "get-serial-number"], [196, "get-serial-number"], [227, "get-serial-number"], [250, "get-serial-number"], [271, "get-serial-number"], [289, "get-serial-number"], [308, "get-serial-number"], [332, "get-serial-number"], [352, "get-serial-number"], [373, "get-serial-number"], [389, "get-serial-number"], [407, "get-serial-number"], [434, "get-serial-number"], [444, "get-serial-number"], [455, "get-serial-number"], [465, "get-serial-number"], [470, "get-serial-number"], [475, "get-serial-number"], [481, "get-serial-number"], [488, "get-serial-number"], [494, "get-serial-number"], [498, "get-serial-number"], [523, "get-serial-number"], [544, "get-serial-number"], [571, "get-serial-number"], [590, "get-serial-number"], [607, "get-serial-number"], [621, "get-serial-number"], [636, "get-serial-number"], [656, "get-serial-number"], [672, "get-serial-number"], [689, "get-serial-number"], [701, "get-serial-number"]], "System hello world": [[12, "system-hello-world"], [43, "system-hello-world"], [57, "system-hello-world"], [72, "system-hello-world"], [86, "system-hello-world"], [95, "system-hello-world"], [104, "system-hello-world"], [114, "system-hello-world"], [125, "system-hello-world"], [135, "system-hello-world"], [143, "system-hello-world"], [172, "system-hello-world"], [197, "system-hello-world"], [228, "system-hello-world"], [251, "system-hello-world"], [272, "system-hello-world"], [290, "system-hello-world"], [309, "system-hello-world"], [333, "system-hello-world"], [353, "system-hello-world"], [374, "system-hello-world"], [390, "system-hello-world"], [408, "system-hello-world"], [435, "system-hello-world"], [445, "system-hello-world"], [456, "system-hello-world"], [466, "system-hello-world"], [471, "system-hello-world"], [476, "system-hello-world"], [482, "system-hello-world"], [489, "system-hello-world"], [495, "system-hello-world"], [499, "system-hello-world"], [524, "system-hello-world"], [545, "system-hello-world"], [572, "system-hello-world"], [591, "system-hello-world"], [608, "system-hello-world"], [622, "system-hello-world"], [637, "system-hello-world"], [657, "system-hello-world"], [673, "system-hello-world"], [690, "system-hello-world"], [702, "system-hello-world"]], "Set and get RTC": [[13, "set-and-get-rtc"], [44, "set-and-get-rtc"], [58, "set-and-get-rtc"], [73, "set-and-get-rtc"], [87, "set-and-get-rtc"], [96, "set-and-get-rtc"], [105, "set-and-get-rtc"], [115, "set-and-get-rtc"], [126, "set-and-get-rtc"], [136, "set-and-get-rtc"], [144, "set-and-get-rtc"], [173, "set-and-get-rtc"], [198, "set-and-get-rtc"], [229, "set-and-get-rtc"], [252, "set-and-get-rtc"], [273, "set-and-get-rtc"], [291, "set-and-get-rtc"], [310, "set-and-get-rtc"], [334, "set-and-get-rtc"], [355, "set-and-get-rtc"], [376, "set-and-get-rtc"], [392, "set-and-get-rtc"], [409, "set-and-get-rtc"], [436, "set-and-get-rtc"], [446, "set-and-get-rtc"], [457, "set-and-get-rtc"], [467, "set-and-get-rtc"], [472, "set-and-get-rtc"], [477, "set-and-get-rtc"], [483, "set-and-get-rtc"], [490, "set-and-get-rtc"], [496, "set-and-get-rtc"], [500, "set-and-get-rtc"], [525, "set-and-get-rtc"], [546, "set-and-get-rtc"], [573, "set-and-get-rtc"], [592, "set-and-get-rtc"], [609, "set-and-get-rtc"], [623, "set-and-get-rtc"], [638, "set-and-get-rtc"], [658, "set-and-get-rtc"], [675, "set-and-get-rtc"], [692, "set-and-get-rtc"], [704, "set-and-get-rtc"]], "Tutorial multiple loops async": [[14, "tutorial-multiple-loops-async"], [45, "tutorial-multiple-loops-async"], [59, "tutorial-multiple-loops-async"], [74, "tutorial-multiple-loops-async"], [88, "tutorial-multiple-loops-async"], [97, "tutorial-multiple-loops-async"], [106, "tutorial-multiple-loops-async"], [116, "tutorial-multiple-loops-async"], [127, "tutorial-multiple-loops-async"], [137, "tutorial-multiple-loops-async"], [148, "tutorial-multiple-loops-async"], [174, "tutorial-multiple-loops-async"], [199, "tutorial-multiple-loops-async"], [230, "tutorial-multiple-loops-async"], [253, "tutorial-multiple-loops-async"], [274, "tutorial-multiple-loops-async"], [292, "tutorial-multiple-loops-async"], [314, "tutorial-multiple-loops-async"], [338, "tutorial-multiple-loops-async"], [356, "tutorial-multiple-loops-async"], [377, "tutorial-multiple-loops-async"], [393, "tutorial-multiple-loops-async"]], "Tutorial multiple loops thread": [[15, "tutorial-multiple-loops-thread"], [46, "tutorial-multiple-loops-thread"], [60, "tutorial-multiple-loops-thread"], [75, "tutorial-multiple-loops-thread"], [89, "tutorial-multiple-loops-thread"], [98, "tutorial-multiple-loops-thread"], [107, "tutorial-multiple-loops-thread"], [117, "tutorial-multiple-loops-thread"], [128, "tutorial-multiple-loops-thread"], [138, "tutorial-multiple-loops-thread"], [149, "tutorial-multiple-loops-thread"], [175, "tutorial-multiple-loops-thread"], [200, "tutorial-multiple-loops-thread"], [231, "tutorial-multiple-loops-thread"], [254, "tutorial-multiple-loops-thread"], [275, "tutorial-multiple-loops-thread"], [293, "tutorial-multiple-loops-thread"], [315, "tutorial-multiple-loops-thread"], [339, "tutorial-multiple-loops-thread"], [357, "tutorial-multiple-loops-thread"], [378, "tutorial-multiple-loops-thread"], [394, "tutorial-multiple-loops-thread"]], "Tutorial single loop async": [[16, "tutorial-single-loop-async"], [47, "tutorial-single-loop-async"], [61, "tutorial-single-loop-async"], [76, "tutorial-single-loop-async"], [90, "tutorial-single-loop-async"], [99, "tutorial-single-loop-async"], [108, "tutorial-single-loop-async"], [118, "tutorial-single-loop-async"], [129, "tutorial-single-loop-async"], [139, "tutorial-single-loop-async"], [150, "tutorial-single-loop-async"], [176, "tutorial-single-loop-async"], [201, "tutorial-single-loop-async"], [232, "tutorial-single-loop-async"], [255, "tutorial-single-loop-async"], [276, "tutorial-single-loop-async"], [294, "tutorial-single-loop-async"], [316, "tutorial-single-loop-async"], [340, "tutorial-single-loop-async"], [358, "tutorial-single-loop-async"], [379, "tutorial-single-loop-async"], [395, "tutorial-single-loop-async"]], "Tutorial single loop thread": [[17, "tutorial-single-loop-thread"], [48, "tutorial-single-loop-thread"], [62, "tutorial-single-loop-thread"], [77, "tutorial-single-loop-thread"], [91, "tutorial-single-loop-thread"], [100, "tutorial-single-loop-thread"], [109, "tutorial-single-loop-thread"], [119, "tutorial-single-loop-thread"], [130, "tutorial-single-loop-thread"], [140, "tutorial-single-loop-thread"], [151, "tutorial-single-loop-thread"], [177, "tutorial-single-loop-thread"], [202, "tutorial-single-loop-thread"], [233, "tutorial-single-loop-thread"], [256, "tutorial-single-loop-thread"], [277, "tutorial-single-loop-thread"], [295, "tutorial-single-loop-thread"], [317, "tutorial-single-loop-thread"], [341, "tutorial-single-loop-thread"], [359, "tutorial-single-loop-thread"], [380, "tutorial-single-loop-thread"], [396, "tutorial-single-loop-thread"]], "Motion 1axis move": [[18, "motion-1axis-move"], [410, "motion-1axis-move"]], "Motion 1axis move with Scurve": [[19, "motion-1axis-move-with-scurve"], [411, "motion-1axis-move-with-scurve"]], "Motion 1axis move with alarm in": [[20, "motion-1axis-move-with-alarm-in"], [412, "motion-1axis-move-with-alarm-in"]], "Motion 1axis move with breakpoint": [[21, "motion-1axis-move-with-breakpoint"], [413, "motion-1axis-move-with-breakpoint"]], "Motion 1axis move with capture": [[22, "motion-1axis-move-with-capture"], [414, "motion-1axis-move-with-capture"]], "Motion 1axis move with config file": [[23, "motion-1axis-move-with-config-file"], [415, "motion-1axis-move-with-config-file"]], "Motion 1axis move with inposition": [[24, "motion-1axis-move-with-inposition"], [416, "motion-1axis-move-with-inposition"]], "Motion 2axis circular interpo": [[25, "motion-2axis-circular-interpo"], [417, "motion-2axis-circular-interpo"]], "Motion 2axis linear interpo": [[26, "motion-2axis-linear-interpo"], [418, "motion-2axis-linear-interpo"]], "Motion 3axis async move": [[27, "motion-3axis-async-move"], [419, "motion-3axis-async-move"]], "Motion 3axis helical interpo": [[28, "motion-3axis-helical-interpo"], [420, "motion-3axis-helical-interpo"]], "Motion 3axis linear interpo": [[29, "motion-3axis-linear-interpo"], [421, "motion-3axis-linear-interpo"]], "Motion 3axis sync move": [[30, "motion-3axis-sync-move"], [422, "motion-3axis-sync-move"]], "Motion find home": [[31, "motion-find-home"], [423, "motion-find-home"]], "Motion find index": [[32, "motion-find-index"], [424, "motion-find-index"]], "Motion find limit": [[33, "motion-find-limit"], [425, "motion-find-limit"]], "Motion get logical position": [[34, "motion-get-logical-position"], [426, "motion-get-logical-position"]], "Motion load config file": [[35, "motion-load-config-file"], [427, "motion-load-config-file"]], "Motion position blending": [[36, "motion-position-blending"], [428, "motion-position-blending"]], "Motion save config file": [[37, "motion-save-config-file"], [429, "motion-save-config-file"]], "Motion servo on": [[38, "motion-servo-on"], [430, "motion-servo-on"]], "Motion velocity blending": [[39, "motion-velocity-blending"], [431, "motion-velocity-blending"]], "Motion acceleration blending": [[40, "motion-acceleration-blending"], [432, "motion-acceleration-blending"]], "AI N samples once": [[49, "ai-n-samples-once"], [152, "ai-n-samples-once"], [178, "ai-n-samples-once"], [205, "ai-n-samples-once"], [344, "ai-n-samples-once"], [365, "ai-n-samples-once"], [381, "ai-n-samples-once"], [437, "ai-n-samples-once"], [504, "ai-n-samples-once"], [526, "ai-n-samples-once"], [549, "ai-n-samples-once"], [664, "ai-n-samples-once"], [681, "ai-n-samples-once"], [693, "ai-n-samples-once"]], "AI continuous": [[50, "ai-continuous"], [153, "ai-continuous"], [179, "ai-continuous"], [206, "ai-continuous"], [345, "ai-continuous"], [366, "ai-continuous"], [382, "ai-continuous"], [438, "ai-continuous"], [505, "ai-continuous"], [527, "ai-continuous"], [550, "ai-continuous"], [665, "ai-continuous"], [682, "ai-continuous"], [694, "ai-continuous"]], "AI continuous multi slot": [[51, "ai-continuous-multi-slot"], [154, "ai-continuous-multi-slot"], [180, "ai-continuous-multi-slot"], [207, "ai-continuous-multi-slot"], [346, "ai-continuous-multi-slot"], [367, "ai-continuous-multi-slot"], [383, "ai-continuous-multi-slot"], [439, "ai-continuous-multi-slot"], [506, "ai-continuous-multi-slot"], [528, "ai-continuous-multi-slot"], [551, "ai-continuous-multi-slot"], [666, "ai-continuous-multi-slot"], [683, "ai-continuous-multi-slot"], [695, "ai-continuous-multi-slot"]], "AI continuous with logger": [[52, "ai-continuous-with-logger"], [155, "ai-continuous-with-logger"], [181, "ai-continuous-with-logger"], [208, "ai-continuous-with-logger"], [347, "ai-continuous-with-logger"], [368, "ai-continuous-with-logger"], [384, "ai-continuous-with-logger"], [440, "ai-continuous-with-logger"], [507, "ai-continuous-with-logger"], [529, "ai-continuous-with-logger"], [552, "ai-continuous-with-logger"], [667, "ai-continuous-with-logger"], [684, "ai-continuous-with-logger"], [696, "ai-continuous-with-logger"]], "AI on demand in loop": [[53, "ai-on-demand-in-loop"], [156, "ai-on-demand-in-loop"], [182, "ai-on-demand-in-loop"], [209, "ai-on-demand-in-loop"], [348, "ai-on-demand-in-loop"], [369, "ai-on-demand-in-loop"], [385, "ai-on-demand-in-loop"], [441, "ai-on-demand-in-loop"], [508, "ai-on-demand-in-loop"], [530, "ai-on-demand-in-loop"], [553, "ai-on-demand-in-loop"], [668, "ai-on-demand-in-loop"], [685, "ai-on-demand-in-loop"], [697, "ai-on-demand-in-loop"]], "AI on demand once": [[54, "ai-on-demand-once"], [92, "ai-on-demand-once"], [101, "ai-on-demand-once"], [157, "ai-on-demand-once"], [183, "ai-on-demand-once"], [210, "ai-on-demand-once"], [349, "ai-on-demand-once"], [370, "ai-on-demand-once"], [386, "ai-on-demand-once"], [442, "ai-on-demand-once"], [468, "ai-on-demand-once"], [473, "ai-on-demand-once"], [509, "ai-on-demand-once"], [531, "ai-on-demand-once"], [554, "ai-on-demand-once"], [669, "ai-on-demand-once"], [686, "ai-on-demand-once"], [698, "ai-on-demand-once"]], "DIO loopback pins": [[63, "dio-loopback-pins"], [78, "dio-loopback-pins"], [164, "dio-loopback-pins"], [185, "dio-loopback-pins"], [218, "dio-loopback-pins"], [239, "dio-loopback-pins"], [260, "dio-loopback-pins"], [281, "dio-loopback-pins"], [297, "dio-loopback-pins"], [321, "dio-loopback-pins"], [447, "dio-loopback-pins"], [458, "dio-loopback-pins"], [516, "dio-loopback-pins"], [533, "dio-loopback-pins"], [562, "dio-loopback-pins"], [579, "dio-loopback-pins"], [596, "dio-loopback-pins"], [613, "dio-loopback-pins"], [625, "dio-loopback-pins"], [645, "dio-loopback-pins"]], "DIO loopback port": [[64, "dio-loopback-port"], [79, "dio-loopback-port"], [165, "dio-loopback-port"], [186, "dio-loopback-port"], [219, "dio-loopback-port"], [240, "dio-loopback-port"], [261, "dio-loopback-port"], [282, "dio-loopback-port"], [298, "dio-loopback-port"], [322, "dio-loopback-port"], [448, "dio-loopback-port"], [459, "dio-loopback-port"], [517, "dio-loopback-port"], [534, "dio-loopback-port"], [563, "dio-loopback-port"], [580, "dio-loopback-port"], [597, "dio-loopback-port"], [614, "dio-loopback-port"], [626, "dio-loopback-port"], [646, "dio-loopback-port"]], "DO blinky pins": [[65, "do-blinky-pins"], [80, "do-blinky-pins"], [166, "do-blinky-pins"], [187, "do-blinky-pins"], [220, "do-blinky-pins"], [241, "do-blinky-pins"], [262, "do-blinky-pins"], [283, "do-blinky-pins"], [299, "do-blinky-pins"], [323, "do-blinky-pins"], [449, "do-blinky-pins"], [460, "do-blinky-pins"], [518, "do-blinky-pins"], [535, "do-blinky-pins"], [564, "do-blinky-pins"], [581, "do-blinky-pins"], [598, "do-blinky-pins"], [615, "do-blinky-pins"], [627, "do-blinky-pins"], [647, "do-blinky-pins"]], "DO blinky port": [[66, "do-blinky-port"], [81, "do-blinky-port"], [167, "do-blinky-port"], [188, "do-blinky-port"], [221, "do-blinky-port"], [242, "do-blinky-port"], [263, "do-blinky-port"], [284, "do-blinky-port"], [300, "do-blinky-port"], [324, "do-blinky-port"], [450, "do-blinky-port"], [461, "do-blinky-port"], [519, "do-blinky-port"], [536, "do-blinky-port"], [565, "do-blinky-port"], [582, "do-blinky-port"], [599, "do-blinky-port"], [616, "do-blinky-port"], [628, "do-blinky-port"], [648, "do-blinky-port"]], "DO write pins": [[67, "do-write-pins"], [82, "do-write-pins"], [168, "do-write-pins"], [189, "do-write-pins"], [222, "do-write-pins"], [243, "do-write-pins"], [264, "do-write-pins"], [285, "do-write-pins"], [301, "do-write-pins"], [325, "do-write-pins"], [451, "do-write-pins"], [462, "do-write-pins"], [520, "do-write-pins"], [537, "do-write-pins"], [566, "do-write-pins"], [583, "do-write-pins"], [600, "do-write-pins"], [617, "do-write-pins"], [629, "do-write-pins"], [649, "do-write-pins"]], "DO write port": [[68, "do-write-port"], [83, "do-write-port"], [169, "do-write-port"], [190, "do-write-port"], [223, "do-write-port"], [244, "do-write-port"], [265, "do-write-port"], [286, "do-write-port"], [302, "do-write-port"], [326, "do-write-port"], [452, "do-write-port"], [463, "do-write-port"], [521, "do-write-port"], [538, "do-write-port"], [567, "do-write-port"], [584, "do-write-port"], [601, "do-write-port"], [618, "do-write-port"], [630, "do-write-port"], [650, "do-write-port"]], "PWM generate": [[69, "pwm-generate"], [192, "pwm-generate"], [225, "pwm-generate"], [246, "pwm-generate"], [267, "pwm-generate"], [287, "pwm-generate"], [304, "pwm-generate"], [328, "pwm-generate"], [453, "pwm-generate"], [540, "pwm-generate"], [569, "pwm-generate"], [586, "pwm-generate"], [603, "pwm-generate"], [619, "pwm-generate"], [632, "pwm-generate"], [652, "pwm-generate"]], "Relay read counters": [[110, "relay-read-counters"], [478, "relay-read-counters"]], "Relay set channel": [[111, "relay-set-channel"], [479, "relay-set-channel"]], "AO waveform generation": [[120, "ao-waveform-generation"], [161, "ao-waveform-generation"], [214, "ao-waveform-generation"], [484, "ao-waveform-generation"], [513, "ao-waveform-generation"], [558, "ao-waveform-generation"]], "AO write all channels": [[121, "ao-write-all-channels"], [162, "ao-write-all-channels"], [215, "ao-write-all-channels"], [485, "ao-write-all-channels"], [514, "ao-write-all-channels"], [559, "ao-write-all-channels"]], "AO write one channel": [[122, "ao-write-one-channel"], [163, "ao-write-one-channel"], [216, "ao-write-one-channel"], [486, "ao-write-one-channel"], [515, "ao-write-one-channel"], [560, "ao-write-one-channel"]], "DPOT read by channel": [[131, "dpot-read-by-channel"], [491, "dpot-read-by-channel"]], "DPOT write all channels": [[132, "dpot-write-all-channels"], [492, "dpot-write-all-channels"]], "TC read channel data": [[145, "tc-read-channel-data"], [335, "tc-read-channel-data"], [501, "tc-read-channel-data"], [659, "tc-read-channel-data"]], "TC read channel data with logger": [[146, "tc-read-channel-data-with-logger"], [336, "tc-read-channel-data-with-logger"], [502, "tc-read-channel-data-with-logger"], [660, "tc-read-channel-data-with-logger"]], "TC read channel status": [[147, "tc-read-channel-status"], [337, "tc-read-channel-status"], [503, "tc-read-channel-status"], [661, "tc-read-channel-status"]], "AIO all channels loopback": [[158, "aio-all-channels-loopback"], [211, "aio-all-channels-loopback"], [510, "aio-all-channels-loopback"], [555, "aio-all-channels-loopback"]], "AIO one channel loopback": [[159, "aio-one-channel-loopback"], [212, "aio-one-channel-loopback"], [511, "aio-one-channel-loopback"], [556, "aio-one-channel-loopback"]], "AO output while AI streaming": [[160, "ao-output-while-ai-streaming"], [213, "ao-output-while-ai-streaming"], [512, "ao-output-while-ai-streaming"], [557, "ao-output-while-ai-streaming"]], "Counter read": [[184, "counter-read"], [217, "counter-read"], [238, "counter-read"], [259, "counter-read"], [280, "counter-read"], [296, "counter-read"], [320, "counter-read"], [532, "counter-read"], [561, "counter-read"], [578, "counter-read"], [595, "counter-read"], [612, "counter-read"], [624, "counter-read"], [644, "counter-read"]], "I2C write and read": [[191, "i2c-write-and-read"], [224, "i2c-write-and-read"], [245, "i2c-write-and-read"], [266, "i2c-write-and-read"], [303, "i2c-write-and-read"], [327, "i2c-write-and-read"], [539, "i2c-write-and-read"], [568, "i2c-write-and-read"], [585, "i2c-write-and-read"], [602, "i2c-write-and-read"], [631, "i2c-write-and-read"], [651, "i2c-write-and-read"]], "SPI read and write": [[193, "spi-read-and-write"], [247, "spi-read-and-write"], [268, "spi-read-and-write"], [305, "spi-read-and-write"], [329, "spi-read-and-write"], [541, "spi-read-and-write"], [587, "spi-read-and-write"], [604, "spi-read-and-write"], [633, "spi-read-and-write"], [653, "spi-read-and-write"]], "SPI write": [[194, "spi-write"], [248, "spi-write"], [269, "spi-write"], [306, "spi-write"], [330, "spi-write"], [542, "spi-write"], [588, "spi-write"], [605, "spi-write"], [634, "spi-write"], [654, "spi-write"]], "System get pin mode": [[195, "system-get-pin-mode"], [226, "system-get-pin-mode"], [249, "system-get-pin-mode"], [270, "system-get-pin-mode"], [288, "system-get-pin-mode"], [307, "system-get-pin-mode"], [331, "system-get-pin-mode"], [543, "system-get-pin-mode"], [570, "system-get-pin-mode"], [589, "system-get-pin-mode"], [606, "system-get-pin-mode"], [620, "system-get-pin-mode"], [635, "system-get-pin-mode"], [655, "system-get-pin-mode"]], "UART read": [[203, "uart-read"], [234, "uart-read"], [257, "uart-read"], [278, "uart-read"], [318, "uart-read"], [342, "uart-read"], [547, "uart-read"], [574, "uart-read"], [593, "uart-read"], [610, "uart-read"], [642, "uart-read"], [662, "uart-read"]], "UART write": [[204, "uart-write"], [235, "uart-write"], [258, "uart-write"], [279, "uart-write"], [319, "uart-write"], [343, "uart-write"], [548, "uart-write"], [575, "uart-write"], [594, "uart-write"], [611, "uart-write"], [643, "uart-write"], [663, "uart-write"]], "CAN read": [[236, "can-read"], [576, "can-read"]], "CAN write": [[237, "can-write"], [577, "can-write"]], "RTD read channel data": [[311, "rtd-read-channel-data"], [639, "rtd-read-channel-data"]], "RTD read channel data with logger": [[312, "rtd-read-channel-data-with-logger"], [640, "rtd-read-channel-data-with-logger"]], "RTD read channel status": [[313, "rtd-read-channel-status"], [641, "rtd-read-channel-status"]], "System get Wifi DAQ status": [[350, "system-get-wifi-daq-status"], [371, "system-get-wifi-daq-status"], [387, "system-get-wifi-daq-status"], [670, "system-get-wifi-daq-status"], [687, "system-get-wifi-daq-status"], [699, "system-get-wifi-daq-status"]], "Set LED status": [[354, "set-led-status"], [375, "set-led-status"], [391, "set-led-status"], [674, "set-led-status"], [691, "set-led-status"], [703, "set-led-status"]], "AHRS getAcceleration": [[360, "ahrs-getacceleration"], [676, "ahrs-getacceleration"]], "AHRS getAngularVelocity": [[361, "ahrs-getangularvelocity"], [677, "ahrs-getangularvelocity"]], "AHRS getEstimation": [[362, "ahrs-getestimation"], [678, "ahrs-getestimation"]], "AHRS getOrientation": [[363, "ahrs-getorientation"], [679, "ahrs-getorientation"]], "AHRS visualize": [[364, "ahrs-visualize"], [680, "ahrs-visualize"]], "AI test panel": [[705, "ai-test-panel"]], "AO test panel": [[706, "ao-test-panel"]], "DO test panel": [[707, "do-test-panel"]], "I2C test panel": [[708, "i2c-test-panel"]], "SPI test panel": [[709, "spi-test-panel"]], "Network device finder": [[710, "network-device-finder"]], "Device network info center": [[711, "device-network-info-center"]], "RTD test panel": [[712, "rtd-test-panel"]], "TC test panel": [[713, "tc-test-panel"]], "UART test panel": [[714, "uart-test-panel"]], "Example Codes - GUI (sync)": [[715, "example-codes-gui-sync"]], "AI": [[715, "ai"]], "AO": [[715, "ao"]], "DO": [[715, "do"]], "I2C": [[715, "i2c"]], "SPI": [[715, "spi"]], "System": [[715, "system"]], "Temperature-RTD": [[715, "temperature-rtd"]], "Temperature-TC": [[715, "temperature-tc"]], "UART": [[715, "uart"]], "Example Codes - Console (async)": [[716, "example-codes-console-async"]], "Device finder": [[716, "device-finder"], [717, "device-finder"], [720, "device-finder"]], "STEM": [[716, "stem"], [717, "stem"], [732, "stem"]], "EDrive-ST": [[716, "edrive-st"], [717, "edrive-st"], [721, "edrive-st"]], "EMotion": [[716, "emotion"], [717, "emotion"], [722, "emotion"]], "Ethan-A": [[716, "ethan-a"], [717, "ethan-a"], [723, "ethan-a"]], "Ethan-D": [[716, "ethan-d"], [717, "ethan-d"], [724, "ethan-d"]], "Ethan-EX-D": [[716, "ethan-ex-d"], [717, "ethan-ex-d"], [725, "ethan-ex-d"]], "Ethan-I": [[716, "ethan-i"], [717, "ethan-i"], [726, "ethan-i"]], "Ethan-IA": [[716, "ethan-ia"], [717, "ethan-ia"], [727, "ethan-ia"]], "Ethan-L": [[716, "ethan-l"], [717, "ethan-l"], [728, "ethan-l"]], "Ethan-O": [[716, "ethan-o"], [717, "ethan-o"], [729, "ethan-o"]], "Ethan-P": [[716, "ethan-p"], [717, "ethan-p"], [730, "ethan-p"]], "Ethan-T": [[716, "ethan-t"], [717, "ethan-t"], [731, "ethan-t"]], "USB-DAQ-F1-AD": [[716, "usb-daq-f1-ad"], [717, "usb-daq-f1-ad"], [733, "usb-daq-f1-ad"]], "USB-DAQ-F1-AOD": [[716, "usb-daq-f1-aod"], [717, "usb-daq-f1-aod"], [734, "usb-daq-f1-aod"]], "USB-DAQ-F1-CD": [[716, "usb-daq-f1-cd"], [717, "usb-daq-f1-cd"], [735, "usb-daq-f1-cd"]], "USB-DAQ-F1-D": [[716, "usb-daq-f1-d"], [717, "usb-daq-f1-d"], [736, "usb-daq-f1-d"]], "USB-DAQ-F1-D-SNK": [[716, "usb-daq-f1-d-snk"], [717, "usb-daq-f1-d-snk"], [737, "usb-daq-f1-d-snk"]], "USB-DAQ-F1-RD": [[716, "usb-daq-f1-rd"], [717, "usb-daq-f1-rd"], [738, "usb-daq-f1-rd"]], "USB-DAQ-F1-TD": [[716, "usb-daq-f1-td"], [717, "usb-daq-f1-td"], [739, "usb-daq-f1-td"]], "Wifi-DAQ-E3-A": [[716, "wifi-daq-e3-a"], [717, "wifi-daq-e3-a"], [740, "wifi-daq-e3-a"]], "Wifi-DAQ-E3-AH": [[716, "wifi-daq-e3-ah"], [717, "wifi-daq-e3-ah"], [741, "wifi-daq-e3-ah"]], "Wifi-DAQ-F4-A": [[716, "wifi-daq-f4-a"], [717, "wifi-daq-f4-a"], [742, "wifi-daq-f4-a"]], "Example Codes - Console (sync)": [[717, "example-codes-console-sync"]], "Products Usage": [[719, "products-usage"]], "Utilities": [[719, "utilities"]], "Wifi devices": [[719, "wifi-devices"]], "Ethernet devices": [[719, "ethernet-devices"]], "USB devices": [[719, "usb-devices"]], "API function description": [[720, "api-function-description"], [721, "api-function-description"], [722, "api-function-description"], [723, "api-function-description"], [724, "api-function-description"], [725, "api-function-description"], [726, "api-function-description"], [727, "api-function-description"], [728, "api-function-description"], [729, "api-function-description"], [730, "api-function-description"], [731, "api-function-description"], [732, "api-function-description"], [733, "api-function-description"], [734, "api-function-description"], [735, "api-function-description"], [736, "api-function-description"], [737, "api-function-description"], [738, "api-function-description"], [739, "api-function-description"], [740, "api-function-description"], [741, "api-function-description"], [742, "api-function-description"]], "Device pinout": [[721, "device-pinout"], [722, "device-pinout"], [723, "device-pinout"], [724, "device-pinout"], [725, "device-pinout"], [726, "device-pinout"], [727, "device-pinout"], [728, "device-pinout"], [729, "device-pinout"], [730, "device-pinout"], [731, "device-pinout"], [732, "device-pinout"], [733, "device-pinout"], [734, "device-pinout"], [735, "device-pinout"], [736, "device-pinout"], [737, "device-pinout"], [738, "device-pinout"], [739, "device-pinout"], [740, "device-pinout"], [741, "device-pinout"], [742, "device-pinout"]], "Products Feature": [[743, "products-feature"]], "AI Max Sampling Rate Table": [[744, "ai-max-sampling-rate-table"]], "I/O Channel Function Table": [[745, "i-o-channel-function-table"]], "Error Code Table": [[746, "error-code-table"]], "Setting Table": [[747, "setting-table"]], "AI Mode": [[747, "ai-mode"]], "AO Form": [[747, "ao-form"]], "AO Mode": [[747, "ao-mode"]], "CAN Speed": [[747, "can-speed"]], "CAN Type": [[747, "can-type"]], "I2C Address": [[747, "i2c-address"]], "I2C Speed": [[747, "i2c-speed"]], "Motion Capture Mode": [[747, "motion-capture-mode"]], "Motion Capture Type": [[747, "motion-capture-type"]], "Motion Direction": [[747, "motion-direction"]], "Motion Enable": [[747, "motion-enable"]], "Motion Find Reference Type": [[747, "motion-find-reference-type"]], "Motion Operation Mode": [[747, "motion-operation-mode"]], "Motion Polarity": [[747, "motion-polarity"]], "Motion Search Direction": [[747, "motion-search-direction"]], "Motion Stepper Output": [[747, "motion-stepper-output"]], "Motion Stop Type": [[747, "motion-stop-type"]], "SPI Clock": [[747, "spi-clock"]], "SPI Data Size": [[747, "spi-data-size"]], "SPI Endianness": [[747, "spi-endianness"]], "SPI Mode": [[747, "spi-mode"]], "Thermal Channel": [[747, "thermal-channel"]], "Thermal OverSampling": [[747, "thermal-oversampling"]], "Thermal Type": [[747, "thermal-type"]], "UART Data Size": [[747, "uart-data-size"]], "UART Parity": [[747, "uart-parity"]], "UART Stop Bit": [[747, "uart-stop-bit"]], "I/O Port Function Table": [[748, "i-o-port-function-table"]]}, "indexentries": {"module": [[718, "module-pywpc"]], "pywpc": [[718, "module-pywpc"]], "bcst_checkmacandreboot() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_checkMACAndReboot"]], "bcst_checkmacandreboot_async() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_checkMACAndReboot_async"]], "bcst_checkmacandsetip() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP"]], "bcst_checkmacandsetip_async() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_checkMACAndSetIP_async"]], "bcst_enumeratenetworkdevices() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices"]], "bcst_enumeratenetworkdevices_async() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_enumerateNetworkDevices_async"]], "bcst_enumerateusbdevices() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.Bcst_enumerateUSBDevices"]], "devicefinder (class in pywpc)": [[720, "pywpc.DeviceFinder"]], "close() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.close"]], "connect() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.connect"]], "disconnect() (pywpc.devicefinder method)": [[720, "pywpc.DeviceFinder.disconnect"]], "edrivest (class in pywpc)": [[721, "pywpc.EDriveST"]], "motion_cfgaxisdirection() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_cfgAxisDirection"]], "motion_cfgaxisdirection_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_cfgAxisDirection_async"]], "motion_cfgencoder() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_cfgEncoder_async"]], "motion_cfglimit() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_cfgLimit_async"]], "motion_close() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_close"]], "motion_close_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_close_async"]], "motion_enableservooff() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_enableServoOn_async"]], "motion_getalarmstatus() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getAlarmStatus"]], "motion_getalarmstatus_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getAlarmStatus_async"]], "motion_getlimitstatus() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getLimitStatus_async"]], "motion_getparameters() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getParameters"]], "motion_getprocessstate() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getProcessState"]], "motion_getprocessstate_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_getProcessState_async"]], "motion_loadcfgfile() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_loadCfgFile_async"]], "motion_open() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_open"]], "motion_opencfgfile() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_open_async"]], "motion_readcurrentvelocity() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_readCurrentVelocity"]], "motion_readcurrentvelocity_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_readCurrentVelocity_async"]], "motion_readencoderposition() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_readEncoderPosition"]], "motion_readencoderposition_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_readEncoderPosition_async"]], "motion_resetfactory() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_resetFactory"]], "motion_resetfactory_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_resetFactory_async"]], "motion_rstencoderposi() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_saveCfgFile_async"]], "motion_startfindhome() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startFindHome"]], "motion_startfindhome_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startFindHome_async"]], "motion_startfindlimit() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startFindLimit"]], "motion_startfindlimit_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startFindLimit_async"]], "motion_startfindzpolarity() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startFindZPolarity"]], "motion_startfindzpolarity_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startFindZPolarity_async"]], "motion_startpositionmove() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startPositionMove"]], "motion_startpositionmove_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startPositionMove_async"]], "motion_startscanmove() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startScanMove"]], "motion_startscanmove_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startScanMove_async"]], "motion_startvelocticymove() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startVelocticyMove"]], "motion_startvelocticymove_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_startVelocticyMove_async"]], "motion_stopprocess() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_stopProcess"]], "motion_stopprocess_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Motion_stopProcess_async"]], "net_getgateway() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_getGateway"]], "net_getgateway_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getGateway"]], "sys_getgateway_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getMode"]], "sys_getmode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getRTC"]], "sys_getrtc_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_reboot"]], "sys_reboot_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_reboot_async"]], "sys_setaiomode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setRTC"]], "sys_setrtc_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.Sys_setSwitchMode_async"]], "close() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.close"]], "connect() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.connect"]], "disconnect() (pywpc.edrivest method)": [[721, "pywpc.EDriveST.disconnect"]], "emotion (class in pywpc)": [[722, "pywpc.EMotion"]], "logger_openfile() (pywpc.emotion method)": [[722, "pywpc.EMotion.Logger_openFile"]], "logger_write2dlist() (pywpc.emotion method)": [[722, "pywpc.EMotion.Logger_write2DList"]], "logger_writeheader() (pywpc.emotion method)": [[722, "pywpc.EMotion.Logger_writeHeader"]], "logger_writelist() (pywpc.emotion method)": [[722, "pywpc.EMotion.Logger_writeList"]], "logger_writevalue() (pywpc.emotion method)": [[722, "pywpc.EMotion.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_checkRef"]], "motion_checkref_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_checkRef_async"]], "motion_close() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_close"]], "motion_close_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_enableServoOn_async"]], "motion_findref() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_findRef"]], "motion_findref_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_loadCfgFile_async"]], "motion_open() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_open"]], "motion_opencfgfile() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_stop"]], "motion_stop_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Motion_stop_async"]], "net_getgateway() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_getGateway"]], "net_getgateway_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getGateway"]], "sys_getgateway_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getMode"]], "sys_getmode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getRTC"]], "sys_getrtc_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_reboot"]], "sys_reboot_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_reboot_async"]], "sys_setaiomode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setRTC"]], "sys_setrtc_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.emotion method)": [[722, "pywpc.EMotion.Sys_setSwitchMode_async"]], "close() (pywpc.emotion method)": [[722, "pywpc.EMotion.close"]], "connect() (pywpc.emotion method)": [[722, "pywpc.EMotion.connect"]], "disconnect() (pywpc.emotion method)": [[722, "pywpc.EMotion.disconnect"]], "ai_close() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_close"]], "ai_close_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_close_async"]], "ai_enablecs() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_enableCS"]], "ai_enablecs_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_enableCS_async"]], "ai_enablechannel() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_enableChannel_async"]], "ai_getport() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_getPort"]], "ai_open() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_open"]], "ai_open_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_open_async"]], "ai_readondemand() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_readStreaming_async"]], "ai_setmode() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_setMode"]], "ai_setmode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_setMode_async"]], "ai_setnumsamples() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_setSamplingRate_async"]], "ai_start() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_start"]], "ai_start_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_start_async"]], "ai_stop() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_stop"]], "ai_stop_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.AI_stop_async"]], "ethana (class in pywpc)": [[723, "pywpc.EthanA"]], "logger_openfile() (pywpc.ethana method)": [[723, "pywpc.EthanA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethana method)": [[723, "pywpc.EthanA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethana method)": [[723, "pywpc.EthanA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethana method)": [[723, "pywpc.EthanA.Logger_writeList"]], "logger_writevalue() (pywpc.ethana method)": [[723, "pywpc.EthanA.Logger_writeValue"]], "net_getgateway() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_reboot"]], "sys_reboot_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethana method)": [[723, "pywpc.EthanA.Sys_setSwitchMode_async"]], "close() (pywpc.ethana method)": [[723, "pywpc.EthanA.close"]], "connect() (pywpc.ethana method)": [[723, "pywpc.EthanA.connect"]], "disconnect() (pywpc.ethana method)": [[723, "pywpc.EthanA.disconnect"]], "dio_loadstartup() (pywpc.ethand method)": [[724, "pywpc.EthanD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_closePins"]], "di_closepins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_closePins_async"]], "di_closeport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_closePort"]], "di_closeport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_getPinMap"]], "di_openpins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_openPins"]], "di_openpins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_openPins_async"]], "di_openport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_openPort"]], "di_openport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_openPort_async"]], "di_readpins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_readPins"]], "di_readpins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_readPins_async"]], "di_readport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_readPort"]], "di_readport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DI_readPort_async"]], "do_closepins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_closePins"]], "do_closepins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_closePins_async"]], "do_closeport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_closePort"]], "do_closeport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_getPinMap"]], "do_openpins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_openPins"]], "do_openpins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_openPins_async"]], "do_openport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_openPort"]], "do_openport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_openPort_async"]], "do_togglepins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_togglePort_async"]], "do_writepins() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_writePins"]], "do_writepins_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_writePins_async"]], "do_writeport() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_writePort"]], "do_writeport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.DO_writePort_async"]], "ethand (class in pywpc)": [[724, "pywpc.EthanD"]], "logger_openfile() (pywpc.ethand method)": [[724, "pywpc.EthanD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethand method)": [[724, "pywpc.EthanD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethand method)": [[724, "pywpc.EthanD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethand method)": [[724, "pywpc.EthanD.Logger_writeList"]], "logger_writevalue() (pywpc.ethand method)": [[724, "pywpc.EthanD.Logger_writeValue"]], "net_getgateway() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Net_setIPAddrAndSubmask_async"]], "pwm_close() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_close"]], "pwm_close_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_close_async"]], "pwm_open() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_open"]], "pwm_open_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_setFrequency_async"]], "pwm_start() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_start"]], "pwm_start_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_start_async"]], "pwm_stop() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_stop"]], "pwm_stop_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_reboot"]], "sys_reboot_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethand method)": [[724, "pywpc.EthanD.Sys_setSwitchMode_async"]], "close() (pywpc.ethand method)": [[724, "pywpc.EthanD.close"]], "connect() (pywpc.ethand method)": [[724, "pywpc.EthanD.connect"]], "disconnect() (pywpc.ethand method)": [[724, "pywpc.EthanD.disconnect"]], "dio_loadstartup() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_closePins"]], "di_closepins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_closePins_async"]], "di_closeport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_closePort"]], "di_closeport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_getPinMap"]], "di_openpins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_openPins"]], "di_openpins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_openPins_async"]], "di_openport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_openPort"]], "di_openport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_openPort_async"]], "di_readpins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_readPins"]], "di_readpins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_readPins_async"]], "di_readport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_readPort"]], "di_readport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DI_readPort_async"]], "do_closepins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_closePins"]], "do_closepins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_closePins_async"]], "do_closeport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_closePort"]], "do_closeport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_getPinMap"]], "do_openpins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_openPins"]], "do_openpins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_openPins_async"]], "do_openport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_openPort"]], "do_openport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_openPort_async"]], "do_togglepins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_togglePort_async"]], "do_writepins() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_writePins"]], "do_writepins_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_writePins_async"]], "do_writeport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_writePort"]], "do_writeport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.DO_writePort_async"]], "ethanexd (class in pywpc)": [[725, "pywpc.EthanEXD"]], "logger_openfile() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Logger_writeList"]], "logger_writevalue() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Logger_writeValue"]], "net_getgateway() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.Sys_setSwitchMode_async"]], "close() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.close"]], "connect() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.connect"]], "disconnect() (pywpc.ethanexd method)": [[725, "pywpc.EthanEXD.disconnect"]], "ai_close() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_close"]], "ai_close_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_close_async"]], "ai_getport() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_getPort"]], "ai_open() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_open"]], "ai_open_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_open_async"]], "ai_readondemand() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.AI_readOnDemand_async"]], "ethani (class in pywpc)": [[726, "pywpc.EthanI"]], "logger_openfile() (pywpc.ethani method)": [[726, "pywpc.EthanI.Logger_openFile"]], "logger_write2dlist() (pywpc.ethani method)": [[726, "pywpc.EthanI.Logger_write2DList"]], "logger_writeheader() (pywpc.ethani method)": [[726, "pywpc.EthanI.Logger_writeHeader"]], "logger_writelist() (pywpc.ethani method)": [[726, "pywpc.EthanI.Logger_writeList"]], "logger_writevalue() (pywpc.ethani method)": [[726, "pywpc.EthanI.Logger_writeValue"]], "net_getgateway() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_getGateway"]], "net_getgateway_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getMode"]], "sys_getmode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_reboot"]], "sys_reboot_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethani method)": [[726, "pywpc.EthanI.Sys_setSwitchMode_async"]], "close() (pywpc.ethani method)": [[726, "pywpc.EthanI.close"]], "connect() (pywpc.ethani method)": [[726, "pywpc.EthanI.connect"]], "disconnect() (pywpc.ethani method)": [[726, "pywpc.EthanI.disconnect"]], "ai_close() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_close"]], "ai_close_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_close_async"]], "ai_getport() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_getPort"]], "ai_open() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_open"]], "ai_open_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_open_async"]], "ai_readondemand() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.AI_readOnDemand_async"]], "ethania (class in pywpc)": [[727, "pywpc.EthanIA"]], "logger_openfile() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Logger_openFile"]], "logger_write2dlist() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Logger_write2DList"]], "logger_writeheader() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Logger_writeHeader"]], "logger_writelist() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Logger_writeList"]], "logger_writevalue() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Logger_writeValue"]], "net_getgateway() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_getGateway"]], "net_getgateway_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getMode"]], "sys_getmode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_reboot"]], "sys_reboot_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethania method)": [[727, "pywpc.EthanIA.Sys_setSwitchMode_async"]], "close() (pywpc.ethania method)": [[727, "pywpc.EthanIA.close"]], "connect() (pywpc.ethania method)": [[727, "pywpc.EthanIA.connect"]], "disconnect() (pywpc.ethania method)": [[727, "pywpc.EthanIA.disconnect"]], "dio_loadstartup() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DIO_loadStartup_async"]], "di_closepins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_closePins"]], "di_closepins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_closePins_async"]], "di_closeport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_closePort"]], "di_closeport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_closePort_async"]], "di_getpinmap() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_getPinMap"]], "di_openpins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_openPins"]], "di_openpins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_openPins_async"]], "di_openport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_openPort"]], "di_openport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_openPort_async"]], "di_readpins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_readPins"]], "di_readpins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_readPins_async"]], "di_readport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_readPort"]], "di_readport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DI_readPort_async"]], "do_closepins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_closePins"]], "do_closepins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_closePins_async"]], "do_closeport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_closePort"]], "do_closeport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_closePort_async"]], "do_getpinmap() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_getPinMap"]], "do_openpins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_openPins"]], "do_openpins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_openPins_async"]], "do_openport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_openPort"]], "do_openport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_openPort_async"]], "do_togglepins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_togglePins"]], "do_togglepins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_togglePins_async"]], "do_toggleport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_togglePort"]], "do_toggleport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_togglePort_async"]], "do_writepins() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_writePins"]], "do_writepins_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_writePins_async"]], "do_writeport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_writePort"]], "do_writeport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.DO_writePort_async"]], "ethanl (class in pywpc)": [[728, "pywpc.EthanL"]], "logger_openfile() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Logger_writeList"]], "logger_writevalue() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Logger_writeValue"]], "net_getgateway() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Net_setIPAddrAndSubmask_async"]], "relay_close() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Relay_close"]], "relay_close_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Relay_close_async"]], "relay_open() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Relay_open"]], "relay_open_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Relay_open_async"]], "relay_read() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Relay_read"]], "relay_read_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Relay_read_async"]], "sys_getdriverinfo() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanl method)": [[728, "pywpc.EthanL.Sys_setSwitchMode_async"]], "close() (pywpc.ethanl method)": [[728, "pywpc.EthanL.close"]], "connect() (pywpc.ethanl method)": [[728, "pywpc.EthanL.connect"]], "disconnect() (pywpc.ethanl method)": [[728, "pywpc.EthanL.disconnect"]], "ao_close() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_close"]], "ao_closestreaming() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_closeStreaming_async"]], "ao_close_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_close_async"]], "ao_getport() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_getPort"]], "ao_getvalues() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_getValues"]], "ao_getvalues_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_getValues_async"]], "ao_open() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_open"]], "ao_openstreaming() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_openStreaming_async"]], "ao_open_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_open_async"]], "ao_setenablechannels() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setEnableChannels_async"]], "ao_setform() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setForm"]], "ao_setformparam() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setFormParam"]], "ao_setformparam_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setFormParam_async"]], "ao_setform_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setForm_async"]], "ao_setmode() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setMode"]], "ao_setmode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setMode_async"]], "ao_setnumsamples() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.AO_writeOneChannel_async"]], "ethano (class in pywpc)": [[729, "pywpc.EthanO"]], "logger_openfile() (pywpc.ethano method)": [[729, "pywpc.EthanO.Logger_openFile"]], "logger_write2dlist() (pywpc.ethano method)": [[729, "pywpc.EthanO.Logger_write2DList"]], "logger_writeheader() (pywpc.ethano method)": [[729, "pywpc.EthanO.Logger_writeHeader"]], "logger_writelist() (pywpc.ethano method)": [[729, "pywpc.EthanO.Logger_writeList"]], "logger_writevalue() (pywpc.ethano method)": [[729, "pywpc.EthanO.Logger_writeValue"]], "net_getgateway() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_getGateway"]], "net_getgateway_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getMode"]], "sys_getmode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_reboot"]], "sys_reboot_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethano method)": [[729, "pywpc.EthanO.Sys_setSwitchMode_async"]], "close() (pywpc.ethano method)": [[729, "pywpc.EthanO.close"]], "connect() (pywpc.ethano method)": [[729, "pywpc.EthanO.connect"]], "disconnect() (pywpc.ethano method)": [[729, "pywpc.EthanO.disconnect"]], "dpot_close() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_close"]], "dpot_close_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_close_async"]], "dpot_open() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_open"]], "dpot_open_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_open_async"]], "dpot_readbychannel() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_readByChannel"]], "dpot_readbychannel_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_readByChannel_async"]], "dpot_writeallchannel() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_writeAllChannel"]], "dpot_writeallchannel_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.DPOT_writeAllChannel_async"]], "ethanp (class in pywpc)": [[730, "pywpc.EthanP"]], "logger_openfile() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Logger_openFile"]], "logger_write2dlist() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Logger_write2DList"]], "logger_writeheader() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Logger_writeHeader"]], "logger_writelist() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Logger_writeList"]], "logger_writevalue() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Logger_writeValue"]], "net_getgateway() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_getGateway"]], "net_getgateway_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getMode"]], "sys_getmode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_reboot"]], "sys_reboot_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethanp method)": [[730, "pywpc.EthanP.Sys_setSwitchMode_async"]], "close() (pywpc.ethanp method)": [[730, "pywpc.EthanP.close"]], "connect() (pywpc.ethanp method)": [[730, "pywpc.EthanP.connect"]], "disconnect() (pywpc.ethanp method)": [[730, "pywpc.EthanP.disconnect"]], "ethant (class in pywpc)": [[731, "pywpc.EthanT"]], "logger_openfile() (pywpc.ethant method)": [[731, "pywpc.EthanT.Logger_openFile"]], "logger_write2dlist() (pywpc.ethant method)": [[731, "pywpc.EthanT.Logger_write2DList"]], "logger_writeheader() (pywpc.ethant method)": [[731, "pywpc.EthanT.Logger_writeHeader"]], "logger_writelist() (pywpc.ethant method)": [[731, "pywpc.EthanT.Logger_writeList"]], "logger_writevalue() (pywpc.ethant method)": [[731, "pywpc.EthanT.Logger_writeValue"]], "net_getgateway() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_getGateway"]], "net_getgateway_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getGateway"]], "sys_getgateway_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getMode"]], "sys_getmode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getRTC"]], "sys_getrtc_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_reboot"]], "sys_reboot_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_reboot_async"]], "sys_setaiomode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setRTC"]], "sys_setrtc_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_close"]], "thermal_close_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_close_async"]], "thermal_getpinmap() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_getStatus_async"]], "thermal_open() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_open"]], "thermal_open_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_open_async"]], "thermal_readsensor() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_setType"]], "thermal_settype_async() (pywpc.ethant method)": [[731, "pywpc.EthanT.Thermal_setType_async"]], "close() (pywpc.ethant method)": [[731, "pywpc.EthanT.close"]], "connect() (pywpc.ethant method)": [[731, "pywpc.EthanT.connect"]], "disconnect() (pywpc.ethant method)": [[731, "pywpc.EthanT.disconnect"]], "ai_close() (pywpc.stem method)": [[732, "pywpc.STEM.AI_close"]], "ai_close_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_close_async"]], "ai_enablecs() (pywpc.stem method)": [[732, "pywpc.STEM.AI_enableCS"]], "ai_enablecs_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_enableCS_async"]], "ai_enablechannel() (pywpc.stem method)": [[732, "pywpc.STEM.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_enableChannel_async"]], "ai_getport() (pywpc.stem method)": [[732, "pywpc.STEM.AI_getPort"]], "ai_open() (pywpc.stem method)": [[732, "pywpc.STEM.AI_open"]], "ai_open_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_open_async"]], "ai_readondemand() (pywpc.stem method)": [[732, "pywpc.STEM.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.stem method)": [[732, "pywpc.STEM.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_readStreaming_async"]], "ai_setmode() (pywpc.stem method)": [[732, "pywpc.STEM.AI_setMode"]], "ai_setmode_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_setMode_async"]], "ai_setnumsamples() (pywpc.stem method)": [[732, "pywpc.STEM.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.stem method)": [[732, "pywpc.STEM.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_setSamplingRate_async"]], "ai_start() (pywpc.stem method)": [[732, "pywpc.STEM.AI_start"]], "ai_start_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_start_async"]], "ai_stop() (pywpc.stem method)": [[732, "pywpc.STEM.AI_stop"]], "ai_stop_async() (pywpc.stem method)": [[732, "pywpc.STEM.AI_stop_async"]], "ao_close() (pywpc.stem method)": [[732, "pywpc.STEM.AO_close"]], "ao_closestreaming() (pywpc.stem method)": [[732, "pywpc.STEM.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_closeStreaming_async"]], "ao_close_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_close_async"]], "ao_getport() (pywpc.stem method)": [[732, "pywpc.STEM.AO_getPort"]], "ao_getvalues() (pywpc.stem method)": [[732, "pywpc.STEM.AO_getValues"]], "ao_getvalues_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_getValues_async"]], "ao_open() (pywpc.stem method)": [[732, "pywpc.STEM.AO_open"]], "ao_openstreaming() (pywpc.stem method)": [[732, "pywpc.STEM.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_openStreaming_async"]], "ao_open_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_open_async"]], "ao_setenablechannels() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setEnableChannels_async"]], "ao_setform() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setForm"]], "ao_setformparam() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setFormParam"]], "ao_setformparam_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setFormParam_async"]], "ao_setform_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setForm_async"]], "ao_setmode() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setMode"]], "ao_setmode_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setMode_async"]], "ao_setnumsamples() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.stem method)": [[732, "pywpc.STEM.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.stem method)": [[732, "pywpc.STEM.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.stem method)": [[732, "pywpc.STEM.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.stem method)": [[732, "pywpc.STEM.AO_writeOneChannel_async"]], "dio_loadstartup() (pywpc.stem method)": [[732, "pywpc.STEM.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.stem method)": [[732, "pywpc.STEM.DIO_loadStartup_async"]], "di_closepins() (pywpc.stem method)": [[732, "pywpc.STEM.DI_closePins"]], "di_closepins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DI_closePins_async"]], "di_closeport() (pywpc.stem method)": [[732, "pywpc.STEM.DI_closePort"]], "di_closeport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DI_closePort_async"]], "di_getpinmap() (pywpc.stem method)": [[732, "pywpc.STEM.DI_getPinMap"]], "di_openpins() (pywpc.stem method)": [[732, "pywpc.STEM.DI_openPins"]], "di_openpins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DI_openPins_async"]], "di_openport() (pywpc.stem method)": [[732, "pywpc.STEM.DI_openPort"]], "di_openport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DI_openPort_async"]], "di_readpins() (pywpc.stem method)": [[732, "pywpc.STEM.DI_readPins"]], "di_readpins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DI_readPins_async"]], "di_readport() (pywpc.stem method)": [[732, "pywpc.STEM.DI_readPort"]], "di_readport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DI_readPort_async"]], "do_closepins() (pywpc.stem method)": [[732, "pywpc.STEM.DO_closePins"]], "do_closepins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_closePins_async"]], "do_closeport() (pywpc.stem method)": [[732, "pywpc.STEM.DO_closePort"]], "do_closeport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_closePort_async"]], "do_getpinmap() (pywpc.stem method)": [[732, "pywpc.STEM.DO_getPinMap"]], "do_openpins() (pywpc.stem method)": [[732, "pywpc.STEM.DO_openPins"]], "do_openpins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_openPins_async"]], "do_openport() (pywpc.stem method)": [[732, "pywpc.STEM.DO_openPort"]], "do_openport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_openPort_async"]], "do_togglepins() (pywpc.stem method)": [[732, "pywpc.STEM.DO_togglePins"]], "do_togglepins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_togglePins_async"]], "do_toggleport() (pywpc.stem method)": [[732, "pywpc.STEM.DO_togglePort"]], "do_toggleport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_togglePort_async"]], "do_writepins() (pywpc.stem method)": [[732, "pywpc.STEM.DO_writePins"]], "do_writepins_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_writePins_async"]], "do_writeport() (pywpc.stem method)": [[732, "pywpc.STEM.DO_writePort"]], "do_writeport_async() (pywpc.stem method)": [[732, "pywpc.STEM.DO_writePort_async"]], "logger_openfile() (pywpc.stem method)": [[732, "pywpc.STEM.Logger_openFile"]], "logger_write2dlist() (pywpc.stem method)": [[732, "pywpc.STEM.Logger_write2DList"]], "logger_writeheader() (pywpc.stem method)": [[732, "pywpc.STEM.Logger_writeHeader"]], "logger_writelist() (pywpc.stem method)": [[732, "pywpc.STEM.Logger_writeList"]], "logger_writevalue() (pywpc.stem method)": [[732, "pywpc.STEM.Logger_writeValue"]], "motion_cfg2axislinearinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfg2AxisLinearInterpo"]], "motion_cfg2axislinearinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfg2AxisLinearInterpo_async"]], "motion_cfg3axislinearinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfg3AxisLinearInterpo"]], "motion_cfg3axislinearinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfg3AxisLinearInterpo_async"]], "motion_cfg4axislinearinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfg4AxisLinearInterpo"]], "motion_cfg4axislinearinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfg4AxisLinearInterpo_async"]], "motion_cfgalarm() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgAlarm"]], "motion_cfgalarm_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgAlarm_async"]], "motion_cfgaxis() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgAxis"]], "motion_cfgaxismove() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgAxisMove"]], "motion_cfgaxismove_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgAxisMove_async"]], "motion_cfgaxis_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgAxis_async"]], "motion_cfgbreakpoint() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgBreakPoint"]], "motion_cfgbreakpoint_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgBreakPoint_async"]], "motion_cfgcapture() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgCapture"]], "motion_cfgcapture_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgCapture_async"]], "motion_cfgcircularinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgCircularInterpo"]], "motion_cfgcircularinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgCircularInterpo_async"]], "motion_cfgencoder() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgEncoder"]], "motion_cfgencoder_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgEncoder_async"]], "motion_cfgfindref() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgFindRef"]], "motion_cfgfindref_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgFindRef_async"]], "motion_cfghelicalinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgHelicalInterpo"]], "motion_cfghelicalinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgHelicalInterpo_async"]], "motion_cfghome() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgHome"]], "motion_cfghome_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgHome_async"]], "motion_cfginposi() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgInposi"]], "motion_cfginposi_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgInposi_async"]], "motion_cfgjerkandaccelmode() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgJerkAndAccelMode"]], "motion_cfgjerkandaccelmode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgJerkAndAccelMode_async"]], "motion_cfglimit() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgLimit"]], "motion_cfglimit_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_cfgLimit_async"]], "motion_checkref() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_checkRef"]], "motion_checkref_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_checkRef_async"]], "motion_close() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_close"]], "motion_close_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_close_async"]], "motion_enablebreakpoint() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableBreakPoint"]], "motion_enablebreakpoint_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableBreakPoint_async"]], "motion_enablecapture() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableCapture"]], "motion_enablecapture_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableCapture_async"]], "motion_enableservooff() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableServoOff"]], "motion_enableservooff_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableServoOff_async"]], "motion_enableservoon() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableServoOn"]], "motion_enableservoon_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_enableServoOn_async"]], "motion_findref() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_findRef"]], "motion_findref_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_findRef_async"]], "motion_getencoderposi() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getEncoderPosi"]], "motion_getencoderposi_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getEncoderPosi_async"]], "motion_gethomestatus() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getHomeStatus"]], "motion_gethomestatus_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getHomeStatus_async"]], "motion_getlimitstatus() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getLimitStatus"]], "motion_getlimitstatus_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getLimitStatus_async"]], "motion_getlogicalposi() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getLogicalPosi"]], "motion_getlogicalposi_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getLogicalPosi_async"]], "motion_getmovestatus() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getMoveStatus"]], "motion_getmovestatus_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_getMoveStatus_async"]], "motion_loadcfgfile() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_loadCfgFile"]], "motion_loadcfgfile_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_loadCfgFile_async"]], "motion_open() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_open"]], "motion_opencfgfile() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_openCfgFile"]], "motion_opencfgfile_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_openCfgFile_async"]], "motion_open_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_open_async"]], "motion_overrideaxisaccel() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_overrideAxisAccel"]], "motion_overrideaxisaccel_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_overrideAxisAccel_async"]], "motion_overrideaxisposi() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_overrideAxisPosi"]], "motion_overrideaxisposi_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_overrideAxisPosi_async"]], "motion_overrideaxisvelocity() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_overrideAxisVelocity"]], "motion_overrideaxisvelocity_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_overrideAxisVelocity_async"]], "motion_readcapturepoint() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_readCapturePoint"]], "motion_readcapturepoint_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_readCapturePoint_async"]], "motion_rstencoderposi() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_rstEncoderPosi"]], "motion_rstencoderposi_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_rstEncoderPosi_async"]], "motion_savecfgfile() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_saveCfgFile"]], "motion_savecfgfile_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_saveCfgFile_async"]], "motion_setlogicalposi() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_setLogicalPosi"]], "motion_setlogicalposi_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_setLogicalPosi_async"]], "motion_startcircularinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startCircularInterpo"]], "motion_startcircularinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startCircularInterpo_async"]], "motion_starthelicalinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startHelicalInterpo"]], "motion_starthelicalinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startHelicalInterpo_async"]], "motion_startlinearinterpo() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startLinearInterpo"]], "motion_startlinearinterpo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startLinearInterpo_async"]], "motion_startmultiaxismove() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startMultiAxisMove"]], "motion_startmultiaxismove_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startMultiAxisMove_async"]], "motion_startsingleaxismove() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startSingleAxisMove"]], "motion_startsingleaxismove_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_startSingleAxisMove_async"]], "motion_stop() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_stop"]], "motion_stop_async() (pywpc.stem method)": [[732, "pywpc.STEM.Motion_stop_async"]], "net_getgateway() (pywpc.stem method)": [[732, "pywpc.STEM.Net_getGateway"]], "net_getgateway_async() (pywpc.stem method)": [[732, "pywpc.STEM.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.stem method)": [[732, "pywpc.STEM.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.stem method)": [[732, "pywpc.STEM.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.stem method)": [[732, "pywpc.STEM.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.stem method)": [[732, "pywpc.STEM.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.stem method)": [[732, "pywpc.STEM.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.stem method)": [[732, "pywpc.STEM.Net_setIPAddrAndSubmask_async"]], "stem (class in pywpc)": [[732, "pywpc.STEM"]], "sys_getdriverinfo() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getGateway"]], "sys_getgateway_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getMode"]], "sys_getmode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getRTC"]], "sys_getrtc_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_reboot"]], "sys_reboot_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_reboot_async"]], "sys_setaiomode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setRTC"]], "sys_setrtc_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.stem method)": [[732, "pywpc.STEM.Sys_setSwitchMode_async"]], "close() (pywpc.stem method)": [[732, "pywpc.STEM.close"]], "connect() (pywpc.stem method)": [[732, "pywpc.STEM.connect"]], "disconnect() (pywpc.stem method)": [[732, "pywpc.STEM.disconnect"]], "ai_close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.AI_stop_async"]], "counter_close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.UART_write_async"]], "usbdaqf1ad (class in pywpc)": [[733, "pywpc.USBDAQF1AD"]], "close() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.close"]], "connect() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.connect"]], "disconnect() (pywpc.usbdaqf1ad method)": [[733, "pywpc.USBDAQF1AD.disconnect"]], "ai_close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_close"]], "ai_close_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_close_async"]], "ai_enablecs() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_enableCS"]], "ai_enablecs_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_enableCS_async"]], "ai_enablechannel() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_enableChannel_async"]], "ai_getport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_getPort"]], "ai_open() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_open"]], "ai_open_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_open_async"]], "ai_readondemand() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_readStreaming_async"]], "ai_setmode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_setMode"]], "ai_setmode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_setMode_async"]], "ai_setnumsamples() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_setSamplingRate_async"]], "ai_start() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_start"]], "ai_start_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_start_async"]], "ai_stop() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_stop"]], "ai_stop_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AI_stop_async"]], "ao_close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_close"]], "ao_closestreaming() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_closeStreaming"]], "ao_closestreaming_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_closeStreaming_async"]], "ao_close_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_close_async"]], "ao_getport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_getPort"]], "ao_getvalues() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_getValues"]], "ao_getvalues_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_getValues_async"]], "ao_open() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_open"]], "ao_openstreaming() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_openStreaming"]], "ao_openstreaming_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_openStreaming_async"]], "ao_open_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_open_async"]], "ao_setenablechannels() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setEnableChannels"]], "ao_setenablechannels_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setEnableChannels_async"]], "ao_setform() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setForm"]], "ao_setformparam() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setFormParam"]], "ao_setformparam_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setFormParam_async"]], "ao_setform_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setForm_async"]], "ao_setmode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setMode"]], "ao_setmode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setMode_async"]], "ao_setnumsamples() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setNumSamples"]], "ao_setnumsamples_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setNumSamples_async"]], "ao_setsamplingrate() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setSamplingRate"]], "ao_setsamplingrate_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_setSamplingRate_async"]], "ao_startstreaming() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_startStreaming"]], "ao_startstreaming_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_startStreaming_async"]], "ao_writeallchannels() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_writeAllChannels"]], "ao_writeallchannels_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_writeAllChannels_async"]], "ao_writeonechannel() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_writeOneChannel"]], "ao_writeonechannel_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.AO_writeOneChannel_async"]], "counter_close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.UART_write_async"]], "usbdaqf1aod (class in pywpc)": [[734, "pywpc.USBDAQF1AOD"]], "close() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.close"]], "connect() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.connect"]], "disconnect() (pywpc.usbdaqf1aod method)": [[734, "pywpc.USBDAQF1AOD.disconnect"]], "can_close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_close"]], "can_close_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_close_async"]], "can_getport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_getPort"]], "can_open() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_open"]], "can_open_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_open_async"]], "can_read() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_read"]], "can_read_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_read_async"]], "can_setrxfilterormask() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask"]], "can_setrxfilterormask_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_setRXFilterOrMask_async"]], "can_setrxfilteringon() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn"]], "can_setrxfilteringon_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_setRXFilteringOn_async"]], "can_setspeed() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_setSpeed"]], "can_setspeed_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_setSpeed_async"]], "can_start() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_start"]], "can_start_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_start_async"]], "can_stop() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_stop"]], "can_stop_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_stop_async"]], "can_write() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_write"]], "can_write_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.CAN_write_async"]], "counter_close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.UART_write_async"]], "usbdaqf1cd (class in pywpc)": [[735, "pywpc.USBDAQF1CD"]], "close() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.close"]], "connect() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.connect"]], "disconnect() (pywpc.usbdaqf1cd method)": [[735, "pywpc.USBDAQF1CD.disconnect"]], "counter_close() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.Sys_setSwitchMode_async"]], "uart_close() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_close"]], "uart_close_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_open"]], "uart_open_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_open_async"]], "uart_read() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_read"]], "uart_read_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_write"]], "uart_write_async() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.UART_write_async"]], "usbdaqf1d (class in pywpc)": [[736, "pywpc.USBDAQF1D"]], "close() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.close"]], "connect() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.connect"]], "disconnect() (pywpc.usbdaqf1d method)": [[736, "pywpc.USBDAQF1D.disconnect"]], "counter_close() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.DO_writePort_async"]], "logger_openfile() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.PWM_stop_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.Sys_setSwitchMode_async"]], "usbdaqf1dsnk (class in pywpc)": [[737, "pywpc.USBDAQF1DSNK"]], "close() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.close"]], "connect() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.connect"]], "disconnect() (pywpc.usbdaqf1dsnk method)": [[737, "pywpc.USBDAQF1DSNK.disconnect"]], "counter_close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_readSensor_async"]], "thermal_settype() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.UART_write_async"]], "usbdaqf1rd (class in pywpc)": [[738, "pywpc.USBDAQF1RD"]], "close() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.close"]], "connect() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.connect"]], "disconnect() (pywpc.usbdaqf1rd method)": [[738, "pywpc.USBDAQF1RD.disconnect"]], "counter_close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_close"]], "counter_close_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_close_async"]], "counter_open() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_open"]], "counter_open_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_open_async"]], "counter_read() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_read"]], "counter_read_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_read_async"]], "counter_start() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_start"]], "counter_start_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_start_async"]], "counter_stop() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_stop"]], "counter_stop_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Counter_stop_async"]], "dio_loadstartup() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DIO_loadStartup"]], "dio_loadstartup_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DIO_loadStartup_async"]], "di_closepins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_closePins"]], "di_closepins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_closePins_async"]], "di_closeport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_closePort"]], "di_closeport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_closePort_async"]], "di_getpinmap() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_getPinMap"]], "di_openpins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_openPins"]], "di_openpins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_openPins_async"]], "di_openport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_openPort"]], "di_openport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_openPort_async"]], "di_readpins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_readPins"]], "di_readpins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_readPins_async"]], "di_readport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_readPort"]], "di_readport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DI_readPort_async"]], "do_closepins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_closePins"]], "do_closepins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_closePins_async"]], "do_closeport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_closePort"]], "do_closeport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_closePort_async"]], "do_getpinmap() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_getPinMap"]], "do_openpins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_openPins"]], "do_openpins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_openPins_async"]], "do_openport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_openPort"]], "do_openport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_openPort_async"]], "do_togglepins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_togglePins"]], "do_togglepins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_togglePins_async"]], "do_toggleport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_togglePort"]], "do_toggleport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_togglePort_async"]], "do_writepins() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_writePins"]], "do_writepins_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_writePins_async"]], "do_writeport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_writePort"]], "do_writeport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.DO_writePort_async"]], "i2c_close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_close"]], "i2c_close_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_close_async"]], "i2c_getpinmap() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_getPinMap"]], "i2c_open() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_open"]], "i2c_open_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_open_async"]], "i2c_read() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_read"]], "i2c_read_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_read_async"]], "i2c_reset() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_reset"]], "i2c_reset_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_reset_async"]], "i2c_setaddresssize() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_setAddressSize"]], "i2c_setaddresssize_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_setAddressSize_async"]], "i2c_setclockrate() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_setClockRate"]], "i2c_setclockrate_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_setClockRate_async"]], "i2c_write() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_write"]], "i2c_write_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.I2C_write_async"]], "logger_openfile() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Logger_openFile"]], "logger_write2dlist() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Logger_write2DList"]], "logger_writeheader() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Logger_writeHeader"]], "logger_writelist() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Logger_writeList"]], "logger_writevalue() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Logger_writeValue"]], "pwm_close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_close"]], "pwm_close_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_close_async"]], "pwm_open() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_open"]], "pwm_open_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_open_async"]], "pwm_setdutycycle() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_setDutyCycle"]], "pwm_setdutycycle_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_setDutyCycle_async"]], "pwm_setfrequency() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_setFrequency"]], "pwm_setfrequency_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_setFrequency_async"]], "pwm_start() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_start"]], "pwm_start_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_start_async"]], "pwm_stop() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_stop"]], "pwm_stop_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.PWM_stop_async"]], "spi_close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_close"]], "spi_close_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_close_async"]], "spi_getpinmap() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_getPinMap"]], "spi_open() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_open"]], "spi_open_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_open_async"]], "spi_read() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_read"]], "spi_readandwrite() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_readAndWrite"]], "spi_readandwrite_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_readAndWrite_async"]], "spi_read_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_read_async"]], "spi_reset() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_reset"]], "spi_reset_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_reset_async"]], "spi_setdatasize() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setDataSize"]], "spi_setdatasize_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setDataSize_async"]], "spi_setfirstbit() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setFirstBit"]], "spi_setfirstbit_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setFirstBit_async"]], "spi_setmode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setMode"]], "spi_setmode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setMode_async"]], "spi_setprescaler() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setPrescaler"]], "spi_setprescaler_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_setPrescaler_async"]], "spi_write() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_write"]], "spi_write_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.SPI_write_async"]], "sys_getdriverinfo() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getDriverInfo_async"]], "sys_getmode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getMode"]], "sys_getmode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getRTC"]], "sys_getrtc_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_reboot"]], "sys_reboot_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_reboot_async"]], "sys_setaiomode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setDOMode_async"]], "sys_setidlemode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setRTC"]], "sys_setrtc_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Sys_setSwitchMode_async"]], "thermal_close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_close"]], "thermal_close_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_close_async"]], "thermal_getpinmap() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_getPinMap"]], "thermal_getstatus() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_getStatus"]], "thermal_getstatus_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_getStatus_async"]], "thermal_open() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_open"]], "thermal_open_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_open_async"]], "thermal_readsensor() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_readSensor"]], "thermal_readsensor_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_readSensor_async"]], "thermal_setoversampling() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_setOverSampling"]], "thermal_setoversampling_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_setOverSampling_async"]], "thermal_settype() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_setType"]], "thermal_settype_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.Thermal_setType_async"]], "uart_close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_close"]], "uart_close_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_close_async"]], "uart_getpinmap() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_getPinMap"]], "uart_open() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_open"]], "uart_open_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_open_async"]], "uart_read() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_read"]], "uart_read_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_read_async"]], "uart_reset() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_reset"]], "uart_reset_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_reset_async"]], "uart_setbaudrate() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setBaudRate"]], "uart_setbaudrate_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setBaudRate_async"]], "uart_setdatabit() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setDataBit"]], "uart_setdatabit_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setDataBit_async"]], "uart_setnumstopbit() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setNumStopBit"]], "uart_setnumstopbit_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setNumStopBit_async"]], "uart_setparity() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setParity"]], "uart_setparity_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_setParity_async"]], "uart_write() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_write"]], "uart_write_async() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.UART_write_async"]], "usbdaqf1td (class in pywpc)": [[739, "pywpc.USBDAQF1TD"]], "close() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.close"]], "connect() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.connect"]], "disconnect() (pywpc.usbdaqf1td method)": [[739, "pywpc.USBDAQF1TD.disconnect"]], "ai_close() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_close"]], "ai_close_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_getPort"]], "ai_open() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_open"]], "ai_open_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_start"]], "ai_start_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Sys_setSwitchMode_async"]], "wifidaqe3a (class in pywpc)": [[740, "pywpc.WifiDAQE3A"]], "wifi_getchargestatus() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.close"]], "connect() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.connect"]], "disconnect() (pywpc.wifidaqe3a method)": [[740, "pywpc.WifiDAQE3A.disconnect"]], "ahrs_close() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_close"]], "ahrs_close_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_close_async"]], "ahrs_getacceleration() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getAcceleration"]], "ahrs_getacceleration_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getAcceleration_async"]], "ahrs_getangularvelocity() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getAngularVelocity"]], "ahrs_getangularvelocity_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getAngularVelocity_async"]], "ahrs_getestimate() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getEstimate"]], "ahrs_getestimate_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getEstimate_async"]], "ahrs_getorientation() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getOrientation"]], "ahrs_getorientation_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_getOrientation_async"]], "ahrs_open() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_open"]], "ahrs_open_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_open_async"]], "ahrs_reset() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_reset"]], "ahrs_reset_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_reset_async"]], "ahrs_start() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_start"]], "ahrs_start_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_start_async"]], "ahrs_stop() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_stop"]], "ahrs_stop_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AHRS_stop_async"]], "ai_close() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_close"]], "ai_close_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_getPort"]], "ai_open() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_open"]], "ai_open_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_start"]], "ai_start_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_start_async"]], "ai_stop() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_stop"]], "ai_stop_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Sys_setSwitchMode_async"]], "wifidaqe3ah (class in pywpc)": [[741, "pywpc.WifiDAQE3AH"]], "wifi_getchargestatus() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.close"]], "connect() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.connect"]], "disconnect() (pywpc.wifidaqe3ah method)": [[741, "pywpc.WifiDAQE3AH.disconnect"]], "ai_close() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_close"]], "ai_close_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_close_async"]], "ai_enablecs() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_enableCS"]], "ai_enablecs_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_enableCS_async"]], "ai_enablechannel() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_enableChannel"]], "ai_enablechannel_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_enableChannel_async"]], "ai_getport() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_getPort"]], "ai_open() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_open"]], "ai_open_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_open_async"]], "ai_readondemand() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_readOnDemand"]], "ai_readondemand_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_readOnDemand_async"]], "ai_readstreaming() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_readStreaming"]], "ai_readstreaming_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_readStreaming_async"]], "ai_setmode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_setMode"]], "ai_setmode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_setMode_async"]], "ai_setnumsamples() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_setNumSamples"]], "ai_setnumsamples_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_setNumSamples_async"]], "ai_setsamplingrate() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_setSamplingRate"]], "ai_setsamplingrate_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_setSamplingRate_async"]], "ai_start() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_start"]], "ai_start_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_start_async"]], "ai_stop() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_stop"]], "ai_stop_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.AI_stop_async"]], "logger_openfile() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Logger_openFile"]], "logger_write2dlist() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Logger_write2DList"]], "logger_writeheader() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Logger_writeHeader"]], "logger_writelist() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Logger_writeList"]], "logger_writevalue() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Logger_writeValue"]], "net_getgateway() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_getGateway"]], "net_getgateway_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_getGateway_async"]], "net_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask"]], "net_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_getIPAddrAndSubmask_async"]], "net_getmacaddr() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_getMACAddr"]], "net_getmacaddr_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_getMACAddr_async"]], "net_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask"]], "net_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Net_setIPAddrAndSubmask_async"]], "sys_getdriverinfo() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getDriverInfo"]], "sys_getdriverinfo_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getDriverInfo_async"]], "sys_getgateway() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getGateway"]], "sys_getgateway_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getGateway_async"]], "sys_getipaddrandsubmask() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask"]], "sys_getipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getIPAddrAndSubmask_async"]], "sys_getmacaddr() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getMACAddr"]], "sys_getmacaddr_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getMACAddr_async"]], "sys_getmode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getMode"]], "sys_getmode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getMode_async"]], "sys_getpinmodeinport() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getPinModeInPort"]], "sys_getpinmodeinport_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getPinModeInPort_async"]], "sys_getpythonversion() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getPythonVersion"]], "sys_getpythonversion_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getPythonVersion_async"]], "sys_getrtc() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getRTC"]], "sys_getrtc_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getRTC_async"]], "sys_getserialnumber() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getSerialNumber"]], "sys_getserialnumber_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_getSerialNumber_async"]], "sys_reboot() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_reboot"]], "sys_reboot_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_reboot_async"]], "sys_setaiomode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setAIOMode"]], "sys_setaiomode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setAIOMode_async"]], "sys_setdimode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setDIMode"]], "sys_setdimode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setDIMode_async"]], "sys_setdiomode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setDIOMode"]], "sys_setdiomode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setDIOMode_async"]], "sys_setdomode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setDOMode"]], "sys_setdomode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setDOMode_async"]], "sys_setipaddrandsubmask() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask"]], "sys_setipaddrandsubmask_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setIPAddrAndSubmask_async"]], "sys_setidlemode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setIdleMode"]], "sys_setidlemode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setIdleMode_async"]], "sys_setmotionmode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setMotionMode"]], "sys_setmotionmode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setMotionMode_async"]], "sys_setrtc() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setRTC"]], "sys_setrtc_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setRTC_async"]], "sys_setswitchmode() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setSwitchMode"]], "sys_setswitchmode_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Sys_setSwitchMode_async"]], "wifidaqf4a (class in pywpc)": [[742, "pywpc.WifiDAQF4A"]], "wifi_getchargestatus() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getChargeStatus"]], "wifi_getchargestatus_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getChargeStatus_async"]], "wifi_getconfiguration() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getConfiguration"]], "wifi_getconfiguration_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getConfiguration_async"]], "wifi_getpowergoodstatus() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus"]], "wifi_getpowergoodstatus_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getPowerGoodStatus_async"]], "wifi_getwifibandwidth() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth"]], "wifi_getwifibandwidth_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_getWifiBandWidth_async"]], "wifi_readbattery() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_readBattery"]], "wifi_readbattery_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_readBattery_async"]], "wifi_readrssi() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_readRSSI"]], "wifi_readrssi_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_readRSSI_async"]], "wifi_resetled() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_resetLED"]], "wifi_resetled_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_resetLED_async"]], "wifi_setblueled() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_setBlueLED"]], "wifi_setblueled_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_setBlueLED_async"]], "wifi_setgreenled() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_setGreenLED"]], "wifi_setgreenled_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_setGreenLED_async"]], "wifi_setredled() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_setRedLED"]], "wifi_setredled_async() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.Wifi_setRedLED_async"]], "close() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.close"]], "connect() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.connect"]], "disconnect() (pywpc.wifidaqf4a method)": [[742, "pywpc.WifiDAQF4A.disconnect"]]}})